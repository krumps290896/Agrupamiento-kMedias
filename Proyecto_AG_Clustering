{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/krumps290896/Agrupamiento-kMedias/blob/main/Proyecto_AG_Clustering\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TzMeSnv9za0e"
      },
      "source": [
        "**ALGORITMO GENÉTICO**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 105,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IZv1hj0qh0g1",
        "outputId": "242934d5-ccdd-4b10-96e2-4f4f2f27c63d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting deap\n",
            "  Downloading deap-1.3.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (139 kB)\n",
            "\u001b[K     |████████████████████████████████| 139 kB 5.2 MB/s \n",
            "\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from deap) (1.21.6)\n",
            "Installing collected packages: deap\n",
            "Successfully installed deap-1.3.3\n",
            "Población \n",
            " [[0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1]]\n",
            "El mejor individuo es [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], Aptitud (3342132.0,) Min 3082236   Max 3082236\n"
          ]
        }
      ],
      "source": [
        "!pip install deap\n",
        "#LIbrerias\n",
        "\n",
        "import random\n",
        "import numpy as np\n",
        "from scipy.stats import bernoulli\n",
        "from deap import creator,base,tools\n",
        "\n",
        "random.seed(42)\n",
        "\n",
        "#  \n",
        "creator.create('FitnessMax',base.Fitness,weights=(1.0,))\n",
        "creator.create('Individual',list,fitness=creator.FitnessMax)\n",
        "\n",
        "#  - \n",
        "gene_size = 16 #Tamaño de genes\n",
        "toolbox = base.Toolbox()\n",
        "toolbox.register('Binary',bernoulli.rvs,0.5)\n",
        "toolbox.register('Individual',tools.initRepeat,creator.Individual,toolbox.Binary,n=gene_size)\n",
        "\n",
        "#\n",
        "pop_size = 10000      #  Número de la población\n",
        "toolbox.register('Population',tools.initRepeat,list,toolbox.Individual)\n",
        "pop = toolbox.Population(n=pop_size)\n",
        "print(\"Población\",\"\\n\",pop)\n",
        "\n",
        "#  - \n",
        "def eval(individual): #Función de aptitud\n",
        "    #x0 = 9*gen[0:7]\n",
        "    #x1 = 9*gen[8]\n",
        "    #x2 = 5*gen[9:11]\n",
        "    #x3 = 5*gen[12]\n",
        "    #x4 = 5*gen[13]\n",
        "    #x5 = 1*gen[14:15]\n",
        "    \n",
        "    #  \n",
        "    num = int(''.join([str(_) for _ in individual]),2)\n",
        "    #  \n",
        "    #x = -30 + 60 * num /(2**26 - 1)\n",
        "    #x = x0 + x1 + x2 + x3 + x4 + x5\n",
        "    \n",
        "\n",
        "    x= 9*2*num + 5*5*num + 1*4*num + 1*4*num \n",
        "    \n",
        "       \n",
        "    \n",
        "    return (x),\n",
        "#  - \n",
        "toolbox.register('evaluate',eval)\n",
        "\n",
        "#  \n",
        "fitnesses = map(toolbox.evaluate,pop)\n",
        "for ind,fit in zip(pop,fitnesses):\n",
        "    ind.fitness.values = fit\n",
        "\n",
        "#  \n",
        "N_GEN = 20      #\n",
        "CXPB = 0.7      #  \n",
        "MUTPB = 0.7     #  \n",
        "\n",
        "#  ： ， ， \n",
        "toolbox.register('select',tools.selTournament,tournsize = 2)       # tournsize = 2 \n",
        "toolbox.register('mate',tools.cxUniform)        #  \n",
        "toolbox.register('mutate',tools.mutFlipBit)     #  \n",
        "\n",
        "#  \n",
        "#  \n",
        "stats = tools.Statistics(key=lambda ind : ind.fitness.values)\n",
        "stats.register('avg',np.mean) #\n",
        "stats.register('std',np.std) #Desviación estándar\n",
        "stats.register('min',np.min) #Minimo\n",
        "stats.register('max',np.max) #Máximo\n",
        "logbook = tools.Logbook()\n",
        "\n",
        "for gen in range(N_GEN):\n",
        "    #  \n",
        "    selectedTour = toolbox.select(pop,pop_size)     #  pop_size \n",
        "    #  ， \n",
        "    selectedInd = list(map(toolbox.clone,selectedTour))\n",
        "    #  ， ， \n",
        "    # list[start:end:step]\n",
        "    for child1,child2 in zip(selectedInd[::2],selectedInd[1::2]):\n",
        "        if random.random() < CXPB:\n",
        "            toolbox.mate(child1,child2,0.5)     #  \n",
        "            del child1.fitness.values\n",
        "            del child2.fitness.values\n",
        "\n",
        "    # Seleccionar individuos para mutación\n",
        "    for mutant in selectedInd:\n",
        "        if random.random() < MUTPB:\n",
        "            toolbox.mutate(mutant,0.5)      #  \n",
        "            del mutant.fitness.values\n",
        "\n",
        "    # Función de aptitud no válida\n",
        "    invalid_ind = [ind for ind in selectedInd if not ind.fitness.valid]\n",
        "    fitnesses = map(toolbox.evaluate,invalid_ind)\n",
        "    for ind,fit in zip(invalid_ind,fitnesses):\n",
        "        ind.fitness.values = fit\n",
        "\n",
        "    #  \n",
        "    pop[:] = selectedInd\n",
        "    \n",
        "    #  \n",
        "    #  \n",
        "    record = stats.compile(pop)\n",
        "    logbook.record(gen=gen,**record)\n",
        "    #print(selectedInd)\n",
        "    #print(\"Individuo: \",gen,\"Población \",selectedInd, \"Aptitud: \",ind.fitness.values[0])\n",
        "\n",
        "#  \n",
        "    logbook.header = 'gen','avg','std','min','max'\n",
        "    #print(\"El mejor paquete es (el mejor individuo):\",eval[-1])\n",
        "    #print(len(pop))\n",
        "    #print(len(hof))\n",
        "    #print(\"La mejor aptitud es:\",fits[0])\n",
        "    #print(gen)    \n",
        " \n",
        "    #print(\"-- Fin de (exitosa) evolución --\")\n",
        "\n",
        "    best_ind = tools.selBest(pop, 1)[0]\n",
        "    #print(\"Mejor individuo es %s, %s\" % (best_ind, best_ind.fitness.values))\n",
        "\n",
        "            # Extracting all the fitnesses of \n",
        "    #fits = [ind.fitness.values[0] for ind in pop]\n",
        "    #print(\"Aptitud: \", ind.fitness.values[0])\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    \n",
        "    \n",
        "    print(\"El mejor individuo es %s, Aptitud %s\" % (best_ind, best_ind.fitness.values), \"Min %s\" % min(fit),\"  Max %s\" % max(fit))\n",
        "    #print(\"  Min %s\" % min(fits))\n",
        "    #print(\"  Max %s\" % max(fits))\n",
        "    #print(\"Gen\",gen,'avg',fit_average,'std',std,'min',min,'max',max)\n",
        "    \n",
        "    \n",
        "    \n",
        "    \n",
        "    \n",
        "    #Guardar el nuevo archivo *.csv*\n",
        "    import pandas as pd\n",
        "\n",
        "    datos=pd.DataFrame(pop, columns =['O1','O2','O3','O4','O5','O6','O7','O8','O9','O10','O11','O12','O13','O14','O15','O16'])\n",
        "    \n",
        "    datos.to_csv('/content/drive/MyDrive/DATASET/Resultados/datos_genético.csv')\n",
        "    "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tX4-_nwLrzOA"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 106,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 401
        },
        "id": "v1vt9P29h-d2",
        "outputId": "415b6594-93f1-40d2-ab86-f8a8728dee44"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 576x396 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "#  select logbook , 、 \n",
        "gen = logbook.select('gen')\n",
        "fit_maxs = logbook.select('max')\n",
        "fit_average = logbook.select('avg') #\n",
        "\n",
        "fig = plt.figure()\n",
        "ax = fig.add_subplot(111)\n",
        "ax.plot(gen,fit_maxs,'b-',linewidth=2.0,label='Aptitud máxima')\n",
        "ax.plot(gen,fit_average,'r-',linewidth=2.0,label='Aptitud promedio')\n",
        "ax.legend(loc='best')\n",
        "ax.set_xlabel('Generación')\n",
        "ax.set_ylabel('Aptitud')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.savefig('Generation_Fitness.png')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X0DV4SMlzWIe"
      },
      "source": [
        "****CLUSTERING****"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 107,
      "metadata": {
        "id": "PRRST-6WGvJ0"
      },
      "outputs": [],
      "source": [
        "#LIbrerias\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sb\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import pairwise_distances_argmin_min\n",
        "\n",
        "%matplotlib inline\n",
        "from mpl_toolkits.mplot3d import Axes3D\n",
        "plt.rcParams['figure.figsize']=(16,9)\n",
        "plt.style.use('ggplot')\n",
        "\n",
        "import sklearn.metrics as sm\n",
        "from sklearn import datasets\n",
        "from sklearn.metrics import confusion_matrix, classification_report\n",
        "import random\n",
        "\n",
        "\n",
        "#Importando los datos\n",
        "\n",
        "#CARGAR LOS DATOS\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/datos_genético.csv', engine='python', index_col=0)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TpsiR8xgtKAF"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 108,
      "metadata": {
        "id": "ZczFog7OHmzE"
      },
      "outputs": [],
      "source": [
        "#Se realiza el escalamiento de los datoss\n",
        "#Los datos se convierten en flotantes y se encuentran en una misma escala\n",
        "#NORMALIZACIÓN\n",
        "from sklearn import preprocessing\n",
        "\n",
        "data_escalada = preprocessing.Normalizer().fit_transform(Estudiantes)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 109,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QIZzxuUXHqdK",
        "outputId": "72188d00-0937-4347-dee9-98bffdc81335"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "O1     0\n",
              "O2     0\n",
              "O3     0\n",
              "O4     0\n",
              "O5     0\n",
              "O6     0\n",
              "O7     0\n",
              "O8     0\n",
              "O9     0\n",
              "O10    0\n",
              "O11    0\n",
              "O12    0\n",
              "O13    0\n",
              "O14    0\n",
              "O15    0\n",
              "O16    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ],
      "source": [
        "Estudiantes.shape\n",
        "Estudiantes.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 110,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KiEWWz49HvM6",
        "outputId": "4461c519-3a6f-4023-fc19-eaa81a76dd26"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "O1     int64\n",
              "O2     int64\n",
              "O3     int64\n",
              "O4     int64\n",
              "O5     int64\n",
              "O6     int64\n",
              "O7     int64\n",
              "O8     int64\n",
              "O9     int64\n",
              "O10    int64\n",
              "O11    int64\n",
              "O12    int64\n",
              "O13    int64\n",
              "O14    int64\n",
              "O15    int64\n",
              "O16    int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ],
      "source": [
        "#Conocer el formato de los datos\n",
        "Estudiantes.dtypes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 111,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "UPYaoywgHykO",
        "outputId": "13c48a26-46c9-4bc8-e1c8-c036e2dd3094"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      O1  O2  O3  O4  O5  O6  O7  O8  O9  O10  O11  O12  O13  O14  O15  O16\n",
              "0      1   1   1   0   1   1   1   0   1    1    1    0    0    0    0    1\n",
              "2      0   0   1   1   0   1   0   1   1    1    0    1    0    1    0    1\n",
              "3      1   1   1   1   0   1   1   1   1    0    1    1    0    1    0    1\n",
              "4      1   0   1   1   0   0   1   1   1    1    1    1    0    1    0    1\n",
              "6      0   1   1   0   0   1   1   1   0    0    0    0    0    0    1    1\n",
              "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...\n",
              "9995   1   1   1   0   0   1   0   0   0    1    1    0    1    1    0    1\n",
              "9996   1   0   0   1   1   0   0   1   1    0    0    1    1    0    0    1\n",
              "9997   0   0   1   1   1   0   0   0   0    0    0    0    1    0    1    0\n",
              "9998   1   0   1   0   1   1   1   1   1    0    1    1    1    1    1    0\n",
              "9999   1   1   1   0   1   1   0   0   0    0    0    1    0    1    0    0\n",
              "\n",
              "[9998 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-333e08b5-8066-4c89-8593-4a00725ca9d6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>O1</th>\n",
              "      <th>O2</th>\n",
              "      <th>O3</th>\n",
              "      <th>O4</th>\n",
              "      <th>O5</th>\n",
              "      <th>O6</th>\n",
              "      <th>O7</th>\n",
              "      <th>O8</th>\n",
              "      <th>O9</th>\n",
              "      <th>O10</th>\n",
              "      <th>O11</th>\n",
              "      <th>O12</th>\n",
              "      <th>O13</th>\n",
              "      <th>O14</th>\n",
              "      <th>O15</th>\n",
              "      <th>O16</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9998 rows × 16 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-333e08b5-8066-4c89-8593-4a00725ca9d6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-333e08b5-8066-4c89-8593-4a00725ca9d6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-333e08b5-8066-4c89-8593-4a00725ca9d6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ],
      "source": [
        "### DATOS DE MUESTRA ###\n",
        "#Se seleccionan unos datos al azar para posteriormente verificar el clúster\n",
        "#que no aportan información importante para el análisis\n",
        "#al que pertenecen\n",
        "indices = [1,5]\n",
        "muestras = pd.DataFrame(Estudiantes.loc[indices],\n",
        "                       columns = Estudiantes.keys()).reset_index(drop = True)\n",
        "\n",
        "Estudiantes.drop(indices, axis = 0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 112,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NPIBmybgH-1N",
        "outputId": "55d19065-c4a0-4809-9a7a-1e26d245f62b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "centroide 1 \n",
            " [2.09814566e-01 1.66533454e-16 1.82785752e-01 1.84352466e-01\n",
            " 1.78187048e-01 1.75530745e-01 1.90007598e-01 1.69399522e-01\n",
            " 3.71278222e-01 1.79178670e-01 1.89669803e-01 1.70891570e-01\n",
            " 1.74706836e-01 1.82394692e-01 8.60422844e-16 1.75542596e-01]\n",
            "\n",
            "\n",
            "centroide 2 \n",
            " [2.14545052e-01 1.98695263e-01 1.89763167e-01 1.88041409e-01\n",
            " 1.81770072e-01 1.75612496e-01 1.76134898e-01 1.78797722e-01\n",
            " 1.22124533e-15 1.83547965e-01 1.80606575e-01 1.81718324e-01\n",
            " 1.66685056e-01 3.67822342e-01 2.00464977e-04 1.75478238e-01]\n",
            "\n",
            "\n",
            "centroide 3 \n",
            " [0.184791   0.18216575 0.16943693 0.15311977 0.15062253 0.15186617\n",
            " 0.17017328 0.16068559 0.15994694 0.15541989 0.32941572 0.15566688\n",
            " 0.15127742 0.32043375 0.32770636 0.15388438]\n",
            "\n",
            "\n",
            "centroide 4 \n",
            " [2.27287446e-01 1.66533454e-16 2.14554747e-01 1.99092585e-01\n",
            " 2.00355056e-01 1.95989145e-01 2.00651927e-01 1.98819345e-01\n",
            " 2.66170919e-04 1.94754252e-01 1.87673471e-01 1.89713833e-01\n",
            " 2.03719194e-01 3.82420989e-03 1.84693237e-01 1.86696276e-01]\n",
            "\n",
            "\n",
            "centroide 5 \n",
            " [ 2.20741734e-01  3.70847651e-01  1.90248242e-01  1.94389286e-01\n",
            "  1.82513208e-01  1.69369221e-01  1.81112135e-01  1.77161650e-01\n",
            "  1.27675648e-15  1.70142127e-01  1.82246417e-01  1.74910105e-01\n",
            "  1.73749046e-01 -8.88178420e-16  1.75855577e-01  1.80309270e-01]\n",
            "\n",
            "\n",
            "centroide 6 \n",
            " [ 2.01032115e-01  1.93213901e-01  1.75813237e-01  1.71294957e-01\n",
            "  1.66459540e-01  1.72709273e-01  1.76410594e-01  1.61738631e-01\n",
            "  3.44999323e-01  1.57756813e-01  1.72832304e-01  1.63736997e-01\n",
            "  1.64565402e-01 -5.27355937e-16  3.46011504e-01  1.60209027e-01]\n",
            "\n",
            "\n",
            "centroide 7 \n",
            " [2.14090423e-01 3.45407774e-01 1.92606888e-01 1.70767836e-01\n",
            " 1.66666281e-01 1.67299678e-01 1.67300848e-01 1.63950610e-01\n",
            " 3.45407774e-01 1.71203069e-01 1.50308296e-01 1.64789409e-01\n",
            " 1.71279693e-01 1.64313281e-01 1.88737914e-15 1.76080904e-01]\n",
            "\n",
            "\n",
            "centroide 8 \n",
            " [ 2.09624641e-01  1.78683872e-01  1.72578915e-01  1.72958296e-01\n",
            "  1.60502824e-01  1.73665526e-01  1.64114923e-01  1.63669511e-01\n",
            "  1.62050688e-01  1.62883944e-01 -6.38378239e-16  1.63290324e-01\n",
            "  1.64460703e-01  3.44075141e-01  3.49898533e-01  1.62092395e-01]\n"
          ]
        }
      ],
      "source": [
        "#Se realiza el escalamiento de los datoss\n",
        "#Los datos se convierten en flotantes y se encuentran en una misma escala\n",
        "#NORMALIZACIÓN\n",
        "from sklearn import preprocessing\n",
        "\n",
        "data_escalada = preprocessing.Normalizer().fit_transform(Estudiantes)\n",
        "\n",
        "\n",
        "from sklearn import preprocessing\n",
        "muestras_escalada = preprocessing.Normalizer().fit_transform(muestras)\n",
        "\n",
        "##### --- ANÁLISIS DE MACHINE LEARNING ----#####\n",
        "from sklearn.cluster import KMeans\n",
        "\n",
        "#Se determinan las variables a evaluar\n",
        "X = data_escalada.copy()\n",
        "\n",
        "#Se busca el valor óptimo del algoritmo Kmeans -> (k)\n",
        "#Se aplicará el método de codo para hallar k\n",
        "#Se calcula el algoritmo de agrupación para diferentes valores de k\n",
        "\n",
        "inercia = []\n",
        "for i in range (1,9):\n",
        "    algoritmo = KMeans(n_clusters = i, init = 'k-means++',\n",
        "                      max_iter = 30, n_init = 10)\n",
        "    algoritmo.fit(X)\n",
        "    #Para cada K, se calcula la suma total del cuadrado dentro del clúster\n",
        "    inercia.append(algoritmo.inertia_)\n",
        "\n",
        "\n",
        "## --Se aplica el algoritmo de clustering --##\n",
        "#se define el algoritmo junto con el valor de K\n",
        "algoritmo = KMeans(n_clusters = 8, init = 'k-means++',\n",
        "                  max_iter = 300, n_init = 10)\n",
        "\n",
        "# n_clusters = Número de clústers predefinido (5)\n",
        "# init = Método de inicialización ('k-means++')\n",
        "# max_iter = Número máximo de iteraciones del algoritmo (300 puede cambiar)\n",
        "# n_init = Número de veces que el algoritmo se ejecutará con diferentes centroides\n",
        "# (10) por defecto - se puede ajustar si se desea mejorar el modelo\n",
        "\n",
        "\n",
        "\n",
        "#Se entrena el algoritmo\n",
        "algoritmo.fit(X)\n",
        "\n",
        "#Se obtiene los datos de los centroides y de las etiquetas\n",
        "centroides, etiquetas = algoritmo.cluster_centers_, algoritmo.labels_\n",
        "\n",
        "\n",
        "#EJECUTAR K-Means Se ejecuta el algoritmo para 8 clusters y obtener etiquetas de los centroides\n",
        "\n",
        "kmeans = KMeans(n_clusters=8).fit(X)\n",
        "centroids = kmeans.cluster_centers_\n",
        "print(\"centroide 1\",\"\\n\",centroids[0])\n",
        "print(\"\\n\")\n",
        "print(\"centroide 2\",\"\\n\",centroids[1])\n",
        "\n",
        "print(\"\\n\")\n",
        "print(\"centroide 3\",\"\\n\",centroids[2])\n",
        "\n",
        "print(\"\\n\")\n",
        "print(\"centroide 4\",\"\\n\",centroids[3])\n",
        "\n",
        "print(\"\\n\")\n",
        "print(\"centroide 5\",\"\\n\",centroids[4])\n",
        "\n",
        "print(\"\\n\")\n",
        "print(\"centroide 6\",\"\\n\",centroids[5])\n",
        "\n",
        "print(\"\\n\")\n",
        "print(\"centroide 7\",\"\\n\",centroids[6])\n",
        "\n",
        "print(\"\\n\")\n",
        "print(\"centroide 8\",\"\\n\",centroids[7])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 113,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "PF5gk6wXKvLW",
        "outputId": "5532710f-83db-436f-8f17-04bd36b03e5f"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA6YAAAILCAYAAAD7d4FvAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeXBV95Xo++9vT2fQkYQkEIh5MMjMmNHG4DE47cTO4MSdjt3p667kdaVvdfU/XXVvdd10VadTqdy6r6r7pl6nqt9NvUpuO7ltx7jjtp3EAduxjTFg5hkxGxAIzUg6055+748NgoOOBBISB9D6/GWdYZ/f0T4WZ+21fmsprbVGCCGEEEIIIYQoEaPUCxBCCCGEEEIIMbpJYCqEEEIIIYQQoqQkMBVCCCGEEEIIUVISmAohhBBCCCGEKCkJTIUQQgghhBBClJQEpkIIIYQQQgghSsq6lSf//Oc/59ixYyileOmll7jvvvt673vnnXfYtGkThmEwa9YsXnrppVtdqxBCCCGEEEKIe9CQM6aHDh2iqamJH/7wh3z3u9/lZz/7We99mUyGt956i3/4h3/gBz/4AefOnePo0aPDsmAhhBBCCCGEEPeWIQem+/fvZ8WKFQBMnjyZdDpNJpMBwLIsLMsil8sRBAH5fJ5UKjU8KxZCCCGEEEIIcU8ZcilvZ2cnM2fO7P25oqKCzs5OkskkjuPw9a9/nb/6q7/CcRwefvhhJk6cOCwLFkIIIYQQQghxbxm25kda697/zmQy/PrXv+bHP/4xP/nJTzh27BinT58erpcSQgghhBBCCHEPGXLGtKqqis7Ozt6fOzo6qKqqAqCxsZHa2loqKioAmDt3LidPnmT69OkDHvP8+fNDXc4dYeLEiXf9exCDI+d89JFzPvrIOR995JyPLnK+Rx8556UzUBXtkDOmixcvZuvWrQCcPHmSqqoqEokEAOPGjaOxsRHXdQE4ceIEdXV1Q30pIYQQQgghhBD3sCFnTOvr65k5cybf+973UErx7W9/mw8++IBkMsnKlSv50pe+xPe//30Mw6C+vp65c+cO57qFEEIIIYQQQtwjbmmO6Ysvvljw87WluuvWrWPdunW3cnghhBBCCCGEEKPAsDU/EkIIIYQQQgghhkICUyGEEEIIIYQQJSWBqRBCCCGEEEKIkpLAVAghhBBCCCFESUlgKoQQQgghhBCipCQwFUIIIYQQQghRUhKYCiGEEEIIIYQoKQlMhRBCCCGEEEKUlASmQgghhBBCCCFKSgJTIYQQQgghhBAlJYGpEEIIIYQQQoiSksBUCCGEEEIIIURJWaVegBBCCCHETenpoeynP8U+ehTCEL+ujsyf/znhtGmlXpkQQohbJBlTIYQQQtz5XJfK//bfsI8cAcsCx8FqaaHy+9/HaGws9eqEEELcIglMhRBCCHHHi/3+96jubnCcqzcaBjoWI/mLX5RuYUIIIYaFBKZCCCGEuOPZe/dCWVnfOywL8/z5278gIYQQw0oCUyGEEELc+eJxCMOid2lLWmYIIcTdTgJTIYQQQtzxss8+i+rq6ntHJoO3fPntX5AQQohhJYGpEEIIIe54QX09uSefhEuXwPchDFFdXQTTppF9/vlSL08IIcQtktoXIYQQQtwVsi+9RH7dOuL/8R+ofJ78E0/gL15c6mUJIYQYBhKYCiGEEOKuEU6aROY//+dSL0MIIcQwk1JeIYQQQgghhBAlJYGpEEIIIYQQQoiSksBUCCGEEEIIIURJSWAqhBBCCCGEEKKkJDAVQgghhBBCCFFSEpgKIYQQQgghhCgpCUyFEEIIIYQQQpSUBKZCCCGEEEIIIUpKAlMhhBBCCCGEECUlgakQQgghhBBCiJKSwFQIIYQQQgghRElJYCqEEEIIIYQQoqQkMBVCCCGEEEIIUVISmAohhBBCCCGEKCkJTIUQQgghhBBClJQEpkIIIYQQQgghSkoCUyGEEEIIIYQQJSWBqRBCCCGEEEKIkpLAVAghhBCFwhCVzYLvl3olQgghRgmr1AsQQgghxMg4ftxkzx6bnh6DREKzaJHH3LkDB5v2zp3YBw5ALgemSTB9OvnHHgNLvjIIIYQYOZIxFUIIIe5B+/ZZvP9+nFzOwLLA8xSbNjl8+qnd73PsnTuxd+0C04SyMojHMc+cIf7b397GlQshhBiNJDAVQggh7jFhCDt3OiSTuuD2ZBL277fxvOJPsg8cgESi8HbHwTx/HtXePnILFkIIMepJYCqEEELcYzo7DXI5VfS+fF7R0tL3n3+Vy0E2W/Q52rIwm5qGdY1CCCHEtSQwFUIIIe4xtq1RxeNSlALH6Xu7dpz+95H6PmFFxfAtUAghhLiOBKZCCCHEPaa8XFNVFaJ13/tSqZCamrDvHZZFMG0afep8tUYnk4STJo3MYoUQQggkMBVCCCHuSevW5XDdqLkuQD4P2aziqafy/WZT8489RlhdjerpiZ6YTqO1Jvfss/T7JCGEEGIYSO93IYQQ4h5UXa35sz/LcOiQRXOzSVVVyMKFHrHYAE+ybXJf/jKqrQ3zwgXCMWOiTKkEpUIIIUaYBKZCCCHEPcq2YfFiHxh4dun1dE0Nfk3NyCxKCCGEKEJKeYUQQgghhBBClJQEpkIIIYQQQgghSkoCUyGEEEIIIYQQJSWBqRBCCCGEEEKIkpLAVAghhBBCCCFESUlgKoQQQgghhBCipCQwFUIIIYQQQghRUhKYCiGEEEIIIYQoKQlMhRBCCCGEEEKUlDXUJ/785z/n2LFjKKV46aWXuO+++3rva21t5cc//jG+7zNjxgz+4i/+YlgWK4QQQgghhBDi3jOkjOmhQ4doamrihz/8Id/97nf52c9+VnD/v/7rv/Lss8/yox/9CMMwaG1tHZbFCiGEEEIIIYS49wwpMN2/fz8rVqwAYPLkyaTTaTKZDABhGHLkyBGWL18OwHe+8x3Gjh07TMsVQgghhBBCCHGvGVIpb2dnJzNnzuz9uaKigs7OTpLJJF1dXSQSCX7+859z6tQp5s6dywsvvDBsCxZCCCGEEEIIcW8Z8h7Ta2mtC35ub2/nC1/4ArW1tfzoRz9i165dLF269IbHmThx4nAsp6TuhfcgBkfO+egj53z0kXM++sg5H13kfI8+cs7vPEMKTKuqqujs7Oz9uaOjg6qqKgDKy8sZO3YsEyZMAGDhwoWcPXv2pgLT8+fPD2U5d4yJEyfe9e9BDI6c89FHzvnoI+d89JFzPrrI+R595JyXzkAXBIa0x3Tx4sVs3boVgJMnT1JVVUUikQDANE3Gjx/PhQsXeu+XKxJCCCGEECNHa01HRweXLl0q9VKEEGJIhpQxra+vZ+bMmXzve99DKcW3v/1tPvjgA5LJJCtXruSll17iJz/5CVprpk6dyrJly4Z73UIIIcQ9zzp2DHv3blQ6jU4k8BYtwp83r9TLEneYkydPsnnzZnp6elBKUV5ezmOPPcakSZNKvTQhhLhpQ95j+uKLLxb8PH369N7/njBhAj/4wQ+GvCghhBBitLP27iW2dSu6rAxsG+X7OB9/jNHdjbtq1Yi/vtbQ0mKQz0NtbUgsNuIvKYagra2NDRs2kEqlKC8vB6Ls6W9+8xteeOEFUqlUiVcohBA3Z1iaHwkhxN0uDOH4cZPmZpO6uoAZMwKMIW12GB0yGfjFL5IcOmShtWLaNJ+XXspQXa1v/GRxY0GAs2tXFJReK5nE2r8f94EHwHFG7OUvXjTYsCFOT48CwLY18+b5rF7tjthriqH59NNPSSaTfW53HIft27fz+OOPl2BVQggxeBKYCiFGvY4OxZtvJsjnFbGY5uBBm2Qy5KtfzZFKSaB1PdeF732vku5uRTwe3Xb0qM3f/m0l//2/d3K5F96dQ2ucbB7TD9AofMfCj9mgVKlX1i/j0iVULoe27T73KdfFaG0lHKH+Da4Lb7+dIBbTlJdf/fwfPGhRXh6ycKE/Iq8rhqanpwejyFU0y7Jkv6kQ4q4i+QAhxKj3zjtxlIJkUmOaUFam0VrxzjtSu1jM734Xo7PzalAKcCV++j//p2/mpqRCTeJSBsv1URoMrYll88S7c1Gt6kjRGvPUKWK/+x2xd97BOHt2cE8vEpD2UmpEs6WHDtl9xsABJBJw8OAA6xIlEY/Hi56vIAikjFcIcVeRwFQIMaq1tys6O40+ZbuGAa2tRm8p44jJ5VDp9MgGScNszx6H6ytMIYqVTp68swpxnGwehS7IjmrDwPR9THeEMn9hSPztt4lt2IDZ1obZ0kL8N78htmHDTZ9nXV5OWF1d9PFhKkU4duxwr7pXa2vhRYdrZbN3bpZ5tFq+fDnpdLrP7dlsluXLl5dgRUIIMTQSmAohRrVcTvUbK2itcN2R+SKuuruJ//u/U/a//zfJl18m+ctfYh07NiKvNdxMUxOG/d13e9dyI6YfFC3Z1aaBNUKBqXXwIGZTE73Ru1KQSmGeOoV58uRNHyf31FPg+6hc7vINOVQ+T/7znx+BVV81cWLYbwCaTN49F1BGi7q6Oh555BE8z6O7u5uuri48z2PdunWMGTOm1MsTQoibdmdd2hZCiNuspibEcYp/2Y7FNBUV/URgt8L3Sfz7v4NSBc1tYu+/T+g4hNOmDf9rDqOnnsrxk5+UU1FR+HvLZGD1aq9EqxqkEcxQW0ePoi/P9i5QVoZ96BDBrFk3dRxdVUXmW9/COnQI8+JFwpoavAULRrSMF2DOHJ9PP3UIQwoqCdJpxRNPSPOjO9G8efOor6+nubkZpRS1tbVF950KIcSdTP5qCSFGtVgM6ut9riSlrshmYf58D2sELt9ZR46gXJfr64d1WRnOjh3D/4LDbOVKn0WLXC5dUr2Z0+5uRV1dwPPPZ0u7uOsEtlk8CA3Bi4/MfknVXzoZ6DfV3B/Lwl+0iPy6dXhLl454UHr5JXnuuSyJREhPT3RufR8efDDP7NnS+OhOZZomdXV1TJgwQYJSIcRdSTKmQohRb80al0RCc+SITSYTVWCuXOmyePHIfAk3z58vnlEDjO7uEXnN4fY3f5Nm9+48GzbE8X344z/O8/DD3h03YsdNxDC9ECMM0cbl8tRAEzgmoTUydcfB5MlYhw/3DSKzWfyFC4flNfJ52LvXpq3NYMwYzZIlHonE8GWBKyo0zz+fI51WuC5UVuo77twKIYS4t0hgKoQY9ZSC5cs9li/30Hrkp4iElZWY584VzX7p/rrOlJrrYh84gNHSQlhVhbdoEQ88EOeBB3pKvbKBKUW2IoGV96I9pQq8uEPgWCN2ot2lSzGPHkX5Pr0pd9dFp1L48+ff8vHb2hRvvJEENLEYNDXB/v0WX/hCjsmTh7f0vKxMF210JYQQQgw3uf4phBDXuB2jLb3Fi8Ershczm8UbhsBluKm2NpIvv4y9ezdmSwv2gQOUvfwyxvnzfR7b2alobDTIZO6g7q1K4ccdchVJcuVJgpGeYRqLkf3GN/BnzECbJto08evryX7tawxHbfi778ZxnCgohWhUTzIJ770Xv5uaOwshhBAFJGMqhBC3WzxO7umnib/7bsFeU2/u3Fsq9VTZLEZjIzqRIJw4cdiCr/jGjVF298rxHAcNxN99l8y3vhVlJbOKt96K0dYWlccaBkyf7vO5z+VL06k31Cito/Ld23G14XrxOO6jjw77Ybu7FR0dBqlU3wg0k4HmZoPx40egYZcQQggxwiQwFUKIEginTiXz0ksY586hcjnCKVP63Xd6M5wPP8RuaACt0VpDIkHuqacI6+puaZ2quxujsxOdSvW9L53GaGsjHDuWN9+Mk8spysuvBkznzpl89JHD44/fvk6uKgiIpfOYfghEgambcPBjI9806HYIgoHuVUUT8beV1tg7dkSfxWwWXVaGt2QJ/rx5JV6YEEKIO50EpkIIUSqGQTh16i0fxt61C+vYMXQyWXB74re/Jf2tb91aJ1fP63+0itaQz9PcbBTN4sVicOKExdq17rB0N1bt7ThbtmB2dKBtG7++PiqLvpIR1ZpEd9QVWJsKiG6PpfOEyiB07v5/8iordb+zRB1HU1tb2myp8+GH2MePR3ulEwlUGOJ8/DHk8/gPPFDStQkhhLizyR5TIYS4y1mHD0ORpkla6+i+W6DHjOk3k6tjMcLaWtrajH7LdYNAkc/feimt0dxMYv16zLY2AJTn4WzfTmzDht7HWHkPVaR7lTYNnNy9MX9TKVixwqWnp/A9ptOKxYu92zFNpn/ZLPbRo30beCWTOHv2DH5UjhBCiFHl7r98LIQQI6ytTfHJJw6dnSZjx8K4cTZLl945o1FULkdvJ5xrxeMYra23dnDDwF2xgtimTYXlvOk03rJlYNvU1gb9lpg6jiYev/WOPM7mzVGHn2voRALr1CnctjZ0TQ2mH6D7OSlGeO90BZo71yeVCtmxwyGdNojHQ1at8pg9e8A63xFnNjf3G3yqfB7V1YUeM+Y2r0oIIcTdQgJTIYQYQHOzwRtvxInHo4Y+QQB79zo0Nxt84Qv5Ui8PAJ1KoYpsLlSZDMHkybd8fH/+fMJEAmfXLoxMBp1I4K1YgV9fD0BNjWbcuIDubqOgZDeXU8yb5w1L8yOjtRWKZG51IoHd0IC7ejWhaWD6QdFmR/oOahI8HKZMCZkyJTf4J4Yh5smTmOfOEdbU4N9/f9TWdxjoeLz/sm+lil88EUIIIS6TwFQIIQawebNzfaKOWExz5oxFS4vHuHGlL0/0li4l9oc/FO4xDUPCeJxg9uxheY1w5kxyM2f2e/8zz+TYsCHG+fMWYQi2rZkzx+Ohh1yCgFsPTvuvFUZfrl/1Yg5OzusbhIYaL3FvND+6FSqbJf76670XF9SxYzjbtpF79lnC8eNv+fhhbS1hKtW3nDoICGprb6m5lxBCiHufBKZCCDGAtjaj2PZNkknNkSMW48aVfu+iP3s25PM4O3eisllQiqC2lvxTT3G76o1jMXj22TzZrEs2q0ilQg4csPnFL5Jks4p4XFNf77FypTek6S3BxImYFy/2CVCV6+LPn49qbcXZsgVaW7FDRTh9BuGSJWAYeI6NH5fANPb736OCoPcCxpVAMf7OO2T+7M96g0nV1oZ9+HDUYGrhwj5NtfqlFLkvfIHEm2+iPA8dj6OyWcJkkvznPz8i70kIIcS9QwJTIYQYQLG4LpNR5HJgGHfOvkV/wQL8efNQ6TTasoqWvd4Kz4M9e2zOnLEAzaxZAQsX9i3TTSQ0iYRm2zaHffssEgl6u8ju3++QzyseeWTwwXz+scdIrF+Pkc1GAVUQoDIZ8qtXo7q6SLzxBjqZRNs2ntaoEw3oni4yzz4Dxs1FwpcuKbZtc2hvN7BtzYIFHvX1pd23OWxyOczm5uJBZjaLcf484cSJxN59F+vEieh3HIY4e/bgLl8e7Se+Cbqmhsy3voV17BhGayvBxIkEM2bctgskQggh7l4SmAohxACmTAlobDSxrKjz6YED0NZmk8spbBsMQ/HQQ6XPmgJgGOjy8mE/rOfB+vUJMhlF0sgx4+h7qN81cjIRsODxStxH16Jranof7/tw8KBVEBurS5coP3WKk9tcHm3YTSLdhtIaf84c8uvW3XikTTxO9pvfxDp8GPPsWXQ8jvfAA+gxY4i//jq6rOyaF1PoZBJ1oRGjPZqzeiMtLYpf/zpBLBYlZX1f8eGHMZqafL75zcH+xu48yvP6b0xkGKh0GuvAAazTp682uTJNtG3jbN+OP316wTkekGXhz507TCsXQggxWsglTCGEGMAjj+RxHE06rdi718b3o9vnz/coL9ccOGCxd++9fY1v926bTEYRt3zm7/w3Ul1NGAmHLjdJ8/E0iddfR3V29j7+0iWjYESMam/H2bsXlc+T7G4i8W+vkHjzTWKbNpFYv54xf/3XGI2NN16IaeIvWED+6adxH3+8t8Or0d5e9OE6kcA6cuSm3uOHH8ZIJgsrhZNJOHzYoqvrpg5xR9OpVP97PLUmnDwZ+8iRoo/RySTO7t0jvEIhhBCjnQSmQggxgFgM/uRPskyZ4hOPh9TWwqpVLpMnR9mnRAIOHBierqZ3qs8+s4jFoPbCfiwvhzai6M1xNC2tFsTj0f7Oy+JxjVJXy5ytkyfRlzuyPnbiF5i2AckkKpOJMqWmSeof/3HI61MDNUYqtkH4OmEI7e3F/zl0HDhwYMhLG7SeHsW77zq89lqCN96Ic/LkMLQ0BlAKd+lSVDpdeHM+jzd7dpRhvnLV5XqGAfk7owP1XSEMsXfsIPHKKyR/8Qtiv/tdwYUbIYQQxUlgKoQQN2AYUFamWbLEZ948+jRDymTusVkk17nSrKii4yyBUyTrZhiYHR29P5aVacaNC6PK0TDAyGYBKO9qpDLsxLF17/OM7u7o+a2tGBcuDGl9/pQpUCSoUp6HP3/+TR2jv4ZMWg/bNJUbam1V/PKXSRobLfJ5RU+PwYYNcbZsGZ7GTT2zF/L71HO8vHMxv/xkNltOTiIzfzHu448DEFRVFS33VbncsIwdGi3iv/kNzp49vYG+2dJC8tVXUf1k9oUQQkQkMBVCjCquC6dOmXz2mVkslunX+PFBQXnqta4097lXzZzpk82Cb8VAXw1cXFdROz5qDqSvi96efjqPYWjSaQMvVKTzFo6XZXxZ99UHhSH6SrYzCFA9PUNaX/6RR9COE2VgAXwf1d1N/uGH+y1fDQK4eNGgtdVAKZgwISi6BdP3FQsWDGlZg/bBBzGSSV1QTpxKafbts2/54kcuB6++muS4N43sslWkVz/Ojklf5NUzawkvz9dxH3wQstnCWaRBQBiL3XSAP9oZFy5gNjYWZuoNIyqH3ry5dAsTQoi7wL29MUoIIa6xe7fFzp0Ovh99EbdtWLs2z5w5N45QZ88O2LpV9wlesllYtcobieUOCxWGWPlofb5jo83BX49cvNjj5EmLk5mVrGx+GTdegesqKipCxteGqFwOd9Giguckk5oXX8zy2WcGrTlNXXCMWRVtmOsLS1OvNGvSySTBlClDe5OxGNk/+RPMo0exPvsMnUziLVnSbyOo/fsttm93yOWiz0EqpVm5Ms+WLSaeF5Vvh2HU7OrBB/MkEnBNQnhEBEFUTlysaa5laRoaLB54YOifs+3bncvzZa/eFotF+4EbGizmzvXRY8aQ/frXiW3ahNHaCoZBMHEi+UcfBUu+LtwM68iR4p2PlcJsbb39CxJCiLuI/EsjhBgVzpwx2LYtRiqlgasZoffei1FbGzBmzMBZT9OEr341y9atY+jujgIax9EsWuSzaNEgUq+3kZPNYWd9tHHlZw8vZuGW3Xjf5bWuvPfDh8toYzUTj39CzQyb2glgpLP4s2bhL1zY53lKwfTpIdP/cj6J9YcxMiHBjBmYx4+DbROOHYtx8SLGpUt4s2cT+/BD3Ece6b9Jz0AMg+D++wnuv3/Ah509a7B5c/Q5cJyr5/yjj2I8/3yW48ctmppMYjHN0qUeY8cW72R7u91oNJG1dy/2gQOoTAZdVoa3cGHBOTnfaDC18VPGXjyC5efIJSo5N/0hqJ7KiRNRYArRuJfcV74you/ljhMEGBcuoIKAYOLEW6vdtu3oqkax8TgyMkcIIQYkgakQYlTYvdu5HJQWSiY1O3faPPnkjUe+VFZq/vzP4fDhDK6rqKoKbymRZDQ24mzZgnHpUjRiY+ZM3NWr6TMcdCjH9nzsrFeQIdUmWK5PYPsETt+FZ7OKbFZRXh72+W5umrBggQ8L5qEy07H27yfwPHJz5954jEg8TvaFFzCPHsWfMQNr506szz7DOnYMHY+Tf+ABgsWLMZuaSLz6KplvfjNK542AXbuKfw6iJkc2a9e6wO3PgJsm1NaGdHUZfeIX31cDZvWdLVuwDhyIOnElEqgwxNmyBZXN4q1cCcCsw7+n7OJpfDtBaDk4Xpb6A29ybO7TGNXTR/Cd3dmsY8eIbdoU1fhrjbZt3BUrYOLEIR3PW7wYe//+vtl634/2QgshhOiXBKZCiFHhStnm9UwT0unBZTIqKwuzrgXCEPPUqagTbVkZ3uLFhTM2LzPOnSPx9tvRzMjLQZh19ChGW9uwZKzsnIc2irxnQ2Hn3ILANJeD3/8+TlOTSRhGmeA5c3zWrHGLNgXSySTeqlWDW9A1Gc38unVRMHXkSGF2yjTBdXF27cJ96KHBHf8m9bdX07KistZSeuyxPOvXJzDNq4m3TEaxYoVLv0lk18U6eJA+D0gmsffvx1u6FJXJMDM4xmkquPZ6gxdLMf7IZiZ8bdJIvaU7muroIPbuu1EQec0c3diWLTB//pDKl3V5Oe6KFTg7dkSZf9NEZbOEqRTu2rXDuXwhhLjnSGAqhBgVKipCWlrMPtkoz4OqqmEq13RdEr/+NerSpWgIpu9j79tH/tFH8efOLXios2VLFJReKxbDbGrCaGoinDDhlpaitO631ay6Lqh+66046bRBWdnV2xsabCwLHnroxpnkoTAuXCheMuk4g+7O29Gh+Phjh9bW6PxOnhwF1cWSrqmUprNT9fnVeB6MGVPast0xYzQvvphh926H5maDWEyzctp5Jp7dgXozT1Bbi7dkSUFbaKOjA+W6xcfiuC5GZydGYyMTpylaspqeHgPH0WgNeRcmll9i8oQcMDydf+8mzs6dRfeD6rIy2LoV1qwZ0nG95cvxZ87E3rMHlc8TTJ+OX18vpbxCCHEDEpgKIUaFlStdXnstWVDGqTV4nmL58uEp3XQ++ijqDHvly65loVMpYps24U+fXpDVMjo7+2a5AJ1IYB0/jnuLgWloGhie3zc41ZrgmkxQc7NBa6tJeXlhsBqPa44csVi0yOX48ejxs2cHw9eBeKBy5UGUMnd1KV57LUk8rnvj3LNnLV5/3eQb38j2OdTcuR4//WkZSkF5uWbSpADLigLTZctK38QqkYDVq6OLAdbu3cQ+3BoFSoaB0dqKffAg2eefR1dUAKAdp/8LEEqhHQcdi2HqgCVLPFpaDC5ejDoRz5kUUB0PyQxD6fjdSKXTxT9rSkVdzW6Brq7GfeKJWzqGEEKMNnL5TggxKtTUaJ5+OotSmp4eRU9PVLL61a9mSSQGEWyl09hbtuC8/z7G2bMFozWsM2eKZgG1ZWEfPFh4Y3/BgO8XLf0djFwOPutMkMRwnJ8AACAASURBVM2owtEfWqM0eImr2bHmZgPb7vv+wxB27LD5L/+lkpdfTvLeezFefjnJ1q3Dk1nz5s+HdLrvHek0XpFGSv355BOHeFwXJKMsKyrPbmgovPZ64oTJe+/Fqa4O6e42OH7c4sMPHbJZePbZ3OA+ByMtmyW2fXtUZnrlzTkO2DaxP/yh92G6qoqwsrLwPAOEIWFVFbqiguC++6KSUhXtY1240GfBAp/qCj9q9jNKA9Owqqro/FvCEC4H/kIIIW4fyZgKIUaNadNCpk3L0tOjMIzBzx+1Dh+GvXuxs1mwrKh5z9ixZL/85SgaCoJ+nmihrsvA+NOnY332Gdg2WkNLT5KcZ1FrtRJeV/Z7s7SGDz5wOH7cjsaeWDEemNbDisV5YjFNaBnkEzH0NVFcTU3Y57t5EMDmzQ7Hj1vMm+eTyykOHzaYODFAa5u6Op9p026t7DW47z78M2ewGxp6A3GVTuPdfz/BzJk3fZz29r7l2QCJhOb0aZN58/ze9/ThhzHKyjRlZZq6OpdsNso0VlWF1NXdGd13r7COHr064/VahoHR3FzQ+TX39NMk/uM/UJ6HjsdRuRzaccj90R9dPphF9okniG/cGH1OL898DcvKyI/irJ63fHm0z/m6vaQqk4G1a6OGSEIIIW4bCUyFEKNOsa6sN6KyWWIffQSTJl3NspSVoS5dwvnkE9xHHiGsqsLI5fo+N53GnzOn4DZ37VrM9nZaP8vy9qnFdKctlA5gzueo31HBmjWD/1K8ZYvDiRM2iYS+XCVscOBiBYfe1bz4QgZVpBlSXV1IRYXG91VvgHfypMmFCwZjxwa9VaLxOJw/bzJhQsiePQ7TpvV9n4PlPvEE/qJFWPv3A+AvXEg4dmzRx1pHj2Lv2oVKp9HxOP7cuXhLl2KamjDs+76iJk5Xfz571sR1Ve+IGMOgd09tW5tJNlu0srpklF+kDPsKrQsypLqqisy3vhU1z2pqIqyrw589uyATGs6YQebP/gx73z5UVxfB1KlRJnUU73vUySS5L3+Z2Pvvo7q6UFoTplLk/uiPqBw7Fs6fL/UShRBiVJHAVAghboK1b1+0n+96joN16hTuI4/gPvwwif/4jygDeCWoyOcJJk8mHD++8Hm2TfeXv8avfuwSH9NM2YQYwaRJYNscPgypVMiSJTc/H1VraGiwiMcLg27DgHRacfacydSpxbOCX/5yjrffjtHeHgUyTU0mqZSmpqbwWLEYnDtnDOtsz3DsWNzHHx/wMda+fcS2bIl+r7EYSusoSO3pYfbsJ9m1y+nzvjMZxZIlV/eMel5hnGcEHioMCOw4cCW4HXopbxjCxYsGrquoqwso9lEZDP/++3E+/bTvZ05rwpqavuW3phk12Boo2x6P946PEZFw/Hiy3/wmqqcnGhdz/ZgXIYQQt40EpkIIcRNUJtOn5K+lO8FHJ6bS0e0QGEmmT5/Gw89+leT2LRgdHWDb+PPm4fYzWuXwEZtgTIpgQlXB7YkEHDpkDyow9TxwXVV0v6htQ0tL/4FpWZnmG9/I0dGhyGQUsZjmzBmT5mazIP5RCoJAUV3dT8nySAhDnF27+u67jcexjxxhyYsruHChirNnTZLJqNtsJqNYtswtCKCnTAkwDHByXcw8vIGynmbQmnyignOz1lBWdt2Fg0E4d87gvffivaNoLEuzeLHHypVDb6aky8rwFizAOnQIrrz3IIBcjvzTTw/5uPe8MMRobwelCKur+886X6dPh2whBkFrzenTpzl+/DixWIwlS5ZQIfuUhRg0CUyFEOIm+HPmYDU0QFUURLZ0J/jV7vkkHQ8z5RAqOHbMorl5Os89N/6mvg+3thp9Mn1XXNn/eLNsm36P5bowYcKNg8mqKk1VlWbKlIAwjDKnhnH1u30uB5Mmhaxadfu616ru7mjPZLHAIQyxL17gi19M0NRkcPiwhW3D4sVekS7DsGhuBvvnr2LHTXwnGXVlzoZ8rucNjKYvD2lETzar+O1v4ySTFLzm7t02Y8aEzJkz9CDeXbuWoK4O+8ABVD5POH487qpVvR15RSHr2DGcTz6Juu0qhS4rI7dmDeEg9iwLMVi+7/PGG2/Q3t5OMpkkCAIOHjzIqlWrWLp0aamXJ8RdZfRuLhFCiEEIJ01C19ZCPg/ARyemknQ8DDeHP2sWEO1pbG1VnD17c39a6+qCogGo60JTk8GHH0bzLG+GUnD//R65XOHxggAqKzWTJt18+e3DD7soBQsXesRiGteNyoHHjQv5znfSQ9qjO2QDjEPRWqMvbwydMCHk8cdd1qxx+wSlV6xJ7aZ+Zg7LiY4XT2iWLHGpnpLE+fTTIS1vzx676DjWsjLYt6/IHYMU3Hcfua98Bb+2ltjGjVT+7d9S8V//K/YHH9zyse8lqq2N2LvvgmmiKyp6uxknNmxAdXaWenniHrZlyxa6urpIXh4TZpom5eXlbNu2je7u7hKvToi7i2RMhRDiJmW/9CWqjh2D7dtp745hlcdw580tyGAlk3D0qMXUqTdqXuRSX9/Btm0TCMNEbw+as2cNGhps7r/f47PPLA4ftpk61eeP/ih/wz41K1d6+L7iyBEL16V3PMgjj+Q5c8akoiJkzJgbB5XJpOaFF7Js3WpTXR1iGDBjhs/y5d5t75WjEwmCceMwenqiDbO5HObZsyjXJRwzhrC2tt/nZrOK7m5FKqVJJjXGhQuMmxpj3FQvGp3T3o7RegmdG3oZZ2enKhqYRq8/PL+s+CuvkHjnnd5gy8hkSP3852RbW8l9/evD8hp3O+fTT4uOWdKJBM6OHeQ/97kSrEqMBqdPn8Ypsqk8mUyyZ88e1q5dW4JVCXF3ksBUCHFHM86eJbF+PUZnJ8GECWS/8Q10dfWIv67q6MDevx+CAH/BAsJx46I9pk8+SWbuXEKVxCuSyAuCKDgdiON8jGUdRimPP/3TGL/5zXIuXFhKOh3n2DGL+nqPyZOjDGcqpTl/3mL37pBlywYuoVUqynauXOnS1WVgWZpPPnFYvz5akNYwdmzAM8/kbzizM5HQPP74nTEuI//5zxNfvx7r5EnMs2ejG02TcNw4Eq++Sva556Ja3ct8HzZujHHmjEUQRPHspEk+X06lMP2LoDX27t2oXK53zI8+fRr1xS8O+rM1blzI+fMmsVjf+1KpYWgSlcsRf++9Pk15dHk58Y0byX3pS73th10Xdu2yOX/evJxB97n/fv9mt1neNg0NDRw8eBDXdamurubBBx+85f14vRcurmeaKMlaiRHk+z52katThmGQK9KlXQjRP/Pv//7v/77Ui7jibi95KC8vv+vfgxgcOecjy9m4kdT//J+YXV0Y+TxmYyOJd97BmzMHPW7cyL3uxx8Tf/99jHQao6srGrHR0YGeMpWUG+J1dtHVDRfbLEyr8Ft/JqNYty7fb1dW296BbR8AEkCMWMxiwYImFiw4QHv7Qmpro72e17Is6Ow0WLDg5pohmWaU9fz44xiNjSaJRBS7xGJRg6RzB3qYnzqNCkP0jaLoO4Hj4M+eTWzbNnQiQTh+PP7cuejycpTnYbS3E1wupwbYsCHGhQvR+47Fovfe02NwwR/H/O7t2A0NKNeNNuYaBgQBwbRpmM3N+IsW9Xn5gf4/Hzs2ZO9eG9MsrDju6VE89lieyspbK3u2jh4l9oc/FJ1lo3p6ekfs5PPwq18luHjRJAwVnqc4ccLi4kWT2bNLF5y6rovrur1f3D/66CN27twJQBiGdHV1sWfPHqZNm0ZZkYznzTLPnMG4vLe0QBAQjh1LMHMmRksL5pkz0f7TG3zurz3nLS0tvP/++2zfvp2GhgYAagfI1Iu7z638W37u3Dmy2SxKXf9vQYYHH3yQysrK4ViiGGby/a10ygfofi4ZUyHEncl1Sb72GlybSXEctGWR+l//i0v/9E8j8rJGYyP2/v0FGSqdShFvOIauqIaVqzC05tHFPbSeV5zviZMsU5cbpipWr84PuAfTtg8B8etuNaio6CYeb8ayJhV9nlcsPTsAz4NTp8yCeMYIPOoPvE2suZGg3acsERBWV5N79tnbHqB6HjQ3GzhOFNzdKHCyGxoI6urok5q0LMxz53p/zGbhzBmLZLLwHNg2nGmvpHPpGmq3bUNfCUrDkKCujnDSJIyuLozm5gHLg6/nOPDcc1k2bozT0aEARTKpeeyxPFOm3HrGVMdiA84zDS9nirdudfB9VXBBJJnUnDtncPas0W9H5pHS1dXFe++9R3NzM1prKioqWLRoEYcOHSJ1TSMr0zRJJpNs2rSJ5557bsiv565cSfJXv+qTWVbZLO6CBcRffRWzvb03Qx7U1JB79tmCTHsxjY2NvPXWW5SVlaGUIp/P88knn9Dc3MzjNxhzJEaHhx9+mPXr1xOPxzEuZ+3z+Tzjxo1jypQpJV6dEHcXCUyFEHcka+fOqNHQ9YGIYUR7AwcZQNwse8+evh1gwxDDdgiPHYVVD0brsxV//Ew3p5ryHGhMkUhE3WAHbgwUAjmgbxCodZwZM85z+vTkPmW2YQg1NYPr7prNKoKgcDbnzCMbSKZbyMXL6dYeyfIQlc8Te+stct/4xtUne5dINv0KK3uaUNnkxn4Rv2rFoF5/IDt32uzZY+O6Cq2jcuUnn8wN2KBJ5fN9Z3deEQRRnbJSpNMGQVD8HASBor1iKmNWrEBls73ZtN5oTqmoo+sgVVdrvvGNLOm0wvOiZlPDlaEMZs0irKyk2OHCqirCadMAaGw0i+51TSaj0UNTp+aHZ0E3wXVdXn/9dUzTpCKVwjQM3CDglVdeYdy4cQWBKYBSitbWVsIw7P1iP1i6pob8unU4mzdHo52IRu5kn3qK2CefYORyBUGrkckQf+cdcl/5yoDH/fjjj/usN5FI0NDQwIoVK/rcJ0af6upqnn/+eTZv3kxbWxuWZTFv3jxWrlzZJ4sqhBiYBKZCiDuS8vsvW1VaR8HISL3udV8mTC+IgpagcE3KUMys85gw92b3YhpEJbzF5LnvvgSffhriuqp3ZKrWURbwoYcGt98zmdQFM00N36Wy4zN8O0noXzPaxDAw29sx2toIa2owck1UHP+7aK2Gg6FDys/+P+R71pKZ8n/1Lso8fRrr+HF0PI63ZEmfTFV/jh0z2bHDoaxME4tdXd9vfpPgW99KF6tYBcCbMwd7796iY2PCqqrec1ZWFmKahQH5FaapSU1MoROJ4iNXDGNII2OuKCsbmW7FPd/9LhX/+I9o04wyfLkcKgzp/pu/GZHXu1UHDhyAUHN/7XjKYzEMFH4YYvRk2N5wmJqamj7PGY4v8P599+HPnFkwx1T19GA0N8P1nxvTxGhqQqXTRZsmAXieR2dnZ9ESY9u2OX78OEuWLLnldYu7X1VVFc8880yplyHEXU/GxQhxm/g+7N1r8fbbMTZujNHaKv/7DcR74AGAKPvhFgZlYUUFYV3diLxuMGlS70iYAr4fNUC6RZ43H8hed2uI1glgOl/7WpZJkwI8L1pGeXnI176Wpbp6cEGPZcGcOX7v+Bjby6KCgCCAGqebVNeFq01hDAN16RIAybP/LygHjCtZRANtVRLr2ISRuwCeR+L114lt3Ih58SLWiRMkX34ZZ+NGjKamKL07gL177aIBnG1r9u7tZ2MuUUbMnz49aljUe6NGpdO4Dz/ce1MiAdOm+dd/ZPA8iNeeZUfXJjbPsMhkLhXcr3I5vFmzesfP3EmCBQvo+Kd/Ir9mDf7EieTXrqXjn/6JYN683sdMmRJ9Zq6XTsP8+bdv7izAxYsXWTJxCknLxg9C3CAg1JpF02cxsbzvfrswDBk/fvyQs6UFDINw7FjCmproYlImg+rnM6nCsDe7WvxQRr8BcxiGxIp1vBJCCDFkkjEV4jbIZmH9+gS5nEEioQlDOH7cYsUKl+XLb++Xxn6FIeaxY9hHjwKXsw/19cU7XY403ye2aRM6kcA6fBjicXQ8Hu0xzOVIf/vbI/bS3qJFWIcOoYKgt3Q0MBVmEBAsXV74YK0J+isv7e/43lKUymFZh1AqOvdBUEM+/zRgEIvBE0/k6ew0cBzd70zOm/Hwwy5aR+Nr0m4K1zeZeWk7k8s7MY5F+yt1WRnerFm9QbeVOwNmkVJjI0Gs9bcEJ2ejurp6Ww8bFy5gnTmDvXUr3rJl6MpKco8+SjhjRtE1ZbNG0TJX2+byHs3+5Z96inD3bqyjR1GeR1hVhfv5z/cp6X7yyTwbN8Y4e9bC90GZARdrXmfc9LN81pXEH+uzPdfM55qzLMhVQCyGt2AB7qpVN/NrLY3KSrL/6T/1e/eqVS5nzphks6p322Q6rZg+3R+Wva6DMa6iklhPnuC6rLVWitULF7OvtYmysjIMwyCfz2MYBk888cSIrCWsrKS/eT7acQgH6AZsmiYTJkygs7OzaNA865qGW0IIIW6dBKZC3AYffRQjDFXv3kHDiEopd+xwmDvXH7ESwJsWhsTfegvz4sXeJjixTZuwGhqicRS3OTiN/eEPmBcu4K1ZQzBxIs7+/ZDLQTpN1/e+R1hfP3Iv7jhkn3+e2McfYzY2RsHn+PFkP78C07mmUYrWoMFN9p/l64/rrsZ1V2AYnWgdR+urZbA7d9rs22f3ZjqrqwM+//n8Tc0fvZ5hwCOPuDz4oEtPj6Kuq4XEyc6Chi8qm8VsarqmFLef4FAplNZYp0/37slU7e1YJ09Gx0ulopE+NTUkNmwg8+KLRctuy8pCMpm+n6d8Phq9cqM35C1bhrds2YAPsyx4+uk82axLd7fiQM/HOJkmYma0Hsd0cKbNZsPEHibUv0AydvfvE3Qc+OM/zrJvn82ZMyamGc21nT178CXv7e3tbNmyhUuXLuE4DvPmzWPeNdnZG1k8dx77N2/Fvq41teu5LF64kPtr1rBz927y+TwTJkxg0aJFI5d9jMfxZsyIPrfXfu7zebxZs/ruYb/Ok08+yfr168lmsyQSCYIgIJvN8uijjxadXSmEEGLoJDAV4jY4f754Y5JYTLNvn8VDD5U2a2o1NBQEpQA6mcRsacE6eBB/4cLbtxjXxTx9unc8RjhzJrmZM4FoPMZIjonplUiQX7euz81m3gPTQCsILAs3EQNjqHvjbMKw8L0cPmyxY4dNWRm9+0PzeYM33kjwp3+awbLAOH6c5CuvYLS2QiJB9nOfw3vyyQFfyXGgJpHBqionmDwZs6kpqi03DMKaGsK6OtSlS+jKSvz4JCy3FdR1wWOQITfuaeLBht4LFeaZM1e/7BsGV2pJdSyGvWMH7mOP9VnLsmUuv/tdoqBJlNYAioULb+L/A62xMjmcxvPQ00O+rjbKpBeRSGgSCc351pPEzL4BSMyMsbd9Pw/VPXTj1x1hPT2KXE5RURH2O2roRmwbli3zWLbM49KlS7zyyiv87GenicViPPXUU6xevbr3sdlslvb2dpLJJFVVVb23NzU18eabb/Z2GM3lcmzevJmLFy/edBfaeCrF3PvrOXz0GGEYROWwGibUTaB2/AQyY8p46qmnhvYmh8B94gn4+GOsY8dQnoe2bbw5cwpKwPtTVlbGCy+8wKFDhzh//jyJRIJly5YVHXdw4cIFdu7cSS6Xo7KykhUrVjBmzJiReEujSnt7O57nUV1dXXReqBDi3iGBqRC3QX/b7qIRiqXv2mc1NBQdF6ITCazjx29rYKqy0V7IovlBpaKsXHX1bVuP68KBAzYXLxqMGePw9NM1ZIOR6XAa7b8svM0wIJ9XHD1qsSi9hfJ//ucoE2kY0NND2csv4546ReY73xnw2CqbjbK/s2YRzJgRvTHLAstCdXdHQX9lJZlJ36HyxPfRyuzdZ6r8bvKVDxLGJxFWV2N0dUUZ1Gs3crru1cZBloXRz3y4adNC1q7Ns2OHQzqtMAyoqAj5yleyN0peocKQ5LmL2IcOgueDaRG7cJG83kPm85/rt2TT0x626nufbdik3cF34R1O2azit7+N0dJioLXCtjX19T5r1rhD7uzb1NTE3/3d32EYBo7j0NPTw7/8y7+wZ88e/vIv/5IPPviA48eP419uMFZdXc0XvvAFysvL2bRpE8nr/hZc6UK7fPnyAefPNTU1sX37dnp6elhWN5X6OXPQaIIgoKZmLI5l4TtW/+NvRoph4D7yCO7q1ah8Hh2P99/huQjbtlm8eDGLFy/u9zH79+9n8+bNvWNl0uk0r776Ks888wyTJhUfASUG1trayjvvvENXVxcAsViMxYsXs3z58hs8Uwhxt5LAVIjbYOzYkK6uvnvrslnF3Ll3yB7T/ujBl5D6fhTMnT1rYpqaxYu9AUeBFLxcMom2+vnTpHXU1OQ26exU/Pu/JwjDKDHY1ASffQYPPWQwbdrw79tLp1XR4CyR0Fy4YPDQW7/s2022vJzY5s1kvvY1uCbzdb0wlSK0bFxP032pnSAIogwEgGGgLz83TE6hs/5/kLjwS8Kuc5w7n2BPy4t8ln+CCRMCHl/6CGN/9xokEuh4PGoeEwToigr0leyQ5xEOcPFg/nyfuXN9Ojuj7sMVFTf3GYt1Z7EPHIiCistpRY2Bo02CDz4kv+5zRZ9XFauix+vpc3vaSzNrTGn3Cb7xRhzXVZebxka/h4YGG9uGBx8cXCfmK37605/iOE7BvsjKykq2bt3KxIkTaW1tJXFNk6d8Ps8bb7zBN7/5TTo6OvoEpgCO4/QGp8WcOHGCjRs39gZmey+c5VLXJWbPmMmkyZNAK3zbxE2WsGGQZfX/t+UWeJ7Htm3b+sxnLSsr48MPP+SFF14Y9te817muyxtvvEEsFqPimr95u3btIpVKcf/995dwdUKIkSJtQYW4DdauzV+eK3n1tmxWMWuWT01NifeXAv6MGYXdTq/I5QimTh3UsXI5eOWVBNu321y6ZNDWZvLmmwk+/vgm6xNtG/+++6IDXcvzCOrq0JV9u3qOBK3h3XdjWNbValXbjqZOvPde/EbNZ4ckmSz+WcjlFBMSnaiOjuJrVYrYJ58U3qajZkLd3YowhM3bU/zfe1fzd7+o4h9/N4XffhqwdetWTjc04E+fXljG7VTTVvvX/OTTf+a3F/8HTTxBLAZtbSb/3xuTea38JV5tWM57udXk0gHBhAl4ixb1Pl95Ht7SpQO+V8OI5n/ebFCK1lgtrRAUGSNkmtgtrf2OEHqo7qE+gakXeIztDrj//T0kfvUrYhs3Rk2dbqPz5w0uXVJ9knfxuObIEWvIn7GzZ88WbdaTTCZ5++23iV+z1xKi7rOZTIZz584N2IW2vzJKrTWbN28mlUr1Pj8f+DR0tfPO7u30OBaZMUnyqcTtz5YOwA1cgvDWx041Njb2Zp+v193dTXoIs3FHu0OHDgF9xwglk0n27t1biiUJIW4DyZgKcRtUV2v+5E8ybN3q0NZmYNuwZInL/Pn9z+q8nfwFC7AbGqLxIVdSdvk8OpXCG+Scvs2bHXxf9c6jVCpq9HTggM28ed5NjT1xH3kkCkSOH4/mipom/qRJRfd9DrfGRoNPPnFobjbZudNh/PiA+nqfaxMtrqtobDQG7HaqOjqwd+9G5fME06fjz5lzw/LBBQs8tm51CmZ5ag1KaernhSilipc4hyH6mo2Jhw9bfPqpQyajLr8nk8rKDMfdNBPGxol1eRxrm4elTTormuicOpU51x1y2zYb09QFfa9aWgwOHrRom1rDffePoT1Yxpmzy3mm/A9Up3ui2ZEVFeS+9KURGbui8jkwivwOtUZpoj2u1/+OXZfJR87xxxer2GSfo2VcCsuOMbsxy+OnNGYqChrM8+dJ/Nu/kXvuuWEZC3QzWlqMfveT5vMK1y3o13PLtNb9BlCO49DW1saECRPo6OjoE9iGYUh9P03Hurq6yGQyBRnDK9Id7TSdOkHd3Lk3tUbD83GyLkYQggLftqIs6zAGtCc7T7KtaRvdbjdKKerK6nhy6pMkrKF9ZgeawaqHUHEioKWlpc8FlCsyA4z4EULc3SQwFeI2qajQPPXUyOxNvGWmSfa557D37ME6dQoAf86caJboIEvfGhutok9JJjX79tk89thNlCcaBu7jj+M+/DBGTw9hIgG3Yb7khQsGb70VNeaJxTSWpenqMti922HZMrc3SFMKPK//L6PW7t0427ZFazZNrHPnsHfvJvu1rw3YBXThQp+enij4c93o+JWVIV/5Sg5rTIpg/HiMnp6+XZItq7eRy7lzBh99FKOsLBo1k8/DxYsGhw+fZ+xYm/ba8bSPHYcZBLzPNFYt3EvHwYPMuS5waGkxC85jPh+VZzuOprvbAAJME7LT57Ce+/jTL14A0+xbajxclCKoqsI8cbLvZ9IwCJTu87s1WlpIvPkmGpgci/HN/BjUZ5rsU0+QOP07dOqaDb2mCckkzocfkvv614dv3VpjnD+PymYJJ04syEyPHRviuhQNTtPpM7zzzmZyuQxlZWWsWLGCCVf28N7ApEmTaG5u7hNcZrNZlvRzoelKh9y5c+fy2muvFXShzWQyrFmzpt9AwTCMggCsO+ymNXOSxYdOM7YzZFw2S3L7drxFiwbsqGx4Ponu3P/P3nsGx3mdeb6/88bOyBkkSIA556CcaEtWtIIty/aOZjzr8XXdra2tqbpTszUz9oeZuXe3aj7sjtdzy7W149Wt8YwkS7IsyZKoRFGiKCYxgiQIAiRAIufO/aZzP7xggwAaTJIly+5fFYsk0O/pN3af5zzP8/8jVZEXFdNsByXhkY3NLi++ES4mLrKzeycRPUJI98ccyYzwQvsLPLXsKZSZol/XQENDA1JKcrkchmFMC1RLS0sJz2wcL3JVqqurOX/+/LSS80sUz2eRIr+/FAPTIkWK+Gga9qZN2J9SWOJKCYI5Ki3nxjCu2KsoxsYw9uxBHRtDqirOokX+/t+gvc2+fUZeLdY0p+KcTMbPbtXU+BlSVZXU1xc+GJFKYe7bN80qRQaDCMvC+OADrHsK90FeYvt2i40bLUZGfE/TTrQhYAAAIABJREFU8vKprGzyBz8g9nd/50fGgYDfzJtOk/nmN/O+ogcPGtPshyYm/N5m182SSGh+6bii4CoKds4glzNQ1dkLJrouyeUEUkJ7u8r58xoXL/rBajTqsXy5nc/mxRMq40o5Jddalotfqd3bq2Kakro675ouWbaqHL28zC+5VSe/vlQFb3QYa+2aWVk1c+dOP5N86eemiZSS4C9+UVjdWQjU0VH/vH4GvYjK4CCBN96AdBqhKCAl9qJFvkqsEDQ0eMRiEscR046/o+Mo2ez7VFWZCCEYGxvjpZdeYseOHSxatOiq7/v973+fv/mbv8mLH4FfUrp161a2bt3K4cOHp034XdclFovlRXqeeuopWltb6enpIRgMsmHDhiuqy0ajUUpLS3Fdl063k4tONw8c7QUEvSGbM1o/67V69EOHkMEgzhzWM0bG8oPSyxEC1fVQbAdP//TXZF//PiL69Myuqqik7TTt4+0sLbs+K6p4PM5bb73F0NAQHR0dRCIRmpubqaioIJfL8fDDD3/qff5DZMWKFRw8eBAp5bRAP51Os2XLli9wz4oUKfLbRP3xj3/84y96Jy6RmEPF8ctCNBr90h9DkevjD+Gauy60tfk2Jl1dGiUlHgW0UfL09SmkUrOFnlIpwW23WdNsQj4NYmSE4PPPo0zanggpUXt7UXt6cG7Q53TvXiNfCSoEGIZkYMAPEF3X99l03QCLFydZuLBwYGocOoQyMTE7OFYUlPHxayqNVhVJScAhott+6e7kWLKsjOzttyNSKYRt49bXk/rhD3E2b85ve/Dg9PSb40B/vwakSaXGKSmZujCeJ5g3r5fy8tisMk1Nk7S1afT0qPT3+yfFv66SqiqPkRGVhgY3nz1etcq+5rLTDz80eOedAB0dGm1tOidO6FRXu1ftN5Wqgl1dhToRR6TSYOVwMmmyq5bPCnbE6CjGJ5/MzlALgdrX5wesBbIxyUSCX/f3c7ajg5qaGgKmSdQwyYxNABI5RwQtpSSdTuN5HpqmgeMQfO45vzHZMPJ/q8N+L6w3GQS2tLicO6cyMaGQzQps22V4+FesXDmVeRNCYJom3d3drFmz5oqlo+B/Lt16660MDQ2RyWQIh8M89thjPPHEE9TX15PL5ejv7yeTyWDbNhUVFTz44IP5HlJVVamtrWXJkiUsXLhwzkzp5dTU1LD/xH7avDYWjzjUDSbIIWmorUfoAsu1qIjVogwMzKnybaRzVyzZdY3PJjBVxexycF3VcT03L4Z1LZ/tjuPw7LPP4jgO5eXl1NTUkM1mGRgYYNGiRTz22GOUz1hYE4kE+smTKOPjeKWlhcv7HQe1qwtlbMxf4LoOBeHfF1RVZcGCBZw7d45EIkEul0MIwcaNG1m1atVn/n5/CN/lRaZTvOZfHFdSdy9mTIsUKTInlgUvvBAkmVQwTTmZPQuxcaPFli2F1YRvvdXi2WeDqOpU0imTETQ1OdTWfnaKQeaePX6W8PKJrGmi9vai9Pbi1ddfeQDHQViWbx0xGWwYxvSMb3W1h67bdHZqmKYkEJDcdReUl88oR/Y8tOPH0c6eRT95EjwPt6lpdtbtGtRshOMSSGURrvQPTUpcXSMbCfjHWlJC5umn59w+GPTIZKaCp1jML0sWYh623Y2UHkIoeJ6gpCRBLjfB5s13zRpn0SKXixcdDhwwMAz/3HiepKJCEg77pb0jI4LKSkkkIiktvbYFh+PHNU6d0ggGp7/+tdeC/Lt/l7pqcOsFTJLbNvsXynXnzGwKx5kzfe9VVqLYNjOvxq8//ph3zp5lYPLeeePV1/g/Hv8m9XfehZGxEFLiairZ6HQRn7a2Ng4cOEAqlUIIQXV1Nfc3NiI8b1ZPsAwE0NvasCezPqGQ5IknssTjgkxGkEpd4I03UggxuyQ6lUoxPj4+zXd0LsrKyvjhD39Y8Hc33XQTmzdvJpFIEAgECqrwXi/V1dUsu3MZo6dGqe/pwCiLUVtRiT55fUazo4BfUTAnc8WkkjkXBK4XQzUK9n1arkXMuL4y9NbWVhzHyQfukUiElStXAqBp2vSeWykx3n4braMDDAPhOJh79pC74w5f7G0SrbUV4+OP8/ev1DSszZtxrmBV8/tKeXk53/rWt5iYmMC2bcrKylD/AIP0IkX+kCgGpkWKfAnp61MYHFSorPSu2YblRtizx+DCBZWeHpVsVkwqqbp4nsGyZQ6hkK8eOjCgUFfnsWSJQyQieeqpDB9/rDM46NvFrFvnsHJpluC/Po9+4ICf7autJf3UU3gLF97QvikjIwV9K2U4jNbWhjVXYOo4mLt2oZ4/76cTTRN75UrsLVtYvNjm+HED05yauJaVSZYtc/jud9OEQpL6+jJ6ey9/Q0nglVdQBweRwSBeRQX6wYMoQ0N+P92lfbwWqxspCSSzCCSol4SOBIrrYqayvqrpVVi/3mbnzkA+My0ErF5tc+CAzpYtG7h48STj4zkCgRQrVpznttu+Omfv4i23WBw5oufLgRsbXbq6VKT048F4XCEQ8Lj33sxV9+sSra16wXZhTfN7kOda8JiFEL5farYXPX4EIS1cswY7uh7UAF55ub/oUAAZi5FbvRrz4EG/51NRONHezvutrWSWLCE8Wf5614q1nDhxgmXLlhGNRpEIFM/DTGbJRf2DONfRwfsvvUREUYiUliJDIeLxOB+9/DJfbWlBSadRRkfBDOBVlPuLIAUUsGMxX6F4YECbMyMqhCiotnsj6Lo+K5v3aVF0hcWLFlMlIjQcOYtz2aKBvBSiXyEIdnQNzXZmZ00l2GZhReDrZVnZMg4PHiagTb83bM9mTdWaObYqTH9//5zZ5JmZGP3IEfRz5/w+bCHyvcbmu+/iTvYeK8PDGB98AJEI8rJMv7l3L151NV5d3XXt3+8LJZ+TEnuRIkW+eIqBaZEiXyIyGcHLLwcYG1MwDIlt+xPaRx7Jzmk18mn45BODjg4tnzEDGBtTSaUUPvzQYGBAnVTglXR2CvbvN3j44QxlZZI775yeVYz87f/jCytNTsi03l5iP/oRiT//c9xVq66/XG2u17vuFQWGAq+/jjI0NE3uVJ+0H9i0aQvDwwrd3RqBgMRx/CTnHXfk5jy/6rlzKAMD+YmmjMWQVVWI0VHU8+dxFy/2B8lkyH3ta3Mfj+uiuB7C84PSaQiBaruXJHrnHgNobnbZvNkPKH0BJUk4LPnrv47jOIKRkVVUVKSprbUIh7ddcSxN8wPzysqpsuXyco+uLpV4XKG52eH++7OUlV37vZfJiELrCRiG3w97TXgeWlsb5vmdqPp53IZFyJISlOQo+vgJ7NGViLSHM38+ekcH8jKxFJFMktu6FWf9erymJvRDhxi+eJGfHjjAKcNA9PRQUlLCgvoGwoaJAPbv28/d99w9OYBAcxxynkSMDHPiv/93yjIZpKIgPA+3tBRn1SqGQyHG3n+fBkX1E4GuBE3FWbECq7Z6zkOrqqoqKPgCEIvFPpdJuhgZwdyzx1/80TScBQuwtm+/at/t4tLFdE50IhZU03i8M3+/ekiiegQymTnFj0Qmg6UKFFdBdT2kf+uCBCts5sWQPi0bqjcwmh2lY6IDXdFxpYuKyo75O65blbekpITe3t6CNjozr6H55pto3d2+crQQyGgUe9UqpK6jHz2KtX07+sGDBQN3GQ6jHzpE7oEHru9gixQpUuRLRjEwLVLkS8Qbb5jkcoJodEqgx3EEr71m8sQTBXxIPyXnz6uzFENV1e8Xffttg/XrXXTd35dgUOJ58OabAZ58cnoGTTt5Ev3MmSkPUilRBgYQySQlP/oR2Ycewlm6FOumm67ZFsKZNw/t/PlZWVORyUzz1Jz2u/Fx1J6eKWGiS6W1wSB6ayv2pk187Ws5hodt2ts1QiGPZcucK8W5aG1tsyaT9sqVqBcuIIaHAXArK7G2b0cWKMFUenowPvoIZWwM1ZOIimqc224r6BMipERew/nZuNFmzRqbwUEFTfNLki9t1tLiAvrkHyCbxThwALW/3xeQWrIEZ+XK/HVYudLmyBE9vzvRqGTFCgdV9TPj1+vi4bq+nY1tC0xTsnChQzjsB6x1ddegjmXbBF98ESUxhF55AtImytAR3IYGZCyG1nYaTZ7Eya1DZDJ+bKNpiFwOLxzG3rrVXywAvKoqTrS08G5XFx2mibD9bO3o6CjV0RggUYQgZ80Qh5J+qXDw1VeJWxb65A0iASWRIH38PAPj0NU9QV1TFaqu5L9ttcOHcf7P/zDn4SmKwm233cZbb72FaZpomoZt21iW9bkI6YiREYIvvOD3304+W1p7O+rgIJlHH73i89kUa6ImVMNIdoTTt69l8Z4TGMkMjrRZXL8UZ/nyWf62yrlzmB99hEgmEULgVlSQvfMuVCOIVBQ/U/oZBaXgZ513NO1gq7WVcxPnCKgBWkpb0JTrnw6tXbuWY8eOzQpMM5kM69evz/9fO3bMXyAJBPILaiKbxTh8GGvzZkTS99gVmUxh4TYhUAr5TBcpUqTI7xnFwLRIkS8JyaRgYEBhplWgosDIiEo8Lq4qHnM9eJ6vPus4YtZcNJeDQEBBiOmBhKLA+Lgya1+Md95BXtbsfsk+A03z/zYM9FOnwPOwbr31yjtmWfk+TjIZhG0jQyESEx697Tm6F9yOd7icTZvsWX2MSn+/v5O5nO/bOjHh93GFw7j19Yh0GhmJUFnpUVl5DbY2l5iVyXRx5zcgW1rIPPnknJspAwMEX3nFD5RDIVzPwxgaxPj1r7Aee2J6VlhwTUHpJXSdq5d5ZzKEnn3W339dR+CXDWpdXWTvvx+ATZtsLEtw8qR2KdlDVZXHffflrjsobW31y77Hx31BKdsWHDpksHy5nS+ZvhrGvn2IVAolOg5yMmgJBFC7L/hRbyyKItLgqP55zeVwGxrmvK/2799POBwmFosxNDSE61aQyzVy5lyaHRskjuvM6umUQqB0nUfYNgFdx53sWZQSjg3UM3rWpF45z4nIOkr7kjSGRymNeEhdx5s3D+HJK6rMNjc389RTT3Hw4EGSySSxWCnj4zfx05+WIqVg7VqLhx7KzumBejnK0JDvp2tZuI2N2KtWXTHzae7Z4well19cw0AMD6N0deEtWDD1c9dFbW9HHR7GravDXbiQB5sf5NDAITq1To49sI15uQBbYqtxGxbgzrTz6e8n+Oab/nUKh/3APpXC/NVLpL/zncI+Op8RMSPG2qpP17cZDAa59957efvtt7EsK19qvXz58nyvKYBx7BheLIawLvtMURREJoPS14c1qYTulZb6wmkzr4/r4n0R5axSouVsVMfFUxVs0/hMFwmKFClSZCY3HJj+/Oc/p729HSEETz/9dEEJ+1/84hecOXOG3yHh3yJFvrRkswKZr2+bjudBOv3ZBqaK4mfXTpxQ0PWpeapt+4ItZWWFgx4pZb6ENE8w6PdzGgY4DkoqhbyUZZgcWAYCaGfOYG3bVrB3FEDp6iK4c6cfoBlGPsjssOdx/FwZY8s2YEdKsc/C6dM6jz2Wprx8aj9kaWk+sBWKkp/4CsdBO3kS0mlmRf5XwV65EvU3v4FIBGGPo6XPItw02A7OsiUIewypFxarMT7+eFqZKYqCNHREOoPScRZvyaRSriuxg8Y1Z5OvFeOjj/x/XHa+ZTCIcuECysWLeI2NANx0k8XmzRYTEwqBgLwuZWXPg7Ex3+dy3z6DpiYPw3A4f17FsvxFjwsXNP7kT+LX5NCidXf7101Mv/+UTBpyObxYlGkqOqaJ1tlZMDBNp9MkEgkikQibN2/nf//vJNCIEBaJhMInJ+tYsqCfm2++Bc+bXITxJE5ARxkfR+o6K2pr2d/ZSTAQ4NxoKROZAAHVAtticdV8RlWD/rTDttVJAhEdpEQk4qi2O2dgKoaGqNqzh/tHRvAUlX/41UoOOWWEY3427fXXA3z0kcnf//3EFcWi9P37MT75JN9Hq/T1oR0/Tubxx+f0BZ6rd5twGK29HWsyMBVjYwRfftlfGDJN9JMn8YJBso8+ypa6LWypu7qlh7F///T7H/xnWkr048ev6Hn6WTAwoLB/v0E8rmCaHqtXOyxdevXFkcuZP38+Tz/9ND09PeRyORoaGqaX8bouIp3GWbgQ/dixaW0GUtMgk8FZsgQAe/NmtDNnZgWmIpvF+pwtUoTrEkxkEBKkIlAdFz1jk40E8D4DdeQiRYoUKcQNqSicPHmS/v5+/u7v/o4f/OAH/PM///Os11y8eJFTp0596h0sUqSITyzm5ctmZ6LrUFr62YsgrVljs2aNRTTqARJVlcyb57BunUNjY+GyS9OcvS/Zhx7KC76IbHYqZHVdvOqpfjthWfmytlk4DsG330YGg36Zq6JAJIIdjNLWGWJw3V3YEd9rUdchEJC8++70DI1XW4uIxxGuOz3Ic1282lqMQ4eu+dzkx5w/H3fhQkR8CD1xDCFdsAWEo3iragn1vwhuYXEgZWJiVrDpJOPIVAKlsxM86Qu/BA0/MJ2DiQnBu+8avPxygPfeM0gmhZ+N6enxs8JzoPX3F86ehcN+VvoydB0qK73rCkpPndJ45pkQzz0X5H/+zzAffWQwPi6oq/PYts1m61aLbdsslixxruh/O41JM1zXrgNhz/o5SKQ7Y3HBnnpd1smStJJIKdE0La/yOTCwiiVLbkbXs7huBs9LsPdMHD12P+FgGOlIensUdh0M88LbMdqsBaitJ9nY1Qfnwuzd73D0FIynLWwBWxduRVf9a6YFNLqHo36WLGch6+vx1MJfv2JkhOBLL6EkEmCa7O+oof+czeLRA3mV4VAIEgnBs8/O3RMpkkmMQ4f8bOSl8tBgEOF5mB98MPf5nWNRCMeZFswGXn/dF/IJBv0FlVAIISXmG2/MPfYMlHi88GKLaaIMDFzzOIV29WoC2OfOKbz0UpDxcQUpIZtV2LXLYO/e68/SKorCvHnzWLRo0ez+YFVFmiaytBR75UpfXdiywLKQhkH2scfylREyEiH78MP+ol0qBckkUlXJPPDAVBvE54SZ8svX5aUMqRCgCgLp7JXNqosUKVLkU3BDy17Hjx9n86RvXmNjI6lUinQ6PU1y/plnnuHJJ5/k+eef/2z2tEiRP3AMA5YudWhr0wkEpiYGuZxg0aJr95C8Hm6+2WJsTEFVXUxTYtsCVYWvfjVDT4/GsWPatMRLKuX3N85ySamuJnvvvQRef30qU+rXA5O77bapF6rqnEqqWnt7wdnm0JhB6Xg3Fz1vWn+WEDA6qmJZ0ysCnUWLUPv6ELmc/3rPQ8ZiOMuWoY6PX/c5EvE4UtdR7R6IW3h1YbxlDXhL6kBTkZ7EiB/BKts+a1s5aRsBoPT1Yb7/PiKdBsAt3Y8tPDJPPHHFTGlnh8LOt4IEgxJVhbEREK/t5ubqU5RGJ4O4igpyDzyQF2i6KtcgsnQ1ensV3n/fJBKRRKOSS2sBx4/rbN1qYRhTbbSWdW1vJxIJmJhAHR/HbWjA1evR9D4kJtIwkIYGMoeTne6T6ZWWkrJT7Dy/k8HMIBJJSAuxuWYz1dXVjI9PMDxcRnm5R3n5RmzbxnVd3ws0q3JiNMb7uzTGJtT8/f7eezk6z61nNBPG0BW2Rsc5NZBiLLGAyNI7cZYOoJ3ciaOFuBSL4Dh4JSV4DfNwDQ3t9Gm0kyd9leqqKuytW/0sdiCQPyH7z1YTCbmotkU4MUAq5isoBwJw4oQOFF700I8f94PGmagqak/PnOfYWbDAz9rNKKMVmUzeg1cZGUGZmJhWnu//QkEZHkakUrMzoQXwAoHCvZOOM3vsa+DcOYV9+0zicd9vt7HR5a67crN6xDOZDK+/7gvICTF1jsJh/5yuW3cdZfzXgLN0KfqJE8iKCuyKCj9yFgKknOW/69XWkvnmN/3Pgck2g88dT6I6HnKmCBtMlqG7X3jW1PM8zp07h+M4tLS0+N7BRYoU+dJzQ0/y+Pg4zc3N+f/HYjHGx8fzgemuXbtYsWIFVVVV1zVu/dV8B78E/D4cQ5Hr4/O85t/4BuzeDSdO+HGdacLmzXDHHZ95lWeeH/4QBgbg7FkoLYWlS0HT/NX7piY4fNgPSCMR+OpXYU67vT//c3jkEfjFL2DvXmhogDVrMKW8pOIELS2UtLQU3v78eaiomDVhTiQgYiYpK4kh1ekfaZoG9fUl0zdZssQfIx73d7ysbKp8NxSi9BquZ/6anzgBb77pp7BiBhhl4CiwuhmilwWBmgOFxr3pJti3z//3rl3+fpWU+Bm+piaC775L2YoV8JWvzN52+ADeyCf8auciGg0dzEaINFN/6i3K3AG6hutpujTn9Tz/xvmTP5k+xtq10N4+O0sWj8OOHYX3+Rr58EP/El+6L2Mx/xJKCSMjIZYvn3pteTksX36VjNCbb/rnu7wc2tr8m3LJEmieB85ZPhmez+GTDSQHYkQCsH55hg21fdDZibtmNQd+8V+IrF+MXtWQH/JI4gh33383H/76Y4QwCAYFruuiqirr1q2jvLwc24YP9wBKBXm3jmwW3HF2K/cwTxygbuIsuB7NagmenKB7cIzRmzcxtClIzan38eJJ5s+XhOY1wT07oKGG0rffgjNn/GjIMPwb+bXX/MzvZTYuhhlAzxmgG5TZcbzg1HdvIAD19XOUnpeU+Pd2IfXqbHbu+/zRR+Hf/s0/v5GIvz+ZDDz8MCWTJac4jn9BC2XxFIXS8nL/Wb0ad98NO3f65+ByEgn42tfgOoLT8+fh44/9TS49zrkcvPsu/PEfX1qD8njttddobT3H0aOrME2HWCzGhg0bMCY/JHTFIZv096fgZ/ulbOH1fOB+/ev+xTp1yt9OUfwdffxxSq/lPH3euC7IQVALTBFdl5LyEghfn4LxZ8nu3bv5p3/6J+LxOFJKotEo3/rWt3jkkUdufFApqY/H4dgx/xo3N8P69VdVoi7y5aY4Z//d4zN54i43q04mk7z33nv89V//NaOjo9c1Tu80c8AvH/X19V/6YyhyfXwR13zxYmhpIZ8JVBTo6/vtv+8lu9HBwamf1dbCffdNf90VT0cwCN/7HuKxx4j81/+K+sorkyViKvbq1aTuv3/OAUQ0SmhwcEpRdxIzAGMyxFhidgmwaXoMD2fJZODjjw36+zVEei3L2nvZslxFi0b9Sfb4OKTTWLfeinOV63npmlspG/EvrxIpUVETCfSMhfAcP8vx2j7seydVOaWHa5rkCo07bx5mWxuB555Dsyw/gJQSr7oa6Tig63jPPEN81appmxlj+9CSx2jtrOPld2rI5jQU0kRL2vn3xlGSYY1sMkNvr5W3uRHJJJlDh6Z7IS5ZQvDYMV89OBhEKAkUtxOvrpZMbgDvU9zaFy4Ecd3pk/f6eoW2kwpeXysLzn+ItGxSZhnN39tMb29hL1UAta0Nc+/eKfXj9etROzpQjx/HCm5h77k7ONJXRzAMSmSQTCrFO29ZjFYm2Py1FvrsMazBfuZ19XP6zrUkK6cCqvc73+fRhx+lszPB2Ng4sViUhoZGNE1jfHycZFJQXl6CZY3n7UeVkRH0VILkhEZPooTKmH9PhkIKY6M24VQ3o2+n4KuraV//XUKkWfZYhoGAgasriDNthPbt8+/ly7P0nod28iTOZdd7Vf0FXuptIWrkSOsRMhk/o57NwtatFr296YLnTKmuJrh796znBSnxSkvJXuk+v/NOlAsX/MxpIIC9bp0/zqVtHIdwOj3tuz+PbZNO+/2+V6WsDGPePPQTJ/L7hqaRu/12nETCD1CvkV//OoDrKswsehgYEOzZk6WlxeWtt96iu7sbRQkBEiklY2Nj7N69my2VFZgHDpKLe7ivHIDtlfT+0R/lg2/huhhpC9XxqxA8VSEXMpHaNdpcrVuHWLoUpa8PGQ7j1dT45+h3cc4gJaFEqmDwLTyPlHBh4osRQerr6+Nv//ZviUajeQ9Zx3H4yU9+QiAQYM0ciuxXRErq9+9n4siRqQz16dPIDz4g89hjc5e3F/lSU5yzf3FcaUHghgLTsrIyxi/79B8bG8urFp44cYJ4PM6PfvQjbNtmYGCAn//85zz99NM38lZFihQpgKIUdBP50hDYuRN3yRK8xkZfCTcaRQLamTPTJuWXIysqcBsaUAYHpwmImFaK0FduJTkg8v2PrutP3HfssMhk4NlnQ/mfd3bGONx9Kx+dOs0f33KMigoBto2z1LezuBq27dv29HySQpxZhxFUWVk7xM2Nwxipk6CYKCNJsB3Stk5fd44T6e2U1eqsWWPns7eWBa2tBgPuAzRykS1lOUxT+iWMl2W5lJk9t56NljrBWLKEf3pmFYmkQdB0AZXMaIpfDi3nic1nkXJ6K5jUNJSRkemBqWGQ+cY30E+cwLz4GxS9D692IbKykuDAizihReQq7rmhdHwoJInHpxSd43GBlLBRHKRC6yOo2ZglgnUtcQL7XyZT8yDeHF9WemvrdEsew8Bdvhx36VKyJZUc21tHMOyXcXu1tchclqDXzRFvLWsj44zFT2GoJnYQ5h8+y8kdU6I6STuJqqo8+GAlu3Y1EA5PnTRf6Mvj7FkYGDBQVUlDg0ttJICwx8COIT3y50fTPcpKcyRUC3O8HyuzAj2gUNtk0Dmq0tTk2/boJ0/6Zba27StU27a/GBGLIU3Tv3knH/Dty4bZ117D0IjORGMT4P86FJI8+WThoBTAq6zEaWlBO39+qqTXdRGWRe6WW+bc7tw5hYMHDZLJZQQCS1mxwmadOYI59DqqPYoUKk5oMfbSJehn2pGBAFJKXNdFsyzfDuY6PImtm27CWr8e9fx5ME3c+fNvKEuVSChzaDZJ3nvvBB9+uJ/du3djGAZVVVWEQouxbRNFUXB7ehBHjiAiEbSAxoLyCTiXoORv/oaJf/gHUFSC8YyvqTXZc6l4HqFEhnQsiLzG45XBIO5l1Wa/swiBFTQw0zm/J/YSrvzM7Xuul2effTYfkF5ONBohBKagAAAgAElEQVTlxRdfvKHAVOnqghl+xwSDiHQa4+BB38O3SJEinws3FJiuXbuW5557jh07dtDZ2UlZWVm+4X/btm1s2+abtg8ODvLTn/60GJQWKVIkj9LbizIy4gejsRgyFsv/zjh6dM7AFCB7//0YH32E1tHhi4eUlJC96SZWNjcR6cpw9KhBX59CX59KZaXH668HmJjwfV+7ulT27TNwHNC0BbTSQO5sA1+pGGbVUwuvuaftl7+Evj6VoGajmTZogmN9NSjKWm6pSaBmLyI9i4GLGc5eUOj37mLEq6Z7wO+vfPzxDK4LL74YxPP8+GNI28ThkSoenP8JC9Shae/nzch4Kc4EeBYvvT6PaCSLYUz13QpdkPN0Dl+oYdP8/ny2FPCDn5qa2QekabhLSvHKy/G0+fkfSy2KmjmHmmrDjSy7pnOTf69Egm1GKy93zEOpqeToySDZrCCcHaWqc4yHK3/DEnMMkZbIbBR7+XKMvXt9IZhC41lz9PwpCuPdKXKWwLwsbhXxBKgquYzK2KggHAozkh1FVzSC8fS0HlpT9Rc5li71BZgOHdJJpRRUVRKNeoyMqGiaH6R6nqCtTSNRH2OVKQiSpcoYmXpjKdEiGhUVFvct6ectYePkdOSoxflByelDGrfd62FoGkpvL9q5c34Qpyiovb3IsjLsRYvwamp8v91QCNVz+U937eel7H3sHjKR0mPTJpsnnsjMtM+dRmJoiD2trZitrTTlcsxvbsbbuhXrllvmvNfb2jR27TIJhyW6Dq4rOHowRfXYL2lZrINQENLBiB/BXVZN2lzNuV/9isTgIFlNY7y5mcZwmKsv78wgGMS9hkWhKzFXUuvcuU/I5fawcKFv5aJpGkNDQ5jma7ju44CgvqeHZCCMZQe4t/YQmuKBbiKGhjDeew95y21+UHr5Ao0QSCRGxiIX+eLKWn9bOKaBpygYGQvFk0gBdsjACfz2LHyuhZGRkVm+seALUCWuI8N+OfqpU35p+sx0u2GgdnVBMTAtUuRz44YC06VLl9Lc3Mxf/dVfIYTge9/7Hrt27SIUCrHlc5Y0L1Lkt4XjwPHjGpmMYM0a+3pdRIrMgXrx4pwCRyKVYjJyLLyxomDdcgtWgYxPU5OHplm8+mqQRYumFIPb2zWSScH4uIKqTg0tpc6u/lUYmRx1dpryAjY8MxkdFfT0+JNgWVWJOHsWCQR1hxN91WxtWogbaMSLjPN2+/1ktGY8/ImcafqVuu++a2Lb/n5cSkaIjWsInT3NmwMb+ffhN1HEZPltIsH4/Y/xxm9M9u/XsSxBy3yHexZoXOiNYGgeDVXjdPeXo2suUghSoXJGz19kub4LY7/qC9aoKm5lJd4cff968jhoBW5wNYSePHVdganx3ntobW0sNAzuUjp4/qUmlJKlyJI6KsY7+br+KqqVY2A8SG2th7AsjE8+wVq3DuJxhOMgL+uxBPDKy1H7+mZn4nI5tKYmxIHpP5aqCp5ECIlpSsrD9XTFuwBwPI1T+5sZH4hhew7rFlaTbPSz7cuWOSxb5mDb/ls9/3yQaFRSWwvd3f6taZrQ26tSN38xN1n7yXSkyNkGprDA1EmUVtNSPsDwgELlMsmC0jiOK5AIFGy69wsiyxYQPnVqSmlVemDoiLExRCZD9sEHUQYG0E6fRhoGztq13BcKcR/xa7oGZ1tb2f2P/0hQN1CDIU5pGrKnh2/09BCYwyZGSjhwwJiWMQZYXrqL3oEI8xY6GJOq4KmcS2boKK+3lzCxZAn6ZZ6dnbt3+9t9ykDzelm0yKa11cA0p/bf8zy6u49w000BFMXNC+RomkY63cP69R8zMrKAskP9rCiJclvNfqL6ZWJMkQjGkSM4W28uXDUgBMrV5H+/xHi6RnYOS6MvioqKCoaHh2eJHXmeR/QGBLOAospwkSK/Q9zwJ863v/3taf9fcLnp9iTV1dVFD9MiX0o++kjjmWcipNMCIXy109tuy/H004UVMD81UqIfOoR++jRks8hIBHvDhry/3e8TXlmZ731YYNVbatrs4ENKvxdL169aIrh37+yJta5Df7+K48wuf5YSUinBsWM6d9xxdSXOgQE/e2ZZIHUDt6EepacXTJOco5LOqUTdJK1Ln2T47CKC2vR9URS4eFFBUfwsbp5AkOyOe8i9c4DeAY155iAyFOLC5q/x87P3c+yYjmH4ge3+kUqWhqsZH4NICVSWJgmaFr1DJbgpl+DIIIv0TurSndBqobe2Ev/6E4w+8C0Cjl/OfPSoztCQQiQi2bjRJiAdUilBIiEIh+W0fRMUtgUqhHbypK+ePLmKM788wV1NZ3Bzp2hb+Ti3Wr+h0h5Dqv5igZQgEYx257D276Tr2R5CmsX8+Q7Gdx7AvuMOAKxt2wj+67/65byXAgTPA1UldO9WSt89jWN7vjctIEtK8IaGKYvalJQCaKyuXE1r/0kOXVhBrxsllzGoK6sinGvm2WfhqacyBIMyf89YFkxMKIRCfvZw0yaL7m6VsTH/PSpb6nn8Owl4oZWDJ+q4IOahBlRuqtpPXTTCK/Gv0VKaxXanSiE9FDIJ0E534ZWWoia7UBcOQyCLcCVeNoIV9dXDvJoarEIZ7qvgZnN8/PyLlJZV5lc+FNvGSSd468gRvt7ailNAoSyVEiSTYpYdUFAZJofB2KigosLmxIkTTAwP44yN0tMZp8NbzZr16/PiQeFwmEOHDn3ugemWLTZjYwpdXVpeQdxxsixcGEfXQ4BKdXU1AwMD6LqOEIJkcpTGRpWb6j9mS+O82YNaFl5ZmW+Z4ngFg1PJF1fW+ofIN7/5Tf7yL/9yVhCaSCT4sz/7sxsa01m6FPbvn/0L28ZtarqhMYsUKXJj/G4thRUp8jvA8LDCz34WIRqFkpKpSdquXSaNjQ733DPlibh3L7z9dpCGBpe77rJmCsZeM8auXegdHX4mMRBAOA7me+9BLoezevVVt/8y4ba0ID/8cLYlSS7nB+KX/Uw7fhzjyBG/D1VVcZuayN1xx5x1e+Pjyqzgs7LSw3Uhl1MIBKayG44D1dWSREJMXzC3bYRl5f0ZL6e01GPS3cUfo2URSiSC2tOD5oBeFSV9yw6SPbUoyuxV+Opghk1lKT4+ESLoebiahhUyQQi8+gasRxsZWraK0qpxrAXNvPB8OYMdCpqW14hCVeHXhx9hZdM7tHbWUlnhEQsmiczPUvLxOeJmkNtXDuCWtOBZDu+ObuDMa43E9XIcB3p6FFpaXL+EeAhaW3WaQouoCxxFCgPP8/sq1651MDQLN3jtEzP95MlpvaCptEDXJGFDsnRwL7YZQ3NsXKHguAquB70XIdbZgR0oQ4bCpAhz9KLChv/3F2ixGM6GDchYjMxjj2F+8AHK8DAAbm0t1l13gWFw939ayGv/93mctEcwKElnBEZ1HQ+vbgVHB02jzDOp5xb+l/ENsl0BwkaQ+JjKwV7JihU2+/ZNX5yYcenRNGhudgGXdFqwYl0Mp2wTxqOS7bXt3Nx3FuF4OGXNdC+8Bzm8EtebYYUiJdX9rQT6zyAYQV15HpHwkF4YGQ0gGwIE5SuknT8G7RqtfWaMP9R2FjeZAN3I2yspmo4WDDE0PoZz9mxB6WxNk7OO2UfF80A3JKdOniTb2UkklWYkl0ZPu3jdZziRTLLh7rvzW6TTaWzbLlhy+dtCUeC++3KMjVl0dGiEw5KmJpt/+Zepz5OWlhaklAwMDJDJZPA8j/LycpY/9BDs2cPM2miRy5F59FGEqaNZzmz7FFdih7/Y0tbfJdraVFpbdWxbUFHhsXWrNX0B7jOgrq6OH/zgBzzzzDMkEgmklEQiEb71rW/dmPAR+H2/fX2IU6em+rEtC6nrWMUqwCJFPleKgWmRIjN44YXALN878NX933oryD332CST8OMfl5BIgBAmH34IL7wQ4j/+xwSrVl17hgl8f0D9zJlZfnUyHMb45BOclStnz5K/zCgKmQcfJPjaa5DNIhQF6bq4TU1YN9+cf5nW2ooxqcR66dyoFy8SeOUVso8+WnDoQvPgefNcgkGJ63r5ANR3u5AYhkTTYNUqBywL8513UC9e5FLzp7VmDc769fmx6uo8SktheHjqkng1tWTLapk3z8Xd4Ze8Lgq67N0rppUV1oQz3FQ3ii1VIhEQQkGzHZSkR3bSWkZVJXVb63EC9QwPKqTTkEwqsxLFY4kSckvvJ3dxhN7xLHowjJPQ0BNdbKvvoLlsFFDYObaVznQtASsO6QEOXGggkxGcPw/LlrloGnR1qbTGt/Jn97SiKDae1EjEBR++m+OmdR1oTc0IN41Urx4ozewFLYlJX5lXCAKZJLYRZbh6KZVDZzBQsFKg9/YjgPHolI2LoXmcyTSx4Ze/JL5hAwCyspLs17/uXxshpi1glDZFefIfV3J21yCD7Snqm0yWbV9E/4UYXR99SImuUb19O//88mYcz6TysmSLlILWVp3y8ukTaE2D6mqXeHz2syeEpKXFwTY2YkdWolV2gOPiao3IcClBS8F8xZtVIVg2fJZQbhRRX4ZW0w2aiSzzvXS9ksnnP+gRHHqVTN03rnq+Z6JaDo5tI2aK00gPRTeRgO15FAoXAwGoqnJJJJRpHzcTTiNRvZtwyGLifBdmKsOYHcby4Ei3SkATZLq7yYyNESwrQ0qJJS3idpwK/fO3Qikrk2zadGnxUKexsZGBgQE0TUNRFJYsWcLChQtJp9N8+9tPc/58Ka8IyTLdZuXofuIyw8WREdA0urdupSWdprG8HCtoYmRzyEv3nQTH1HDNomIrwK5dBmfOaPnYvqdH5V//NcTjj6dnPVuflm3btrFly5bPzsdUCHj8cXJvvYXW3o6QEmfRIl/I60ZXm4sUKXJDFAPTIkVmMDSkzPldlE77k5L/9t8iJBKCkhLf4u9SQPSTn0T4yU8mrktUUrmC2b3IZHyz+hvtnfldJRjEaWz0RYxsm9ztt+Ne1qcGYHzyCYRCnBks5/DFGrK2RknQYnvlaUoGBgoK+TQ3O7S3a9Oun6LA+vUWrgvHjxsoCtTWegSDU5YbVVUewedf9ntcL+vBM/bvB1XFuWwl/hvfgJ/9TDIx4QeMnidpbHS5884pe4xwWLJypc2pU1MTtdUVcdKWRkOjwy3rU7y5J0I0rKC4HortkLA01qxx8hlf1/WDJlX1hXdm4kmFHQ+V0dzssnOnSSzew3dTr1BV59+MGdegPVlPWPODRStlk0oJTBOGhlRaWvwFlPFxBSkNPuh5ihUV75MY6ENmxxiYqOZIz5PMr0/zyJ3/gld9C07kyuWZbkkJ6shIPmqPRCSxiIc7kiZRtRxbDxJMj3Gu/iYWB84zlrawzAyuYhAP100bK20ZKOMFno05FmlUXWH5nVVs2BQhZ1u88NqvGB4eIWgapG0b+fEBui6uR1VNhOv5vYESpICMoxKPzy7JvOuuHL/8ZTBvE+O6/mfA7bfnpu4xNUBftppz584RjQ6weHGMoJ2ilnH0XATLnOrdDYwPEqtQIWAgIjZ4Ai71GWezoOo4SxpRk235bbRTp9CPHEEkk/kMqDt/Pk5LC+6iRdPOh+J5zJ83DxmJQSoJymUrGkJQoqoENm2aszh7x44cL77oC1UFAhLLgtPpO/n2zf8fXm6C7EiKi4kKTMOmvXcJ50dGMDRBTdjG7uggsWI+bcNthGvCPNf+HFEjyp3z7qQh0jDHO/72ufvuu3nllVcmBY9MLMvCNE0eeugpfvWrKsyRPhonTtFZt40XxQLqR35F1ZoG7K1bGc1mOf3aa9x2220sX74cx9TQcg4gcQwdqf4eLRh+CuJxwenT2jQdBlWFYFCye7fJI49k5974BlEUhZa5PK9vbECc1at/7yqUihT5slEMTIsUmcGCBS5dXVpBO5ZYTJLNMlkqNvv32axg3z6dm2+2iccFu3YZDA76k8OaGpfbb7eIxaavHstgsLAfIICiFOzF/DIjRkYIvfCCb4sRCiGBwAcfYMfjU7L8to3IZNjTv4TDF2sJm35kNpYO8FzbBr56YJTGB2YHptu3W4yMKPT3q4RCEtv2g4nvfCfL6KhCfb1HR4dGOq0QDHp897tptmxxUPr7faXgmQpX4bCvFHxZYBqL+f2Ig4MK8bigutqbdU0Bbr3Vorra4/hxDduGsohDaYUvnrOs2SIYSPDx0SCJlCCCxfrbPJYvn6oTrqryCAR8e5KTJ7VpWXzTlEgJ69bZNDZ6rFjhgBWi9D9M7ce4FcKRGmD5yruVVXDB/53rCrJZgarKfAIy54R48eMHENkBFC9FNqezZtkgYwmFnftWcf8tH+AEF4A6twKptW0boV/+clr2f82KDGePKRwsW4ODgV41yjqOUNtQRne3Sqo3hWNU4qrT73NFkXhXkp0tgJnKIhXBO3s+JJFIEIn4+xGTkFQCTEycImquJ2TIvNSVkCByHtVls6P/WEzyne+k6ekp5eCxcTrFe5Ss7OcA0NvdwPaa7bz9xtv09fVhmiZuLsfYz37GppoatpaWMS5rSerVdFeuRQloVJbkKK0OYA9PoDbVoA6OQio3Kb7i4axohLCO1P37UDt6FGPfPgiFUAcGfIVQIXB7etAuXMA7cAC3vh51eBipqngtiwjMW8i6m2/i6M6dRFwHVA0pJcl4nHtuuQX3kiFxASIRybe/naatTaOnR6W01GP1apuA+QTOaCtn+o8iMDl7toZENkRTeSkXx8/SEw+w3E1zpOcINTU1rNq6CnUyzf9q56t8Z/l3COsFPjA/JUpfH+qFC3hlZX455szSAs8j2NvLN1esoMcwuDBpbbdw4UJe/XWAFSdeIhbvxTaC4Fis6PiAoxXLsVZWUxkIQDZLOBzmwIEDLFu2DBQFO1jMoM3k5MnC35dC+Au9M7s2ilwdy7JIJpOUzxCCK1Lk951iYFqkyAweeijDrl0mnjc9OROPC55+Ok06LZhLiFFV/WxUJuPw3HNBDGNKcGdsTOX554M89VT68qSc791YSCnTdXGrq7/chqUFMHft8vt4LpupyEgE/dgx7LVrkaEQqCoZaXKkpyYflAII6VGSGODj10r5duBtrPXrkRVT5YKaBo88kqW3V6G9XSMUkqxaZedP74YNFmNjCoYhKS2dCuLUnh4/UC6AyGR8JZwZafTqao/q6isf69KlDkuX+sFmWa/newKm0yiHDtA8OsJCVUMubya7YT2ZsulBsabBxo0We/ea1NW59PWpqKq/KwsWuPmgNI9hkN2xg+CrryKjUcJaDoGEXBZ72XLM6CXFUoGiTJUxa9olHSFJLicIeSlAQQiIhix0zaOrp4ScY6AnW7FLNs15vLKigsxDD2F8+CHq6ChSURDVNSz7v7aw0EyTtbKEg6tRnSU4Fy9Q7ui8UPvH3PLm308bx3UFtdpgQfXluRCeh/AkrvTouniRYMAkFgiiaxqJVBoNm3Bogog+TDpTiWH419+yIBLzuHNdArjsWfMkquMQQLB2Y5K3E89Qpxkowg9+LiYu8l8O/xfmDc8jMrmgsezMGWLZLCfOn2f79jpK1QQVQY8FoSzOli1oHwnsoT6k6+C4ixANx4AScBzchnoIBcGZIFP5MHgexuHDft9jOo3a3Z3/LFAHBnAbGjB378atrMRdvhwBqPs+Rm3vYPs9O6goq+SdN1uZ6MsyvzrHg09spXzjuqueR1V4rDZOs7ZkFLe+AS/QAKj0ZdbRNngfiYk2NM0AxyHkKiyMtWBJE2VVhm2rGoiVx6aNZ6omhwYOcVvjbdd0Hdvb2zly5AjpdJpwOMz69etnZ8Ysi+Cvf40yPIw0TV9M7cMPyd5/P97kQ6n09hJ4801ELgeqSrPrMq+lBWvjRhxXYO7fRzg5iG36AXPKzpBRVNYNn+VMTxmVlVNvl0qlGB8fz/u1F5mOXzlS+Hczqu6LXIVkMslf/MVfcObMGRzHIRKJcP/99/ODH/zgi961IkU+F4qBaZEiM4jF4D//5zj/439EGR4WSCmIRj2+/e00Gzc6eB6Tyq+zv20dR7B+vcXBg/ole8I8iuL/OXTI4JZbLuvFE4LsvfcSeOUVhJTIQACRyeAFg+S+8pXf/gF/nrguysjILJER8BV5tbY27PXrQVHoCK1EOi5cigcdB62rC1yX8ZJG2j/p58RLp5hoXIq5dB4bNlgsWODPjqSEwUGFsTGFo0d16uv9Uttg0A8oZ+KVlfmCR4WUgnV9bvua68A2NLThUdTfvJJXGBaui/jkEF42CfffN2ubtWsdyss9Dh0yWLDAZXRUYelSi9tvtwuKimQffxy3vJzgG28QcxLURBOMtmxBrl4BQEuLw4kTOiUlMp+BjcU8dB1sW0xOID0cR6O8JINp+EWfrqeQswME3fRVDtLGq6oi+8QTfiPv5E0fnEhhSDnluaqaeC2L0CVsi0Y5MvwdVhx+Dt2zsDydqJ5l3ldayD7yCODb5uA4vr3KXP3WEr83zHUJ6Qar6uejKgqelKilFQzlsnTWDaBa81ixJMzFPh0poabSobHepa7cIeVJUARGJoeWtfFcSUeHRkfiABf6KpiQFk0LXKqrPDRFo2+4j6AWZB7zUByH0tFRHMNAWhb9AwM01NfjZlKIoQGyG9egLJyHufschMM4mfWo2hCqdgGpByCgIJwEmaoH8SLNiIkJxKRCt9vZSf/AAF4ySSAQoLS6Gv34cdA0lImJfGmuDIVwB/sZbh/hw4NrcQPrKF0sGELjwx742trsFW9lMTJC8JVX8s+C/sknyLIyMg8/TDodZsHWxxja/b8Y7D+Fa2VRFY0avYL66Eb0Nf0opbOfH03RmMhNXPm+meTUJ4cZ7brIkmg5lhmi7/RJ3tu3j9S997LmMnEl8913EclkvsLh0nMbeP110t/9LjgOwd/8BhkITHum9a4u5IEDWOu2UD7cgXfZYpS/4CCwVI3G3guwdspaSQjx6XoYf89ZudLh0CEjv9hzCc+D2trr01y4VjKZDLt27aK/vx8pJVVVVdx6662Ulpb+Vt7v8+JP//RPGR0dxTRNTNNESsm//du/oSgK3//+97/o3StS5LdO8ZO2SJECNDd7/MM/TDA4qJDLQUODl58PKwp89atZXnwxNC3Rmc3C4sU2TU0ehw4pBYV4dN0PmGbi1dSQ/qP/n733DrLrPM88f9+JN3fOAR2BRmyAJEAwA6RIKtuWbElWoMazY3tqtna95aqprR3vVrnKZWtdW7Vl76zDemZds7ZHkiWRFEVpmAmQBEnk1AiN1Dl33w739g0nfd/+cRoNNLrBLEoW+1fFIrt577nn3nPu6fN87/s+z7cxenvRZmYIGhsJ2tt/tUyP3gPqpver9t6JPDaIKE6jdB19dBSUImhuZiIT579d2kR5rIjRP0ihto7nn49y770OtbWSn/40SjyulvXv9LTOj34U5etfL6yZOBO0tIQV01t7zlwX/z0eB9+HdDo87uXlK8Wv5vn4hk708FtLc38CKSUCcMpSGEMDeFNTy9Wem2lqkjQ1FZf3RwTBDefINfAefhjv4YcB2FeAZ5+Nkk4LDCMsuO3d61JeLikWNWxb8s1v5nnjDYueHpOhIZ360jjNtfNsak0vb9O2AhLWAk5835qvqU1MYL3xBvrcHAqQ1dU4Dz+MSoXVMyceIZothC3rmgClEAqKyQibN/u0/HEXZ0/8b3hvn6YuOk/dl7op1pchZmaIvPQS2vx8OGttGDgPP7yitfo6SteQmoatPB5oK0GpSXJBEk9GCRSUxGLs2TRBKmkwMKpoqvfRtPDfjz+UC3t6Ad3xMIoeaILTpy2KBUHBznB/TRUvTUxwqVcDPKqqArRAY1afpYkmTM9DLJWNDMOgULgpWkoIxMIC/ubN4PthJTSfxyk8gKo3YbMLkSTFisdR1lLrnmWBEIyPj5N56y2S+TxC1ylmMiyOjVG9YQORpqbl17yOTCT48VMQbLax4+EMbVQIZmbgtdcsHnnkNrFIShH52c9A18OuBQDTRBQK2C+/TMP+L0A8RWfTXjZ6lXhuHku3EbEEflUNJZcPMrN7G+KW8pgvfZLWjRl5z/PwfZ/oLeewWMwTTM2SisUR83MkpmfYXF5NNJvl3He/y53ZLN4XvwhSog8Pr9llIopFtOFhtPn5NVOJVSSC/frrGIODlI704pkRgvJySCSJRJLouokvdSpjDtnlj0VRWlr6wTMyPwHEYoq77nI5ftwiFgvdnZcK1ezf/+4xXO8X13X5wQ9+ALDs/Dw3N8cPf/hDvv71rxNfa87m3ZByzc6Yj5NDhw4xPj6+6lxLJBI888wz68J0nU8E68J0nXXegbWqawBf/KKDrsOhQ1EWFwWWpdi1y+X3fi+sKN1uLFSp2/8/TPNX33hB15HV1WiZzCqxJ4KA4Kbc1uZWAd1bcf1FxNxcWCEpKSVQgnQuSkf1PABK19HGxkls2MDx4xbl5ZJYTN36shQKGpcvGyvmOJdZcgqO/OxniFwOoes3nILfQzvp8eMmZ86YOE54U55MSh5/3KG6WqI7Pna+CJrAyy+iWSZaELb1FhKR8HOwDIzz53Fv0xssFhexX34ZfWoKpRQqkcDduzdcvHgHolH4ylcKzMxozMwIKisVlZU3zul0WvDkkzFiMcU993iYJgz1VVJmT9CndGwb4gnBvXcMoaK1SLt29b7NzRH9yU9QsdiyoNEyGaI/+hH5b3wDbBtp6ORK4piOixZIpK7h2VYoUpcYmYwwnbyPsxKMn0JrY54vjvyYTEZw/E2TxXScUjXHPS//71j/6ku4v/mbq/YlCC6RmDlHY0WMiZkMNZEMRT/KhN+A53t0NG+ge7tFoDLkChoRS4b3oUoRaDpoAtMJRen8vCCb1YjYCg0NJ5B0JpP0yAUGB3SqqyS2baOrcKXDtSyCpVUP1/OorKgAJdGdUbTsGKYqR+WXDFa2baM4W+ToqSiTc1H0U4otW3y66m6cmyoaxSkvp/+VVygxDAwhCP5hsCoAACAASURBVIRA13WkEFwcG2NXTQ3ylgrRYDpF3jWIaGKFOLMsGBgwCAJ3zcUZbWwsNP9KJsF10QcHQ8Mlw0Crrib+2GN0tAhGj0gibR3oUjI4n2J4voROZ5bSC7vJtIxQUn2jBzY9luJabyl29YMcvOaSTj/P7OwkUkoSiQR79+4N23SVwp9dIO8UiRoG+vQ0yjDxfJ+Gxg0Mjo+xcO4cFfPzuHfeyYrMpptQuo6WzaLNzrKWtbre34/e34+sraV1g8u5PhtrbBxZHUBpKRUVW3DnjzFfVYdOKICklHz2s59d8/XWucFdd3k0NQWcOmXiuoLa2oDubm9Nh/sPy9mzZ/F9H/vmiremYZomR44c4eGlhbn3RBBgvfEGpNPE02lUNIrb3b3m4tfPm4MHD654TzeTz+dZWFigpKTkY96rddb5eFkXpuus8wH53Occfvd3YWhoblV73PbtLs89F13VbpnLCR566KNfQf6XhLNvX2iQo+uhSpcSkcvh7t69ohJoGPDQQw4vv5wgUhPD6O/HCQwWHZMN5Te1BgoROhwRmk+Njuor8mevE40qhob0tYUpS/OR3/oW2tgYWiZD0NCwXPF7Jy5fNjh50iQW46Z4GMFPfhLliSdylBScGwJME0hdR5o6SG5UZ5W6fbuw7xN98kkQYln4CaWwX3qJom0jGxvfdR8rK+WKmbnrHDhgE40qRFjEDDtvrQjnx7azM9KLIEN16QxtXSmK1Z9ac9vW4cNh/u7NaBoohXnmDN71HEBN4EXXvun6yU8iFIuCROLGcRs9PMV3p7eSvThDLDeJLkwWRD29E638xl/9lPKKCtz9+5cfL/wMZu4IXqSJpGajBKTn5tC0AglzFrOsi462NtyYhZ1zScUDlt844MTCfdOWfp5N65hm+N8lWj0j6hyxJUVXLIbZt9VN1ZiXTUiEomi2poaysTGSySSlJQnMheMIN4+qKkOLOkRmnsePd5K2PsU/P12xPOMLgtdftxge1nj00RvXh4udnahMBt80cQwD2/OQmsZUWRn5TAY1Po5/550rPsu5WdCaVi8gQDhq4HmrPYIARC7H3MICPYcOUT88TElZGbUNDeiahn7mDObhwzyydyc9r41wfqGZo4MNuIFBZ9Uc1ckC6Zk2cofuxPzMG/j6Iv2n2pgbaGF74wa8gs33v/89AB66L0VNIoqvJK++/Aq2bdNcXYtYWqjSZufCa8MSlmESn5sj5vtYY2NojoNx9iz+9u2rvp/C9wkaG1HR6OoILt8PZ8mXnlOyvY678ue5mqmjMJuGihQ7Nkcpb9rHofZ2NF2nurqaHTt2EPkVm/P/eVFTI/n0p513f+CHZGxsbE0BZxgG09PT72tb9nPPoU9OQk3N8vXVOnw4XCxZI+/350ljYyOe52GtUbU1DGNVl8E66/wqsi5M11nnQ7KWnmhpkezY4dHTE7oVKhXezHZ3ezQ338Yl4hOCKi0l941vYJ04gTY9jbJtvMceQ9auvpnu6PCpqQk4ccLE69epMSdoqVjgh6e2LD9G+N6K596cHXozvs+qSuoqhEA2NCAb3nu8xZkz5lojswih6Dlr8GCbQumhAJW1dWjjY+FJI0DzA6RpQKGAd5tquXHxYmjucuvNcSKBdewYxfcgTNfCdSGd1pfmpWFuTpDPCxoaJMWiSbJ5Mw2NEqHBi2ckX2ovIvJ5jAsXwpu2zZuR8QQTF7NMjNjIIHR1bWsLsA0/bLkcG2ONpJsVXJ8FvlmUAlhOlpfOtfCIcxFtSdjrBCSMAi/nH+DbTz+Nu2/fsrg3M6dQegwlHaSZIFFRTqKinNB/V8Mr7UQBvh1WNs2ih6Yk0tBxbXt58UBqAi2QRKKKwBfolqJcbyKjTdDvXMMNHDwCsu4CD3ftobp5A8eOnSSbzXKluZk9ZWV0x2IY0+cRQR7ZUIV/f9fSwUxg5i5z/MguLKtxRdNALAbXrpns2uUvV7U9y+JsczN1rks6lSJWLKIrhQCyFRUUW1vRb9qIzCyiNmxmZjZF/RrNrNGoum0F66mjR+G552h3HHJKsTA6ytjkJN3d3ViJBNaFC3h33sndnVNUzisKnrnCmMzUA2oq2mle6KR+4wQ/WahgR3sMIQTj4z0o5XDPxkbqhE1V3EdD0JQs5crpszQ/XkssFgsF4Pw8iJtd57KkpKQ0mQQpUfE4QUsL5smTuA89dGNxx3Xxm5pQpaUEqRQykUD4/rIKF9ks5PPLXRkqlcLes4Xuvj60dBq3M4XX1YX7wAPcY1nU19czNjZ2u9N2nV8gpmkipUS76dz3PI++vj4KhQJBENDU1MTdd9+9psi7jpifxxgZWe3GHothnT4dVk0/Ruemr371q/zTP/3Tqt87jkNXV9c7vpd11vlVYV2YrrPOz4n77nPZscPj3Lnwa7Ztm7+mYc0nkmj0PTuuJpOKfftcxPYmoj86AtEoqUgRhQauS1B9Y6U7mQzzQ0+csIhGV37WxaJg1653k0nvn1xOrLk4YdvhzCntN4yy/Hvvw/rx01AoIgp59IU5hBA4jz2Guo1phz42tlqULqFlMh94v28dp705v1fTwmL29fu++XkN8+hRrJMnUUsPiv74xxwe2cDiRJ6E6aLKy5j3kgz89Cpd5eOYwkcJgXHuHEFbG0FdHd7evavmY9MzYAQ5zIEetNlZZKwUv6WbRZHCyTv4aET0m6rcSjFPirlZMGZmkFWhSY0IHMTsPPrIOfT4ZpQdRVZWsFgwmZsTjF0xGHeidHZDYyO4iTXKhoAbsYhkixiGZGo6dHCur4dy2rk2mmXCvUjbhj52NU6wo2qBqugomzdvp1jchaZp4fH0fYxr/wXfNsBaeXIoPY6+cB5NW72gEIspzp0z2LcvrJq2trZyOBpl3rKYv2XuzPJ9gn/zb5Cehz48zKu9TXz3wh6yJJmYCGedH3zQob5e4nlw/rxBRYXie9+L0dTkc/fd7vLxnp2d5YfPv8EW616a5nvQIwsYhoeUkr7eXjo+/enQnKyvD7+ri94f+StEKb6PLC1DT0SYmFAYRj3Vpcby+TU3N8K25mpqSmzms5KKKoVEgYIaM4rSBEoTbNmyhZ75eYyFBXTLxgt8vPlZHl0q98tE+BnIhgaCYhExM8M0cGJiAqeqitb776dNKYSmUfjSl1DPPceht95iZG4OW0p2A02JBNfXkVRJCd6uXYjFRfLf+MYvX150IInPL2I64fnvGzr50ijyEy5Quru7eeaZZ5ZnMT3P49ixY3iex6ZNm5BScvXqVUZGRvit3/qt2xpX6SMjqNt1qhSLofnYx1iljEaj/NEf/RF/9md/hu/7GIaB53nU1dXxne9852Pbj3XW+UWyLkzXWefnSDIZzu6t8+FRFRUUvvY1rMOHeXTrAE/3bEFr2YDeVIvngefB5z9fpK5Okk5rXLtmYNuKIAh9LR56yFlVlfsoSCRCI6FbKRahskoRGDpasBQWatu4X/gi1t//Z7SRYYKSFLK2FuPSpRuGV7e+71QKxsbWHE6+nWB9J4p+kbyfJ2EmKCuL4Djhvi91VS+3ed48i1q6OIp14sTyjbt+6RK50SxyZIKgvBEzO4Q35VE5dREbl8lZmw3eCCiFMTiIOn6coLkZ88QJ8r//+6hkEqO3F+PYMWpe6kG72IVpLiLKI2AZmAOXyNXfj64JLK8I+k1/qqSEaARpWitmDcWVBczhU2AlCZwetHgrznSRGaOeyXyOZ8++wtiCT+roZn77t7vo6lrbLdQVBi++WUKJKlJb5dM/YNA/DIfS05iJah7eOM6+R/NoeooL6RG2V5ZRHjmFUjq+vyvciGGgkrc7NgJNk7DGy19vp75ONBpl82c+Q+8//zPxpaqOVIp8sciv7dyJv2UL6DpnIrv52ydTlJQoUigSiYDJSY0XXrB5/PEC/f0WDQ0BTU0BUsLVqwYjIzq/9VsFDAP+4388zcTErzGv+2yTC4isTrU5SllklMtAW1NT6GYjJWzfiXY6gz5QQPkuslBAlpfjb1qqRCrJtWv9nDtXQNOgvr6eSKSU+lIfz1+jW0TXMIsexViEEqW4e//DTB54lXy+QCpaSu3VS9hbu9GiMfzGJkxd4GcWCJqaeFXTOJXLEd+yBU3X6Tt4kNM9Pfz6r/86yjT5fj6P39WFqWnkDYO5w4eZOnGC3bt332jPVQpZVvbLJ0qlpGR6HiFvnBSG71MynWWhKrlCnI6Pj/P973+f6elpSkpK+PKXv0xHR8cvas9/7tTX17Nr1y5OnTpFNBqlv78fx3Gora2ldql7xjRNcrkc58+fp/s2LbmypGR5DGQVv6AM8f3797N3715+8IMfMDo6ysMPP8zevXs/9v1YZ51fFPof//Ef//Eveieuk81m3/1Bv8Qkk8l/8e9hnffHJ/mYXzcDfbdOJ5HNYp4/h5aeDW8EPkzsQiRC0NFB5K4uuh6uwIskAUVTU2g2VF4ezku2twd0dPjoepj5+cgjoVvvR8Gtx9yyFJcumSvMHJUK73cefdSBiI7h+GgqFKf6m4fQXA+3tRVZWxP2cJom5uXLYTvvTfN1vg/Hh2qZf+EsI5MR3Nk8ZROXMMdGEZOTuHv3IpuaVu1jEMClSwZHj5oMDIR5rtG4x4sDL/LG2BucGDvH24M9xMrS5EY60DVBKqUYHNQJAtiwIaC8/EbO597cq1SXeeHB9jzM3l76s1UUVBQBLMTrKSlMUDFzFRWPI/IFyooToeOOYaC5LqqkBH1qKlxBMAz859/g9PNzVBeOMThfz6IXRbkKMyoQSuLM5+gzdzI5bTLg1JH2SkmJDFbSxjAF9+zK4zz+GGgaIp/HfukwejILYqm6VJjlWu8o84Ov8HfnK5nKAigWFvro7U3zqU+1rnnuHjpk0T9iMZWP8NrxBOeHYpwYkAwNRti2+wJf+vz3wQ3ANDE0g0UvS128CV2fxPN2cL06LpwpNH9hZVsqQJCjL/8g6UzpKrPnXE7wyCPOCsPZpo4OSurqmOvvR+XzlMdiPL5vH6Vf+9qyg+hf/VUc39eW348Q4aJYKqXwvDB2qLLyptxeHfJ5jUhE4brwox8tUCzOoBkaNTKNa8CEVk2mTLGou+zcuRPhOGh37kXXNCIVMc5M1mJWlSJq6/DrakDTKRQCRkZewRQ91JgNdNZI7GAGP7Api8wjNJ1IRJFa6hzxfI/GhgbK7CgaIIWGZuok2lqplAGJmQmiyTJELE5QUw0RG6Hp6LE40+NjPJ/NkqyoWJ5PvS5GPM9jYWGBgYEB7Gg0fMNCkEsmqZmcpJDLUVlTE64eSUnxc59b5fL7i762RzIFTNdbuVIhBKDQfYW7NBN97NgxvvOd75DJZPB9n/n5eV5++WUSicTq/NdfIRobG+nq6iIIAoaGhti4cSP19fUrHmMYBsVikU2bNq25DZVKYZ4/D0IQiUYpFpfczz2PoKFhhRnfx4lpmuzcuZMHHniAxg84qrHOu/OL/o5/knknl/N1YfoRsn6Sf/L4JB7z/n6NF1+M8PbbFmfOmKTTGk1NwSpDFeHniL/2fxI/9U+YCycwx09jHL+KslM3YlGCADE/j5ASX7MYGNCZmNBJJNTt3YuXME1oagrYuDGsBN36+EgkjPmpqZHvTQv7PvrVq2HrbDx+29iAW495ebnCNBWjozq5nMB1BdGo4vOfL5JMAkLg2yZKE6BAf+sQfjIO+i2qxPdR0Siypub6R8NTT0UZGo9QTFRQf+UQJb0nycz4pOwilJYQZAssxqvRK0uWRYnnwZNPRrlyxcT3Q2fZnh6T16d/hhcZo+9Kgqu9cS70xDhxcYGJhXnqI22UlytKShTxuKK2NoxHyuXCyum+kpNoflj51+bm0KanmXWS5FwLIQR9DfeSj5RRPj9AtrYD0ytQbmZuiOwgCCtSto0+MYGUghMnbRKZPmqdPtrtQUb9BmaLJWS1JEoqhv1GNtTCVKwVKz+Pr9kM0Ewq5vLprgFKv3AfsrYOlELvvYg+OUmg6kHLo2kFisWAS73D9B7J89KCz+z8KLncDMlkDXNzs2zb1kBFxepYiddes9H1MG/Y8QSGCZ41hy5n8UezVBsDVFn9iPk50ASBbdGYbESI/JIwDd+ztOsws+dABSCW5hyDAjLSSFnnLi5cMHHdcJ1GqVCUbtvmsWnTygqOUoqM7zMfixFv66D705+hcvcepG0trwr9+McR1spVNgyYnNTZvHl1Vcg0w/b2iQkdw7C4dOkSmhZjWNXTWRxD1138IEJFpcfWykpEEGCNjCAGBkjVREkHpUzOWmGqjVLkfYPJyau0NpzhnrZ6dAyKjk3U0qiMBtSUlzOXnae62kUIief51FRW0lXXgDLCvFtNKTSp8GIRnNYNqE2bEaXlaJ6HXl6JFomhWRE0XeNq0WUsZq+KpzEMg0wmQ7FYJFhcxLh0CWNgAG18HNeymNq0icD3aevoIOjsxPnUpyCRQKlwse26DvxFX9sjmTwrrhBLplyhYZfESYRC+s///M+xLGt53lIIgW3b9PT08JnPfGbFHOavGrZt09TUxPT09Krz4DrRaJSNtxOYQuA3NWH29hIJAoqOE2aIl5fjfPrTa7uErfMrwy/6O/5J5p2E6Xor7zrrfMQEQfjPr+IY0NCQxgsvRPB9wbVrBvm84MiRsMr0H/5D9oaxinSJn/6/MKb6UXbYgih0MKO9cAiChgb0/n6s06cRxSKX0xW8MrmTYscWRMzm9ddhyxaPB+4rfixZrlpfH9EDB0IBpWmIN9/E6+zEffjh92R+0d3ts22bz9ychmmq1a7AQuDbFr4p0TWx9jZNE21xcfnH8+cN5uY0ggBG7DZakjUEVgTl+eSqSsk5UTI9GvLMYc7fu4nunR67dvkcOWKRy4nlGVtNAyuR5dzwOBXzMRYWNMbHdXQdbMNmnj56Lu7ni62K3/zNAouLgmeftRkcNGhqCtizx4WBarh8GUwzbG9TiqbSBUZnYzilYXxBwS4lG6smV9JIQ6aX6wINliSTYYR5nrkc6YECQdFCEz4oiGguv17yHHk/QjpezUKqDlNEMUtiJLe1MtC7GXcsTaks0ripnM57mxGXL6P3XkTFE6hUgkBKwCZwNhM4MNQ3w+FD/ZTpBnHbIKeb+L7D0NBx6uv3cvXqeTZuXB3PEwSQzQocRywbadlSsJidQ1kGV4a20rn5CgD69Ay+ZjPoDhKJaESjNxoClB4lX/c1rMxx9OI4Smj4yZ34ia1EBXzta3nOnjUZHdUxDMW+fR5NTbdkkkrJz372M8YHh7D9CANjBs+98BJ3bt/At7/yIE5pDDRBPA5rjRv7PsvmVrcStg0rikWNqqpaNG03k5MSXTf4f9lMp3ONneplfm3PHlSxiF5WCZ6L5jpoLzzP5++Y4lLbHs5fsggCweYtDufOHaKrvBpfSmpqZ4jG8ywspAgCiMUFv/3gnczn5/E8j4qKShKBAgHS0Je/J0oIrLyLb5nofoCsq0NoBsymwQ2jfFQiiVZfjz7SH1o8KYXmB+i+BKFQmo9lmhhHjyKW8mBFEGD29xMsLDB1xx04jz8OhB0Br71kMzSkEwSCZFKyZ49Lfa1Ev3IF4+pVME28nTuRa1lb/7wQhEpZCDQvQFOhjReCZTO14eFh5ufn14wQKRQK9PT0sGvXrvf1skW/yGR+Elu3qYnV3Fbw/TKxceNGDh8+vMq1NpfLcd99973jc1VFBfknnqA0n8dbGqm4vji4zjrrfPysC9N11vmIKBbh1VdtRkd1lBIkEpK773Zpb7/NDMu/QI4csZBScPasiW3fEN8jIwb/6T/F+Hf/Lh8a52TPoo+PgXWLBaiy0MsmsJ95Bq1YhHicRRXjhaEdJKwCkcsncPfuRR8aou8fp6k/cIXtrRm8rVvxurdgZs+ieXNIuwovsQ20D6/+RaFA9MCPETGBlClQNgow+/tRp0/jvccbO11fOZe5JpqGKilBeKvnjkWxiH99Lkwpjr9VoPc8ZAtJypwJ2iZ8Eg01JMoUly/oNDYGWJbCKmZJePMcO1YW5pAOGasWRfJqDiEkJw40MzdVjrAXiFROkkj66HGXvL/IhQuldHd7vPaazeKiRmOjRErBs89G2dJ2D5+WvaEraioFtk0Un5aSWZ7VHiAyPoFv6MzF6rA1RcmWajg9FDpASYmMxULFJiWyspLFoo4RNShOJcIZXDd0YkqQw7ezXFzcjid8sgRE5k5RuWiRqWkg3txI+fR5jIOvEpSmEPUNCCVhdBhjMcdsfTtShmIsM36ZnYU8eCU8tmgigJOxOi6VTuK64yQSt7bI+WjaJA0NMQ4fbsQwbgi6ypxkXFlErEUK+ShBINB1yVRunqqegIkmjYmJCoaG/pFHH32U5ubmpZMiglu2tsmXZYXZj3fddfsZ9J6eHiYnJliYStA3bGGZCiFMXnxjhGxuht//nWpkeZTPfX6R/+Nvs8j4OApFTJRRLlrI502eeCJHX5+5ygwsl4OHHvK4ds3g7bcjdHTsIhIZJJ1OI6WiP76N2nseoa7lKZTrguNBIAEBsRjGyRN0fq2Ljg0RlBAUSuJcuCCJGSb+Up9/KpknlQyznROJOFqygcp4FUIqhFIo6eNFzJULNdks2sQEZnUlqrIS3XWRqRSUlCwLNYSgShM4589glZagsnmuDvSxkF0EAVs6N/FFx+G7UpK6advKsnAnJth5U17wM8+EWdThopoiCASvvmjQefi/Es1dC43VpMS4cgWvuxv33nuXv6NCKpQQK/J4PyiBDNC1G4s5xUSEZDqDJsPXUsvRUhIhDAzn3WPHpHx/4wtvjb3FhfQFfOmjUMTNOI9ueJS6eN372g6A7/s8++yzHDlyBKUUnZ2dfOUrXyH1HiK43i9bt25lYGCAsbEx4vE4SilyuRzt7e20tra++wY0DTZuxLvVnXedddb52FkXput8orh40eD8eRPHEaRSAffc466YvfqgKAVPPx3FccTSqJJCSsFLL0XQ9QItLb8aETELCxp9fbcKn4B4PM3oaJaRkdO0tVWjO+OIIJyHWolAGEWs3l78rVsBODFUi20EIDSE52IeP4ZwXKK2Sc9sM9vbzmOdfpVo7kn81nbQLPTiMGbmFIXq30BZ5R/4/QgvS/z4X2CU9i8Z7CikX8HY1J30jLcQDBfpKitQP3yc2eEi/+1CG9PVNXRssnjkEfcDjcs6e/cSef55uDlj0XUJ6uuRVVUYuUsUh47Q5EoaOwRZt5wrfXciBIxP6FRVBnje6kJyLBZG11y/d7+ZhYkKTr34RbLpJELzQTRTGG/D2XCBeF0OU4X78tRTEeJxlkWMEGEEzPlrSbY89lUaz7+KNjmJ39aGPjBAa9ksXyk+w7GFTlzXJrW5mu6GaTTqUJeiaLkcKpFA1tXhFBUzTgr5hd8gMj2DeuECaHlm9CrqCn0Emk0gTLJE8JwAd14xaOjkHZ3KUpfE3AUiF+ewCq/h3+mgTU5hjI0RtLYxH29g6KLP3LUCRTuJbQZU9IziUMFVkuzw+rHwuXvuIseyGxmou8aOHf/d8udjGOewrKMIUeTRRwXRaAmvvPIo6XQnAMqBjVEbPZZhPG3iag54i9R6BtWmQe9iJZOTm7FtjRdffJEnnnjiI4l2uHr1Krpv0TdkrohBSiXiDF49Re9/qWJb1wKzRi+1uzdy7VQngW+QJc2cPc0fPtHF/v2CfF5jbEwjHg+1XS4n2LQpjK5KJDz+4R9ixOPQ0tJCS0sLSoXV1sbaAosTeZLlBoGpo3k+upQICSpQ2FeuITs6yZWEPrf19fX4BX/VCei6LjXV7UjDwIlaS6JOEs0Ubjw2CDBfeRlvaJBzMzNkVUBnWzu1n/ocxMJKWK5YoG9wANfxmCnkCPyA3EKGc6dOIzRtKdI4wA983u65zJ66eo5NjBOzwpbznOPQWl3NnUrhAcPDGum04FY9snHyLQb65unqXvLv1TRUMol59ix+eztGPIXhBQgVVnx9w8BJRD5QtEjPTA9np8+S83OYmklHSQf3NdyHH7VxLZNovogSYS6wQCF1HTdmYRY8Ghoabiv0otEo228TQbXmfkz3cD59nqixsur4076f8u0t38bS3/v5LKXkT/7kTxgeHia+dJ07cuQIJ0+e5Dvf+c6aFd4Pg6ZpfP7zn2dwcJDe3l40TWPr1q00vI/Yr3XWWeeXg/UZ04+Q9X71X27eeMPi5ElzuTWpUNA4e9aitjYglfpg4vT6Me/v1+ntNVZlBFoWTE5qbN3qr72Bf2GcO2fS32/cJIp8dH2QIPCprV0kkSjQ1XUKo9gP4y7CXX2TiqtgoQRZHgrKc2NVFP0bA6L62NhydIovNXY1TmAmz6Fl8gSNzaEi0wxAxygO4ie3fbA3oxTRyR9iTIwjPEW4Tmfw0sUuDl5rJeeUkh1d5NxrOU6+6dP/1izJ8X7KRy/w9KWtHDyU4P77nffdsq1KSwlqatAmJxGLi6Bp+J2dOA8/jOaMEpl5iUtX41wZruB7L97H4QvtTM0G1GZGiSV15uY0Kivlcnaqr1uMtuwFEeaQ1tcHZLPa8jEqFOD1AwnmFhfBdFFLrrDStwmKEWxTp0ptYcOGgHRaX3OhxjQhF9g0f6YD7447cO+5B2XbiFyOeErQsUVn410x6mokSirG930Jr2kDRsxAxWIcTHfz3ML9nKh6jDPGXUw6GSKjw+RyJnPzJfhKJ6HmGbcrKeqlyKCCY/pDFIo6hiEouhoVpKnMXKUzNo7QRTi/qxuoqRmOTbaAbdG/47PEyFOyMMTIMMyUNNDq9eOh4wuDQDdI6XnaSqro+vJ+sG00bYxI5CUgCthYlk11mUd54VXkGZ+cKqOmVLE5Oow2VUurKpLqr8c/6pJcKGN0sIWr4obpkZ/PExsYoD4IwtZPTQN8LOtNbPt1TPMUmjaMlFVLr3krEsO4iGUdJpc7ytAgpKcTK1oqK/Kz7Bs9QaJok68apmf2HBuNa2x6g1N1dgAAIABJREFUzKO0sUjn9mn2PHaFuqZFWko2sHGjT1VVQKEQmlw9+KDDjh3hNem6aC0UNAoFQRCEFedt2zyEUnQUz5NKhqsdhusjltpv8X1U0wZURQVS1/AjFrW1tQxfuYaOWJ5tdD2XZCpJW8sG3OviTQjQNAzXW56M1d86xOXTp/nh1SsM53JM+h6nhofI9/fTuvMOMpkMp86dAwWz+UUG09M4rkv/wABB4COERkkyyfbNW0jG48xdvcJdjU3c3dmBGwSkbJv9nZ3cUV+PqqkhaGri7FmTXE5bdYnacOU1AhWhvr5445eLi+Es4uAIZq6ImJ9HlcTQ3EHM3BDW4gi+qaPM914RPDN9htMzByixC+iaDVhMFaaYKczQUdoRdvMKgVCgNA03YuHF7LA1WSn8mE0ymeTtt9/GNMO/bVJKMpkMX/7yl9m8efN73pcDIwfQxeqZSqkkuqa/r6rp66+/zsGDB0ncpPgNw8D3fSYnJ9mzZ8+7bkMpxfDwMKdPn2ZhYYHy8nL0d5j5FEJQWlpKR0cH7e3t77syu37/9slj/Zj/4lifMV3nE08uJ7hwwVwxb6Vp4Q3Ym2/afPWrhQ+1/cFBfVko3Eom86tjPtHe7vP22zeUmKZNAwIpdaqrc8TjHsw5iPkxhJWHacWKcoQqEgTtBG0NyzekdSWLDM2VErV8RD63PKSnFCRtB6Fl0TQ39JDJ58Mw9KWbW82bQ/hZlPH+ox604hjCX0SWlaGl02BZXJ2s5eLEBkqiM/iFOPrCPEZ9OW+frWFXRZGoBZaU3L/4EoeiX+Tv/i7OH/5h7n2/tmxqoriGm661cBxlxDl1vor/79l70YSHAooqwsv53ezve4vKFptkMjRAMd08V7Z8dln82zbcf7/L978fCh5dlxQKvbS05Ghs9nG1LIPjKa4ONCB0H3KVGNe2IzaFm2hoWLvtXAiQ8ibLV8AYHkZeb1ld4vRINcf6a8gN2cim36C85XEavX56o3Hs5gri8QTCz9F3McI/Tv731JkTtKf6KGJzNLMDPRA0NVXz+KW/xsjMUZQVlAUZpBQU3YDqSIYGMcJioYHreSuzOZtSOUShpJZseSNztZ0gYLSihOapo1jJEvB8At8DNGKGgda0A/PECdx9+7CsEyh1o3qtjY1RefUq99YKah98nqmDvSwmu3j1Qoq6snl2pxYQxTIuXTFx+mDusxuWn2seO0bkwgUKlkWyvBwVj7P4xLcwHxlHiAxgAQa6Pkc0+kMKha+gVNlNn2BANPokhnEVpUxqazU2be0llZjiyNtL4lcpusd7sCrbcTWTS2qKuBkHpYj1naf9ruti12Q0N7p8yDZskGzY4Kw6tomEpKREUVueQ3oSFbFxXcHsrEYQaMQboqAyoEAJEVZOpUTpGm5nGypiocmwAhqJRLjjU/uZvXCZTGYBCdQ31NNUV48bjaBuKfM7MZvoYgGlFM6Vqzw5comJqix5M8DEoLlQzsWBa9hvHGBGgZA5FqazOEQQaMTKypjv6eH+u3ZjmitvZ2JVNZwfH+Pxhjoeuik6RSwuhu7XQDQq6e8PnagrKyVlZaGrt+AWw7RiEevkyXAho7Iaaehoi/OYb/6YYFcbGCa6rxObfB6nrBuv5K7lp/b19XHmzBnq6+vZvXs3UkomJyfRdQfX/Hvubs6zFOnKfKGCa+nNDGQGyLpZygwbDA3XWiN6aOmjfOCBB0gkEvz1X/816XSaZDLJt771LR599NHVz3kHCn4BU1vtOGfrNulC+n1t64033ljzxtOyLC5fvvyuz3cch6effpqFhQWi0ShXrlzh6NGjfOYzn/lIXWp932d0dBQhBNXVq+fN11lnnY+fdWG6zieCa9f0FTNjN7OwoOG6H86sKJVS9PWxqmIKa//uwyIWF0HXP9bwb4C9e12OHDHpOWsSk1lUZgoUbNsxg/Sj3G29jHlmEmwTZWoImYX5IioWBy3Ai28i//j/gH7lCtaxYxCNsr1+mhPDdUip0A0TN24xvZAg7xr8zt7TIIKwIdj1MC72IpwiCIFMpZAdDaDWrkaLXC6s6qRSa7bYaf4cCANZU4MaGERIyemRVpK2A0Ii0tPIigpGRnRils9IoZLa6DxK06nMD2GZisuXP9qcO00uAoKnD3QTi4Szh4GEwNeYLGniH+e+xXe2v4J08mSjKUZb78aJh5VnxxFs3eqRSCi+/vUChw+bRKOvkM8bxGKlFAoRInqEjbUFTMfhyqVtaBhokYDmZoc9e1xmZzXGxvRVZpT5PHR13TILuRT7cp2r06Uc6msmYTmk9Bx+QuGoKP9wrJu9ez3UkvvshXMBJ49vRAhBobSUK8YusjmDxnaHgdEUEKDpcL/2FvH8JBNGE5a7yCP+iyQTAQW9AqUUruuCAMeLYgqXmWQ1ImJTbRdx7HJUMIfwTFwv/O4bho7vGYyrGBOXPeafcSgqi8cfL6BdnxEsFjGuXIFIBAvYuL1AjRdhvG+Me7oDKuQ0Vj5DMT9G3MjTb1dgXxojUZXG8X3Mc+fIGgYdNTWhszOQ+ulf4O69B5m4+cZXA6JY1ps4zueXfxuJPINtv0BoHCXYuDEgm82SywoaGicZHaklmZshLgQlyToiKYEgrC4JIRD5PMJxUO/johMpzLNp9BiDAwaWEXB+rpFJq5EgliCRUHw3/gV+zfkBTeX5pWcovPwiEzs3IlWWamUjFAipWCzkcByHqu4tNHkBuh+ghKAYsW4YHN2ENA3yqRjWfJafTp3nTO0kMc0CoREQ0JMco4VStPOHCGIGiaWWXgOFZydRRhPK1JmZTVN3i2GN39aGNtiPKBTC66SU+PM5jtv3cuGnVczOCsbGDMbHQ9OqiQmdRoZ5PHGI8uFzNJQFaDNVyMpKjP7+paBfhVoy+9K9SUBHG19ANlUSWm6XYy2cxEtso+jBn/7pnzI0NIRlWXiex1/+5V/S3d1NMplk264TTEeGqK9uXK4spuwFWsouc35qA6OLoyTLNmHl3fCLc9M1TEiJGwn/YI2MjHDkyBEeeOCB5Sr1tWvXKC8v584773zP50HCTOAEqxcuCn7hfc+Y6rqOlHJNR+B3qnpe58CBAxSLxeU24OuZsy+88ALf/va3MT5M5NgSPT09HD16FG9p3v/YsWNs2bLlfVWZ11lnnY+edWG6zicC0wxNLVbPPIIQ6kMbv27b5nHy5GqREoqFdzepAMLhL8cJlextdki/dg377bdD0aUUQUUFziOPoMo/+Jzl+0HX4X/6g0We+l8vc/Z8lNLSUSrjWcS4zyOxwySKUxCxAYUyqnH0+8DtY6zlQYLGu6loCNur/J070RYXMXp7sTyPr3Uc5rnRnZyI7WX4zCK25tBascDzFzvYk7O5t/MU+vQUQTKxvIKg5fJoZ3pRTSvFuZibI/b3f4916hTSNPF378bZvx//lhsOadcilI/SI3h33Ylx4QK+q8D3UKZO0NiCVijgTyxVDG+K4xAoIkZAzFSIIKwefRRILYqbd8kVY6B8NC38zA1d4nsms9Fqno/8On/wPy/y3DMaqYFzVOaOkU3UEL9nE3ffHZ7fsZji4YcXiMd7icU6mJkR+H4492ybUbZsTJOdU7iuZPt2n3/7b3PU1CgKBcH3vhddcmyF/n6d0VGdWExRXi5RymXDhnBeWpaVhQZWS5wYridhewjHJViqPoSxp4KxMZ3m5oCJCY2xyRQ6GWrdMarGZ4knPI7PbyER01BS4Ho6UtNp8a+SUTZfLP4QO8gR0130jIPv5NAWRxnwkyghkIuSydoHyT/wKbaXLnD5isFcpIvt92WYPHEHxdF+6sxpjjljvJi5SlqPYsirJJw6dtV10VkfY2vXAqAhxidAB604glBFxGyClEgxqO2kQs5wbve3iA8cRM+UMV/dwez4OWIFm2TgEz97loJtU67rbLi5faLNxTh+AXffrRUZDV2fvXFOiXls+2UgBnkXrS+N7njsiQQUq8qZb55hbLSe2rJmGnSTnLDYstGnRKvn2aCHBJHwDPVdhKlwlKC9dHWOpfCzhN/PFE42S/Yv/oK6fJEp/S5Op/cynklgMUnFFsWmXTa6nuCpzDf53eZXSE2Ocdkb49A2n7nEVRi4RtyMcX/8Lg6/cpV0Oo1Sikgkwvbt27nrrhuVQ39p/ehWTaF0Hae8hDfjU8TclZVBW5kMRyapMkCYpQRLmkYJD82bRngJSkpL8VAgWa4iCgU5z6XzD/5HnNlZ9KEhCtLm+3P34tqVCAfOnrVQKryceB40Zy9wx/RLzMRiVLe1UccZiufOEbS2htfbIAgXG6KxMAJIOuGbyV7vthEoEbbKG/mr/N//z/NMTEwst5RKKZmZmeHgwYP863/9BSrLYKaoMzY+TmtLC6ZpEiiD8lgaQT1JMwlCUEhGiSwWEYFCKImQCt8y8JaE6euvv76iZRYgkUhw8uRJtm/f/p5nne+ovoOXh14Oq+9LSCUxNZOu8q4Vj81kMriuS0lJCeYauV779+/nb/7mb1a10xaLxXede5VSMjIysixGbyYIAvr6+m4f//IeGR8f58033ySRSGAvLeLYts3Bgweprq6moqLiQ21/nXXW+eCsC9N1PhG0twccOrRalEoJ1dXvMefyHbBteOyxIq+8EsX3wTAUritoafHZs+f2rpsAKIV19CjGxYthtcOy8Ds6cO+7b4VA1SYmiLz0EiqRWK7GaMUi0aeeIv+tb/18SrNrYA7280TLQaabK7mSLpKITLCtbpR4fy/yWglqayWYDv5EA5cuRZma3MZ8b5TLHXUkEpLPfa5IebnCvf9+3LvuQkunMS2LO/0aBp+K0tyqiJ2/gub7KMPg7ct1bChW0rBtZdUA3cGdb+HqswNcinajabC9I8OO/+V3EXNzYdudlJhPPol+/jyL//7fI1talp8urUoCqwrNz4Jp4nd3UxfU0nOxDL2kAUkN+vFj1FQbTM2Y1EbCll0hFFUNMR7tmqZt9DVK/nYApSRObTXuAw+896iBIMA8fRqjry/8sbERr2sLRu5NNE1h24piUYQiUUiybgXxeEBpaUBVMMnvyZ+QKRMUS6OURS5hjr5BYe43lhcpNG0B8Ni1a4LDh2twXcHcnFhyrQ1IJPLU1ET4wz8MRSmEpke//dsFjhwxef75CLmcoLXVp6FB4jgazz8f4dFHi7S1Sdx77sF+9mdcLTRwZaqcY0O1tKRmiZeXLM8IQyiSFxfD4zYxoWEZiq7MGQzlE0sFmE7A5vxZ3JEUpZVbcRwNR4shTJP2TC+GLIJpIoUk0CVznoNhG+STCQwpWagp4cnKdn4zGXBtIMbUtI5hGvRqm9lxt2Ts2REOTEiel/1oRilCT5IwPJxkBRXuS0z27aezrR/biqFLHy3iI7MuwlKooUp0ZxxyJehBDWVmnlIxjFZhkfQjCLawkOnDcV0ixSJ1sRifbmhYMQ+qlIXI3W6O6Ub1yDRPAhZMz2McH4O+IuQkRkpnf8sAtbt2g/E74HrYZ/8zXZt9YjFFgnJaZSUDcoqknMVyTlPIu5RZce5p2Lq8fa04gT37Kpof5spkinDkyYvkLk8z7nlERB8io3NH3QZKkxa6lcbTd4bvwbQ4Xf0IyS2neG1kmrhZSgooCWaoLV7in37yPZrLOyiN1OLHO0BonDhxgkgkQn39dg4csEmndYRQVFRI9u1zKC+/cT1e9HLYrfW4Zy9h3XwdkxJp+KiGBJXEKBTd5c9WaTZGYYjW1nYSiQTZ7CJx3QYlyThFNnZvp7qhAb+hAX/7dl56wcYr1TF0GB/XlkWp48DWLS53HX8dtzpOxFZsudNAi9yLPHUKbWQkzBeurydoaUF3CujX91EpMPRwvVP4KM2DADzPo7e3d0V8STqdxjRNHMdhZuYSGgYRGWHOmWNgcICWDS1Lc6IBKcuiPlEfvoShU0hFiWTy6J5C6RpaoIgu5JnVwnnSW4Vp+NFJhoeHaW9fvTixFu2l7RT8AiemTpD38ggEFdEKHt/wOIYW/oHMZDI899xzzM3NoZTCsiy2bdvG3XffvWJbe/fu5cCBA1y6dGm5pTefz5NMJvnmN7/5jvvh+/5t3YQNwyCXe/+jE7dy4sSJ5WrszcTjcY4fP87jS1FC66yzzsfPuvnRR8j6IPUvL7oe3iBfuWKg66HeK4YdoXzuc8UPrOluPualper/Z+9Ng+y67mu/395nvFPfoW8P6BnzPBIEQYLzJImSyCdLsmnJrvjlfXgp25WXiiuVT0mlyomTVPxevcqrevWqkkrZLjsWJVGORNKWKBKcQIEEQYAYG2ig0fPcd+o7nnHnwwEbaALUSEuVqNcXoOr2OWefc+45d//3Wv+12LvXI50OaW9XPPSQw549/s80ajRPnsS4dCmaJQmBfu0a5vvvY773Hkopgg0bwDCwjh9HfNJyNWr+A6UIf00OhOa77yLDkITl05/x6ctewdBbyJUqouHDjhhhoYvRU4PMz9908LUt6v3bAMGVKwZ793pRza3rqLY2VCLBO+9EeYi6bRD29UUxDYaBNthNsdrF9q4GQtYRwkeFJq3GNr599gmujCdx27toNCT2f/hPpKeGSSUjwxCkRBkG+vw8YTKJf+jQmnPx41uQzjyaW0Cbn6G7cYVz13biJ7cgkglEo4Ht1iiuGGw1JzC1kC1tBZZ2PUT3hR+zs3sJO6UjFBhTMxiv/xi/owPV3b16n+TCAtbrr2OeOoV/foSZWY1Wsp32V/8BfexGJMEMAuTCAtqNRcI92/nJSYNWSyNmBWgGOKIXO2Hi+4I///MK7a/+A0LTsBI6iYRCs3TQNPSxMfxVRiLAMC6h6wYdHSUuXMiysmLhOBIpW8Tsbv6X/9Whr2/tJNDCJ6u1mJ+WbB50acuAuCl1Nc1I8rhnj48Xb+M753Zz6bKF1/QZK2QZc/vxBofI3kbguzeViPn2kNkZjc7FK3jVECUUmWQdKUPqrk3GLxHbNMDQToP2qQss6RvYVXmPWEyhmRqteJYlTREzPHzTwNV1rt17L5cP38OBzV1Uyj7TM9FkXgCyLU4h2c+S1c+3r72GLwRWXEdKjTm9n0fv3U7M0nFbkvbsPjLt00h/EuG7KFcRXOiApgVCovyQltlNaksPwdwImm5g6yHpmMW23X1s297Hxrk5dsfjJMybrrOFAtrCAuLqCrS5qB06hnENTU4izSJKafj+XgqFAV591ebECZ+ZGYn+4TVy706jz9UQVQdR8BCTDdrCDrY//yD7Dio68z727MSqemCr6KBreYTy5iRGJs2+zCAbasc48WacM2dtbown6HB+QLotjCKWpMnZM2cIFz/k9IRD3YWC43BheRvSq9DbmUf4PsHNfj5NA9tWXDePowmJCBUZf4lNwQjjcw3GZxsYhk5ChEivTGh1Y5om09NLXLx4H0oJTBNMXLwVh/OXLHbuCvmYbPNDnxExR2mxQNhoIG++01QsRiOt+OqhAxzZOsj5q7N4KmRSLzLCIte9BQYP7OerT32VVCpNw3eJZdI89Ogj7Nu3b833+uRJa3Wdr1CQ1OtyVZFgNcrcE36AnTIBQV9/QLwthXvtGsbICLJSQb9xI4p0yrcjLBtNBuCFqE3dYAlcbQmEQoQeS8ZhfvDyPxIEAUopdF2nVCoBUcGYSmUYGipSmK5SV3Uq9RYLCw5LRRcpkhzM/xe0xW4Vm2bDQQvCqAiWUTyNQKEaDh9evXxXVtTzPDZv3kw2m73js09DZ7yTffl9bM9u51DnIQ50HsDSrdVxv/DCCwRBgGVZWJaFruvMzMyg6zrd3d1r9nXs2DEymQyLi4tYlsWDDz7IH//xH9+RNfpJaJrGlStX7vpZs9nkwQcf/Jn7+Fk4d+4cQbC2n962bRzHQQixLuf9LcH6nP03h3Xzo3WsA9i506e3N+DMGYN6XdDdHbJ3r/cr9ZZ+EroO27YFfGzM8jPheejDwyjbBt+P+i6FANNELi+jj42hzczQ/P3fR1ard48jME3k0tJndxI/A2tHoON5h5FyFqmVwXFxr+1CVfLMz2sYhkJ3G5QHoiw5IcB1BaOj2s3rdAutlrhFEAtB2NFB2NEBQHNhjNDvJvRvTX4+GO+h3DCJ5cAnZNA8wT3NF5FJB094mMIC30BISWgY2CdO0PxX/2rNMZEmTuYp5PdegFoazR7gG0NXeWd4hYnMXpytO+nvv87/dOwkF0/5XF1sZ/HIoyS9RQ5sLpJstxGlcnT9dQPleST/6q9wx8ZoPvcccmGB2MsvR860oxu5PJ8ndH3Uty+TNIZ4dkedfLMYGTqZJsJ1EdcE/+a/7+VP/ySJ5wkMO4avoLEi+cpX6nTrReTKStQ7u+bGCGSlgqhUUOk0SqUJgnbCsMHcnOLLX7yAX1kE1UJicuEDwbX3Tdq/sOuWoZHjYjUcProRwzZDZABa4OJaBupmb1ilIgkCeO01izPjKayuDnp7A3q2SEZGdCanobPbWzUa2zzgsaOvzuVhi3ijSdv4MLmwhRtvw9dzIBRaIobpNHkwcYbKhkfo2ZlALzVINmySmYjZSADVZUVRS1E2DFZSKSa2bAEhSKU0OtrrlCshUkbPoQBKZYNSditTiQ60oI1kTNLwOwhdSUx2IGhRr5XQ1AM4pQH8YjvmlWnEig/V0dVLO9ReY7lvM44wsUyJh8L1BclESFfKw9cM3D17sE6fhngcOTuLaDZBSoSrEfYlsI//EyqTQSUtSGqwp0ax+hW++904YdigVmvhl7IcubrIuMyxKTGL5oUQeIi6ifb6HPKJAmE+j3vPYc5PtdN65wI0myRyPlsf28Nzu6LFqZNnezlzeQOJmIfGDI2lJv9wbT+fe2CUbVtWaLZaUe+jJ9nbW+PGOQcZhrQHBcaLNjtaLeK3TRyaTRgYCJhotpCGDoZGZ3OWlpZgsVQjbpu4oQtCR/qVVUOyK1da7NihEIGPfvkyWrkMSiExOOvHOfYnW0EI4kacXCzH/iefZOTqVUrLy9SDJsLW2N6T597eDWiaxR/+i3v5t6ePU6jVSRkmu4c2IrKC71z7Ds/veJ7du28xxHe8t257cbW3h0xM3OqlVlKuvtdsO0STwNtvY1y4gBCCoLMTUathDA8jqlXcRx4haFUwcguEMzdQpoT+foTh00jew1vvvH/T4EhDKYVlWUgp8X2fIAiIx3sZGZkkm9WpznZg2yZWNoZVDSksPMqPqxv5vd9rRNFjSqG7/p1ZqUKQsGxSsRhXrl6l2WxiWRaDg4PE43E0TbuVp/sLQApJ2rozzmV0dBTHcYjflKmbmoYhNTQhuXjxIvv371+7Hyl57LHHeOyxx37hMRw5coTjx4+vYTUdx2FgYOAXKrQ/Del0mvn5+Tt6YH3f/8yjbNaxjnX8YlgvTNfxW4W2NsWjj/6cPZ+/BohqFeG6KMtCm5yMqKXV2ZJCtFqgaRgffURo28jmXdyDPzb4+TXB27IF++23I0YTAEkY9tGKt6FPT6NKOZQA3wNb83DtFIWuWz1KlqVYXr6zMM3lQlZW5B2y6iCAtl1dUK+vyf4cXc4SC5u4/TvYbP+QnLpBoOnooYPjKCy5gKgb4BmRFPRT+obMd99FNH2UHdF88Zjic4dmEdWrNL76B6hUL/A19v8RHAhCNiiN2kvvIpejxYSoKNVvMhk6wnMQlQrmyZNoc3OoRIIPJ7sZXsgTN30wwb52iY1inImxJl0DM0hNEObz+Dt2oE1PM3T//fzN3zX5y79M8sEHkbHN44832bEjwKm6dw0ZASAMEb6/2kntOF9iaekHWOYKhjtDLBUgr/vU38hwqPUj6mNtWDtncDY+HUnKGy5KShJxhe8LDENFPXOOjxePvpdSKo4fN3nxxRg3yUGmpzX6+wMGBgImJzVGRjQ2bw7IpV2ef/IqybYlHmlcpHbqAt+RB9BjOqoxR6NhMd1ziHw24Ot7Z5gzBln2YHbTfTw++3+TKKei+x4FVGI0GqwYBlazSam9HfPkSbx9+2i0OWTaMqRSkfz54ym8JGS5aiJECmHFqDRzCBEgBLQci1DpdHW2sbQkePvtOLa3D53d9FXOs0uNkrBcVDaBdvhRDiQztLw6E5VOqnPT2O0WRlqDEFQQoO/dS7hnD+pb34pcnnUdlUjgPLAby7pI6G9AVJqobIqwkYL3debaTnH1qqJSWUYI6C5c4/rlNvI7YLm7SZddhBWLYK4DTd6MF8rn+dGPLKYLe7APRYVYl/EhtSXYVYR4QnJ2uJtELGohEE4dY2KOrNfg1PcUux7/ENXXS6PRwNQN2r0Ck15kEDYoT1GrP8rS9DR9jz4KSuEHUcTM0FDAmesJmn4ToRRW2MIXFrmsxfDVZcJWwEQ4TDoLXrWM7uSwb+TpT31AaTGIHH9vSlN0oHS1iHnyJO4DDwDwRP8TfO/69+jfOkA1V8PyIRABDSPLvzt9nC93HUBlob03wYCeg9DBa9uJkjp+6HNy9iSPDzz+aU8G2ewSb7xxklargJQanrcD193M0tIJGt2LXFq8SNzIcuzBjeAHMDwMloVSQDKFisfxs1nkwgJedzfmhIPbGkIrzyHFCnL6Ao17f59/ulykWCyye/duLl68iG3bBEFAGIZ4nkcul6PRaHD6dD979ixgmnW6shtQymRqqosrV2Ls2wfvvWfy2GMuqKhn9m7WfSvVFUTLY35+HsMwaDabLC4uMjg4yFe/+tXPxCToY8zPz2PbNrqUbMt2kDAidjkkZK5cusOg6VfB1q1bkVJy/PhxFhcXyeVy7Nu3j/vvv/8z2f+RI0f41re+dYcE2nGcnyvKZh3rWMc/H9alvJ8h1mUBv334ue65UsjpabTx8chJ97biSgDG+fNgmuhjY2vZSN8nGBgA20a0Wnh796KPjNxhHyyaTZzPfe5XsxX+aWg2kdVqxJhpGiqXQ5uaihjcjyc+rouKx2l885vIQgFZq7GwoFHODXF91xdR2i2DjFYL9u/3yGbXTrUZaT+1AAAgAElEQVQ6OkI++siM2C6x5vB8/vcsLGcFOTcX6bB9nwsT7biDG9G7YwzZbxL6NsbSIm2LC1hBHUMqMEKUZyEcB2/jRpzPf55PWs5a77xzpyMLgKYhPC+6Bx9DQAoNZ3ICWSwgiyWE563G1yi3iQLCwUFksYis18EweO3KRnTt1vnuGH8VLfRwzTYMW9CWDCODFcch7OrC372bSkUyN6dz5IjP/v0+uZyiWpVcm0pwgI8QdxuzlLj33Xdbb7LBBx8cYvZGEm/FRb4R0P3KVXKLU2Qqc7Qtz9E1exp31wMIO47heiAFuUzAmYs2HydwSKUIdQ3PjwzEikWdQkGLImVvMpSFgmTjxoDNm6MC9bnnSnQlTvDGWylm/+4itb8/hdks8ah6B9lsMG8Nooc+exJjPP/VFXpiZbr/6GEOHDPYedgkvimPWFnBuHhx1XGWeJxJ18WPxZjesgWkRJufZyGZ5PF770NIg4V5DUTUC+y5gtfPtSGkieuOIISOUtGXK9em05EWtHc8xtxsHCkFpu6Qiju8OZ3njdZ9HPqmjbZjA7a+i0I9w9yyRRjvwms2aRbLOHUH3QzQOzvoePBBwm3bCDs7oyJm7168e+7BEOdoWj4rZZ3misZiMIRpGRh4XJhrcPpCH7oeQ9N0UstFthTHKJRtVDlLT2uFsJoDYYHn0fjGNyg5Cd591yIev/V90oVDt32FUkXDDeNcm+jANEIIAvSJCZSyEFrAiptkd/cEbYVpLpTLpGtV6sqiNB0V14E3D60l6s08Kd9C/+gifaVLPDd0Bl0LsXsGGS4OY0iTbm8GJSTXR0u8d2qOhtOi0fIozNfpGK9ilOtkVZxdVYe+0fdoxPM4ZsTCKgWpeMAuMYy3bx9ISdyIs6t9F69Pvk5AQNpKoy1olGdXWKwLzk5c5czYOLm0hWkl8BO78UgwNa2xMGdQbTW4b2DPXWujYrHIu+9+i4WFANfV0DSF41zm+vXvks124Lq9XHYPEtR0pgsOHeY4iWuXwLSRm7ciU21IK4bQNMLAjxZ/OjpAs1BBO2HQQ0gv/vUZjpfLWLZNT08Pvu9TKBRotVr4vs/evXs5duwYk5OTNJsu5893UC4fY2FhE1evbmR+vhOlFP39+2k0BHv3Ro5Rhut9LDeJVupuvsOGL12mGLh0dHfh+z5KKdLpNPl8ns9//vN3dcX9ZdFqtRgdHWV/dx+G1AiUIlAhoVK0xeP0dm8gMD+bQrjRaPDmm2/SaDRWi0dN09i8efPP5er7s2DbNl1dXUxOTlKr1XBdl2w2y8MPP7xufPRbhPU5+28O61LedazjNwRRqWD/4AfRpFrXEW7kWNr68pfBNFGxGEF3N7JUWiMnQ6mogP2YldQ0gq1b8YtF9PPno15TpVCmSeupp9YUu58ZXBfr1VfRZ2YgDFG6jr99O+6DD9J69lmMCxfQRkcRYUiwZQvuoUNgmjhf/jIA4T06l98zietg1YsM3ngHs1oCQ2ProUH8wUOrBVSzKRge1hkY8Jif12g0JGEIXV0BTz/tkkwq3Mcewzt0CP3yZdB1cj33MDafpENdxPd1JFA8dJD8+FX0VhjlrAgFgU+YTuPfc9N59xOSM4Lg7i7ImhZNBG+HEJCwCPbsRbsyHG17sygl8KPC8uOcvSCKygBoeAa2ETHEicYSph7ioWNoIZWmTU+6hjQMtLk5Wl/8IhAxJrfn7kJUAK40LEZzB9hS/JDbw3NFvY5z5MgdhfemTT4/OpsmDAY4dPL7IEFpBgFgyhBttkDsu9+h+cd/CkTuqbW65OGjDd46GUeTYBmKWh2y7QqlFJ6nSCZDajW5WghYFkxNaQwN+Tz8sMvy8hlOvj3Irun3yI5dINRNJp1eakaKI+os9+qXUJkkeAHN1lfwtmwhzOdXxx0ODlL/sz+j9fjjxP/+7zHPniVhmgx0dfFKOk3zZvNqXCke2r4N0ZVjR8zFb7nMzEqWKgY/GU1i2/DlI0c58X6JyYVX8bwGQSC4MF3nmSe+QbmQJBaPnJZDvZ2p5QaO36Dl2Zw43cOXjlSoBhkKJRNNgiYF5rYDhMFumtUG9rYMme235H8qHkel03DTVbQwCTKrolgXIfB8wdSUTm8veMUyUt5k5YCSnqMSy2A2PQI0QjoiB1jfI+jqQuVyjH6oY1k3N1AKQ9QARbtxCU01kI0MWlFDL7qIchPVMKibcYxEGaVsdC1A6CZDQuBqHpcWOpnLwPTyMnHXxUmM8XjbC2ydf4Wdgz30CAN/ZithbZlt27ZR3/MgpxdPM0ec5tQMU9N1jh4Y4NzVWVw3pLfkUHJhT2ecPb0xFi5V6dNtNs6f4vymL6GkRs01eGr7KLguotVafX9V3Sr5WJ6N6Y1cvXqVVq110zXVomaatJHk9ESVB44dolyWXLxkIoVC16G4bPB3UzG+9rUWsdja5+bEiROkUnEOHw6Yn48UG0tLU2zcWCOVSqJUO4YRMOMOcXX8KsPn9/M/Z64hemMgm2QDG13oUW+pphN4HsFdKuBWvU7Qaq0qOw4fPsyhQ4doNpv4vs8zzzzD0NAQb731FhcvXmRmJk+1KqnVPr6dIYlEx+qr5uP/eKUi8TfeRFQrCCDM56kdPsJypUzD9zBNky23ZbVWq1Xm5uZ+euZnEKCPjCBnZyO1xq5dcBeH3Y+xdetWLn54BlvT8W4zJ3I9l8GeIXTXx41/NqzpSy+9hOM4axjNYrHI66+/zhe+8IVfef8A/f39fPOb36RarSKEYNu2bczOzn4m+17HOtbxy2O9MF3HOv4ZYb/8MkKp1YmKsixktYr12ms4zzwDQOtznyP2gx8QptPIj1lVy1oNgadex7spYXLvuw/3wAG0mRmUrkeGR5/BCvJdx/7KK8hKZU3Ra4yMgBC4Dz2Ed+AA3oEDn7r9vn1+1E96ssy209/GNePE2mD37hbWuXNoi4s4zzzDuXM6J09amKai2YSLFw0sS7FlS0AYitWYCQCVTq9ei75RyYv/aBC2hui26qTjHvdsHaX36BY6Zq+hig0QimDDNpqPPwGxGNrc3B2FaZDPo5VKdxSnolbD3779zhPLpvEzGbT7jiLeeAPhuiAFQaWEymYjhlUpwvZ2lK6jLS+TtFz8MLpPcbdCYMVo2llm5i3SCZulWoKUWWXX1hH0w1cR5gzl8pPoevcdh4/HFZfSDzCwOx71wNXrqEQC98gR/LvEKPT1hWQ64nT95ByG7+BZcUIFzaYkl65TdW2MC1cIA593T8e5fFUjmwzJxj3u3VTFSAgKTZOje6C/P+SFFyIh8ebNPqdPmwgBpZLEdQWWJdi712Nw0OPb3zZJWi2ySxMESiKERJcBS16GZr4Hu7IUGXcJCI7cj3No/x1jBwgOHqS2Ywexv/kbSCToAf7zMGShWkUKQaeu47e34+s6YU5n+xOK5IzEHDf442N1OkSdN9+XfDjYzZahL1ErLhPP6mT78pxYjtO6Ijmyr47rJBkdT1KsdxCTS5jhIlPFOGHS4sZojjBoENdCwpuMq6brJDMpTlzr4JnttxYw/B07MN9/H4BGQ1AcbqfzYAmlQjwzgRBRfFVh3iPwDVotC8uKZLd+OsvKpt0cDKcZytSR9iAEPn6zjvPooyAEsZgicELMZpmN9svkYvP0Jz9CiRBD1OhiFtvZgrQ86nWNsyMODf8ydpdNf/cii9UxhvLt7N+Q5/95X6PeshhbWUDqOoFl0ZVMss/zECnB6PI8GzZvRpucJLzvPowrV9hz+DA7d2yn0voCJy7+JbvyJabqixzYnaNV99l22UJPthHTNVJpF7oLOCMZTOkRK8+xlBjiyMAsfdkaOPqazNWaW0MKiVKK5eXlNVLUZr1JrpmjYtRYXFxidLQP04gKUE+16LW2E4aCV1+1eO65WzFGcMsRVwjo6Qnp6Qmp1VZoNNLMzi4yMBAVcDOtBYKuNlQ8zevOszwtj6MQVJwK7XZ7tBDV0fmpztsJy8L8xGKWlJJEIkGtViOfzyOE4IEHHmB8fJwNGzyWl21s++Z5eE02bnwA142c5CGKvzJ//ENCw0SLxaPM2loV859e4YqhYd6lJ1II8anOthC1kMS+972ojSQWgxs3MD/4gNazzxJ2fjLW6NZ5fPGppxk7d5GW01o1derp6WFgoB/Cm3rjX7EuLRaLlEqlO2S2hmEwPT2N4zirES+fBX4ac7OOdazj14/1wnQd6/hnglxYiExqPvnDp+voMzM4H2eW2jbN3/1d5MIC9ve/jyyVCDdEgeaiWsXbupXgdst/yyLYtOmXGpNevYRRv4wIWoR6Cjd9hNDuuePvRLGItrAQmfLcBmXb6Neu4d5/P4HQGR3VWFmRDA4GdHTcORE6fNjjgYkf4z5goJv+6kRSYaFPTrJ4vcjJk30kk1GkyHvvmcRiUZ5mvR6SyQhefjnG7/1eg3T6FgtSKAh+/OMYBw96jI21YTUFzcDm7I0dPL3nXYI9+4EQ5cfx3P1g6NQrPittaWxnbbKO++CDxL/znciASsqoT3NhAZXJrGHwbl0cgZu0ce+7F7l7J7H/8/9ALi8THjgQ9foqBc0mzhe+gEokiH33uxzqGOf4xHZUoPC9HJ2ZHGPVPrSUQy49j5Qhbl7xXmUfM6/soFBK8cEHHppWwDS7iMcVXV0h6bTC96Pi1N+5845s1rtBCHj2azHmPijgCx3HFXiOIp2qEdMdSvV23EWfG//hDNq1Mb68qx3l2FSMXiphH7ob8NixJq10tECRz4fMzGjoOvT0BJw6ZaBUFGvT1e1TLIdcuaLRaBi0izLSDwlyKSg0wNCQhBT8DL3xOmF7HtXVhdq6jZJTpuk3ydk5bH1thqGy7TXssCYlPTcn5KJWw7ndkVoIevsUvT0OiUodJWDr5b/iKws1EppLK5ZgOLubgmqwvHICt34P05MVQmHQ9HYB7ZSbcebmFE6syJmrLSwnSa1l0vQDklaARNHyNYp1g7rziYUhy8J95BGsN99keT5GNdlH6q0l7Mcr1OMRGyYNF6/gM3/GYKD0JtP1rciOJIP9WazU/cwXTrFDnyZUKirchjbS+vpXANjUX+evL0yzv/MfWDKr+LESiaBBMtGOZuto1Sme2nWVl849wmR1ihAdXcbxShrZvmneuJTgUF8727d8gUe2jBHq41xpNEh4Hhtsm62JBNbyMo6u43ke5WaTrK6DaqGlR0he+rcEPRuIGzn09E5cVcdxTrPi+zhtKbL2GC0pUTcLo9xWl4PaIotLknTnFL17K1GvtePgb968RkZv+zbNVhM7HvVl+r7P0sISiyOLBE6AiitKosT3r79KvP8JUimblBUjo3UxKI8gBSwuarju2s6Gu8k/NU2jUolj29GClBd4uIGLVBoJy2R46ChPLbyF3mjimpKgtoJmx2n90b8kPPvBXesv3TDYcvgw18bH1xRPnufR29u7WgSZpsnXv/51jh8/zuTkEsvLglwuz44dn0fKHMlkyL33RgWueeoUyrYJpCRYjaYBYehsmp5m+i6FqWEY9PTc+V5f/Yq++mrUevCxu+3Nf+0f/YjGH/zBp7Ke8Uyaw/ccot5y8H2PeDyBrt+8tkL8ykUpQKVSWRO3dDuCIFg1eVrHOtbx/0+s95h+hljXq//24afdczk3hz4xcVd5lHAc/N2711RIKpnEu+ce/C1boNUibGvDffTR2+I/fjWYxXcwqmejH30hEKGDUbtIYORQxlqnQ21q6tPH3mwymdnDd36QZmzMYHlZcuGCwfS0xpYt/h2qWOvkuxgx/U5iV9f5yfks1eQGrl7Vef99k1JJsrIiaTYjiWhfX+SyurIiVxkEgOPHLXxfoOvQ3q5oa0/RHp9BNwHLZEBeRsk4jrufqmNx9qzB3A2P1+LPcn44Tr0uGByM9ufpMVpDmzEqRbTJyYiFJLofxoULt2IzXBfj/HkS167RLJUiRjRm4917b+TE2myC5xHmcrQ+9zlUPk8rMLie3M/USprh8RQXlvu4pO3n8kQbKars3OkhM22IdA1NebxTvY8RZyu9uVmoLNFaWqZRXiGuVxmd7qJSkaRSis9/3vlpqrs7oOmCjrxB56UfocsGbckGph7QUllaYY5Yq8y5qS42H+5AT8ZQYUi8vgxSsqTlyWd89IREaZJ8PuTFF2Ncv65z6ZJBGAo0w0fvOUf83u+wZJ7mw4lJkn6GZFLQMT0CVhJRaYEf4GPQay4RVyWEFVD7z77E62qa4ws/4UrpChcLF6m6VQbbBm9NUMMQ7cIFzLffRp+dRRYKEZMvBGF3953ybKCx6HPiXYvlF0+wcv5D7GRAqxnDFC4b569QMQJWtC42bT9HfXE7hqHQ/GWuz9pMT19ByoD77xvF0GokgjbqTQnSpO5q1FydIBTcWIkTz2lsHXIRQYiS0bMV5vPUNu/mhz/J88OZA5wqP8CN0d1sSCyjuQEr5zK8e+ZL7B2qseIMM5CZRpZXOHKwjdymBul2weCePaihIYJde/CPHCGIx1G6xokf/hNufYQ+e4EQm67UEmHoEwQOWzN1JA4ZK0EucYlTkxWuzzbxxFVyxo9I52OYWoq5+So7nv8GqY0b2VIoUHBdtqZS5B0HoRQduk5oGPhhSFcySdzU0HYsIlSTMN+NasshlE/cucJ4uY3A6mGsUUBqJn2FFQhCEukERtJgsG2QVP9GssVxshtTmCLq0QwGBnAffxyEYGpqipdeeonzZ89zfe46E0sTlItlFhYWKF4v4vsuGV2gWvNk21bIJLtZngEr1wG1Tg5YXyBmRAsXjgN79vhrCtNSqUShUFhToLZaLWZmmnR0PIimmfjKp+xUIFAMbO4jnWwj8bU8TrYNX4Jx9GHU7/8BKpPByecwLl9ejfiCSErvHThA77FjNBoNFhYWaLVaBEFAf38/Tz/99JqeT13X2bZtG089dYADBw7S1raPdDrJ/v0eDz3krtbr5unTkeoGbrUNCAGaRlsiwYfNJrquI4RAKUW9Xufo0aNsuLm4+UmIZhPrJz+5e+51pUKYyUQLknfpYVeaRHcDTF3Dsu3V8xFhiG/pBOYv8FL6FBiGwfnz51cjcMIwZHR0lJGREaanpxFCkMvl7prd+qtgff7224f1e/6bw3qP6TrW8RtA2N29yhp8EsqybnO1vXM7t/tOCeevAhE0MerDKO22YwqB0pNY5ZM042sZWJXNRrK1u8ATBv/4Vg4rBh97RRqGoliUvPPOTSfJ2/FpBhxBQEPFGRvTKBYlQSBWJ5NBAOPjOkePemgalMtr97Gyoq3ZrTLacDP3o7mLTMXT1LsttKsFwiBg+AMHaSqu7X2G2XKSlcmon7VQEASBoFDQgAQdsad5Npgi9QnnR/2jjxAtB/v8xYgQyGSIVcoEp07R/J3fQbW14R47hnvs2Jrt3n/f5MwZg8VFychIlmRSIbvBdAVjuYM0CzG6R99ic28DPb7CNXs3F9L3kixXCEtLeE4eyxYoUUM2SuzuKnBu9hj33uuvMb75eeHtP0x94zGKJyeRtkYoLEQYoLt1yqk+6i0bPWajlAIp8U2bZHUGPTvEcknDX1GMLJssLwt6ewNaLXHTh0VRlNfIyOoq09kKHIYb88TtJKUNXWSW5gh2ZtGul9HLNdrDMcjEcf/rf8HiYIX2+Jt0LO6l5Uc/VqPlUWJ6jPs23AeA/dJLSNcl2LIFbWqKDycmOXfmAqWte8g+dYxj8/NrchRHRzWOv2KRUyW6p69zo5lGhTqZjgqtho0XCg5Whun8/ARb2zVmg3leemsvLUdjZrlAIAfZ0l/BrO/kzGmLK6ZFV9xg52Yf05b4oWCqFqPQtPjDvSVilehZUULgWzoN0+Y7r+RoDbSztGBG+a/uQT449QT3H6qgLY3S0etzqL8XCPloeprO9kt0hHHqfheip4fLiTgDA4NYVmR9rPkBdRUwPjHBlr4mG2PTzBc6ERpk22poWhOhkqBCED4/vHQd3WgyuKmbTDJFzN7GQqgYSLdT0CsYFy9G+cife4Sd3lnMsEErEbKoBqnNF7BcF01KMqaJGpIIEQAyinASLTQ5x8CQwcDsCJ5zmL5kHzO1GS725Dh8Y45kZ5L2WJ7ueDfCdWk99xzu0aOR9DyXW2XryuUyr7zyCgsLCywuLuL5Hs3UEoXyKKZlETR8utOKjNJYCRyqZcnRQw3sKyX05mF0I8a1ynUO24cBSCa54/k4duwYi7Nz1AoFklYMPwzoymY5ciTPtWvxaFECDeUpOgc6qQEbeuogJaWdm/C2D9DbcxShBK5tEG7aRPN3fgfj1Cm0apXQtvHuv59g82Yk8NBDD3H06FHq9TqxWGwNw1etVnnjjTeYn58HIJfL8fDDD/PMM3eX0CrbjtyYP4kwJN/fz9cPHeLUqVNUq1VisRhPPPHET2VLV4OF1xxEoY2NoY2PRyqffB6/pwfnqafuKGCbqRh2rYkMQoRSUd+0aeDGPhsWM5lMMjAwwPz8PKZpcu7cORrlMlQq9HV20qpW+f73v8+zzz77qcX3Otaxjv/vYp0x/Qyxvvry24efes8tC7m0hCyX164+N5t4e/cS9vf/egYJ6I3r6K0pkHdhQIM6fnL3ms9UIhEFynve2sLScbhkHWDU33gHY6dpUCxKDhzw1ijB5PIyslK5s4ez2aRwzyMcfzuJaUK9LvB9sbqtlNDbG2DbkEwqtm+/1Wx69aqG738y10/iixS5nhz9j27H27WL0UonH/l7uDb4GO8Od1OrSZQSOI7gRz+ySaUU+bzCMGDD9fco3aiT71pLFEshib36Y+jvA13HMEyCUCFChZidiUxDPoGrVzX+9m/jTEzoDA/r1GqS+XmdlRVJV1dIy9UoWV2MxPYxm9mBfKiNs9U9+L5GLFhC17zo/zEPyxI0vTYeP3CatsHdKHT27fOZmpKcPGly/bqOrivSaXVXBV4Y3iR1NI1y11YmztaI+U2UkDhWisWefTSTeZZWYgxti69htrXAZU5sYLlsUihrTC7bHD9uU61KduzwcRyBnh9HpaZRfoxY2wqG7eF5gl37a8xM9RFkt9HmLKFXqohkiv3HHMzH9uD/V89T3SAZDk+BBrnEMovVSJKrS52l5hIH8vuxr98gduo0mmYi4nFeWGzyT9OCgtZFqW5xbrmT4eELbN7cQTqdJgzhBz+IEbMVXbMXyc9fJFu6Qba+gGpA574yufZp2mNzzG7XeaR7K2OFGLPMUY2N4cbG2LatgVYfZHg0S1dHHSU1rkyXOHnBohIYTPvtBJbB7z5cJJWKCvkoZ1KgeT4fnTcZnzWJxcA0FRcu6CwsmRSbcUbG4phujX/5wEVMPWRDOs3+3l562too+SF6NosSglq9xtTUJAnDoO3DD5GnTuK//z7NS5dopdvpSC1gx310S5G1liitCOpBB3qlyrXpNOfmlyh5SfLtG7HiMZAaRixOpVrlsZ176FYBWmOU+NL3SW1IsxAzSA8m6DJnmWhlSCxV2JxIkO7pQe3QkU4J+g305BVM/SJoPrrpMNjXYKaRRLa6abfaoaedzU88wBG9jz4th9B1vJ07cR9+GGKxSO5+2wP2zjvvcObMmVVG80ChyKEbJSo3WnQUTeIrTdpCaJkCpSl0yyabj6HhEUsO4YV5Wn6LDYkNOC2dBx5wyefXLggaoeKe/iGybWkczyWfy/Glhx7l808cw9OTzM2ZtLenGNjax0oYkkj57HhigoQnkaGiN97N4myJyUqJZGcHmqYRxOOcqtV4rVjktOMwtrJCe3v7as6npmlRvMpt737HcXjhhRdwXRfTNDEMA9/3OX/+PFu3bsW210rYAZRpYgwP3+m6Xq/jPPkksfZ2tm7dyu7du9m+ffvP7pk0zYjtve19rI2Po83OIqSM2gNsG1mroU1MrL7fpOejedE72Itb+JaOf7MgDSzjM4uKAdi4cSOlUolr164x+cEH2KUSPfE422wbY2oKPRZjrtFg113evb8s1udvv31Yv+e/OawzputYx28IztNPR/LDsTGE56FsG+/gQbzDh3+t41DSAtdDu7aAmCuDJgl29KD68ggEStzJaraefRbr5ZfRCoVohV1K/IEBCtkjmFfuzth5XsSi3V6HOw8/TOzFF5H1esSSBAGi0cB54AG2bIomqGEYhd5PTka9i74v6O31aTQEhsEdLOyePT5vv23e3naI6VRxSi0OfsEEDEIrxl+f2svp0xbLyxJNg40bfdJpKJWiAnhiQmfDBhfDAMtZQYtpjI8Ldu26WQQrhV4sIRt11kx1RRShoi0uMnPN4dTFNNWqxLIUu3Z5vPSSTa0mMU2QUqBp0GiApgmKRUk2GzI9rdFSFotBnrrbjmV5NGs2uzYu4DgaQiggRNNiZNoadMSnWK6dwZvv4sL/NsLsUozq0D68WJIPPpym4Z/j0N4mQU8P3sGDXB5NcPasQb0uMU3F5s0+99/fw0dP/pe0l29gtqqU2zehe012fvRdspkQpx65oH5MqIRKsFy22Lo95Eohvmpg7LoO7703Tq3msWIVMDMGQga0agnimTqGoWjPh3Q+eYGHk3/I1NROjFiNTR3XcfIvIzMbkGKRuZUbkZsxGrbewNYbtPybkszAQa9UMa5cRSXiIKBYc7g8vkAqlsALBWZQwzQF8/MZXnn5Pf7k+SQzU4pyySOXi9E1/SHtC1dpWTaFoE6uvEzuwgoLOww8FdIXzzJfr/Pj4ZBEwmGD3qLlO3ihxkojxBI65RWD5eJx5haGMS2D5QoM7fT57/7s35DRzdVnR3N9/EZIoSi5fjYkabgEyqBYlHR2hlSr4HnQZoQM2SVO3OjnczvHgMhY5p0bN8imc3Ru34EPaFJD0wWNv/lrRH8fYSqBpUlifkDn2WGaD8XQEz5uoHFmrJ/+tin0mKIS9HF5YgFTDCCERNMiMyESCWg0KFYr9LZlMGMWiOso2uiuNTG2b2dscZFWLMXGDSHpLz9PLp2mVathinVnrskAACAASURBVOOovAZtHtIsgK+heVMEsX5MO81XvhKn2XycMBxc85wuVKsUChN0dU2Sib1KEGzA93cTBoKV4WGas7NU3n2XlfFxVDpNbHmZvkKBimmi6QaxUJLJxLCUIm7GKdoOvhsCgmTOY9/9Ixx/exu+I7GskEcfarJp050qFbPpInSdbZu3sG3zLfda4fp87bkUx47lOH/ewPfhvrxPMfUTHM3kqqigz0n+3d/+LVPT03he5ID70EMPcfDgQRYWFrBtGyEElUqFF198keeee24Ne387zp07RxiGGJ9Y1bNtm/fff5+nn376jm2CTZvw9u/HOH8+cm6/yVK6x46hPhFtMjU1xfXr17Ftm/37968WyWsgJe6hQ1gnT0ZyeKXQ5uaizNru7luLBrqOtrSEtrCAaaeQYbjqbRRKQSsVI9T/eYz3dF3nySefRB8fp6O7GzseR94sfBVgjI5S/iWlvK7rsrCwgGmadHZ2fmo/6zrWsY7fDNYL03X8ViEMYW5O4jiCnp6AuyxQ34HJScnIWZfM1HBk8vP4NkjcXYZ7BzQN97HHcB95JJJQWdZnurIMUX5ksSjI58M7skE/RkAnxivnwBNgRRMP7c3L+Js68R48BPJOGZaKxWh9/euISgVRq6GyWVQ8zuCC4sxHgmTyzmMlEuGdrUmWRfP559GvXkWbmIiK8wMHUJkMiVBx770uN27olMuSTEZRq0UxMWEoMIzo876+tZPNHTt8lpYkly8b2GGdbZdeJllbYOOQR+f3Nfzt2/kfT36BS5csXFfg+xLfV1y6ZLBjh0erJVbbw0ZGNIJAUlvoYUd9HinWnoBwPULzbjI1wehilpdejpHskEgZFeY/+YnJhx8a9PTckjm7rsB06wjPxRmtke1WtCU34AUS34fFxe3kcudpNULymRVW6glqNQ1NxvEaTXb0jiC8OptOv4IoNHCtXgbNGNriGUKpI0Ofqp5mIR7Qe+U4pf/4EmeMr2JkEiQGB1HxHCMjOrWa4N6jAW+9tY1kRzQ+R6WpkuLgQYdGs4znd0cXxg9oGRk2bIByy6DmGWga1OuzLC1doVCwCQKNFbUMlkNb5zY27KzjOIJNmz2kBFMz6e8P6e6t8Pbs/8V79XOo+jjmVJ7d+e1sb88yVZ1a7f3T5C1WPIaJpSTE7CjDxjD4YLSAGfpYokYpTKBktF3aL7L08hneu3GKUzN1zs93k8lIlF+mxzDRhU7ezFJSDVBV0gshwa4s2zq38sLEBQ7uMtjQtYBSivcvd3LjzFFCrYlQOqMT7+M41zDNGIl4klAJKpXL/O///t/z5//NfwuAdH2uXNJYLFiUq0tcunCD0bEO7PaNjC4lMG6afoUhOFqMG14n3kKVR7ZMYhsBDdelWK/jAJrn0B5LIoDEzBSiUafgOLSlEhiGQbYzz8ryMsE5A/9eg+ZKAydQvN7qpLBkMlEwqLr9xKby9HVnWWo0kaZL3K9htFp0JFL0pzOElkvgWuAHYFpkymW6eo5y4kw/5ZIk9O9jU7vkvicr6NNX0eplpLUMoUbkvqOjNWZweh/B85IsL19gbm4zmzYFGIbHK6+8wvDwD2lrG8c0DQ4eHODo0V3EYmcZ/8d23JKHZllU6nXqi4uo+Xm2uC6znoem66QNE01KrLhBueVhrXgkYiYNM5L3921MsWGoyn3JC2hC4/d3HLrLM0qUI+2HoEWLZrWaQMpIhTEzN8ur33mH85Nj9Pb28vzzz5PLDQAD9PT0cP78ef70f/hTyuUytm2vMpqvvfYaFy5c4Nlnn731NhCCRCLBiRMn+NrXvnbXoSwsLNzVuEfTNIrF4t3HD7j334934ADajRsoKSMzvNsYVN/3eemll1hYWCCRSHD+/Hn+4i/+glwux7Zt2/jGN77Bxo0bCcNI5k7sINsfsbHOnY2iyoKAYHAQt6eHqfFxyqUSQkp6cjk6b0zCzp1R/zQ3vZeUwqq1aLX9nL+DvyRyhQLTlrValH4MZZpYv0S0y6lTpzh37hz+Tav3RCLBE088Qe/t5mnrWMc6fqNYL0zX8VuDyUnJ66/btFrRxERK2LPH4/773bv+vVLwwx9aqHdOsWnpQ0LdYPoMNF77kM3P78G//76f/+BS8nNVwb8Amk14+WWb5WUNTWM19/OLX2zdofoyf/IevrUVnZEoF1FoqJhAuz5P/dinTOhuQqXTUS7jTXR1hXR1BZTLco3ktV4XPPro3a8lNyVin3SRlRL27/eRUmDbPkpF/aWLixLbVvzrf12/q0cHwEMPuRw65NH8j9/G6Hfo6LLQ9eiPV05eQ5zI0TH4ICsrGkpFUmMpYXzcoL09IJMJWV6WFAqS7u6Qq4lD9M6dZWZRXzVWSqVCdiYMrIGBu1wYxYmFbSQ3rx2grkO9LvG8AMOA9lxAY7qKagmqXgxD+MTnS3hqnv+XvTcLkuw67/x+5+65L7Xva1dX791AoxsLQQAEQJAEKYHkUNRIYTnCmpA9mgg/KcJPssJ6cDjCEfKEwi92SLKCtK0RqSEJCABBggSIHehu9L5VdXXtS1Zl5b7cvOvxQzYa6AUgQUEjOVi/t8qoe/PczLznnu983/f/T3y+g1hC8LnPSQ4dmmBzc443n82gqCBlhnpVMty5xJ7RVazrVZrlGHrUIhJuESijqEiG519jZeIRLDUgf77AcGSR5e1RdpsnWapPoF++jN/TCyNjLOWzPJKd55njWd5bHqbRUIhGJX1//ATD555DuA0cpYUvo5iDWXJj07x/Pkpdtr/oIGjRar3D9vYIzWZAMgkZeigr89SL82xsbPFbT62T7O2h6UuOdB8BPF5e/TNKrRIRzbyh4lnkwvZJFDFBb6KKW1DwHQPbiYAA27e5P3kAKSDYdwDt4kWk65BeuIq5nSOmKAhfo5wdRfUdetbPMe+vczUa0HskZM92hchGnbXNLl5SLb4kPRRVI5tIkbTqBI06L91zCH/lDfoHrpAOJZIoUkvxwD0lBhPP84t//DaqV6LauIAZ0TFNqy2KJUM0TWN1a5P5hQXGx8ZZnldY3fJ4+/Q/EFx7H2Wrjp5TCOe76Ej+9yywD4kgnlLo7w/Z1sbYWsxR2S+wOsFvNJBBgL93L4vVEqv1CnGhMPreuxS3tkgLgSklQTLF3skpLtddNrYqvD+/l0bN52L/RdYcj2Z5AyvopK6NofTPEvOOMtTdhR9IhBIykppjcmgYkcmiKDYEhyAMCCpX2Swk+If39xC1fFTVIZSSy5c1ist1vvVgDD8ygemvg9rOWAoZEFoR1pr9zJ03cF24eNHgrbcEhcKPmZ9/lrGxNWo1nSDwefbZaxQKNl9+aB/xjlkqzXZPtq6qtFyXqGmSDIK2DY9lsQuFazLkQFcnc8VNNm0Pt6ExvDvO8GSSYw+lmN3upuE2eHr86Y+bvm6qxa6uqCwtq3ieQAjJxsZ7NOsXyDWKVKtVtre3OXXqFH/6p3/K2NgYAN/73veo1Wo4jkO5XCYMw/YmShiyurhIeW6OzNjYLSUipVLpY4dimiZhGN4igvQBxu2T9u3TTSTSFsy7C++8885Ni5Wf//znrK6uYpomuVwOy7L48z//cz7/+T/jxIlD1Ovt947H7+Pb397Ho/+mRfRv/xZfVTl16hR+EKDfuJ6l2WvU9x1mfO/tbRMCNQjagl/qx2gIfAYc6unh1PXrGLftdrpSMprJfMxRd2dmZoazZ8/ekUV+4YUX+IM/+IN/8lh32GGHz4adHtPPkJ169X+92LbgBz+IYFntpKVhtCuWVlcVYjF5V6uTa9dUFl7bZO/qK3hWAqloKIZGzbGIby1iTfYQHxj4F/vOn3vOotFQsKz2tRhG+zrX1xV2775VuMh8802kmSAw+yDwQEIQ6cdP7QEPghsLsV+VXbt8SiVBodD2rzQMyYMPurf0gf6qDAwEOI4gl1NuCOoIxsZ8fud37F8ay1v5NToWz5HoNG9pYT19IYK2vcVixz0kku2schBAKubxwO4av/WFGinLZ3bRoLdPoigQCI13t6eYUBYwm2VSEYeGb/B29HEmD0YxtnOg6+i6jud7NMser5uPoHe0eyVEy0ZbWETb2qRY0ah4MWIx0Otl1EadtVqaIFToi1Wx9ICpxBqeKxg9HOXrX3cwzW16e89y+J5F0vI648NlDvadZ6hjHSlBv6owPVWjVjWwfcg7JczCIkrgYyBpRTJouXU6sgGLhTTx/CJbah8b9ST59RDmFvAuL6GVtjjqnGCfNsPeZ4aZPiBIpHVm5H7OrA9RCVJ0PDxG+NBhgpjF26ciNzc61tfP0WxeZXk5gRBtqwgFDUurYmW/x4ilcThzDUcsMpUZ5+jQU9T8n/Ne7sQN1VQBSISoY+jbbJZyPFWAdGkZa7MEv6jjqAZjE8c43nkvqh+AYSBVFeP554gqUU7Xa+gCWkoE10wQrW2CVcWOXmMqA0IqCE0j8FskMiUWymmyQ0cRvorZVWat06E0Pkjh8CGG+xxsmaepB9DYjaoJFHT2a1fYNXeNXbkZWo2TZE0TO5JBooJZJhpr0nQEnrOPpj3E0rLPTy7/JcH8G1itOtulDppODN+12agWGXIiRPw6llene0hHxKI0jRT7Dgb0dvsoe/dy8YPJCZCOA+fOkyiV0Vo2u3t6Uet1lJZLsxnB8QdIpIbxp77GG7HzVBM5XLeJh6BWS+EHOrpi4Tgl+vQolmnRtFt0p2J864F7UVSN0HWBTUBF0TI8d/0QmBZCgBQaQWQETYPitsto5yJxoSBXc8hqAVn1QEvQSPVx5voEkYhPYy1J64qCooU8+9Mfkc026OoqIaWCoggMQ2VhociR0TiRmEMzP0IYSNZXV9mq1XAdh7jnEfd9kvEEmYjF0aFh0ql+uhJNDhzqYOxYP5amoFlNjPQQQrmfp0aeojt2d+GgDyhsSOZmVAwddA3C0Oba7M9QlQSXcteRtANOTdO4dOkSjz/+OIlEgr//+7/n8uXLtFothBDtsk/HoVWtErZajEpJT7mMVBRkPI5SLEK9zuGjR++qaptKpTh79uwdWdNGo8Hx48fpuK0091fl9ddfR9M0KpUK77777s3M7gdlqqo6zIsvdjE8PI1lQdTw6XBynHvbY/KwQYdWYfHECZxKhZRtowQBvqahRWNUd+0mGo8T+cBa5gYiCAGJ6gUIGRKqymdeDWSurZHwfWbzeYQQKELQcByymsaT3/oWfAqRwF/84hcIIXAch4WFBXK5HGEYEolEkFKyZ8+enfXbbxg7a/Z/OXZ6THf4jefsWf2u9hqxGFy8qLNnz50B1dWrOhOF9/HMW3tZDEOyVknSceYMHDv2mY7TddtjXV1VEaJdsjo97d983oswxGg61EtQXtaJJX185UPhCU2D9XWVxuwGUaeCMtSLTKfb6d9WC/3qVUStBlIiYh5yMtFOtX4KGg3BuXPtD/Oxx1oMDoZ3ZGg/DULAgw+6HDvmUqsJLEty2xroY1G2t+8UBaG9vtd8Fy10kbrFnj0ehufy0J46zZbC6FBA6Er+q8cLnF5LUmroVKuCIJXmVN/v8b7d5HPHm7hmgiCAV5QxvnxPHHXmKjgtpKbTeuoh5Hv9gERZWUGfn0caBoqiMO1fJqE22TCmCIMcm+EoA5kaKa3JRGwDXfFRhCSr50inu1GUDSKR55AyhhJPsPuJKEptGWPrEm7rEKHVj1E6AYpCaOWZ3bYwdIV06FELbOzGBtLop89qoCkhql0HKVmtpnA8jUhzm7qZaGek51dY74gyLKqoP3yWwhe/wQ+/b+H4ChHLpEqL/DvrHJA2nXt3MzHhsbSkY1kSz3NxXR1NWyWTWcUwTNSwxKi7yH1rLvFak6OGZM+AgWFfpzZRZ8u+gO4A0gdTIww7UJRNCFTcQgU3mSFm7MPIRLn/EZUHT6Vw7h3FN3WM1o0MvKLgHzpCKl/kIUfhpUYNW8+iqSqR3AzGVIF0XAXPQ7QcsmqdZiaNX29iJJvYRouRJ4e5WF9D9TNUezPtLLrjUJyZJrKpoXtFQsekS24gNIfUgRxxdwpzJUHUKeIVJSupHvo6tqlW+1la2svoyBTOnMs7l69TXO/noeAtVopZthpVkprFuDvPIp0Efo24KrHqmxjvL+L2DdI9nOFto4NLo+dx/E0agzbVS1X6Mn1oc3Mohsn1ZJKvSImmtrP+9fU6YWeKGB7e7sMMDjXIbJZZz1mogAzrSDdBqHg0/F70SBdXl8bpy7oc2z/A145nMeQS0vcIPB9FyyDENkRSFPx+TK2FCB28+F5EGIKUWMk058/EEOd/iq2m6PxiBekpaDWP5mIVo6eFcf48he8eodVwaflNukqzVNMd3G5s6XmS5fUye8ZioEiCICQMQ45PT3N6fp7lWIxdtk1UN7AMk8OjE3SpCtXZbf5+cZ5C5yaFgTS5y0lefTbPH/9xlvRI+pfOE69dSDBy497wQ4WtrSvEIhYnri2Rq4V0d3/wM1PY2Nig1WoB0NHRgW3bH/aE+j7CdTFUFdtxMMOwLYh27hzMzOCrKqPJJNHvfOeuWgKdnZ3cf//9nDx5ElVVEULgui779u1jamrqV5v07oLv++i6ztWrV28RWxJC4Ps+m5t7CII8QeCzq3qO3YX30EMHGULuf4ow9Wf3EC4uMrq11e5jDUNakQhvffGLTOoaGxvrZLMfZihFEKK3PBAKUhUI18OwXexEBHkXz9hfF/eBB9i/usrY/fdzdnWVhusy1dHBUEcHrf37P9W5PrDwmZ2dxbgxTxeLRUzTpKen5zMb8w477PBPYycw3eE3gkpFfKzvo21/nJl3W5X0brvAEtFWrP0McRz4/vcjOI64Wb76xhsm8/MaX/lKCyElkUoTBNQaeluPKJDotosXaTdMumWbyy8W+NvXSkTNgIx1lc/d32QgkyHywgsfplYB4fsYJ0/SeuKJX3mMly5pvPGGiWVJNA2uX9fo6JA884x9twTBhwQB6vXrKNvb+Lt2Ibu67vgXTeNje2Q/jrCzsx3N3xac7tvncfWCga+0X49FJY/vqVEsq8STkkhEsndvQKMp6B6o8O5imnxeodVqZ1YDNYprtS9I1WC1HqX5paNo9xwm1ttLpVJCEYKu+YD6toe+MI/8SHq3Z6jJN/Z8h7KaYHMgybuJgxRqI4xllPbi2G+XFgtLxfUEhvE2UsY+vABFJUyNEah5ZD4BgUqYihFWalQTC1j6HgLSbMd1uis51lJDBP42D6fLqIpJRhZYUQdotDTW6yk8N83krjiDg5DMhDStMlIN0HJb/OLvmiilKpmIzdHdf00iniMUCn7eJLI6yZOP/B4nznYzO6uTSu1G006RSJjEYgA2MbvA52vXaOkppJxgpMfFijpweZOI83/SY1+Bxix6wyPQBM0RE30ywAwMFJFAk2NIFDQFtGQLN2tinDpF62tfoxWzsBotlK08JFOIZIrDgxM0rqic31zGcW0ekpIjX03z3fdulFCqCkhJNKxDQifUixyb1IjGAmTBJjQiLO8f48wZHUfpoa+6has0cP0GhvAJbJ1EukxndxcrEYOeeJq1xgZ9rXnwPNaX+8g5j2EmJJPbG3x//V3y9RitosIZ+wCmu4YQCkl3mRBBt7JJkk1sP4qjmehOi2QzT2/1FFvzNSL7XYQQxPvjVKhgb9lYtRqRzh7umZpmoN5g7u0N1ptpGg2V2LKDuXeCjqk9bNWuoLgJJpMK1wplajUdvxUjdOKo0gRNpxweoDcxxNlFn70TBbqPjSGWFxGuwPW6EV19KB2gKhqtpkq4mSSpbiGiDYJkksXNItG1JXpYJhAGrRdM+j8HIuNRylvEZs/y8stf4mphEi/UcEOXlUaAeeFtZtNl0ukoHR3WTZ9Nq7MHp24jAx1Nl+i6jqWqPDI1xYqicD0Ieaxps0vRyOY2EL7Li7kNAkfSve1hzheZGU8Si8X5q7/6K44cOXJrMOYHiCBAbV5Aa11DSJ9uf4CZ7QdJWFFSpsdCbot/+OnzNFoupqkTj2duKfEMb2zWPfTQQ3znO9+5WX4rXLctYud5DBgGsXIZajVU16WeShGdmOALBw6ArmOcOkXQ0UF4WzXKkSNHmJ6eZnZ2Fs/zmJ6e/lhPzjAMmZ2dZW5uDikl09PTTE5O3iHYk8lkqNVqd4gq+b5PMplkYyOCokB3Y5l9+Tdp6Ql8tT1fhXaA+Iu/IK+qlCcnsVwXX9fxDIOxmRkKw2MM3zY+veUSaO2gFEAq7XvObDi39J1ubW1RKBTo6uqis7Pzrtf4SchsFvuZZ7DefJMHgwCEIBgYoPXoo3fNSH8ShmHcFIb66GutVovV1dVPPbYddtjhn4edwHSH3wh6e9sqqHcrDY3H754xHBkJKJ7ooteuINUPbxXfh+6sS9jx2XqNnjhh4Hnilp7KaFSyuqqwtKQw1dUOShGCTCpol64KEBJUP8AVKmdfKOCHKpl0iKaCS4znXovzu5PXsaRsZ0E+2NF2HILeXrT5eYLdu3/p+Gxb8Oab5i2iR7EY1Gri7v6lN9CuXCH613+Nks+3M7WqirN/P/a///cf6+X6qxIODBDEkxS3QvxAIZuVmKYkKloMP72XyjmIRqEv46EgyWRCfvu3baLR9vWcOKHTkw0Ydn0uXrTI59uZqQ8+9w9ElxRFEuoarq5BPArVMgBPPOHwo/91g6aMEEHiBQpuIPnte1+gv0uhx6vT29ON5c5wekNikEWGSXQdhOvidg6QSoUoShG4M03sWdNo5hJ+M01w7zj5H7yKED7j47Pkyodxyjrr6T5EQpAcXUUpqRAE7E+t8U7+PlZKKQKh8MQXFLr7i2QjWwSqQS2RQR8q4Ly3Tr7qoGsuD9z7vxBRKgRBsr3oU32C4CzRgsmxY/+OY8c8wOKHPxzkL/9ym+3tKJoG97TWaIYBycgoqYRDNukAIFo+kZdfYug+k1RzGyfwCF2BdlElTEItDJisJjDXrxF2dyNT7cyX0Pybvo2hodHUYlhDA+jrq4TxGHrG5okHZnnMrCOqVfR5FZHwGc6abFQ8BCo1xyCsBpQHJ4mbWfTuLLmwwcpED42pca6vWRQ2ElTzSQb3LaM4Jvhx1CDAFOD5vZhnfbLOdR4bPcTZ2RP8cKPGhtKDK0cIgxK6luX/mgnIDzXR1QpuGFBrThCJzhH6JmpgU0PQoxTYHS5S0TwME/qiRUzD4myQ4Mvueyxw4Ob3PdA/gOgX/NfuUYz+EQhDXjrfz1qPoL98iabwWR+9hzllil1nXZpplV5lkBnlPFnRw3wJPDuJtLMQraEWJ4hEIrhCp+ZqvL+S4r4vCBajh9goK/gBKDmIlAKuLymsnG/Q162SSkl6/QbN8jIyjPFQukijtR/HXscruThnI0QGjrJ+NsLmSYWLxm4s1UNTXIrNVZqiRqt5lGLuKrVSjo1FhcmxGBHDYvpQL4X3e/GbTbSoxdBgD0vXl1ATSUY6OhicXwRCWgODaIFPQQQ03n6NHs8HKUkhebhU5McH9xCRcc6ePcvRo0cRfkCiUEPxAlR3ExFKPK0Lz9ggE8mRUP6OS83f5fTMCq+9/i5ruQ1U1aTV8pmfLzE4OEgymaS7u/tmkNrX18eTTz7Jq6++SrPZRLFttCBgMBbjcx0d/FE8ztX1dRqOw4im0ee6lLa2yHZ2YsbjGOfO0boRmCrOJnrlfZTQxlQTHN57DKl/fLY3DEOee+45tra2bo7nlVdeYWZmhqeffvqW4PTBBx/khz/8IdPT01y4cOHm8ZZlEY1G0fUGQowwXT5FS/+whK7ZtGnUNtiqXENIyYxh0NXZSeZGIGo4DqtXL3Hg8GEI2/O+CENCRSEwb6tUEaLtbRqGNB2H5557jmKxiKZpBEFAZ2cnX/3qV+9qifNJhD09tL75zXbVzz+hVDiRSNxUVf4AKSWqqt4UX9thhx3+5dnpMf0M2alX/9dLNhty4YLe1sH4yLOtLdjjkErdmanr7Aw5s95P5+LZdhZGtFUdVSVg73gT7+kvk8hmP7Pv/O23jbtK13/g8blvsIm4URpn6LBdUiiW2vYqQsLKtRbbSy36szbdiebN4zUdStcqTD7a3S5F8zykphGMjBCMjyNcF//AgTve93ZOn25bX9z+DFdVKJfb/qW3I0ol4v/xP6I0mxCJtAWgDAM1l0PJ5//JtjlLSwo/uLSPYGYZe61CbtGH9Abpr24z8o0WT33pJJaVx7cHuf9Qi88/6t0M/HW9raJbqwhePxOj3lSoVNrXNzAQUiwqKIrEsiTT0z4DA+0g9aP3uWnCkeAUkVaZUAqGMlW+evhletObgIJCiHpoNwPBPOevD4Lig0whXJcwHqc6sJsnn3RIp88Bdy6OWq7GhflHyK/HSBrbhK+fpf/EBr2LDYYqyyzEhvkL/X/gWnGc0pUks7UpOjs80lnBnoWfYtg1jncuMDbWJJpx0YIAoftEYrP0x06jJOfxtrYpqiqj4ydoeXH0wAHTQEqBGVWJ6lt45nGkGiG3IVm+oDHcuczaep1SzWRXo0LGmiSbtnj6sTkMvf05qfPXwQwR2xrdgccbzSQbdhxfCjSzyagieWorjlmpoK6soK6vQSgJ5jqQ/RmCyUlQdFqBw6v+LO+svM4VbYXUwfOkFBNN6GilKjIbRUxKxg3JwqrHfF7FC6GsJND6O1jueIIfUyRWv4Q5M4t1/jzZS3VW8w7VOYuxI+t09lewEj7RqEJUqZO72kff5SKuoqBtXGHFzVHmOJ2ZDJZxmEBLYgsP4TvU/W6iiTVaYYBaNumSl5h3VrnubDMfVrHDTVyixJVd7MpsoSApCYuB3deYsNbITQ3cIiBT9+ocCntYq2/wanOJ5893olsK22KKC/ZenHQPxZrG7KLG/n0zTE+dJxbdptSQbFYNJOCFEqPZh7L4BBMTWXxfoasrJJmUZEyX3GZ73tBU8D24dEXHOXOZwIgRSxpouk7ejuKHLo/sWWMqWMbSNRabAZnH3TtHeQAAIABJREFUKyi9dZI9Ov2jc+S7DZaWppGhRtWtsl5fRcHCEis4jkIiMoumeQS+5OkH92MVD5C+57dImbPEnZMMdFXoGAZ1vUjnhUWUlkN3IsHechF1K8fmpdOsr2/hhyFO4BMKQYcfsFmrUE5nOHToCKPDw6TyFZQwBBwUPw+KihrGkBKMWIPVdYuEus53nnsZVY0Qhg62XSIeD3Bdh1bLpqdH5z/8hz8km+0nkUgShiFra2scO3aMgYEB+jc3uT+V4v7OTkZaLR40TSbCkElA9TwKrRb2xgZXKhVatk1nJoN/4ABa7TLW9k8Q0kMQoARVjOpZAqMHqafuuO8Bzp8/z7Vr127J5BqGQaFQIJFI3JKBjMViDA8PUywWqdfrrK2tkUql6Ovrw3VdLKtCIvHHHHLPodB+1vm+Tz5fZ+/UAj2tIlYsxoaUVKvVG8GsjttqkZycZPKJx/EsHc80CHQVNQhv+PbeipASzzT44bPPYts2lmWh6/rNzOTa2hrT09O/4ux++8n/af2rhUKBer1OpVLBcRyCIMA0TQ4cOICiKDzyyCPUb2yI7fCbwc6a/V+OnR7THX7jMQz4xjdsXn7ZpFBoBwCxmOTRRx2Ghu6eMdV1eOb3BGd7v4n6ymvEqlt0pSWDRzO4j3+p7cn5XxDZdhy9+fdTjzR55a0ocws6nlTYzoUMZupMdVduOU4RUPbiQINg1y6C28/7cbK3t9Fsio+tnvI/RvPIeO89lHr9zj5Q00S/dAlla4uw+5OFSz6OVgt+8hOLaALmHvg2hl2hK3URZfcpwmicYdqqsc88c53wa3mU3FN3LKZ27fKxLIXST1SyWYmmBTd9WIWA69d1pqdt7r23HXQLP6C1VODkywHrWzpSF+xKTzFR/H8YjMZJD0SxrCqggpTIaAyE4HrH/VQinZy93EvF6efoQ8uMHGjxjYefo7d3HN8fQRMLKJe2UebyIATngoO8tnkYzz8KoUb5udOMRffhD4OuaKxvdcO5kOxAnvPeYS5GjpDRM/zi8jX+R+V/ZtSIEtVdRrpV4punaHgDVEYmGOx8Cy808ewQPZJhvOcM0/7rOBd1iruTNDyDmOcTKgaxuEDIBoQ2wi1QeOdF7musYgZ1vvmEYD6zh9l3nmCy+DpfemKVm7aG0keRNoHWQS4X4/3VCR6IO1RSNvUgIHExypNPXSYqbdCMtgeF0kLMF7D8n+PGSijrNVp6F/+5UMZDQT98kP7mK6y3KuTDBke1UYI9e1A3cgR2Cm26wQG9m84t2HZ8EnGTN4x7qJfLPHBynmzCJm52kve3uB5c5EixiJqc5NKZvfR11+nsLRL6AZuLk5RO9LDf2gChsFzNkfeTaKZFNG4QNnMsud0Ymo3nlsFvlyInuqAhNrg8u4nj1TA1QU+okFGiVHmT4cgCE9aDmG6NnkcinNGusNSwObF2ld50DwOpzrbACwo/HvPZeOtNfGeceugz584TOBsMdx4hFEm60h4PPPICh6aWqCiCZGMPX5naZKQ7x9++tJtI/ii7tHsQfVmkhIMHPdJpSaOhcXExwnDWQSFAIlhcN7lwKSDV9Hlw/yqRrjRL23FSasiekU2m+7axZR+JtUWmv7RGuSXwbRU/IvHdKN3ZKvc/9To/f/bLrFW30VEZSWwgwpBVs4ugZRLXouxOZNmfPEYjryMuf5dYhwpTewGI11vsOfMmzfsn0JU+3CDgzKmTtHI5hq7OEIbtfkkJ+K5HKATpumBuY5mBeh21YaP4EqkpKE4Fblg+SRGghVnS6S127fI5feoizaaHZUXo6jrIwIBKPr/I4KDPI4+U+f3ff4Te3lNIeRX4FkJYPPXUUzz//PP0dHQwNTqKs7aGJiVfM812z7eqYts2fkcHqmEQd12imsb29jZqPs9A6GNU3kVqHymHFSpSi2OWXseO/P5d57e5ubk7BIegHYTOzMyw+7Yql+7ubp555hmeeeYZ5ufn+cEPfkCj0WBiYoJnnnmGU6cEq38RQ6tXQQgcp8Hk5AqxlAt58C2Lkf5+SqUS1WqVTCbDQFcXsW9968aY2+rGoaYhPyZIlEKhXKtSKBTuKE/WNI2NjQ2azebd/VU/AVGvo1+4AL6Pv2dPu4XjV8D3fd544w0WFhaoVCosLCywe/du4vE4qqreFKH6wIv2Y/nA2HnH83SHHf7Z2QlMd/iNIZ2WfOtbLWxb4PttH7tf9pwxDDj2pRh86Ss3RYL8u0j9/zLCEBYXVTY3Vbq7A8bGAm4/zeBgwNycdkcvbKMBDz/s4Zk6ZsMB9QOlRXjy800ePS4pqRFODvtsvrCFEHcGmlp/FtwV7vBeaTTwfkUBp6kpn5kZjbu1Q2Wzdw/ulXL5w4f6RxECEYaIYhF+zcD0/Hn9lkDZjaTI7p4nVFLkcpLh4Q9CcB1Vy+NHquj1GKGqgiIIfMnyosIL76bo6QkYHW1fQ7UqWFtTCMO21+1TTzkoSjsoZavF3/w0RaNpoOsQPX2SpQsXWLUt+iJ5VEOQPZRh4KDLlbUh2DfJ9utRXnx1lHjUZXhPizBzjc1qjC/vm2NkpAxcx29No/3wKkppG6JxiiWdxnvX2ddlMrP/fjJz75NwCiz6/Qx15PHZYmW7H9cyiK3WEH0+KTONpsC91ddZjfej9sYwdR1JiG/GiJZyMB0gwhBdlai6QPg+XcEKdkUhXmvQ7EjT6ojjOpDqa/cRE+icudSNvPKfMF48jYeHSBjEIz5Htl9k6mtd1FZ1zm9k6DNa9HTaSKsHVUvgDWWZudCNodTAVuhqddO/XSJPNy/+bIRvP/Z9iEkQBnLFRWk28A7sRik5+EqU1cJZpuwKM7H7kFENc7wPGaRp+A5LnSMMJocQnodSKhPYXbz982foGVlCrynMNx9nPv4SaTtgcnOVrsUiGcujn5BkrUotmyCoFyn5o+Q3kqwu9EHoYPkxJu59jx/XizSMIgU9D6spQtXACUI8fQ3TGAQvBqFHRgpauo/aipHY92OKhRZebRdKGKXaCgiDCp2yyFV7hf/WOcXQ3k7eS8bYuN5iXfRz5WInl5Q6HXHBk8c7EIrg3OYMBTNBfOsacXsAPVAQpoIwrxBX1jG6TGLJTQIvQqfVx6oQhC2Dfi3Fv5m4j1NrX2Z0pH3fJZMh6bREOi7jjRlKKzn+38FVmlEPLwxZu/QAY0Efvu9wbW6LL+0x6UraBDKk4fuEQYA/tQtLrJGOuVRr7X0EPQioDe8hqeU5lLiI35HGcCq0aKErDrZhMtRTY7grgwDSyTgxZQHPTCFL16Dr4M17V51bQAxIot4qryyFXFxeQXcdthYWiAaSjKagBRIdiUBSkFD3A+7vymB5Ht78IrLrRmuFULjhttmeg6QOIfT1hfQPrDM2ZBMxC2gRQKSZnt7Do48uU62GxGL9H+n1/iFCfJme7m7+cGSEK2++SbVWYyCZZJ/rojkO+D51RcEzTdwbc6sIQ1TfJyolJwyDb7o5ROgglTtF2hS/hvCrSC35qeY+ebc59SOMj4/zJ3/yJ7e89uijHuzaT/Nv/pEwFufatZPk81us5yBqGPg3grXOzk40TePwvn2EmQyt25WCFYFvamiOf+tGXyhxLYNGqXKzR/du47Zt+1MFpvqpUxgnT7Y3ghUF/dIl/LExnC9+8ZcGis8//zzFYhHDMOjr7iGNCq5HXyxFTZG0fI9Go8Hjjz9+1+MVP8BoOqhB+1kSqCpO1ERqO6W/O+zwz8VOYLrDbxyRyKcT2LnJrxGQAszMqPzt38bwPBgeDrAsHdOUfP3rNsnkh2M5ftxlZUXFtj/sM202BcPDPsPDIQEageejuf5Ns3MRSkRMJx5Tufdxje/9LEsyqN7sIw0lLG9GmTjezdLuDkbmXmtnHhQF4ft4+/YR/IpqkAMDIb29IYWCgqmHZLavkyosUFEy3PdHU8Cd6lJBd/fdPzcpCXX9186WAlQqym2J2BDTrOJ5MXz/IwsWX0WrjqE5RQIZRXNc8mWN//u5NKevRynXNVZX2xnTp59ukUxKksn2QqTVaqswAxi2y6vvR4C2kJaVW0K7cA7fjGPrMeyIQSIoM/ua4LncF4nt7cG7Knj57R4mRzeIJ6u09BQoFum0y49+NM7hw+/T8MA48xxefhw1OoAI8ywu9CCjHXSuLiHc72GuLuKbMUx8mvYkw50hrm+xFvRihQ4ZI42uGFhBg4yoUg1ilJs23R0+jjBJRSAQkqS/ia/FiEc8VOkhm0VwNRTPQETq9P7sGte/fgCt06S7V0JgM587TOmFN7g//48UfAvb6sC2IdO3RiRpo5zZ5tTu3+Lw+BmKixnmzx5m+j5Bx+/OUnzbBt3GUjwC3wQpUMOQbWuA2hUTJ9eBFdNRDRP2ryEtA5lMtQWtPI+yWyMWNjC8Kq6eJAhVdF0nUXOIv/QLrDBB6BjIVBIiAq8SZ23uHvyxMZppldD3GMjnGcznECkNGakBHkZgM20vUO30Odk6SqBqKIpP046idF1k9uAltq4eJI6HNmxwMnGB8lw/0WIUK2gyar5MU9yDyxA9NYdoocb6wefJlzcI7H46dQWUBEVXoSbjONLE9HP8oDSNkc/QO3cd5DBv7upG1T10YbDVKPL2GyMc2bXNwtwslmlxcCLPiWKTSqWHJ3d1ETd11MAgNfYqnpYiEnHQVOhNGqxXksSDXnb11dCOeaysaIQh9PdL4lfPMHX9ZSb3N3l24zLH1h1Wu/u5MnUfUq9y1Wywr5EjZaq0WhJfC7FFiBp12aZJl9VNcbSTiuOwnV9FVTQCFY48fRjvQJqLP1tAp8qIAvOqZM+RIcyeDvqyJyjX9jCzeInedARV2BgUEE4AzSZELbTUZbTpGUSlwdxGk4uLK0SSowjHxBbQBSwJwXENbC/ERzCrCu43FI4/+TWErlPbzJHtbCurhloG1SvfzJqGwgcFQtdGKalkGpuoTYGsKATRKLuPNnAcFcPQiMU+GjBFMYxTyJ+Z6IuL3Ds5iUin0S9fbgdES0sE4+NUNjdxTBPPMDBcFyUM8XSdxakpSobBDWGATz2/DQ0NceHChTusZWzb5tChQ5/6fAAM9JH83ceY/5u/obS8ROi62IbB/5HNMhGGPBgEqJ5HJJkkGBzEeeyxu57GjVqEwkV3PISUSEXgRQ3KnsvZs2e5cOEClmXR29tLf3//zWykruufWMJ3O8r2NsapU8iPHCPjcbSVFYKLFz+xBSWXy5HL5YjH45iqxr7OXprJLFevX2N9dZVjhw9TkgG7nzpM912eQyIMsWo2iBviToAShkRrNs1U9OZr/6WRUuI4DoqikM/nCcOQvr6+WwTAdtjh/8/s/JJ32OGfCSnhxRctXnjBvOGBBxcuKHR3h+ze7fPjH1t8+9v2zf83DPjWt2zOn9dZXlZRFLjvPo+pqeBmCa8Tj+D5fnu3GvBM/ebubTIpeeiPxnj3O6so5RL1lsa5zUGyQyZdHRn+86ygK72Pr0+fxxAeweQkMha7c+CfwNe+1uLE6yHRH/wAtVnDyER5cOga8ZfepvXFLxKOjNzy/97x44Qvv4xSKvHRVLBoNPA+9zlkNvtrfbbQzjAvLmof2WhQCIL2e5jmjdckGJVukB52YLG8ZtFsCr77/QQt0falzWSgXG5vArzyislXvtIW7/G8tgCW6wqKRUE/IWubGhELXA+0i+dxjTgCMFRJWevAS2XZbAq8jSi1vTbIEslYB749iNpVojOzSr7ag5Qq20XBj89fJdaxxfDZJeqNHF3BEXpje/DrAYMLJ1EDl1h9G1lvksnPsZ2ewEl1kbEypEyT9XqciB9iFssgBFIHPxSITIrQKXGga4WL+V7qDZOE3iJQTKLxgAFrC7/hEFS3CWppNAH4KSLCI1MpkT7UiZQhftjLxv9uMZw8R7RSIQyapOslmsNJUBwaNRUttEkXV9neNU60r8RacpDwyDb3P3iE8tYK2kWBseYRhB6uMJntPIgshEjTRKKgCgWBA16LIJNuZ2EUQane4tXXlikWq5TUBqJrAPPhTh5V36L3zXWEr6DOlVFbHsINaY19gcP7bd6JPdgWn5Y+CjrdhW0CqZCOF278TjQ0oWImdEb8Bb506Ed4szFsV8U+tMHZoYCInqZ32CAa0clVAmxpEo5cJ3LmAN3JANsPsORbHO7Zz7+d/t8YHe6gNvZvqTZHeDV6kcXNDX5ycpOIbhBIwaIziiESLCnHqDeWuHz96wRTCcaT61SDAl7okjbTxB2D2StrROImCWGTxObhe96Dyn+DEVo3ivlNBjpC4h1VXN/ADwRGBEqrKoYBAwM+Uob09bnMz8H95Z/ywLW/o6vT48WlKzihS9nIksgXMaNbxIefZu30XhZTkuPC42fX8hzdn0QXBmPdRRqmzkplkY0La0RG69jJGAPRCKaosfX332Hk+ANM3jfCqef3oYR1vnDMAr1OPHEFRfXp7xymI9nF8V0uSqVO4sxpUtM1lGIVsauEjMcIM50oK03efj+g3vDINd5j45xF1fOIazoRQlYVwQNxk5Kh8lUZkEp2IAZGAajWyu0cabvmF6mlEX4Z0AnUEgRNKjMLGNH72D3ocGl1FRVQGw2iooptw333Hb2tnFNFyBLqbPWm4rbs7MSfnkZdWMAJAr575gznPI9CGNIRi/HE4CD64CDXbgSOCdMkNHuRykeCS8VFMfOAIGh13zVbura2RqFQYGFhgY6ODrpuqJg7jkNGVRkIQ+rz80RHRlA+pXDPnK7z0vAwif5+3j9zBu/GM+C061IZHqYjFuOZ3/kdnF9ioeJHDPzIhzuDlUqF733vexiGQTabpVgsMj8/T6lUYv/+/bRaLXbt2nWL+NAvQz9z5q4CedKy0GdmPjEwXVhYuFkKPZHu4PTli1xfXgLZLvHVYlEef+hzdN9FIR5Ab7o3xQZvIgSSthK+G/t0Ik6fBZcuXeL06dMsLS2xuLhIIpFgYqItcHb06NFff8Nihx3+FbEjfvQZstNI/ZvHJ33nly9rnD6tk8upbRVW0e5drFQUEokQzxNMTvq3eHaqKvT3h+zZ0/Yv7cr4WI0WRtPFaLlork+ga/iWQWBooLTtTWZnVS5d0omnBA9/M0Fksoczm4NMP5SgfyqCqrYDX9tR2RI9jH+u89a+z8BGcbdABqB+fO+sosDk5RcZTlcYGNfo7Q0xoiroOvrcHN6BA7dmSA0Db98+tNlZlK0tRK2GsrmJTCaRXV1o8/N40SQlmUbKj7f0uRvZbMiVKxphKG6+paZVkDLP+DgkEhLhWmh2gnpT8u67B6nXVa4v6py+aKELiYOGorRVeBsNhVJJYdcuD88TZDIhQQBvvWVy6ZJOWPXYKOYYmbiKEHWC91chkLiewG4poAhyOZWGreCGKvbeFElliGq5B9PS8P0IHUmXiCqoubBZbbD/3mskkz7ZmQqOE2elViFrZohdnMF3AqSQxKuL6LJGvLxJzC5g2HVc28dpgtfwOGMcpx7pai+a3JA+d5GD0y2MzjjDiSK9WoGMqGBGbNK/PU5Wn4HtFZztIs31DCIQqIZP61on9ehhVhMH6Pyth8k536Tx3SYb2zEURaO3fgZDOgjHIdWTp6kmCH0PCTjZHkR/DF9G6Oi7jucFxFJ9pA6qvFQ6hjeeYMvqZC1xgILsQ/MCYlHJA+bFdiDq+dBZJeztR8bj1KwY331vhSAM8WSdph/FW8lx/e05vrC+yfWlcZS3dArFDPWWhZnU0RtNsj0pCmWdnNqPaSg0ggrRjSvs9pfQ9RZqaEGgEFUiZBsR4tUWzmSLICxhRbbQijXOWjZeECFoDTGz0cX5RRUluR8n0mK6OY/nqhjSZHdXkmd2/YLJXaOk9v4e0tEo6HHWK5t0ZVP09FqcXr2E08xCEKKKCdblH3FRjlAwszQqUcJaHx1p6EgbxDDwbdBLPuP5Czwwl2NqpcKu1EFSnZvEUiqxCAxmbbrSeUSixXI+weBwSMUzsF2FIGhx7txBcrkB+vpC/l3HDzhafpWk1mJWLXJdFLEUEI5PU0+QbLqcHqjTYaSpBAZ2pJvlep5mI0p3z1XI+my6NYrrc/i2TaKyTl+3YLxUpc+2MVottFoO4z+dZZgiU8cS7OmX9GYuETo1AkVg6nBs9zBJxUGcXEaaE0SHJMJQUYe3UEp1vHQH2ys+Jy8UyBVLqGZANacRND1+ogp6VRVLVelTBVYo8EID8w//O4xUWzhIUVWikymswkuojZPgXoOwgWdlcSJ1aq1+NpcSaJE42VQKzfdx3LYV2MhAiyMPH2H/bb6YlmVQzwUE7xS4XKnw1vw8VzY3CWMx4mNj/OjiRdZMExmLUa/VWG02eaVQILpvHyOtFq16nfsef5xMtgOpRNAaM6iJFfT0FRSjhKJtQXeMUMQIw3YZspSSn/70p7z33nv4vk86nWZ5eZlKpUJ/by/jts3ueJyw2cReW6M+O4vR1YX2KUpj33zzTUIpIRIh1tFBoVDAcW5sxvk+Tz/zDIlU6pf3Xd7Gyy+/jOd5N8uBW60Wtm1TLpdJp9McOHCAhx9++FOdU7tyBeXG2O5ASuwbKsRnz54ln8/T2dl50zKnUqmwtLSEZZgElToXZmeImCaapqHpGt1dXVy9Nsue3dNoEeuOZ7nRcm6KDd7CjfH75qd4WH0GXLlyhTfeeIMgCLhy5QqWZeF5HrVajaGhIebn5+nt7SWZ/HRl4b/J7KzZ/+X4pMqJncD0M2TnR/6bxyd952+8YdBqKayvq7f0QmoatFqCdFqya5dPIvExpcVSEq02EVK2F++i/ZjUHQ9fbwel5bLge9+LsrCgU68rzM/rXL2q0zcQUigbRG5br6gqFIsKBw96lMsK1Yok3fw5kfIv0BtX0esX0JrzBJFRuEtPFEGA+frroOtta4AgbJcVC4FwHMJUCnlbT5JMJHAffRTnwQdR8nn8I0faiquWxeK8wtKzM7y2MsWpq2lWVlRGR4OPDVCrVcFrr5mcOGEwO6uxZ4+P6wrKZYXZWZXTp8cZGFhByiLb2wpdMQ1V6rx/6giKaHv5raxprG/pWHrIypZJItHupUynJSD58pdbPPaYy9qaSqmkEonw/7H3ZsGV3Pe93+ff+9nPAQ4OcA52YLDMzpkhh+Ii0lwk0b42ZTlxeZGz1M19sCtOVd5SLlceUuUkL7kvqbqpSt0svq4b09KNr0RKsmRuEkVyOPuCAQaDATDAYMfZ9+4+veXhDIcczUiyZImKXfN9QaEK6P53/7v7///+lu+XSMTk4OGvkc5cx3YbDAzeJNjKs3MzQtvUsBxBxxG0qi5HnSsMijUOm0sc62ywWBhAICEUQSzVwPcF1xYz7ObjuI7O5lqOiFLHuh3C8VWWCheQNxfYq3okm3sYQtAJxbHR0BtVonobVTQYmlxCTAZU+1MMFVYZba6QDMpkRkPklDwzEzah8X6CgQGkdA/+V17EGetjddMlMr+KV4/iBzKeHGDme/DaAxSzR7F6j/D6wm9y9fsqC9cEN/YyjDurDDeuoKoWCBk90UTxbAJJIAKD+ukJAk0BBJF4CbMRJtobJ5WKUmtmWGtMISZHkQaHUcQYy8FBerUW+SBDqrNPyG/hDfcgIi5+Xz/vWmHqLZtoyYKlbdz1Ch3LxW400OemMUouesvC7AgsK0mxmMKgijQ0xXR/hfivHaHTEeixGjvtf0+xuUWo4GBabaKyxqTeg1pt0RgcoKq7eJKLruiEUnFWLIdreyOsFwYJRwyagUsoHiVQozzhneS/PfIur/Rt8ETPHaJqh+yp/wzXFFT1gKYbIt2XYbeQpyccZWFjnZJTRrJfRuK/QwgVT/jYfpjA0zFiDdxmimQujxs0CO+OMn3+68Qrm5Qdi76QR2rkOKG6iWRYpJMZZMnHseJ4YRgYqlGtG5RMjVTKIhKJUqk8iabV+OJTO4yunkculwmcDjeDfdp08AVokoue1DFk2D0W4sQJiGqLyJl95JE76BPzJPo0HBnsjsnu7Xmu7c0RX0hxwK7QGzMJYgqm5bP7oUvrqoa0ucn24RkMTdCjxMikLEZ6NHIHhkhENJSKROCNEMrmCLwe5PAWcqYInky91KGYnOS9K1t4pouQBRVL55o3QN1vMR8EyOOTCFnnXS1E7Qtf5PixY+iKRn88TXYoSbj2PTxNx1RC7FUiLBdkipUKdu7LOMU6brOFkCQikQhjIyMM9/czMzLCZOYgR16OA59kNe1yhdL5d7n+lyX+4/d+yNXVVYSi4Mkyt/J5zly/TrTV4sb4ONcchx1JoiQEOdOkdvMmPY7Dl9NpxppNvPFx/NggflRBN86Db+DLSdzoUQIliaLcxvPGCIIwS0tLzM3NEYlEEEIgyzKZTAbDMDgYjTIUj6OEQghJQlIUhCzTWlsjNj2N+AeWli4uLtLpdK29dF1ncHDwHqGpVqu0Wi0WFhZYWFhAVdWHlrk+DGfOnLlXTiqEoLe3l6GhIXK5HLOzszz//PM/EykFEKaJsrHxoGep51EOh/nrCxfY3t6m0+mQz+e5fPkyfX19JJNJkskkc3Nz6JrK5u3b9/7VD3yi0WhXAEkITNdheHz8gbVc7nhdlecfHXMQ3LXL+WyJ6ZtvvomqqqyurtLpdL2PJUnCNE0SiQSxWIxKpfKAKNYj/Hg82rP/6vCImH5GePSQf/bY3ZV4802djz7SuHmujf7ee2RXz6Ldugme1+1h/CUq6f2kOV9Y6C5c29vyQyxWAjIZn899rvNjlW5Vy0F2vYfK8ktegKerfPObIXxfoGndy/yY0M3NqYRCwUOPXSpJLC3JXLumYd05S3NnFY8QiR4VJB0RuCjtJdzo0QfvneOgXbyE5oPkeUh+gOx43cVagJ/J4A886O8qra8T+tu/RV1f7/YkxWJsbCtsbshIhkrKyaNNjSN5PtcXVQ4f8R44dakk+PrXQ1iWICGv0SMW2NnokOyPMzjo025LHDgQYFmz1OsT2HblH6KTAAAgAElEQVSYO2uTRJliLx8l3KmRKK8TC2pcXk8jqzJbJY1UKrhnI6Tr8Cd/0iYIuvY9H2ezp6bewJdNesIylYoCKCzuH2Z4Z4VQxKA3ZaJJDQ5Wz6LYNq1MH8NRB9V3mGwvcMU+SkquIysKl5b7qFUjTJycJ5Fqsn2nn9c//DKx/TIba5tUdmHYyyP0PEHNZUuJE5VDmIFGpA+UMQe/V6WjxlAPpHhS+ZDZqWWidsBjoXVmnAV6/+AFrESG5VWZnYrBbt97fKf5DT66+RHbxYC4nyFZqyOsEJ3NftqdMThyED3k8qb+KhUzzMaCib9VoFqD/K5Hn+JQqWmYgUSo1kQt2+jbHVwtSmOqHy+kIck28wszzM1P0rJyRGMujz1WwDACSqUo7Y7MtY96yfVYRAeTlHsmOBt6FsaGGIgb+KNJvNMznJ9bQ5q7gyi1iZR1DEnn5nYJ4Z1mpuMQrjdxTQfTFlhWB88TGGrAtjhIX9on+uJjxLK7/Ov5/4GtTobT+x3aA2kcLUpDdhga0AjXTcxMFtPL4XpJFBHDLGdYdjtsiyN0tBB9w8M0mk0kSQJXYnx/kB65Qo+0g+jxyT2tYEycRkqZODELsx0j0CIM5XIYcph2Z5QbpS8imf8SgY4qPBRfh0iDjq+hqWBEPES4TAqVYHGZ0/U5ZGIEQkLTXPqykyiSTLwjM3AiRyxkE0pm6Yk/RqMT4mY+AFTy+Qm2t/sIh7eJRku0tlYYLr5JKe/ibG1zmwp6INOUHeQgQIQMOj0Ge2MJJCReGfoStwoXkSMmDi5bZokb5Tv4vRrbFz8gEBLDtTDTlytYVxUqFyWWzwdc2RFsAB6C0dFxtgyDvtQoq/tHKTYmUMePEZ84gpp3EL53l5xoePYQUqZIEITY3M6yJh+iWr/BWsHDCclc303T8XUikThRt8XjhkG6r4+vTEzweV2HdIbB4Qn0nhS6uIrAJ+j47O8KlvYieL5Mrezwd9+LMb8+htLKk0q63Xf9LkFNJJLoSoLQ+ElkdQMhmvhWjcIPP6R+a4Lrqx22y2VCvk+7WsWIxTAMg4WVFQJN40YoRLVWQ9F1Zm2bhKKgGgbJ0VGmRkdJ6DrKygru0aPo4XMEehrfyBJoaZA+/jgrCNHA8yb54IMPHipspKoqe9evMzU6ih947LX22W/vA6D5Mmo8fi97/NNgWRZ37ty5l1mEbqb20qVL9PX1kc1m0XUdWZZZXV0lnU6TTP54v9WPce3ate578il8TJ56073sa/u8t/0el/cvs15fJ6WniGoPUdL7FPx0GmVxsVui/fGxgwBhWfy/gCvEveuQZRlN01hZWeH48eMoikJPTw83l5Yo7e0jSQLX9TB0nYFstkv8JYkgFGJqeuqBtTyQBKrtPLD+Cj/Ajuj3WTz9suG6LufPn0dVVba2tu4TlxJCoCgKqVQKz/MeyPz/c4Dv+5w7d4633nqLer3O0NDQA8/az4NHe/ZfHR4R088Ijx7yzxb7+xLf/GYISRJE7DLHr7yGXbEoliSyfR3UjTtIxWI3O/dLwk+a83JZolSSCIKuz+fH5NRxumWop087TEz8qHnLJ1CtDg/99AqBFAQULJ0LFzR+1K9cCDBNQacj+NEWUteFa9dUxsd9DMNnNvYWSDrlsoRhBESjXRNz4bbw9AEC9UfKgiSZ8LXrXdJ41z4A0RWFEJaN9WvPP6D8q33/+2jnziHf2WS/qLK6KlO41eB2pZdQRBDXXYb0OsrsDKmQQ0rpoGo+4eT9bP7v/95AxuRY9DUy6g0MuUbGWEGuLXBzawIj8kkJsuuGabVy7BZ7SRsdejeu0lNZQ/E6JIMa7aLN2r5G2UuQSvkIAc2m4KWXLI4fd8nnJW7dUtF1UBST0dH38TyDtqcQjelk4xpX5o/gDCRINreJuHVyrQ10YXEtdIik16C310dWZAzdYzyeR82Gye8ZVEWGQ8cKWOo6cxfC3Jgbom11OKOEEclVIgRky1AcriKH23h6kWzCJ6kKFM2DCZmWMYDU8VDlFi4aI70mM+NbDCsK2Widpf0k74Z/E1OPctn473nbWKXuBlT9DlvsMK9aZK1Jmq3HqfdOUzX6aDZdFvue45Y3ybvv6uw2Airxv6aQ/QEbvbf5OzVD0Moxu72LWQ6jDwTUEjHqw2lS6wVawwlu3BnlnTd/i0x2D9noZX4+g2kqnH58h5OxBbbPZohXy8QKq/iKAoGHrvqstnMcGW/gnXqFzoEXWPngBu5um8G1ItlCiXC1Qc0T3PY+x6BTQJcC0m6r6y+MjxAyVkei2HsaNa6zljjOv1/6dyxtVZE1GS/Ty2i1QVyvIYdNypLNaELBybWQTJmdYpRWO4TbkUj7gs1Rn0TCQtMH8ICGVWGg/iRxVybkm4xnlok/7ZKMPQ+hZ4EkQknR09Oh0IzhBoJWZZTrG2mWd8dQ7DiBp+MikzIsDLkHCxXDgHC0Qy48Qm/N5OnUCrlOm0qrhe5qWK0o6Z4+DFWhLx6HXJqgZwySE/iSxPe/IfH+N3b44M1lbixeY7uwiuMEpFJZ3J0imdJlSECoHFCQWsi+QPgBpuqjyRpnH8tQVRy+fODLvHjoRQzdYKGwAF7XM/PAgQOMDI6QbQsydpxwzWeykCcQEudaJt/3XBxNouU5rLgOFUlCGXiaC+uj+F6cphPl+t4IezsKg9o6itn8VLBLAkUgwhY79TSeVUBp3WEorVDY9qitC6xAEBZJng8e49Sx3+A/+bUj5MaHCKXT9OdGkUZGkEMhpPYVEIJaTcaQfZqOzMa2SqGkIwuPi+unaNc67JaSHJ9wCOs60VAETVJQU2kMMYDoHKMjTbLx7Q32zxnIfi8X1tbwfR+5UkGyLFzLIhyLUXNr5GdtEqkyiUQH1xRkKia+JCHLMqNDQzRtm+n+fqR6HW98HCWxglSqIs/tIiptglTo7vMrAAnXneXGjRs4zoN+0Pg+Tj5P/0CSi/uXKNtlLM9ir7VH0Swy0D9BJPNgQPBhEELw2muv8d5773H16lUWFxdZW1vDMAyOHTuG/KkoqqZpFItFDh48+FOPWygUqNVqDxCGdrsNs7DR3kAWMpKQsD2b66Xr5KI5YtpPEEOSJNyZGaRyuavw7rr4vb1UXniBj+bnHxCGgq441MDAAIlEgmQyyZEjR7i5fAs9kEin0/Sme7uaD0FA0/eYmJkml8s9SEzvzo3iuPiuR6FUxLIspGQC3/iH98n+IiCEYG5uDlmWaTQaND8OltElrQMDA4TDYVKpFFNTU5/p2H7ZKJfL/Nmf/Rkffvghe3t7XLx4kbfeeoujR4/+gwImPwmP9uy/Ojwipp8RHj3kny3eflvnY7XDA4vfRfI9hCxhmoJ43CcUU5DzebyxsYcKKPwi8JPmvL/fY2FBJZkMkKQuUW00BOFw11P16aedn5jMlV0PyXtIKRFdM4RyR+fGDfUBBxgAzxP09fnYtrgvW7u8LJNK+aRSATI2Wf0iPhqy3CVmudwnkdhAjePr2fuOq1odhKYjL6+A9qlSpk6HYGgY+7Fj9/29VCig//CH+JEYH12JUsqDLyk4jsT6Thhkhcl+G0cxqA0dxg8EPoK44hBNi3tR6SDolkYfjr+BJrXx0AEJHxU/EEiNZVr6cX5U/VIIQf/ORWLtGmoshFBkEBIZrUB5cYc1MY5iyKhqwMsvW/z+71vdcUswf02Qbm4SszdIDt/G4y7xlXVGE0lurPUSHWhhTR2gNjqLalXxe3uQJRO9U8cNNGIxGQKPsegW44d9mnWJ+OAggR7hnfM3Keen7tpbQLHTYqe/ylp2kpKfZiRTZ/KZOtnHbIKxFrHAwJMMRBQsO85+J0bbl6i5ERqOgic5RKo2m/UwtY5MZfoUpd1/w+3MJSJoBJ4AX6AIGYcme/05or3PUjaz1CJZ7hx7hV1jnDfe8KlUt9ge+jc4SomejoXjx7AkjWH9HL1uDG8gR0UbRklZKD0d4qk6i+em+O7iHzDQ2yI70oust9H1DhtrCY55BUKlOO+eO4KRjCIhI91Zw0/EQepaOMjJKOkvnwJZJ/nRRbS33iFumkieh+15pDsm6/YsdyIJJkWDHqeFh4QkPAzhcZ1xzFaKxb7nWS/28Po7NZyWTji1ixs2aM3K1EcabOUirByI8UTFB3R8vUlpboeW6ZPtWePg8W0m4wZDAzWmZ5r0hoboq/0B9V2Hkh9lJLHOiSfn6U2+gCz1ghYlkGWQOwhFRg91WN6PUmvE+c61JcIdhXAziYRAVx2EFGBpKYazYY71w3+5/03+tPU1rPVvo+Z3yWgasUwG3/cRQtBqufRNnyKZHqMz/TSBloS9S2z84Jvkd18nk3ibsNKisqsgOQEVr4llthhxywz1VPHqJmbPKLJpYjoNojZEM4MsvngcP5vliYEneHXyVQBGM6M4EYdYJsbI4AhT4SzjQZK+0WlmSgbRVJoUgtrOFt9yO4RjBigKjmkjey7vlOvUw48zmEoSkzTMWJpQTGN1V+dicYinxNn7AlfV/X5M06aWdlBEm5ZdolbW2Lyeo9dI41v/gv7gOAFxErlTXN7KEdYc+uMWWl8OEXQQ0TZyZwECk2ZTIwgkGi2J9V0dXfWodjLsNCbJDoaQHQhcn8msT8tyqdodbtcqbO3sUq/W6I8OsvX+JQLPR1UUVi9cwKtU8GWZQAh80yQ6lcL4fIhqPY8QAscxSYWq6HsW9bZPbnCQZDKJKsscHBhAuC7e4CDa2Q9QP5hHKptI6yXkK1v4yTD0qnjeGJ43TLVaZX9//z5yCNBxHLK6xo67jiIpyEJGIFAkBbvR4oPKBrdvbHHhwgXy+TyhUOiBXkPbtnn99df5q7/6KxYWFrAsC8uyMAyDSqVCKBRidnb2gbWk3W4zMTGBoigUzAI/3P4h14vX2W3t0hfqQ5M1bNtmYGCAW7duYds2iqLg+z7NZpPxI+PsqDuE1U/WYCEEmqyx29rlUO+hB855HxQFb3IS58QJnJMncWdmsITg+vXrDxVSchyHkZEReu4K68myzPDoKLfWbxMJhYFu8LUjy3iyxBe+8AVkWX7oWu6rMpdvLfHtd97i8uINrqyucGN1mXQ6/Zn2cgohqNfrFAqFe33HH5dNB0HAzMwMjUaD8fFxyuUysVjsZxKZ+v8z/uIv/oJms0koFLrPe/b8+fO88sor/6hjP9qz/+rwk4jpI1XeR/gni0pFule6Gm4W8JXuB0vXYX9fpqfHJVBVlOvX6fwY2ftfJgwDfu/32nzvezqXLqn4PmQyHrOzLqHQT/dQdQwN1XYI5B/5Qy/AiWgkQ/4n6rOfgsAjEarzO6+6nL2YYnVVxfO6Aj8jIy6hUPd4Hjpe8Km+KvuT8wjfpmpnWbmmEA4HjI97KApInk8wMYmjqiiXLyHqDQJdwz90BO/EyQfGoszNEUQiLOz1saD38oT4Ng4hhCzQA4ukIdOutGmfPPXJ5bmCUBQ0q4OlfvKJ0mSTmLyHE9yfBhZCEDMaNKV92v4A1SqcO6dTrXaFoRL9TfRMkb07GpGESjhhEFFdfnf6Bv9V33WC3/0tjCNjSJ+6z6n9ZV6+dQa74SLJPtnSFaoz45SmxxnMyMRDAYbuAi4EKrJiEYq4SOUWYdXhdG4e2+tBdPqIR23UoEPLDJBaBhv7PoXGBUYzw1wvqPh0MyRC8pAcBXM/S+2Ih3rEoGRGiNcEgeEhPeNDRcBNn91yko3RcQ5U3qPt7GG3HeqWzfnFXhJjUxh+A71yjkXlItG7ZF1I4HkgBSAJhT17lU6PwXrkZRwHpidcFn5QIZ9v4/fdItCalNweJEUl6SskNJecrbA/WCPm9+N7UCocwJMUpp68SNx0eObkDq4+jBT0E9R9EE2irRYX353hxSNVfF8C3+32IWsqUjEPfT0M2OtYK7d593+9SG1sjOkf/ID+cJg9y0K2HUw7yp6k8jlpkf9Qf5HXkkmeid/mlLmN6nnclscpen00BsYYHY0R8X00FTp7/YyXEoxErpOdarI3rOCGBUlJxz6axDi/T9Nskuy3Sdfz9J+oUw5iKNUGs8E4IRsGpx12lB76U8MUCm2e/v0xItkEYk3H3yogdlaQ+g4hYhrQoVeTifvwH7cWkPo2GFIVwlKWrRoUzQSuIjEzUaQ3ZXB07m85MnybRqjN1e0WJdPkldstUidOkkn3UTdbbOxsU/rGf+C53/19MrLPykcXOX+mRKeRY7nQg9n5PGN976BHLrK8lSUqD7LTdnGzCd7rPEFPcY1wAyKhQ7QP9HE92SR44jGMnl5ORYd5ceTF+96lVydf7RKP6h2Ggx6iRpyR2Cj+Vx/n4uJFLuVSbLb2aO5tUDUDyq02BAFRH5b9Ca7/4D3y01GeOz1EJ+hlfdWg0NAIgij2nzyHdv48ZsPjWzcPsWencMZ+k54zb1NsN1ne81m5fQWwaDtjpBMmBzMhensmMTQBuPxgeYzx3hphzUM2tvBFD4ExhGjOEwnbOJ0ke8UIigKa0ma5fBpd8YioMvFMhjwJ2sp1HEMQj0bAtqjaFq1mi1s3F1HDEZx6HVZXyQUBi0IQkmWkaBRFVlBZQrWneOKJGc6evYZpejiSRDphU7cNAt+n3elwNJfD932K+/tsvPEGQ+02uXGBosigdomn+uYNOsMn6fgnADh06BBnzpxB0zSSySRCCFzXRdM0xj5/goUPX0cORbFNm/JemWa+RrFlsqD7ZJU7SEJC13VWVlaYmprii1/84r2+zjfffJNarcbq6irRu2bUQRAgyzKDg4Ps7e3dEyqCbiZucXGRVquFbdsUlALtTJvZA7PIQqbRaXB58zLxjThBPUAIQSKRYGRkhEajgSRJTExMcNO8iS3ZRHseLNutWBWCIPiZe08jkQiRhyjK+76Pbdv0/4ii8MDAAF945RU++ugjGo0GQgjSqTS/9fLLP5HAbW5u8uFHZ7o9qaFPSpO+853v8Ed/9Ec/kx/rzwvTNLl48SKVSoVCoUAoFOLgwYPcvHkTx3E4ePAghUIBx3GYn59HlmXOnj3L9PQ0L/wK9j2/SJTLZba3tx8gMZIkUSqVWF1dZXJy8lc0ukf4ZeERMX2Ef7K4r39SfFI+5HkQb+2hnltFtNvIq92f9ksv8UDd6y8ZsgylkswTT9yfHT17VicSCThw4P5SXt/vluFqWoCqStgRHa3VQYi7lvEBOLqCq2v4VrckeHVVpr+/S3QH1Ev0cpmRsRapss+XZtJYT7+CK6IoCly5onLpknr3NgjyzmEG1Kt4hO6R3MD3+N7ZU9woT6Cq3ezr++/DSy+ZTA7IKI5LMDyCMzxy/9gftrm4Kx6xtN+LEtFZ73+ckfwVJDx6NImwD7uJwyjD3Ui9H4CiBqT7AvgU5xYCcv0mQcd/wBLQ8wSTB3x2bjcp1+Fb3wrdU0EWAq5t9pNvxfjDF3ZATyGV88StPJFjSZSwjHX+bYLlFFuf/wqXroVplyz6L61x6qDBxqpPpSqz35ggc+MWSi7CwcNR7HU4dXSfs5ciRIIaBC753CTjxTNE+irEpRLb2ynqBQ9Vb1I7fAJnv5dhaZev7T9GodZhOCQxEE3QccH1BG5knVZ7AE/yePzgOstGinqkSiEsMWX2MGCA32exfHmaD3o+h2d6RDs6eiiNpuzTcWIU1D5Ku6uMDR/HMRJ49Ra2pxCSuzdTVbtTgg++6lJ2pvG87n06darDN75xFlk+RTu2ht/uh0ChE0lTaNkIUcEKq3RcCzoKBDZBrgc1IuMZkzixNE7sNJrtEnjdeRJeGNnsQDSOEFX64iYtS+2+C4kk8cIyY4s/YKO+ixfdZGTZoZVIcL1YRHUcntXGuGqH8R2fRFTBcl2yTonVxiivKb38P+I0PaEYuR6fbX+QF2ensTsNVDXFM9Ig+zvv4ClDhHvfp9ctM76u8eHnYjzTM04o0qZ2MopxtUax5LI6XeF6Q0ZSLHIxjbDm4LgGoa19EulzuO6X+J3f0RkeTkM+QbDmIjoqgSzjb9zCkxXcyTRWIHh/9RZrVi+9mT7SSdBMmWi0QScG+bZOKtYktrbKbwxexTJW+fbmPtVOh5vtNmXP40vXriInk5RbLUJC4KfT/M/v/TWJy+8wHHmWeNDAUwSa7LPXbvDtq89wZHAFy3Opr99Bjuk0YieI9UJjZJir26fYyqegrTM62ODU4wOcPpxEkR7cAkhC4njfcU4b08h3Hw7Hc/jBymX2SirqwAxbx0+yunkHzzWJBRKmIjMXMQhMmelQG92vc/bKVRgZx7srouY4AvfwYdzZWb72f7jYhxUCzceu72EX6yxsXkeVY8xMfY5adZOZqWcZTEcYjY+QSfbjOAE3braQhMuVzQxfPL0GbgicMoExCm4VYW6iayUcFAy1w7W9lzHdOAnNJhztvgNuIGO7LrIs4wcBYVWjYpnIskylUmX8iSdp/Lv/C+7c4aCusyUrOKEQge+RSCewEyZ9nSYnn32cZFLi9dcXkaQAYzLCuBalbttYrRYHkkkufPABpWgU9/p1btRq8J7LgQMhZmbiZHNxAiWCe34GHjd4//33uXnzJpqmsb6+jmVZHDlyhNnZWZ566ilut27TLubwL21QWdsjkCVWSxWWXZf6Ro3c7AC6ruF5Hru7u6iqyvLyMtNTU9j1Bvm1O0iSAO+Tfk0hBLZtk8lkyOfzbGxs3COmc3Nz1Go1jh49ihEx2Ha3YR82lA3Gx8dxOg635m8R1sM8HnkcgE6nw61bt/jCF77Au+++y9bWFvvKPmvOGvFInMeOP3af36Ys5J+ZlH487ieffJJ3332XSCRCEASsrq6yublJX18fX/va1xgaGuKll16614M6MTHBxMQE7XYbSZIwfsJeQHgemtnBXN3gqbEp6h2LzUa1q2ZMt+f3ypUrPPPMMz/z2H8W7O/v881vfhNN01BVlWw2S7lcZnZ2lt/+7d+mp6eHZrPJt771rXvBBuBecCKTyXD48OFf6hh/majX63jew9udJEkin88/Iqb/DPGolPcXiEdlAZ8tGg3B/r6EokCkkUe36iAktEqeQ/4CkiqD5+EeO4ZkmijLy7hHjvxCxZB+2pxfu9a1i/lRESJNg2JR4tChrh9pEMD58xpvv61z5YrG3JxKqSQxPAFeWCUQAk+R6UR1PF3lzBmNd97RaTQkikWJlRWFgdBNDvX+kMERheFRBSQN4XdQWjfwE8dACHp7fa5dU5FlSCmrpJRV4sodDG+X4ZGAsOFxdvEQc3ufJxzpjltVuwT75k2Fg8c8DM/t+qp++j7+GEGIIBRCnZ/nRiVHx1OwjCSF1AEsJYqXG+TOsVcx+8YxQl1ypmlw7JiDpgb4soynKgjLAiHIDqsUlxdxva6YlO93s7zjEw5jIzYF6Vn+79c0yo02bcfCFxajI9DrlmlZKs89LZFL1Uk1tzBiKrLvEPSlIZ5gf6nKuXc89iPjBEtrVGoyl7dznJyuMj1mEY/HSfSp9Ip9wk/20qkpDPSm0IMqu7sSbdvANcKMZso8kf4QNenjFXTUukXDD5NvGrS3iyxGj6MagqXtBsn6PrJvUyvHSUZbjA3CWqNNT8Lk2ZllTpoLZNoWYU8hJ2VRkzEuxr7I+6UvEVMKWG4JVXFJeiYdQqzezBF4HimlyaXew4T7R+m0lliXavSFbDxXItWw6K1aGNU2PfYQsvpf0D+i8uu/bhKN3sKyXsO2BWv5JB2jTFTTURSIJhwaZhglYXOkmicpj+APJrBljYmJCjHR5ubo51hac1leO8Piygr5gkQ4lIK2yxcfKxKW22S0MtcWNBSzgWI1mZn7W0qhKG1/nb54gKeqqLZNtFKhoIS4UOhjTMmhiwi9hgOKT8kvshopoOguiajL1PBNyn4GSZ8mcAbZ2I2wvy8xW1mj3lGo+20GjLP4ukcrcJjZinEwaiFKW/h7JZp7Jt+96pKajaCpIaKaTEcGS2pycDKDHtgMPDHB8ePDpNMBinSJ8BtfR05GkfwaCB/XcXCtBnKjSE2omHKZev4gmZZCeqPMwUgLy5IxawEzAxVeeOkO/9L/JoORAl/f2OBarUYAyEJQCALOOQ5LzSZ6KsXW0BC1yQipiM3i7SQhuU06lCAANkoWu9WAsO4hSxo94Vv0JG22mzojiRg98Qg3tw+xXhxDVgWuA/GUTFVME/gSg4Pd0v26XefNjTf5cPsDruxfZre1ywE9hyLJBJ7H0tI51q/vdLN9uk41cPje7RsUDIUNWaaqqmRklZMhgSz3k4zk0P0GQ2KbtjpAR0RIpz1efLHD7r7CpYUQt9a/y+rqBxSLqywsvUu5lScZSTI8JHHq4EnCoRxCUvDCMjFHp+LUMOIWC3c28dRFjk/+NaoWIKwNfGuF2zasigzX7PMsOxZzGy+AHqJa7WN4wCMZ93Fd6O9r0BfOgxBsODtsuFv8ffUMm84OIaEzWmoS3d2htbUFsszs2CSe7aCEw/SmYhw74fLFJ8coECA0idnZflxXpR0SNOoxhiSDz/f0UC4UKKXT/J3vM7ixgaRpSJJCoyFhmilk+QDh2Cy+FuNCpcL8/DyhUIhQKEQ2m2V4eBiAV199FU3TMBSDi40bXL61Q6MvzqplUuy4ePUOulDwLJeeSAxJCFqWxeTkJI16neODo1jFCtcXb6CrXdIbUjVsr7v2+L5PPB5H0zSy2SyKolAul9na2mJqaopsNkvRL1IICmiydk98ZmVlBcdxsLHJSbl7JDMIAt5++20GBgZQVZWoFGVX7BJ4AY1G457Kr+u7DMYGmUz+fMSit7eXgYEBCoUCi4uLFItFDhw4wOTkJIqiUKvV2N7eZmZmhmKxyOLiIs1mk76+vodmST9ey4Xvd1Wwg4CNzU0EEFY1ekNhCu0mwL1S6+np6Z9r7P9QvPHGG6iqeu980l3Rrnq9zvPPP08oFOLq1av3MtSfhqqqVCqVf9LE1DAM3nrrrfuCGR/DcRz+8A//8J5X7c+DR+HWZ3kAACAASURBVHv2Xx0elfI+wj9LPPVUh2JRYndX5vbkCxy6+DcI0+Kodhs5pIJl4Y2N3etpEvU68vo63vj4ZzbGYlF6aA8oQKv1yUJy9qzGwoKCYYCqdqOym5sy3/2uzm/9lo37KbGF69cVFhaUu4qxAWNjHiMjHqLW5PBjBrr2qQijkJDcNnJrGS86g6bBV75isvT994m4t+g4MeoMMTZUpyfdoT3wu1x/fwjjIRVKigLX5zVOnwrQWjay6yEC8CVBJ2zgqw9+TvxcDndsjIndPc41JwmpLn4gqMSGcZ54HDdQeP5EhUTSR9MFkcjdNKkH/q1FwvPzYJogy+ijoxw/PUL70pu0yhJuTx+ZkyliYRMnfAAmL9DRp0hmNSQpQFY9ttseRmqYl0I3Wd4Ok+1dA1mBwAdNI4hEEAiW74TJyrcpSM8jbBtFEUQVh3dujfPVx+f5YH2U1eJjdAKFjPQcEyN5Hh9pcGL0PI9PLOA4IbzAYt//iPW2j7QYocAk+3OzKKZF20ixl5wiUDRyjS2ejbxFSLVwcpNMufPs14YwCwPkqs+ipK9xRMzheALh9ZPwJmiJDs6GSzy8TMY8yZXtf4Ghf5e9ziAXKy7h1SoxpURDDtP+9XW2yxB3JAZSr7Jm/p/cqgScaFaI4WBLPk4szr/KvETC+ktKB3+HZPJNFKXB8HCbz3/+A2aP9vJXS3U0cwJVEgihEs34XNdHmU3myG0FKI7D+FCebKKOczLLztINrlzbo1iNIwT4wXvcXLnFs0e+RFI3kSyfbG2F//zoHj+8M4q0sYHqtInaV4ilXD5OhfuKQtz32fFz1GSXQEj4skTBHKS3Z5/m2BdQiiVCoZu4QYuNKiR6M2TDPaiyDbKCUa+wuydzdDRHfS+Etv0k5p7LqekCiabJfGGEQ16T7Hyev9nsZavWT2y/wUC8TakRRnQEjuJSaFcZ7EsRGe5hZwcUZQ515x3Mcggj4aDLEsJuo8o+HVnglnRMpcSQd4mR+Dj1+TiEZRRDoI1eYTi6z1fTt5mcegplxWXrVp0PNscpedO09A6h/u8iaTaNvMueGyIyOkpPT4p+5TY+MpIUZq9SZCYzgopLzfRRZAlJ+LhuDNnqsNb2aTYl3t00cdoOtys5wmEHPBeQCTJThMMwP69y8qSDQ503Vv8SxdGJul3Ln7q9wzuNt3g+/BjFSx+RL+4i1RSUvT0IR7B8D0mWcNsBUkglrIQ5qqg4gYPaSeD7MrIq48khMo2PWFB/mz/90xYAhQKcOfO/UCotAQGKouMHoPoOy9sbEExydCTBXsXFCTTMhoKa7hBrtdECH0ybY33f4ZZXJCGWyEWmWC7kEcEN9mMtdiUHp26yu3ORKWuSg6MbNDpTlIoJ4okYn3/SY/OmzabYpOE2qHaatDpNJFXwfv1DZluDHD5yhOmdHfYicaREkhP9Ayg9vZDuQ5p6H7c3RfhuJicS0XjmmUEkyeXq4FMEHsz5PpV2GySJyuXLtHUd427PcNfqQ2ZjY4tsIoU3Ps7imTMPzeAFQcDi4iJHjx4lpsUwagau76IJDc/1iIsQZtBAVXTsTgcv8JF8CbPZ4Nq1a+B6qI02xw4fQVVVVFUhlUzSaDQwZAXLc7v9npqGoij8+Z//OfV6nfn5eRKJBKFQ6AGVYNd1cRznXuaRAIJPlbc0Gg3qtRqK7SB5PhowK8ZYVG5TrBbxfR/Ls4hqUZ4fev5hS+M/GENDQwwMDFAulznwIyKHHyvYvvbaa9RqNTRNI+/m2Xtvj8PHD3Mge4DTA6eJqPeXBKvtzl1Rv+59sS0bPwjQZYXeUISi2cJxHFKp1D9q7D8NjUaDer1+Xyb0Y5imyd7eHrlcjlar9VDiBtzzp/2nCsMwePrpp3n//ffvK91ut9scO3bsXh/xI/zzwqOM6S8Qj6Ivny0kCWZnXXI5DydQUE4d5LHTguTyZYJoFHd2tmsX8zEUBYToktVfEH7anFcqEtvbD2ZMCQLCrSLHg6v41QZL//t5Jue/R8/aVexwgk68914Z8PS0ex+5/f73dWRZ0Gp1bWHW1hS2t2X2t21AcOhA6f5zibvXHe4S8qicZyb5Hr0DYQayHuPjHvGkAkJGeG3OL848YG8D3ayppgWMT/p4uopjqDiGhhvSCJQfL93uTU6S7gu4fTOg5WjIfSmcQ4fwUJjos3jsaIeI4aMrPiLoyvR768uoFy92U8uaBoqCsrxM6O/OEOpP0Rsv0Oeso5TLnKm8zBuXn+PdM6v413Ry3i4oAkfRkSSZBi7jwwMMx2qMSJsI1yGIRvGzWRBdsaw7Syaa5LI3fBKp1UI0GiBJ1C2NtVKS3UYMXXZRojra6DgLix4ippCN3ADPoObfYNv9AV7Qoer1sR/PsZV1edt8mdu7JzjfOsLtSi97tTBuoca/mlyhJFbQe9r0JyoMJFdJNs4xmRrhN9yAw9IyMTJoUo6Q16anscW+kyJZ2yf1zXUOrr5Da93ivVCb96IGV5IaK+kQdWMakzS/+cI6uUw/jpUi0feHDEqrhJvbtLUY/fHDfDX1FbZuplhZN7C3PmAjHMF1dTStRaUiUdzPENRG2FifoF0ZwGkl0ZMN0lof/+N/PUnq2QEOnOoQPy3hvjTBtZrJ0lKE0l6C4K5Us6qqJGJFhgZD2O4Qs8518FxCqsdsX5mZ/e+TlfdoWxXaut71ZRQCggBZkrjRCmP50KsP0ghCqJ7NOWmWD3kZTTnA7IRKODLBbCvGeP48+VINv3EFy9pEk4eJtuu06y5PiwuM2h4hS+A0o8RjdZwphXClheS5/O3NQTRFobUjGHnchI7NugttHPYbZVrRgIb7KuFwDzcXr3D26z20rjZZX9WJqDLhkIIQBq2mRqe8z672EWq4zUB+h4Rax5R1FnMXifYvMZ5ZZ1mvcSlfg41B/u37n+OGlUURMrgRdhtfwJca2KE8tuKhGiqZWIqEUiZAotxI0WgMYgZPUiincDwby7WwHZ2ofovtSgUnlkHXH0fRkliJ32QzHyPVk8CPZDAjE4xOymgatNswO/sedeXf0quvkI3vEdLa1No9CAETue8TnJnDCBWQtAqybNNyEgStInbw98w+ZtKftnAaFlrbYERX0aIhBvskFDmJogwCOslQg9/7bwY4fKz7UXnrrW/zwx9+QCzmEY8XMIwyLbtEuyNjtXxGMwmmRnL4qkrLT+Fg40ZSNEINWr6P3jcHU8tEemSaVpNSp0VBquBo+xiNNtVrFiElzFD2Fo1GifSmTbXuEe/vcHRygVyulws7lyk4eZJajLnaCi4+xXYFKV9C69E4JuWIjIwQKteIJhIomSzS2ChiLAp6Fmmwga4YXLghc/nKY6ytDbOwcAxVDXC9FhMzM+zn81SrVRqNBpZhMFar4UkSnueRSCQIOh2y09O4zz3HhQsXHkouFEVBURTG7wZTdVNnbX0NExNdVrCLLXTJwHN8FEkiFU9QbzUplEoYoRC5nl4i4TA3lm+hKQodx2FkaIg7m5vYdgfLdbAsi52dHeLxOHNzc+RyOTKZDN/61re4ffs2GxsbNEtNWvEWutpdiEZHRykWiziOgy50huXhT9a8chm30WSwr/+eans8iDDo99HyHWYOzHAqe4rnhp5Dlf7xXqDNZpNr1649NAu6tLSE4zik02nWWWdD2kCSJbZ3twmnw8wV5xhPjBNSQvfWcs2075UXa5rOzs5OV8wpCFAkibLVxrZtXnnllfssd37RME2T69evP1R5uNPpMDMzQzwep91uP2D/A92gRjKZ/Cfva3rixAlM0+TOnTu0Wi0kSeLJJ5/kj//4j3+uMvBP49Ge/VeHRxnTR/hnjcFBn8HBzt3fjuEunXp4ua5t4/8j5cV/KoL7S1yPHnW4elXj0w2TwrbpnJvnuZFF1HPbhL/xLU5Weyn0H8YTMkfe/N/Ynn2Ozad+B0mCvT2JePyTLKhpCoSAK1c0FOUTkUvZk3j33BhPPrbNUH/zk/P5Fr7WJeibmxL5q0tobhJFEYyMekQ/zlIKBaWzQyzmY1kPEs12WzA8/OlsrHig3/OhEAKOzPLq/wRXr3aJdMaweWy0RnbQR5YFe9sya5sKV7ZiyKrElzZeZ2zsU2lbx0FZXYUgIKincBhlcS/Jv37nKdpKnLZUw84P0zbD2EJhNr6CqUdY7Z+i47lc3cny1a8OY0tR1Pl50HTAQ7J3EZU6cquOlwkxKn8PaSqgWrZodLK0bBXbiZGOWYiWSZDNQa1KOAxzf1/mc5kbUF0i7+5RP5jB6u9GdZWggxufYDPwUVop5MAHSdCxwfUkOp0wf/SlL7FQr7NVqRC1bT4XKrNzeIvX3x9g580Jsv/pHSLePhGzhRQTTDbmufM3wwRti0ZI4trEEkH+C0RKE5SlBJVIATm9T7ga58TBcfoTi+yfeJKid4H0RxJx+SSxWADEOHcugmVJaDpkgttsiUE2N2F4eJZk8hY3bx5H8WUOR3vYrRsIPIyl58ikNaz/j703D5Lrus48f/ftuW+VlbWiFqBQhR0EQABcQUokRZFSa7NMubsjeuyWI0Z2uHvCEzOOjmiHO2ZalhRW2+FoR3ussXvksN32WLJMraQoifsOklgLW1WhUHtW7nu+/c0fCRYFkbI0MrXZ/CIyqvLle/fet99zzne+0y4yMngVL10h0BSE2ESS1jlwYJV0TGf+yjjrq6+Lj4Qo1ue4mpzBSYWQhaBpNWj7beK7poisrTDalyXvuBja6xGjAEvTmR0/SvhMDUvVaPthvpq4k6eMEYLyIIoS0ClrPKj8Dbp1nrahMCpmWRZDuPUQhfbjTNdkjsVmCYRAtRqkUam2NNYaOUzDYGBIoT44xAgVWtciWAsqJ/8mTvxdeeIDLkFERo3bLBTCnL70WcYGPszCcpZEwiSkODiyzMIrdbqhK4znysSsBtfaFtZEmIoTQmt12Z1epZ2cI4eHEBKOY9DuDCIqZf7z8t2kpVEk/xxyJEw0tZeIG+NibQeRqX+PKK7RCXXwAkEQSPi+TKuzj2p7H/2WRhAYlDpH6Frr9MWXcdQGyd27iUSjrK66yPIocbdO1TOomwrRRB9hJdhiJSjKApHIAusdC1wDXwji4SoT/ZdJRMqEqvNsdlWS3naEbxDSOiTjl+mMzbHD87jQUti+PcHMDh933aL5Wg5ZDRMN6xy8VWdiQgG6uB2LoWkX0Gk2mxQKl4nHG8RiNYKgN5nu69O5UqliJGaoRifphgdRAoirTdpeBrMVQdJ9ovEmxcJXaJ6ssXROZnJcYAwGpAeSgI+62cHXBgBBtVxASy9zh/48k/MJTnr30A7289qZ1wiyAfmVOn+38Ay25+ARoMcMDsUDakG3FyXMZrFmPAwPpP0+Qe47iLRBoKfACXHm1R1cOZXB8lqsV6JYVojLlwNOnFjn6NGjXL58GcMw8DyPUjjMywMDTKysIDUalFWVeirF9IMPEhGCSCSC67pv8cztMDQ0tPV9cmKSsfgYu8K7kByX2cZZGo0m1aCMLElIfsBmPs/o4BCKojA6NAxALBLBsmx27djJlcUF7rj1VjYLRV65NIvv++zevRtFUSiXy/zBH/wBw8PDeJ6Hqqo9eq4b0L3SxZvyGB8aR5IkhkaGOHP+DDeHbyYIAkqlEhsbG7SqNVKRKH7gI72u/SBAD3T2Kzt5cOrBf7RB8d0wDONNKsavo1QqMT4+jhVYrPlr6KL3svQDn3KpzEBugKdXn+aDOz74ltun0yl2Tk2xeG0R27Zp2xZBEPC+973vH0Uh/WGQSCTeMloKvTI+rws87d69m9OnT+P7/g103k6nw3ve854f6xh/UvjYxz7Gxz72sS0V6XfwTxvvREzfRrzjffnZgOh2kTc2+N4wpXBdrHvu4S3DgT8iXj/n0uIixmOPoT3/POqZM4haDW90FEWTGBnxmJ+XaTYlLEugnj3DkeE1DkxU0R9/HOG4VKwIEbtGK9KPpxqkNucoTB6lQ5ibbnLeoLgCCwsyi4u9XKXv3hXHhm3969i2zu7txd7CIAABVubdXLyk8a1vGWS0eXSpie9L5PMyQgQkEsHW+trgPi5dUvhuB6znga4HnDhh//9L0XXdXo6oLCPJvXI0e3Y57M01iacEkiRYuiZz9ZqCrkDYCGh1AiKnT9J1dTKZXg6cvL6O1GiAJBHoOmWln//y+K04voLbssgXDGp2hK4fptZJ0vENhtRNhOdRdPu4926DO47aSKqOVK8hTBPZWkUIH8qX6JpltMMmir9Bqaoihwuo3WXOXhwnbbSJNHrF7KVOB3VzE06dwix02Dtug71Kq7VJYrGFE1UJ4oKOFOFCdx9LVwY4fHSQPr9FVi4zk9wg52+wnDnIoZ0tBuJxZkyT4eefxyoWCY3FaAVptPUCG+e2obZt+qQyxlWHzBc2uNrajqwqvLitwLnSe/GlKGHRxErpGIaHaerkUv0c32fwn/+fj3Jh+TLFYh2x2IGqTautoaoOllXDNHulgBLpZRo7xpBlaDZl+vvHeOaZETTNwfWjaNYuVCuHZ+vIcsBY1mGtkiMxshtNuwJorK9XqFQkLEcwNpqn2QrTal430mWVeHYfE9Zj/J18lqfFImfkAmeibdKVDqPRAdqSoG7bKJKEYlnM7d7DQjbPov+/cyZ3jAuDB1gzYphOzwE1ffMaUzuKjC08TluAQEL2VYaGX6EvMs8HWk8ylr3MTrXBhp9mvZOk1I2iSiAeiqDE+hmwKpheDMsNqBtNcONsVAWnzjhcWoxyeiHDHQfvZyyyh6HoMIXCMq5rM7/RQjE7ZJpVAsen2kqRUJeIrNRIC8gUA3I1n30VG80UnEx2MSSdRifLa5fupFwdxmvZnKtNE/VDDI5OoPUfAyWDHg4xmMmhO3djeo+SU5psawUEhkG+vAvTSXLPbUnq1jbMto4hPOqtFPtHXqOpd9HjcYIgIKY3eV9bYqZ0hXYzQqJRoE+02H5LClmV8H2XdPo8R45UKLTyBJ4DQhAgEdVrJMPzFOdsqEtIWhdXLlNy1tH757B9GWELKp4DpsxAKMHgeBRjWZANYtyzfz+ZsbGt56ykaST27AHf59pTT5E/+TLd+nl8X8WWVHpMUQnPC6NpLpHYOEKCXDxEuk9hT6jIZOcCY+Isi+dOs7Zyib4cWI5EvabQqHZIjyRRJBuvIFPy0tRrdRqNOhGhsMfXWb7i8+rKOhuKxGxtkdV0lWW9QDQbJ5yKkBpKk+hLEHQ7DDgGR9RxDMOg67ko+5KIifMgDUJ+GFFPYXnb+MoTO0iHdhCIQRxHJpBhfHwISTpMIiGj6w71eolCoYAkSVwplXjZcVgfHmZpYIBKNkuhXGZ6eppQKMTc3NwNUT/f95FlmbvvvnvLkFNVFdd1WVlZQVM1hhJJJvtySEIQjoSv328KY4ND7Nm7B0nTkK+XHGt1Ogxm+9m1Ywe33Xwzt584wRMvPMfAwMCWQSOEwDRN5ubmOHHiBKVSr3an53notk5Oz3HbPbchCYmRxAiFpws89ehTPPXUU8zOzhIEAfumpmk2GyyvrzM8MLA19nqrSSYRZ7VUxHVdUqnU22KgyrJMpVKhWq3eYKB6nkc+n2dqaoo1f41W0EISEp7vUS6VKRQKNJtNyu0yd0zeQTLRoziLABTH23Iwx2IxRkZGyGX6yExNcvSW4/9gtOftghCCaDTKa6+9RrvdRpZlFEWh1Wpx7NixLYeFLMtMTU2xsbFBtVrFcRzC4TDvete7bnBq/Kwin8/z7LPPbilA9/X1fV9Hw/ejLP+oeGfO/tPDO3VMf0L453iRi3odqV4n0LS31eD7x8AbGkIqlZAKBQgChG1DEGC+970Eb3NeSCwWo332LMZjjyFkeUspSCqXkZeXcXftIhIJOHDAZft2j5mhKnc3v8boQC/3Q3vxRYSqYDoKge3QCaXxJYUAQWA72DtnOH78xoLrhhHwyCM6ptmrUSpJPfsTOcTuqRp+u8nNY1dQ7A6SL+Ok78dREzzySAjDACeIkNPO4tOLuFarEsMjHhIenj5EdGiSZNJnbU2m0ZBotwW5nMf732/yQ5dGc130xx9Hf+op1NOnUWdnexHrkRFU096qz+r7cOGCiqZCgCCkeJy8HCV45RxzVw2EFNCf9VEqJaROB1wXb3CQJ9Z2c34ji4/Ecj6EEtJwAhNFDoiFW6iKSyzUZDy6zMFPVPifP7oNV1NAQJDJYlVKFC6XWD+/ht5nY++Cc+s7WMmnCDwHV80QxGTC4xkuX86StvMYdhvRbqPIEn6phN8xObK/g6mnWGvlUTWBXjC5PLOPZX2KjWtZamWDsdQI8W39hHYMEEyOI7pdWq7BwaENlK99mdLzz1Mtl7FsG39hgW51juzoAGNynljHJ3SphbFQRTc79ClVSnI/T/aFyLf2ICs+Yc1HyqbRI1ESqTRdL8vJV0+wtArHjz9JsZjm1MY07bmAdLKL1fEJhdq024NIjoe7XcMejgEC2xZUqxkKhRCyHLC2tpeltSiuL0jGPCIhyG2XWKqEcN1VJiZOAwZWt0ujUaHR1PCRGR5ZpN2poYcWmNkXZ2xoB82+CyS1JDElgudaULX4tr+f1nqcATtCLmTTMRRWDh9CP3KQHYeHyR7Is3ZlkHYjhIyCoxXIDK9x+1CV0FqFVPUslqwSeCqypKDEK4R8h+3lOi/HxukbG+Pk+XFMR6fipWie8DC3GbSJkUgH9Blt+oRgPd+m5bfY2PDxNI9KJMbHHngP0yMpOqbHZqVMp6Ny03SafBHOmlBr1Em5LrrjEV6rgu2iWAHhZYt4zUYJdyg3PC4Ii6XKCc7MncC0w1hdhcX6NBulKXakBV50F44bgOg5YTwXdmwTOP4tDI48S7IsEa+3sVN3c8ehSTJxiW2p84zFFhgxsuweACnQqedfZbO2D0c6zK1mmD19K4RTJulwnm50iv6MgtGt0okPoCgdPvzhxzAMGRmJQmsD+bpCr640EN4GLVdGWgxjexatTgvZd+gb7tBuSPieQSq6jcmUgeZ0SJdrjCYizKjTaKaJvLKCFw7jCoEyM0PLtkl+6zH0a08h6+fQpBpBp4nhOqh9BtEYqKrH2Mjd3DF+gpBIkR2PsctbJ9vuYoR9NqqzPPPyS3RLLlODPk0Z1CCG3VawpDCDmST5DY8OGq1GA18WHPLDpK0YYXeEYGQb35w9z+DoIPFtcSpBBVVRUVRlyzBrGjJ3t7NsD9IY4TCmaaKNziLOVRDPdpDmVxHzy8y+7HPNG0MLSahGmkw6jR4f4cqVNIuLCq4rWFqKsrJyGSiyvLxMo9Ggv7+faCxGOBJh7969CCGoVqscO3YMVVVZX1+n3e7lMCaTSd7//vffQOUMggDTNFleXmZh8SoRWeXOAwf50Hvu54Pvvo8TNx+jXK8xNDiELEm4uorkBVy9do2nX3iea0tLnL94kRdffZVLaytcu3btTRGocrm8Vbt0586d9PX1kUwm2b59O4OZQT5610fZldnF53//85Q2SxiGQbvdxjAMOp0OU+MTzEzuoN5s0Gy10Q2dTrdDpVZDUVXajs3c3BwXL15k586db0mHFa6H3rFQTQfZcfElaUtJ+Ab4Pnqzy65kH5srq5SLJazAw7IsYrEYuVwOSZKoB3UaQYMgCFi6tkSn09kygMr1Mt6Sx9Gbj9JqtfAVCdn1Ee4bCvCSHyBiEZTkT652aaPR4E/+5E84e/Ys58+fZ3Z2lna7zS//8i+/iZ6raRrT09McOHBg65NIJH5iY/1R8dJLL/Hkk09i2za2bbOysvIPXhdvN/45ztl/VvAOlfcdvO0QzSb6N76BXK2C7xOoKu7MDPbtt7+tqrc/EiQJ6z3v2RI7CqJRvO/y4L/d0F9+Gb63ppqmIW9uIm1s9HIZ6ZV2kdw2Cu4bxN7rwhJDiRbrjoFrBziqhO+qqIHL+99v3tBspSL4sz+LMDenUC5LSBKkUj5797ocOOAgy+Po4RxOKg7CIND6UDyfbt6h3RbE4wFtf5CqO0lSXsQlgucJWnWXRALs1O0ATE56bG56nD0rUBRBsajwxBNwzz3WP2ic+j5cuSLj/r/fJNLYJDcaIpPxEQLUs2d77/m9B7bW73YFritQrpczuXZV5tuPh3HdKYY785x6TePqgsoH7s4SXVkh0DSCTIbmso4kBKW2QdfXMdthbC+EF9iENYWx4TWG+je4d9e3mTjxmV5nQuCEdL75QoyF1yaJaUniE2tE2q/SJxVJhOqs5kcQXUj3+wwPw5j9IsXSDkqaQTRjI4IA1jdwGx0m+iuo1RZyNoup5cgjUDsmNbePQJfQQjb1UoRzhSSeB4bhEA6fwhGLkF+n+vwryIuLOLKMqigEkQi+JDHe2uDJygaHc5PEa2uoVhvNbBEQENe63Cpe4Cv2QbJKEVMOoygSeihCICvYboBV04hpglCozezsdjY2cmiaw1lpL8uvjLFn+Bp37HyGiHeGpogyK44z5Z/FZhhF0YjHTZJJj3o1jqLEiEQDQiFoeSqeHeC4XXbNPcJw5wlke45lu8a1uMeyVaOmG8R1hXRYxvajHBhu8p5dNvH4n7PWFbQXOuROLpFdKvH8uYDY8ChfnzpEPnKAThfuvdfhgRM5aladlzdfIZVr8KF//23MtoZry4xsXEP8lUn/FYHT8Uk18pwJJ1hRhskmbLYlcrTWEuSbw8wnDnP27AkafcOEYx52bIX9ex7GSVTRQwFXYh6HrEWWCwkemEmxVrRonZE4rcr0pUcYjTnUCxWcwEPgoyqCZrtFWsuyyCZzyX6uKQq3rKyTTe0gatcwCy5SWEKWAigL+neadNsJluYnUaMNGrZOM5ol8Ks99VRvDOEoyMJDFr0JcA2dgUwJQx+kE/8XHN9zG3t213h2fhS1L0TgekjdOFKsiqIW8YtDJEMT5FK/RWNzGceOsbiS4lrxXdwz+SJDmSIfuHmehapBsdEgPXmaXdNtdJbwmSo/cgAAIABJREFUmCIbzVFvlch381htg2agkE36hMMhGqpFt+Eg6wGqJKEIkLouQrPJxToYss50W4CqEdk5gB6boFYs4rku2vw8z0xOUnniCfo3NriN18iMaoRtiaOTBpKwWatUWa/LWNEoxwZ03uvn6V55EU2vEKx38GubXMuMsH//Jf7qzGlyGY+8F+PUyRrZgxKq3iUpSRhrdeaGpmjKKoFVwVZcxmyZ8WaU/Fo/UuAjD4+w27Zxmg6hWIhd0i4uVi4ihEAWMqZrMhof5dgd/yvuCy9Bt4vrOTgbRfRrPoQ1AnqTZbkj4NIqHDVQfBdPCrh4ocdg0XXB5uYLrK29jCzHGBo6jiz36i6Oj4+Ty6ZJaU2ENY+v9pHf6L0vDxw4wL59+3p5jpr2JqpoEAQ8+uijrKysEA6HmZ6exq43OXv1KrumdoLvE49EiCfiuN/1Dt5o1Xn+1ZNEQ2Fy2SyW71Eyu5x5/HE8z9sqD/M6Xo9KvR61ikajW5TS142F8+fPs7S0RCKRoFgs3jDJfPnMKcbe8172zsxg6Dq/8OD7+fzf/g2pWBxHVfCBcDiM53k89thjfOADH7ixf8tGb9sEUu+ZjesTbnboRkL42ndNWX2fWKmB7LogyXzk3ffRaDTYrFaRJofJZLPMzc3x+OOPMxgeZMlfol6q43nelvpxEASk1TS1ao3Z2VkymQwIgRk1kFyvV0ccgWuo+MpP1vH+qU99imq1Sl9fH319fUCPnvv1r3+dT3ziE2+5zdsdUfxxotFo8Nprr91w7bxOfX/mmWe47777foqjewc/TfzIEdPPf/7zfOELX+CJJ55g27ZtN6hjnT9/nj/8wz/kySef5NKlSxw+fPiHomz8vHsu/tl4X3yf0Be+gOS6vQRHXQdVRd7cBN/HHx7+aY+wB13Hz+V6UdK38ra+DYhFo1jf/Ca8lXfvejjTG31DGCJQVdRz53rrCwu1ch5JbiBUl5jikx6NEDFcJrR1tv0fv4DWf6PX8z/8hwStlkQmE+C6PRVb3+8ZvRPjHlbN49ajNplsFOTrOZpC4HV9Tl0J91Irgaq7A9uPo4sativTP7kNRu4FuTcZevFFjQsXVMLhrdNLoyGxuiozM3NjLpQQTYSw8Tydhx8Oce10m9GFZzFFmHy+F3HNZn2EqiJtbmIfOIDq9IzzfHuTi1fbtL067bbEpctRVioGG/o4WWuNUaOA5wY0G4LxTAN3ZARlZYVrC1CuKpzbHKBCBuF7PXVSScZ2ZQaTZYbiAR8+MYq+++DWWOfnZV55RSOhF5iJPwLdTRJ6EU1qkw5tEg938eUogevQH11Fz19jcHGVS91xwsIGy8YSYdLdVR4YP4sU1glSKWJanPX2OrLjsrlrDFN4XFo08ebuw1B1gsBiYeGvmJ1dplSTqKs6+UvfoWabjKViBOEwwunRKYUikDt1imP34sbTuEJDNZtE3CayZyNZFhXV5YK0C11YmHqSTrIfXe+SyLRx1g4QDalsbmqEQ2UUpVfj1oqEcRMabUdlOLfCWniC1W0zeL5NrZjBs4q4AuJX11j4dh+xvIu0to7VdFg3+/B8GB1xeKD4V4SsKsgV3OHzzClNtI6FL2dBuLhamYYnMeOmuW3vKLn0IJ6ooZgNjC+9xGa+RctK4AcOzbULpGrLxLffjt5XZHGjwd4jRfLLJi+ff4VXz8zSbZmkByPMCJVjz11GigqqrQxtYaBYLUbbVVLZFHumm3itEO16EkME2Ln9GP3DKIqgkyiiKzAzVSWR7NA0wfEDNG2N4bRE3etjpTFDMZRjbHyeu/aGUNUY+apNq2uiSwHJlIblRShv9PPsyzZ22WF6YZHjK7MM2iskWlVEEBBYAkUPQIemleQp+91UNA1/MMqG0w+aRl2S2NYxaZg7CRsgiwBJeFieTCptMtJfpdiKoJcyHNzRo4leWemjrUSIGDZ02khSDNQSjc0shaaM5C1RL65T7zgkOk3aZou5YoJS+1meu/wEiv4own8Ze6zG6fUqfrFAbd1lrZ5jLBknXdfZrJkE1hBU6oTp0g43adY8OgV6CryKT94XNF2BkKBabxCpVLB1G21lO8nMDmLJJLFUioXz56klk4hUil0bV+jPlWi3XFKROHW3Ti6usCOnsy3pM757mk8kwgxOSphM0nEryKbH6OZFth+8Sjxhci7fRlYtwrpLt+xxrmVQq2Qo15LMLSfpk/u56hfYaJjE8jrT62N0ClF0x+Xa6CjXdJdZ6woLnWVczyUf5JnpnyGuxSGA6cw0/+6mf4dmRLDGt/HsiMlXw+ukzp8kEsQIECjICCCpd3hlbQxVUQmiOTqmROBDw1aQ5RbV6lcwjPh1kTpBLFbBdV0iqsN4bB3JayF8B8neRHYK7D3y7p74nBAYhvGW0aLFxUVOnTp1gzqpoqq0Wy08VWFgdARPVcgNDHDu0kX8IEAYOk89/TT1Vot0fz+2APN6LmsoFGJ5eZmBgYEb+tH1Xi7wsWPHblhumiYHDhxgYGCAL33pS1QqFSRJotFo4Pv+1nqtToeD+w8geT6SJBOPRrl05QpyKISnKluOa0mSqNVq7Nu37w3qZhBgtEyQxBsO7usFqRXHxdHVreVq20RvWzc4nHVdJxOPE9EN3JBGJpMhFotR2CjQNbvMV+aJhWMMDQ3h4+PhsU/eR0gL4fv+Vomejtft1eU2DDxNIfgxzR++HxYWFvjqV79KOHyjPL6qqqysrHD//fd/X7rrzwtOnjxJq9V6U5mb16+Lm2666cc+hn82c/afQbztEdMLFy6Qz+f55Cc/yerqKn/8x3/MJz/5ya3fP/e5z/E7v/M7ZDIZfv/3f5/Tp09z6NChH6Wrd/AzCHlpCdHtwvc8NAPDQL1wAefmm39KI/spQIg35bJuwbbxv/fm0zTcmRm0hedQE1fxbhtCemwWoVqIEY+w3iHi1rFvvYn22NgNm77yikK1KhGP96KLg4Mem5syiiK4ckXh4D6bo3tMprffSP0FSER9UnEPO5Cvv9cFZW+GsjeD78Ot450t2pLnwcWLCoZxY5kAVQ3oVn06mw7RtAA9j64/hST1HuyLiylc9x76nA7BddELXYdSWaJcluhLOSgXL2L85V8g5YY5H2tRSRpIxnZsW6ZWaPL0VRm97aPaJif126huO0qfucpSrc6t98mEHnuMwDA4Gr3IiytjdFwdL/AIhIRwAyRZYVu6jcogo0aD4Lb9NwhSzc6qRCLQrxQIexWWmyMEIZt4qkLbCpEJ5ynWM5RqA5zrDkC5j2Frgw8FX2TQa1JmmJ1ynj71Cm59EDvZqxGX0OMcTx+iuHoR/0KBZnyKbuMjBAcNzp+HfP5pKhUH1w1hWTA9DeG8ytkuTPsqgxEF33VxWy0838dQXAYnS5SMvZD0SFpnEWqMoFgEIfjw5gbfylWpGjH6JzpMqifRqhaxRpL+0f+bojnFlzaOYyckEn01bCJ4soobklCmNPLjU9TLY9SbERTJZ/5CnEr5CHcbzxP3BTv1Ok9vZvBViRF5najqUsvuZMy8QjnfZmCHgphvs/quLpor07Uh3K0Sj9voqsdmzebAZJewSBNqrUFg0/z2BVqWT19codZRyaRiLBXrGM0VaH0JkTuA09S5MP8YU3svcyQURt9c56X1gFcff5X3RQfQdcEJLYY6cJb1ToyV5T2kymXGxSlKVharkMALS7w6dDOHshFOFSy6sgdym7BhMX91ktu3rdNwXBTboZCwGQ5SVNJh4oUSOwYrCCuKItUYTgVossd80aMvrTLQV+fClRyOJ1Nvhbir/AphySIeblBudci6Lppp42syjVaMhc44i5FJyuoJuhGPVshF0br4hEmFb8brbzFlLuDKIziuQAhBbrDO2EARiRSt9TBHBzSiMRd8OLZzgy9f3U880sGgV6LDdFKs1E+yVFqmUV9H8QOEnCRLP5II8cSmjVetcP+JKkETmoHN+a+9Sv9t93DaCnE4NU/6pTKrV68hgjYx0+Dp1UFOizT/9jfr1KwW3T4ffVii3lb4r/8txC9+JIwa6bJWqpJSNbQYeBsx5i53aHbm2bFjB4VCAdf3Ua8bLIl4A9/rPat0StwxmaLYLNE0NW7KxIimU0j5Ko43zcS4zfTUNdTyKsLdhE0dshJ3z5h8+XxAvR6gyDr9yTC+YrKxqZHdpfDVzimO53aQiw+xaK7ysFHg1sg4rdg0G8LikctPY8ga2VwWtaHibrrMteZ477H3MpWaIt/O84W5L+D7PsvNZSb6J9BlnVY9TSfSBldFSGBIKrrictvkHE/kJ4jkoGUrBAGogUugPoXrvkErcRwYHh6msLlBbXMRhqe2fnM9mfFcBL3yFFbfvZimiSRJb6kwOzs7u0XjVRSF0dFRDF1HDxksLF3j6PU5Vi6b5X/6hYd48fIFiq0GmqaxY8eON0XTFEVhfHycZrOJrutomrZFqfy1X/s18vk8kiQhyzKWZbF9+3b2798PQCqVwnVdFEXpGX6Fwlb70nUKcTfw2DM2QtNx8MIGrt4ztgWgyjKu7+P7Pq7rbu2v5PkIPyCQ3xzIEH6A77icPn+OxcVFtHqHnSMjHN6998Z9kyRUy6Z7/ev09HQvumzb/Pcv/ncW7UU8PKIiypg0hiquj0sIThdP8xcX/4Jyt4xAMBId4dcP/DoD0YE3jefHibm5ue9reNq2TaVSeZND4ecNnue9rSJY7+CfDn4kw/TcuXPcfN34GBkZod1u0+l0trw7n/70p7f+j8fjtFqt79vWO/gZhWminjuHaDTwJiZ6tT9f93RubvL9+JzCsnqWzc+KN891UebmsDdrPLO6g6tOz9jL5TzuvNMmGg1+QAM/RBcTEyiLi286JgJw30Kq3b7tVnTxbYJNFSIC54EDSHNFcAWSUqX14K9iv4Wa3uXLKpr2xnijUYhEPLpdaDYFH/lImxHF5PtJ5d5zr8WXvhJBlgM0rTdhchx44AHzBvZ1tytwHHFDX6rksSvTQvg+btUnrLbQrFN4ERskDU+RKJfhwIEvM9+4D+G/od5r6LCxDoOLryE6HZBlXi2fZdV0GGhmGR0Pc+nCMF9/RaWynidhd9AJMx1ZJ7FUQfJdWqEM2sWLBIkEOA5VLcvIhETOa+M0VEw5iiIcslqF4USLpqUxM1oj9Hd/B4CfzWLdeSee1xODSMlLOEWDZHkVSfKRZZtwxKVtRQgrFRQxiC5cXly6i6XmFd7NY0ylrzBlVNDjSZzMJEoohDc6gWe2YX2NyMWLqAcOMBSkWHiuTrT+P7h4+CFuuSXGN76xiCwrxGIBsty7PexYP+FmgdNVkz7doGrbCEUhYtucisdp9Rv86wmPdKeIyKYR3RZBfz+BZSF3OvzB5hf4b0P/lvXVLqoXIj08wv6hDaZaTyOZ/4NZ8V9Ynx1C7IZEtoIrVFKpDqmoizDj/PJHvsOVNYP/8ws7eW1pD5pY48j8Mq/powxt2+RYvEnZzlDTXPaqf8ujM7sJrV/FGFkll7VRpTyPnHfZu9dEQ0JxLAJJpVWX8a55ONIV5PEJnJxCSPGxNjoIWSAkjyDwCfwAV7goSZnq5VdIbD+Ir9Xx1TZNx0EKV3muEGJ+I0WrHeaLaxrPiCJB6jXeZypMBhJjezS8VIia3c9K/xAn9fsRsSyeMAllZKblJnP1JAKBY/jUrATPPncH+yeeZUfkNfrLdcx6hk5eoVBrofgC/BBUTdTtCiN9PqFYDNO3qawLup0ilr/EByfqHIrniRk+/jWTaKfTE94OZCw/zMn2EdTAYa05SMsIsdw5QP3FDLfsn0fPzVBvGayo60Ta3+TEbRVWm/2osk2tpZG/mqPgJGiXSyjDPhIage+QyS7xr0cXWahNYlkSId1D6b5MXFvB9/rRZIOIbWLaFufdS4Q7ExiewSguhhFgWwJLlpEtG+/iadR9h3G/UcPsJgnkPZimhtfpMlOdpxPK8L/9ZpRwps2OKZuNNYnVUpSpRJpvfc0jNyJx4tY4jabLw89AcdElOlBhj9tme6ZFZ7OAInk0rtNEG5EEaS9PLNlA+C6Bn+WCZrAo1fAMl9RGidut3WQ6i+A2WC2fplh2yNQc1KpDZmeEvUMpFko1vnQlIGRouJLAsl22jSms9reIewYb5SozgwOEd+5gZbPEN/s87tOHOXv2m4RDoR6jwrKpVqskk0nq5+qclk7zbOVZwpkwE7sncCWX5eYyFa/CnvgemmqKFafCmOxhiy6alABUDsWbDO0p8QwTOFWf9c1ZNOklLl6dxbKaRKN9DAzswjAkYrEYA2mdzZU3nIam5aBrCrffvJOL517ij7/xGMViESEEw8PDfOITn2D4OvvIdV1eeuklCoUCuq7jeR7r6+tMTk4yOjKCFgiE7/dqikoCORnn2F13Aj0j59SpU9TrdVzXRZZlEokE8Xic6elpfvVXf5UvfvGLFItFMpkMDzzwAGtra9RqNSKRCKOjo+zcufMGyu/999/Po48+CvTmeLVaDcdxCIKAgYEBbNtG1XUO3n4bjuPgnnwBgJFogmwkiiIk/CCgljAJ/ZAqq57n8fcP/z2Vep1QKIRvmbwye57Li4v8ywff/wNprJqmcWTnEZTTypvyatvtNrGJGJ997bPEtBgxredQrpgV/tOL/4nP3vlZotpbK+T+ODA+Po7neW/5m6qqb6Jf/zxiz549XLx48U3Kw77vb1GX38E/T/xIhmmtVmNycnLr++sPpteN0df/VqtVzpw5w0MPPfRDtfvzoCD2g/BPYR+4cgW+9rU3akiePNlb9q/+VS8Etn8/LC7CW4XiEwkS30Vd/alibQ2+/GWcrstzr+hs864xEO9j4eZfwnU1vvlN+PjH4R+r+t730EPwt38L6+u9XNPrYkt8+MMk3qpmansF9u6Em470kjIl6Q3akt3EmPoFUN98bI8dg6effvN4w+Heqdi9bwSpWAbXuzHPNwhAEuwbzDK1C159FQoFSKXg6NE3Bb5xXUinb+xnKl5CFiFMUzAw4BNXLoAIgz0CqVKP3i1kXCXD6NEi8sIgiufC9chp2lwhEvgwNka4r4/1zlU6vsnVVg1KFUJ37WXPXJP66n7CyVUOyymEUIgWGwSuQ2Y8RdTzIBLB9SB2aYX9U9NcbRfZ1Vdh0czRicSoVOJctZO8z/1qr4RFapDR0evH4FvfYveOX+WLXw+zdnUbnruNwOkynb1MsGEwPbCAG1UI6z71boZXVu5HlVsoe4YoFXdRaZ0l1xeHaBw1FIJ77kPdNQPtDtRq8P73E9Z8yC4yNNBEXtEIrXwN245RvPYwu50wVXmUtdhuQqEwlX3vZag4B4GL025gaAqB62PKMvl772U8l+OlapWH6nUYHQXLgkoF0wqoan10lDgfP/A1WFd6Ss7HJ9E1H+fFBYqaynv6H+Vba/fQOBtlQ50hlQu46eYSYdli9/bztJcr/PmzLmdOP0hIa5BVm+z+8EtoufPIbgJFUmhuhtjYaOGVAkbcPGMzTyMqmzhSjJyhYNZUzj4bJtxpoUfDrJ4fRA0ViRsWYdVHXbtEkDuGqjSQPEFAQBD4KErAcq2JZAT4nkK5ozK7ZJKJNolkK1hOiMdXN7l0dQZNd0lEHZS6TUNW+WRjirviayQNkHdWIVsmFO1jcOcOYpNn+NaL+ylXcpBQsQKD/sBkbiOMbcnEJYtgPkZ9Y4xy8iX8coTEWj8Te+cpiX4QMrYtMGtRZk8XmJ7egWH6VGtxWsKi6bcwYjJ7IiWMIIwpZNZGxpm5dB5PGHgSFLoZVNmlLNK86t+M6xmU1H5sO8Qzs7dwOCRx771gbqZ5b+VxTK2OiD7EC1ePsVZOgtWlvbxEfDDC7OY2jjjnGe5/kiAq43oG+w7USERT4Pbxp39XZXIizeUND9n38UMGsqrhyAHr7Qr9oRxh0STkBdRVmSoysiywq2VGmg5DgWAzkHGdaC/3T+kQ3T7Oxuwstt1m6JqgM++T1QSjWUExaRCU2ywsKNRLGlEpSrghkU6DFzR5aSPP8WqG4VSUeb9ETFmBxCHWYyfYVz2L6gV4QuFv7TpNz0VTE/jZLBeXkpwuvsAnIpM0SmWUUJuB7Q6hXT5GO6BWb6GpIT6yPYq3rvL1sEGfbzMykKYRElyzfAgEQpZAuAzEG2S0LuVWkyGxgOWaqJJMudMmTG/yu7a2hixkSEFIDrF4aZGzl8+y7c5tyJqMLMkUvSKtY3tJP3OWZSNE0hekxDCa0CHkM/rgIf5lNMSTLzzP8vIZWn6aqalxms3HiUbz+P4ye/feRzKZ5Mi+KdwJjYFsCtfzGR/JcHjPGOuFKr/3Z08RGzpI//W626Zp8pnPfIY//dM/JZlM8p3vfIdcLker1bohmrqxscG2bdvYe/QoiV1TYDkgS/BdlNkHHniAr3/968Risa1ta7UanU6HT3/600xPT7Nz506+/PDDnD99ht/4tV/H9T2y/f1EIhEGBgZ417veRTz+hvDP0NAQv/Ebv8HnPvc5dF1nenqapaUlFEXhox/9KFNTU9x2221b/R0/fpz2Wp6hRAov6EXRHdPi2MGbGNbC0J9+4121Xth6b3w3Xjt7Fs/3GYwnwXZAVQl5AV2ry4Wr8xw/cJ366fuQiBEdyr2pjQcffJB6vU6pVNqiRDebTQ4fPsxjpcfoi/e9UeLmOjp2h6fLT/Pxwx9/U3s/LgwNDfGXf/mXdLvdrcip7/t0u11uvfXWG+bfP68YGhpiaWmJ+fn5rXPheT3hql/8xV8k9TYLVf5D43gHP1t4WzKlg+DNUad6vc5nPvMZPv7xj//Q0trr6+tvx3B+ahgaGvq53wdsm8hf/zVBKNSzUDqd3vJ8Hu+v/xrrvvsgFCLkuohK5cbcTdPEOXgQ52fhGPg+4T//c1BVrl6VaVs2iiIjqkXSL32B+T0P4jjwla+43HGH/YPb+z4YGhpivVCAu+5C2thAe+45pI0NglQK/8knsbtdgkzmhm3kzipGo0GgvPm+EW6TzvoqgZpAyudRLl4ERcHZt4/JySSqmqDdFt972Ln5Zpt8voPwfYxmF+EFIAF+z4NuxgyC6+dlYqL3gZ49Vau9eb9SKY3lZQVN8Ul382iBTVNOIKkSst3Gog7CQ9gyrmZiu1ApRih3JJLpNS5vfw/T5x5GN5tYrsIO/zLtPh1ndBRqNdpumw694x5sbOAMDTEz+ByroypmLYHrhgm1SujlVbq+zkfb/xfdtRpBKoXjClzTJVRfIiqPEsZkKH2RZ1s3M5iRuT14jglpHkhz6pSKZdn09QXgeVz86mmWL08x6guMUAc3ELy0dJDDY7PMpMuUK6M8l7+VS204sffPyBolhmwXyYswN7+b8O79JMKCTqaflqPjhPuJKFXUwRFcdxV16hQEEhFFQSr6HHn2L/CrKhttj7ztYzVj9KWuURq5G3Sf2s23cejaHEp3mZjp4CkSc0Nj3LO0RKPV4tzICFVJQm82keQAW7V4Tj/MZTFFM4gTf3WTI9FL7MmtQX4Ry7KRAodM2OWB/q8zWznAuFgjF64SH5KwWqNIuQhT0kn+/tIi52Z/GV1v4wcyd777NN1OnI1qlpAfIuZ3GBp5gWFTpjOnIaZXqN3kEP22zLrTYTyRYLhlsSa52Ms+3VCarqFiWDpOJiCl+HjtVWRvGNfrI5AkcovrOJ6Mb9bZLAQINYsuOlzNzRA0I4Sym5w5P8L42CrPz+aAgMAPEK5PEPVRugFtT+FP2yn+l8OriKiHKLkEewNcC0azHSZ2vEzppftomSpC80hHDA7cdIG27TEpapwYb1NafwlJshnJDqPXmpieICeKXDCj6CKAaIyO1eDs+ecJrAi+Hya3d47d4wcRgO5IvPjUGlcbHq4PE4k+ktUK94sUDZFlVRrhVXGYeixJNZxiWFmnbYaQBSyfS/CkZPAH936N/gUPc6PAo/qf8byzhjVaJSrJRGJJFpVdxM1tnFvfYCAVxWtZqKEo4UDD7XZwwzZlO0RICdh7k87jT4WICLenVBpOEoymuXNaMBR7CCl8knp9icC9XoZESIxU2jiyRNsKo8gukgAJj1a3ybZMjEP1Kk5cI6gJPK+LXWuSCzzOjkYx83W8lk0pHMLYNkjXsclWNjhy8Di1/h2MH54kvVaG5gZLhcv4+gDLu4cZXF4kbwmKgUs4rlMPxVjeHMGPd9HnBZ8rFHgwkicjCTQNVNmnfFRF9V2WGz7bb47gDQn6zsUZ8Dxs36VQ61L3HfoyHrFsgCutI+gnFDFIaTAVEkT8AoWOjOm4dLsmvu/36mwi4ZU9QmoIRVII/ICrL1+ls73DdP80tmnDwF5iR95NbG2TWmmFjuXhxDXcd72bwHPxKmVefu1VRkdVVpobHN97nuefd2k2LWKxDqHQY9RqezBbKv/m9jES6ezWc7bdbvJf//zbyKpGt3uj0J1pmvzRH/0Rv/Irv8Irr7xCIpHYyul8PQfVsizm5uZ46IMfonppAek6dTqQBFbIwNVkTp48yV133cULL7yAafb60HWd8fFxvvrVr/LZz36WuStX2D+5g+dffQURBOiSTLlQhGzA5uYmv/Vbv8Vv//ZvY5omjuMQiUQ4dOgQn/rUp3j44Yep1Wp88IMf5JZbbtnKGSyVSlv7cmD/fsqSxkY+j+O4GIbOxMQE0ViUeqFIx2wTXBcXUuzvET8KAoQfcHLuEkGrS8e/rpYbBKiBhxIIZi9fJptI4Vo2yb40XsLoOYrfAnfffTdXrlxhfn4eSZK45ZZbGB8f54svfRHLtN78Tkbw6tKrPDD4wFu29+PCb/7mb/LpT3+alZUVFhcXMU2TSCSCoih86Utf4vjx4z/R8fw4cOjQIUKhEBcuXMB1Xfr6+rjnnnvodrt0u90f3MA/Ev8k5uw/p/iHHAI/kmGaSqWofddstlqt3uDd6HQ6/O7v/i6/9Eu/xIEDB96qiXfwMwplfn5LKfbGHxTklZWtfD3zQx9Cf+TbzYUYAAAgAElEQVQR5HIZgqCnyrt7N86RIz/5Qb8F5GvXELZNoKrU69JWGmggK8QrywjPRVUVCoUfTDl2HGg2JUKhgFDo+1N/leVl5Lk55FoNsbqK19eHsrxM933vwx8Z2VrPMwYJpLeWQg/kGIEcQ3/kEZSlJYJwGIIAZXYW96ab+I//8RZ+7/f+P/beLEiS6z73+53ca6/qruqlel+mZ98HK7FTIEGREmlSlK0rORwKXlk3Qr4Rvnrwgx8cvhF8veEIhR/kkMNyyAxKhASSEiUBJEEQ5GDhYDCDwWw90/veXdW1V2XlnumHGg45GFCAqO2Sge+xllOZlRl5znf+3//7kpTLvfxRWRacOOHy7/99bwMhkiRsBfQ3X0fZ2yNUZIKZGaJ/ZN/vU0+5/Oj/WyX2gx+QioX0B0X6pYjCw+PIYZ4o0hDCJULm4qUx3royiOMK1rdVQilBoZDFffB/QC1tk7BrNNezOGsOsTKcPesyq8SobCwT9wWdTIytYw6SgEce/x7u9Wfxr1XRzSoFvcWzfRfJaxK4LtLODkpx5K5S/JHhJa6uw83wFFEkESHIBzWGi11k20GPjbG+oZDPe2y3M9TKIY+NrrC8NgQsIcsyw7kOZjeHJPnULY23nAa/dep7BKhIcZMKXeRajAPHVXY0g0rhNLf3U7i+hP2aTjJMcFrNkJ39PgQqIFBkmHnpRyh1iyAleFJK8GeNLppoM9W9BqUi0nic3MhBhn7ji+ir3yS2tEUiaZHz21TdHXJmFW7WqH3xtxh88VvISpsXFx9j3j/AXrREyb9BWHb49kaSj3VG+U/9VWTfBQSybDKuufznk3/CK9WHKFlZQlNnor/F41+cR3ohoix5eK6BoXpoMRdZSbLhThETLl4oEboaA2WD3HgD9+2A9FIcuZrj2myK05V1LMPjk90Mf2VWKCWhJen4koft9fPUtX6qqS2GxnZQ1r+PW52kT7IwBdT2W2xHJoUoTboL3+sfQpo+Sn50i5m5W9Q6KcZ8HdOSCf04odxFCj2EKoEKRsfj+s4gS5ltxKpGfAIGdJD26vRFEgdHI7bWNrm4NsuxgxrT0w4dMjTlVU7VXNz2KqG3xoAaI6HFaE0b2LZGUWlxOwNeNIjiWriuTz7VYKHu89yn9nkjTHPAyKNqIdcSFZpREyOeBilJwlIRrRbzbouYfISOyDAdW6EuZdiNRglDGU0OODyyRD5y8N+KMKpfwxEVvjy6zkLlGVLOLk5cUFMj2kM2U06GlmGysBtxtBCRTMeZ7i+A5RK6Lvht4mNFIsen2B9xan2ZjW0JOTGIkF0eLZbIqG38QKXtn2BkKGBle42WEzHUF0fKyCzvDPL91DodJSCuSByKYszkZrhtSMS7Ai+CRrVEtAb9e3HS430c1UOWxlI4Ua8vr+3W0ITHuac+QaTHsIZSMJDkVEbn5qKCWdplud2mqmTInnmCjc4msW6ZwAtoNDSSShUr49CaSzG6t4piRkSOgqa7tIbjBJKCryl4hoVZgCNnZd5416cdyQShxYCbwT+5QkaPUci2QG4Tah6OM0rKiNG2PQoCtnUXL9TxogDHdfA9H9VQ8V0fJAjCgE6jg7fjISsyK84K//uh3+O4NI5b9GkPDZHzz6Kmi3TzWVTXp9at8N2t13gjukRcT/H5R2vEoxSf+9wIiwsVNtab2HbE9HSZs2f/VxLWeVbqt6gGHsN6mtF4jr39GiJ2f3XPMAzW19eBnpRXVVVOnTrF5uYm1WqVKIrI5/N87KGHybgBkSQRyT/ZsfQaFVaCBtVOzw14cnKSWq1GFEXEYjG+/vWvs7W1RTwWo1ba5+9W12ibJuN35MOqJNGs1cn19bG4uMif//mf02q17n7/zJkzHD9+nN/93d/9wPlEAiZGxxh/j28CAEIgBSHBHWLq6xqhLPdixcKQUJZxDQ0kkIKASPqJKZKnq7SqNZrbW/RlszR9h7V3GoyOjfHcc8/dZ6wDvR7YI1NZThTigISXShMBMSWGiXnf5/3QJ6n+68l4f4y+vj6+/OUv8/u///uMj4+TyWQwDIMwDPnjP/5j4vH43Z7fX1QIIThy5AhHjhz5tz6Uj/BfEX4uYnry5Emef/55nn32WVZWVsjlcvdYm//Zn/0Zn/70pzl16tQ/MMpH+K8RwjSJfkZ+lAiCXv+oohAlk9hf/CKi3UbYNmEm8zP7Tv8tINptoru29xE/3XcpohAp9Alk5c57748ogtdf17h9W8F1e1XKoaGAT37S5r62GNvGeP55pHa7J3cGlOVlokQC/Qc/wPrt3/7JZyUNL3UarXmRSOlNeMJropgboD1N7q03EW0HN9NHFNyp5iaTqJcvU5ya4r/8lwHW1nqGQtPTPj+teBGWRewv/gIU5a69vXLzJvLmJtZv/MaHdidWrTafdL6F/WiKtqnQPymjywFsLIGhEPaNI8euUCqlufBOinjcI2ZAMtNhYfUQ8/Mqjz3mEI0M8ZcvTjESDfFU+y/ZN9O8+bV9Hi2UoOjjhi79kk7/i5e42h/Sp8X4b0+3iLkvgywjr64iPA8/PQ2ShLS2hrAtMn0ay0qGoWiFiaebVHYO4ZS65Pts5kQLzQoRgQeeg+XLtN0286UhYkaEZEgcHaiBlEFS9xHCoevEmBhQ+D8Xk5we2CKVMBkd30WSQvyuTJjpEuvouK1tvvPGx2mJNGEyScKX0dU0NXuGZyag78emHS0bY6MJcRkU6DdC/seBBD9o2ex7XUaaS6TGf5uTB2c4dmCX9vkyyVQNgYeuGfjIhGpAsrNCfHaC6FCaysZhLiUfpV5/g7JbQlF0Igxihsf5Upq5tU1+fTLWWwUGAWEnS6bf4guz13r33NQI1XOHaW0eZPWWy43OCTw7S+DESKd87K5GTGmhU0ETPlI8YjUcIe11eb3zBPnOLnMr6+wtDrIwfIqJwyXqsaPEzQOcvHmRzUCQC5IUSxFCVXBbAcnmPmEygXx5hWpCZr8oWCz5yAgsYVBNxvE/M8WZuev4dgwR6ai6g+wMUQhixLQAyCHkFkG9QZhycEONoaROZyRAV2QiS2Xhr+vEDiwTF4NMG7B7+CvYs4/TTBWZ0JIUUQnDQSZ/uM32VZ+p5ARLsS7fkurYike6AGcSHgPqEWrliK7dZjjTxGkUePrTEt+Ua9xwtrnRFsiRTLNtM350CGPeIYwcAkXjhGdRlnXaioQj6SAHnHUuUdKK7DGCEAFZxSKumhhOg+1misX82xyaO4esP0G9m2DI63AzXMWSA/z8OiOr/XiGjYLLgFwhKfUTOv6dZ1yTB2YP84OLb5NMdTj2BMxcvEbU38F3Az499yALKxZN32e7DX7wAG8urjGXl1k0+3m3MU1oLKI4EjIBKLA4pPGd6HUy20+yu/kETVdD1x0s7WW6iQuMLzaZlWXy+RRXmw5eKgH5NELySMdT5HMxVLX33InpKodnC6iaSq0SIcQxBictFhbfgm4DXyjkClUiyaVZy2D1DZArmJRbcWrBIOrBbYJAEAkg0pBx6foBsaTBZz83xNsXS+xeKzJ7qMT+fIprbZNlo0kqLzNx3CSRLvPpzKdZu7bIuYk8u/P7rEg9w51QhLiui/AF3orHXnqvFyOTjiEkwZH+GL8ynOGYriNr+4ROHE2K058eQEgSiutzW67x96W/R9M0Al1CiZs01U2cdprBcsAp3eXgjM+Zw2kSZ0cpdcv831t1nHadmN/kQrBC1sghpafAvv+5HPo+yWYT44UXeGhpie14nPLoKDMzRT72gEm3u0fDbHD2wGeIfqp1ww1c/nb7u2ybu7Qdi+833iTXzvFI7pG76QmvvPIKvu+TTCbpdjq9LFdZpuvYdC2L+J31XOD5BEHE6qrEu++qTE72k0z2qq5vvPEGuq4zNzf3gfNJJMQ9x/ied39CNn987oqMk7y3Z+Xg5DRvbGwTj//kdT8IuXDzBodmplm02yAE8USC3d1dLly4wCOPPPKen4rQK99GsdaI5DgQoZq38FLH+MTMJ/iTC39CQrs3+s10TT4/+/kPPMf3IgxDFhcX2dvbY2BggLm5uX+0k+53v/vdnina4L0bF4lEgueff/4Xnph+hI/wfvi54mLy+TxbW1s8//zzXLlyhS996UtcuXKFcrlMPp/nj/7oj2i1Wrz66qu8+uqr+L7/oTTxv+i2zb8M1tNRLIZ29er7kswoHsd/74NQ14kSiX9Ws6Pr1xVeeUXn4kWNpSUFTYvo7//HmRRFun73PBQlYmdXvls1DWSVvYkHME146CH3Z4594UIvMsUwelxT03rGQCsrMkeP9haHP77m6vnz6D/60b0Nm7KMcF1Eu4376KP3RMqERpFAyyO5NRTzFnJ3H0X7LJKUQV5ZRpJ85EQ/EoLAv0NOVRXR6RDMzJDNRhSL4X39ptr580idzr3XQ1GQ2m3CVIroQ5oKaK+/jtTtoqiCeCxE1VR8ScdHQbU70DcCG3Vu/XAbO7LwDA0i8Jkjne1jeDjgwIGAb387hqYJXC1BX22NieolZjvXaDRUTg3FiFIpzGIeoagcDvv5mJhE9kPkra3eBsgdKVeUToMkERkGYX8/8tkjBNNT3B4+jjRk4kUxYnGJmWkbT48xtPIuUdekVK1Qaa3TDS6y2Qp4xZ6jEh1Cr1ZIxAVRmCLyM0hmmwPxC6xM7nOitsPpqesYloPtJLHrSQbdEoFwkJN9bG0dIxF1CPQYVmhgGBGW7XNjq8u52S0ARKWG/MMd0FWEJqHICjFF5nBS5ZQqODIxzeH//gFmxtvIvody9RKCNpqSRhIybihwHR3h9/Ha2zIXxBgbzQG2G1lW7GuE6Sx2OoOjp4gkQWgrGKkdzo2oyIGKuOkRJbNI/aMEkUSj2+btJyZYcQOe/9ZRXlnVEX6ByIlYXDhN4Oo8c+L7NBSLlqIiIVBVQUtVqKTbxL+fYdLfRYmHGMKlpvRhXx9nIzOLpKvMbLY4udVmoOJwNFxkNnWbwWGX6HABzABp3aYj+ziJLNoDZ6jNJlm2zkCywHJzkgazZNItoggGlWGaWw/Sp8e43tojZlukXAPDU3HqbeSdWU5MXEdJOtQdj2oU0C7pNOwWFa/ETqWGfGOWbjzLDl32rRZGLsfZkYcprW8xun6LrWST15JV4kIQlwSyA90BiR1jl8GOhy4MFPlRgtgsrxVfxQwbpLDRlWEcP2K+toMWj9FNFAm8PsYdn44tkZC6eEGK4RQ4ssq+kycX1FmQDjAR32AqtoXXjohV24x663hfOIGRlPGikM1ykYQsk00PU/Ur2FHAtK4zmbzFZw9eI52sIvRBevvJEoSCgbknkLU9tkobmNhEgcxALM9vnppmMAfjsVEi22E79OiL6aiVGhmhYmTiXPZcYoVxBuUINeyiJwzahsfbW3O0tk+i42PIIX4kcKw5Wn6LT9e2OFdI4o/kKLe7FFQVOYwYnx3n4ZkpEBJTY/2kEgbbpQbv3toAuY+S7bO+2eXmzb/mkQGPa06IJADdJAplXEcnm7R4ZFZmerqCXgjoG/FwOyFRGCNEoMcLrNrH8f2QlZXjvHs1SyuosrG/j6KoaIqE0Bzstsf+lkdxUuK11X1uulUs3edUcoBqqR/XCVBcBb/kk1JSpPpTWB0LS7bodro88JDLI2dNHk9+gZyUJZuIMygscvsCudZGajRR2m1e6F5AUXXCMKJWqxF4JgcHGrRrZbJeHCQJXVWZzWSQqzt8vdXFCQw0YxBiY8iJKSw1jxsJdm/tot/Z0OxNYBHmwgL/05EjFJJJ0vE4natXGWhvoI1c4MIb82wsl2nuN0gpMhE+fX3jAHxr+ztUnCqbG7usrqzTbJk0rSZLpSUSVoJcLseFCxcQQjAwMEDk+3TaHRRZptVuEYYRqTuGNF4QY7/yazRbY/T1HWN3t0ijkaJQqKHrKqVSiWPHjn3whCIEUhD0pMbv8T+IJAkv/sEGSIVMlt3NTeqt5l0p8+LqGkHoc3h2rpdxemdsRVGo1Wr3KfaUzg209nUiJXEnhkYCSUO2Nzk99+vMV3ZYaa4QEeH4Dl7o8YUDX+DB4QfvO54gCLh9+zYXL15kbW2NVCp1t1ey1Wrxta99jZWVFTqdDqurq1y/fp2JiYn78mn/IXzjG9+4K7++9+8UmKbJZz7zmQ891ke4H78Ma/ZfVPyzx8UA/PZPV4DouYj9GF/96ld/3mE/wr8xor4+/PFx5J0d7ikLmmavv/RfGG++qXH9ukIs1uNxjiN45RUDy3I4ccL/4AHuIMrl8MfGkPf26O/XKQ6H7OzIJOiwNvsknY5gbs7jwIGe853rwqVLGtvbMpIUMTvrc/Pm/ZEpsgy1mky5LDEw8JPsNmVl5f2zTBUFudG4rxdXvXoVqdkkGBxATuVR45+ASL1T2BUQhUhuE2HkcO0uRHdMktz374eVvF5UhRaAKAzjmy0i586E5nlI6+sk/vRP8U6cIBgbw3344fc/3h+P91PkttHVuPCKw4i/QsbwkQ2Vof7LxOIh7q0MM1EZW95jIfEgUrCFKu8iDw6yqhZoVzqkrAZDu1fZC+Po0hQFaRs70KjVQkYff5jROzsGotvF+vSnET/6EQhBJMsEx48TZbM9abZtI1IZ7N/5bdzDhxgUgqHAIr7zBicf2OL/eaGfaj3GzZVRat1THArfpBVKDBYqqOWAG5VBLjhTyHKbC42HSNPg8ydvExd15oxFyKQ5e3OJiYMWiVgHy4yTabcYYZuayKGgYYk2sqHj+yEps0SYSOI6gqvVcQayk1jB28SwifoThKMJpErvno3CnzxqZUKMp0+gJ20iVFAUEvGQkByB33OstawE1XoGYXmoB0xW9g5iKG0WdR0zr2EEEuBDFGI5CZrdHKG7zI44RyGyuTVyE6XloVRNTM+iOtDHrQWVhfUTuFICNZFnr7RCrFPl0MiPuLn6K1RMkGMCkBG6i6UoyDKUV1UOqxuEikp6rI4jQ0FobG0OcmTzKkLkaGbP0DVMcksX2AuyTEtdggGVaGoI/BCx5TIkGSyOTeMGHnk5z1qqhVyPoRlTLK1NsrQ2RZ+uYxpHefDMOjNTEs6tR3i3s0eYKaOKEWJro5zpu0S+1cC0Y2QSEdWmhCIk+qtJjKJHd3uIl843Gb65jnHsGGEYUloqsXB0hUorgevkuBLME3cEQokQYYAlq3z/UolI0lhsZAg6LkFwkY894WBIJXKyhO/7NP01FG0UWYYNUSWvpqD/EI19l3pilE5aZ6JfIZGaZWxnHctLIHlwOnmNmdgK7WaC/rDEYfNd1INjuIFDiMLI0C5LO9NY3QQhEQlnkIWtbTp7TdQTL7HS0BkcHCLrriHHpwl9hUCaAgEPnc5x7uQzVFlEV3WSW30EC+uggpfqw81qHG9tY7UD3g4dGpLBQCPAkm/SaXq4E8cIlDk0zacjb2NePY6SapC2VbxIQgsE2XiA2TjHQeMqm0FExXQxFJlmx+Rox0VeryEV2ozGJYalIfwgYHGthKHHUDWFGfUtOu3rNPYrfO1WQHdKJ5o2SYY6BAp6wuKBMUHcG0cELiLy2SsX8Y0Yty8dJBM3OfWJafqFy/y8TLk8QjqtsL35GmNFH9sNScgGfSRwY10u1F2CNQtNbaB2fPRUmvOqSzzZR8pxsFs2UiSRiqWQFRm/5iNLMkYm4uGTErSTKFm55wPQ7KIIARmTsNGrOPqWSef2m6zGslSrVTzPY2djl8PqHn15gxomgyLFqdFRml2f77yxxUvbLYx8kcGJQUYPjiKEQJEU8ifypNopLl24hKqqhGFIVK/zuUOHOHRnXZVMJDhy9iy7yjd46bUmajpOX0InmUzimS1K27cxjDEyA3m2u7uYTYud3V00w2BkZISNjQ2cmMPq9mrvO57HyMgIQggSqRRSaR9ZlTEMAz/oPbP8IMSxH8MO2hSL/XeEQC6dTpyFhUkOH179RyUuOAkDvWOj+D+Zx0NJwk5+OFfeMKbz33zyU9xcWeL28jL1Rh0hYHJ0lFCW7iW89GJV3gvFvEWkxO97PZKTULvEH5z6A77Y/SI/3Pohuqzz9NjT7+vG63keL7zwAu12u+cQHIYsLS1x6tQpHnnkEV588UWEEHdJaCwWI4oiXnrpJX7rt37rQ50vQDabZWVl5X3jg+7ZyPgIH+GXCD9XxfRfCr/oOxe/LLsvwcwMwvOQarVeFmcigfPMM4Tv1x/yzwjHge9+V7+/CqjB9rbMiRPee+eefxDB7Cyi20WqVulPdCmMKuzMPUZ45BBPP25yuvMG2muvEb1zk7/4qxQlJ0ckKXheLxf0xg2VYjG87zejCDKZkMHB8O41lzc3UZeX768cRxFRPI7zqU8BIK2vE3vhBeRqFcm20W/8AGVpG2nmgZ4EExBts+euSEgkxxFRRBh4CMvCO3aM8D2yHsVx0U0HEUXIu3sIBHI82fvtrol28SKSbRMZBlGhgLS/j7K0hH/48M+U9krlMlK1ihsqnP97j6HqPK4bYbY8UmtXaW3XEOPDNJwkrqsgb2yR7JaoZaYQkUfQuM2B6GVKOxaj6jyGZ+K6ceJOHT1y2DdGGSlYpHWH6I4WWXge7qOP4h8/Dr5P1NfXi4dRVRibQD5yAmZm4cBBVMcjAkLNQAQdFG+Pd26P8PbVIta+w6Y0yrfdU6SyLYaOrPNHpS+xohZxpQy1rWFs16DSTfPm2ihtX2PknMYoNbruJtqIQyZpEngaBJAJujjCQFEEK+0C33z+HPEY4PtcLxV48Z08yYxAMhJ87Dd3UGYnCSYmUcqriLUOWAqggADh+ASFHK3//H8Qtjc5X7nG680F6uUNtJZDLpZA6HEW1nJ4nkQoK2yNHuH1hYeJsYztQMtaRDUUiCIk36PhDjAxFDAy5HCqf5DvdTr4cpzQNAl0g1uDOa71jaAoBrcWZ/B8BZsMtcYmp0sS8cDH8TW2ShEHD5Qo5CySyS6a5rC72Ufh1g2OTjYZnnKIqSZGIUOsLyQMBfmagqdNEkgKUn2VmqOyFQ1TnGpjuF2C0UkikSCoZxBOjuFDD5NQ4/SFDY72t6mWErw7mqAva5MOBxmPDjE66HD6YJd4lOWwucWjs1XG3AlOprJk1ZcpxDtEvoapjlFvKsjCQtYCErrAinSufHeU6zt72L7PruextbXF1tY2X/1/LzMdOlAY40pyB891CISEZMDqu3tIpTbplo/RNMnLg+iZOsvqAgPjEbIsE0oG81KDSLKQgxTtjku/n2a5s4NR0RiXu4yMVjn3qMKRoSWK0bscjt+iQAkvriLJIUcL8wy0dzEaHlPH0rS0GM1sB1USDA+uY4cKq40YkZDoNt8G5xvcuG2yUHaJnckhqzKRyPC33SavqhbvNm5QDdcZLfikhIMReXRchbe0OtdiTVxdx6+0Wa102CxtsbK7CbZEtelSzgYEjo3S0RCGwBgRmKbG6voAUuDjueAHAU4Q4gchsRYUg1X+zmnTBjRJYrDewQ4iZgZzPPfopxhKGkjlKjtuSM3TSKRypJjn9vK7WE4LVXik1ZDD2QyG5CEUhVQo+JVRj5SfZM/MEkpZEpLA8wbQDZdUUlCxH+f8/KM89FDIq69muH3rNlOJDZq7awwM2aT1CNexqXoql+0OigqEMkrKoCEsOq5G1Yqzs16GLnQ6HbLZLIVCASNmsF3ZRjd0Tp/QGe+LEIpCX7yfvJggHvhoqgZygGdq1E2bTrvB9xe+y34o6DQc9hf3Cdsh+9dNnK7NwxOjPDIxScv0+Mory+ztpSk5LiKRprpbpV1tMzDRc+B1AoffefZ3eOaJZ5BlmcOHD/M/HzjAgz/lSwDQrlVY0lcwLZlkIY+m6yAEXddkrG+CjuNi9PdzrT7P+tomEBEoMrIik81mCaSAfJQnG88yPDxMt9tFkiSEJPV6cTttJCEYGhiga9tEUQHijzE5Pkp/f/6uDFWSIkwzzujoLqqqfHg5qRAEuoqvqQSyjKervUrph2wvQQhCRaZgxLhx+zbNVgsBXL11i+1ahWw2ew9ZSyQSHD169J4h1PY1BCH3QQiMeIq2PE5CTXCk/wgH+w6iye/fnvT666/fje7pfV2g6zobGxvkcjleeeUVbNvGMIy7/5sQgmazyezs7Ieumk5OTvLiiy/eR0JN0+SJJ57g+PHjH2qcj/D++GVZs/8i4h+qmH5ETP8Z8UtzkwtBMDqKd+IE3unT+EeO9KSU/8LY3ZW4dUvl/TYCTVNw4ID/j4t2EYJgYqLnFHz6NOLcCYaO55gc9+h/8QXknR2EJHF+aYxaRWCUtwmHBkGW0TRYXOzlTsbj91ZNbRtOnfJIp6N7rrm8uYlUrf4k/sX3wfOwn3uOYG4OgoDY17/ey2H58SQfVLldyuMmjrLXSVNvxvCMJMnmDkiCSEkQ+g6hYxEZBu5TT907kUcRRscGSYAQCNdFajZ60inNgGvvInVN8Dz8ubleFVyWkUyzJ4u9E0/wXoSFAurly1zZHCCxfINQ6/3xmt0hpXQJjQTefovc2WF2360hyxDz2lQyUwh9C6F4/Hri61yonCHmmWgxiyiUMP0cY/YCgRrn7IE6sucS3nFnixIJ/DvSq2ByEuX6dUSzidAN1GwewhD3+LGerloIFNcnUGT85DQX38mxtxNSSNbo7vtIcoyouEgjNkAjK3Nj6wiRJ1PePoRieES+johkhCyhJGGo6JC+eZv+hEZLKaMP+USmhoyPFnjIQqZkjVKv53n1/APsbnuUtmzeNacxfR3HERw9qnPmTBFNqyBEgH98CspdRFVGsgIQEebhQb7zv/w+8+4uf1e7gWlXEWFAPR/H3t3AalpIZp5GOQRNYfPgIbat4+zVU5imz0h2j2q7QxC5GL6NGyUZyrR5cKJCXyJGTgjk/X3OT82wlR3EmxpnVdEQQiaINDZ2DkJoIxtxNtoeOTXGAAPIQZyWBOXNNLvlNHvlPq79aIZof4/p/AJHBl2ygUEYxeiSwxZ9GDW6ZAgAACAASURBVDkL1fJoORnE2ipruxnqZgqrKei2Nepuhv7jEUQPokwfR4oEuDbJqEzOaRLJZRafrbNnDxC5SXSjw0wx4JljPYldUnQZ37pIYmGeQ/V1+rr7zAfb6G6ILLkEsRgNW2J/P2S/HNEJE5i7BeZXTbq2zbplkcrnURSF/X0Vf2OP65s3QBfcKG2x3XQptTyklRL7HQtdkeiiEtTnaO/2U1PzbHg6ljrA5NAQe5qFGfZUDV6syXbLp7LmEAUuK2Yfn0tvMzI2iOw7RLurpByHVKrD0PQ+06lNpmIr+Hsa7pJOXR9mZFQi4yWopFycmEOCiEquTGZ0lVz2OtXF72I1Q/odlXkzSd/ox7khD/D12ha5YRlZjSF7NWqd77Jw8y3OlGtsvXyZKy99G/n2HlKlw1XZ4oq1jL/b5cb86ygSKL6KrMjs49KfS2Iog7ScNnvOO2hBgcWVfnKajGYoCFVCUyX2Wi2cskRd3EBWLfS4SsL2MSKPnSmHK4M2N7iFH89SSM/idDRasSxxscCVvfOU62WQI1QREngeE3kJj4ij15o8vCbRn/ARexKRFdCIyVTcQ0TaQzjhBHXvCGvVX8G2i3zzmwtsbLzLtXfe4EeXF7m51qVlQrGo0bUCtgObZqgSOTKSIWPLEfstidW2TXfHZnZc4zePaRwYUujLTyAZWSI9QkkphIFDLm5zcCwi7eq0rR0m84MM9IVI8Trb9RLXF9rsVJu8+OrLXFpaJjBUdjcayHcIoGEFNOoCpZbg5HQf33mzjlcaRLYSbBo2ciKNrMh0Gh1yQzn0uI5A8MDQA6SSKY4ePcrhw4dJLi8jPO+eZ3Kzus+qWMFyRM81/w6CyMdy22TSU4wPH+Ddxg02drYpuTWs0EGTNWRJRtM1zg6cZXhgmC984Qu8/PLLPYdmWUZSFQxV5fDMAf63P/xDpn5lnPBgAXnSJz5tUmvUSYY/mSt8X6a/f53BwX4ajQau65LNZhEfYudYCoKeqa4i31fl/CBEssTf//BVKrUqsVgMI5thv9kgDEPK5fLdKrBpmjz55JP35X1K7j6SXwchUWuYfOe1W7x+eYVr8+s46hjZwdn3NUx6L86fP/++/aLlcpnvfe97lEolOp0Om5ub+L5/t7fXcRzm5ubuy+78WYjH4yQSCS5fvozneXcjY44cOcLv/d7vfaj/+yP8bPzSrNl/AfERMf1Xwkc3+T8NjiO4dUt5Xw8lz4MzZ/yf31/ppx7gyq1bqIuLd6XKry2PISSpZ0vvOIT5/F1eWalIDA//ZIc1DCEWi/jYx3qLhh9f86ivD7la7S0Y7vTRhJkM3tGj2J/7XE/Su7aGurR0T//urf1BXr49wfiIjpaJISSwfJ1uop+U3CUKFNx2HX90FOe55+7r/RVhhGa7PWIKRJk0Uq2GsCzQNKTVZWi3CYrFuwTQ8hSu7I2wtqGgz43cl2MKgKoSFIts/M08erMKEQSRgp9IEfdaSIqE5NgUzhVJbC1Ss5P4ToA82yCZXSCd3GbBzNP1FS6un2RIr6DGHMxmDseX+VjmKoVhBWSZcHAQ0e1if+ITRKkUotsl8fffRtuvoLQ6KI0mQS6H9/jj3LNrIaBZhb95OclffmuUt65PsLgzQdz2iNBZq6eRRUC7m6RlxaiVpvGJgxQh3CSq0luAZBIebcvjqPcjKrUEZ4stpGKXUiOPHfUj1xQ67gA1OcfKK3O4VY26n8ZTYmzIU6TTEZlMxPi4z+HDOpo2h+8fZ609yJWBYSqPHiHz5JO8/vQxvnFimIYquFK+wkpzDVOLk8nMEHQFZl5lreDiikn2YoeoTxZphsPcKj/Mzr5HtZ1ivz3If/jsTZqtbfydGlOJdQ4N3SabzPMbR05BuYJaqXAl8NmyLGaGpqhYFpKsIETEfmUMGUE1VKm4AQe7EnIsDarKAwN/x54qs9oaY6teIMhU6UvfZnq6xmErhtwvYysjuKFHQ6nQVZs0+5q85G6y5GsUWv1IQiJtWOSCCl0Rwzr2q4xODkEuT/jIx5DTGRRvh1q8y+XmbVJrHkdEieKxbYpHVnCHrvD0UI4BI0bh7W+jtpug66h+hLa5SX3pKm/VTBbrXWqei6rr4Dg0MhaD8QTi8iS76wG1xg6pQozqkE090WSjZZNpmrQtk/1Kg1hSwtYdUuUGzYZNoxsST+jsdQ6hNQYxIg9DdVCUNPvpFJGfws6t40dABG5okMllODR+gkQ2iTGS4PC5MdRKBafi4/o+DaNOe1wnF1dp/G0W/wYoZRdTSnFZOkfHkUlPDTBaNcimBO1Jl519n9FunGvnL1NZcUh0BU1ZJlEoYFoW4RGJruyTCjKkpRJYXeR9k7ZhUXyjwuZKHV2Ske0mut9i7NYWiwP7XG0uE2xF6IFKzvNRnZCsryOG+mlHsOdsICf28YwKg3tPEiFwIhehypQ7dUobNmG9gem9gaal6DfiZLsW3lCX4UimZuik0wk2Ouu83rjCOX+A55vLBNJL1CpNfNen4wS0XY+0CMknfVKvWcSCkGwBwnxIV0gYvoWwoBw8hlF1Sftdku0sgzccgssvsHT9Km8sv4XZaRJEErqmUatH1FuC4ohOxfTpOhFmG+S8Qbft0+rY2IHHWLrJOaPN8aGAxx5SGU3uIjzBSkXB6Jdxd9voZYknT4LR8JgZbRAzLtOnGOy1ZEqtOraywF/97QXMtkeq5XKhXEPPxZAlmQgLP2oxUY0oSH14lXHWNyNCO6K9tcNCt8tOuUqn2UVIAkVVSAwmOF44zljqPdnfQYCyugqqyl6rxfmlJa7v7GJkq5Q9FSV2bz+qK3Vpa4c5cuIsL+18n2vleZyujevZ1LtViHyGtWH6gjxTU1McPHiQxx57jL29PdrtNrph8OQzz/Af/uMf8Ir5BlVhkownKe3E0VSZMN2g3TaRzRRBEBAENlH0FgC1Wo3FxUXm5+eZnp4mFCFNt0lcvXdiEUFArG2hOR6K56PaPlIQEPxU5uoHwfd9fnj+PKphUK7XWN3oZadGUUSn00HXdXK5HI8//jhTP85E+ymE+hBq610q9S5/8eI7eEGILEVEQqbsFllaXubQoUMfeBxXrly5jxSapsmNGzd61ekgQFVVFEWhXq/3SLRhsLOzg+u6LC0toSgKuVzuA8nlzMwMH//4xzEMg+HhYb70pS/x3HPPfURK/xnw0Zr93w4fEdN/JXx0k//TEI9H3Lql3jdHhSGkUiGnT3/4HtN/COpbbyF+qs/l2vYAIdKdHk6H8I5dfjYbEYagKGDbAtcVpFIhv/Zrzl1+ePeaC4F/8GBPdqrrhMUi3smTOL/6q3cJsLyz0zP1+anezr+bP4ZGm+pWncnjAwgEEVBppelmprlkzfEd72Moh6bID96/kyuiCNX1etXSWhXlhz9E2tpE7JfBsok8B39i/C4pvbZT4JtXD1FqJ6i4aa7sjlKpSMzMBPdLllMpyjWVqNJiJxxi1ytQdZI0axEtL06/0SF2eJTNmzaWq5Gb3KCqRVhNibTbRvUcBgs14kmLW9uzjKb30C2VT8wuMjit80bpIDfUkzBexPjcU0QDBUQYkv7q15CbjR4JTSYQuoFcrmBFKkFh6K5aut2RuHxJo9w1uHlTpdORCCNB25TJaSaR4lMxYxQHt8jm61hmHstPE3g6UhC/e76xhE2lqjOTXEduOZhWErkcZ2hE4Kl9SCqYToLVt46yemmQIX+Lk/J13jIeo2vkiMejno+GEOztydyYj7gS/iUL5YuYgcWi2eWvyjtcalaZjo9yTBsgF+kcNiZI+BLtG28z1AoZix/hkDVCrOqQWm1RXc1zxfpVKpZEtR5ycrrNv3t6k8eONfn48UEeyMhk/Rq/+vAwT56bJT7soI8LslMDTLgxjHSevr4CcwOjxHSFttUlGddY2MiwHYRIQZIxbYSsts6Tn3qVJ5/aJnbkBgPjb1N3TCoBrFJkTJmjbxAGpS2kyGc3apJQTOLZJPOpIrslgwpdTM2j2E0xlq7S75aJxVVG9QC9vIZUayCqVcKJPuTKFqtXLuJLNq4NhicxuNbBibv4SRlfCKZ3fZSNJQJNRza7qEHIrfmbrFldYsJnT5VxQ5kty+JWISSeOkH3xc+wXxtj3R9jKT5DaaZG4GwjdIEVuXSyZeTQ5ciE4MCQSlc0wWsRaYKyFZKI6Sjl48SFTyhJCMnDTqY4VjzFOhaxwWU6XkgQRiTVFIcSB+l0Yig6xA2XwEhiHk7Szcns9g+iHCpRzlikpADxvSQeGl6gsCAO4geCsdZ1Krlx5LE8A3mFB46NcOMdi83FMu9cWSCMoKTINHSZvliKRCqBPCshiZBpuYOqCORqF+yQTLmFvNzEjQOyQEr6YIeEKuRaHo0HPR6RBeNXPKYtn7OKzENC4kHGmDcl5P4qQ/GIE/oQm+sXcKpHCJoSQbOCtScx0ifxzHPPc+6cQ3FAorMS8IzskxGQkDTmqg79kUwjH8cLXMpRg+2izIy3SbMpUav4hH6E40TYUY6sFyO32qLekdFTSfZbOsaoi+sqmLtFXDPBaDFGyrBR/rSGWL5J2NnltOFQLG2wIflYskIQhiiyjOsIGpvQ9jx8V4YRQI5wfQ9DkjASPoNGyIG6hmVGJBJxBoYVElKT7R2DhmVxWDMY1wz0us2Bky6TUxLxSGOltMS3r13g1uYyW9VNYhmLxVsSLdvD1jJoqkZEHXOvDi2FvGJxdKzBRH6bpbUytc0KbzbadFsmdrNBx27RdQLMhsmQNER3pcv8/DxBEDA4OIgQgjCfR97a4o0rV3h5eRk3CAh9n62SSzXZRFd0HDdECIEsuVhihqc+/t+xGmxQsatocsTO7g6RHCFJEpEd8qA4gSRpfOKTn0RRFGKxGA899BCf/OQnefbZZ5mamuL5l57nb25+i9LWHk6nSRhmCUOVmBbDKAQc7XuKeKzA4OAyxTEQikBTNDRNo+22+fL5L/OV8ld4fuF5Xlh8Acd3OD1wGqKIWMvqzW4/VhRJvZgYEUYE2oezO3Ech0uXLjE/P8/29jZh2HNXtm2bQqHAZz/7WZ599tm7Fcr7IKn48QO8/L3vEfpdJCERKln85DGS6Sw7OzsMDw+T/gCF2Pb2NqZp3iWHYRjeNTqanZ1F13Xq9TqyLKMoCp1Oh7W1NTRNI5vN4jgOt2/fplqtMjs7+4HnrWkaBw8e5MSJEx94bB/hw+OjNfu/HT4ipv9K+Ogm/6dBiF4cy82b6o9TabCsXkzLZz7zPhEtPyeUlRUk07y7S9uwdErtBLIUgSTfJXHdLnz+8xaPPOIxPu5z5ozHuXP3Vm3vueaSRFgs4h89in/0KMHEBHetgOlJVbUrV+5WPb1A4s3VURQ9iRvBmqIT1wW1ZppqN82FzRwVkoC4KyvO59/THyP1JK1SuYz6t9/qEW5ZAk0Fy8LXlB7BU1VatsbfXD1I0vBQPYtwbhYtE6NW6zG9YrE3tvBNRNAFSSM1nuH2V+dpezEUBWRFQgttfMtjWczwwvrDvLU3xXY3zfDkLdZbRTxUpCggjoXkRvQNddiqTPKfjn+Fp6VV1jdV/qb2OK3kMI3HnuO6M8d6OcWRiS7pxRXUK1eQNP2Oa6LAbAk6XZXWUoUrnKFWk+jvj1hclLGtALfSYOV2hBnGkSTwJB1dOPRFAXOnLvPkx7/DyMwGsmKQTdhIfo5mI0MUQV/GoS/pM5gP8YcNRupLFPuq7DeHWZ+fZfv1SX64+Cn+uvwfObj6DjOd6wxnHfx8P2dzy9ipPPt+HyMjIQMDIcViyELwCre3yhwckqhUFSplnW13HSto84R+Ft+TaEl1AhFiNDsc7jvCSGKUga0acdND1gdI5E5Q3paIL73LDX+S2dF9fufpWxQLm6SMBkg+A3GP4vhR+mfTSFh4YcBaFLKu2sSOD9C8PcLX3jzHuzcMmiWFbASu/TrbjqDrHaDPPsSRE7f59X/3Feb659n3BnHlFLnBNIlsnPrWg0y0jlHQfNS4h5nMUkztUZdqGHYCxdPor3axkmM09TiRssZjZshAawtHT9E/W6RQWkTd2kRaW0UEAcq1m4jFW6zGHSJRwXUlED6yqpHe77I/MUEUBsxeaxD5XQKpjVeq4+3tsdDtkrcjUq7PvqYS61jEuhL9chGv/YdkzQZS2iCT6edS/i1cJ0vM8EnLO2QTDoroEhVM8u0ERjJOVQ04sCxIWRKao5BoZLD8cXTJIxQqXckhPz3LwcEz5K2jPHVinb2gzrF0H/3aEUTkU60J7LCOvXGayWKV1YVdrs/vs7jRYLPkkdM6yDGY+kGACFw2ozEWpDHyxW+xPbZHW1liJLWKLhRyA/B/XXiDiyu3+f/Ze7Mgya77zO937n5zz8rKrH2v7q7eN+wNUCBAkBJHoEiJIoaWw3JoYuZF4QjLj/aLHOOYiPGL7PA8zMPEjD0MSyMONwiACJIgwAVrN3rfqqura+3aMrNyz5t3P34oEAsb4jIipXGwfxH1Upl58+TNG3nPd87//30tU6MsQNNTJA0DAsmZ33mETrJDUvEZUPd61+K2T0csM7BepdwNKfcE9VjSCBRiCUldQ2v7vJWDzy9HdDoCzdORkYohLYZCH0X2SKYzjJUMdEvj1uI2pvY2Fju0Gx0+/7vX+PRTPyJfsNESKUaHDA7va3O7lsS2bFTdxheSsRgCTcG1VGoHGvzeowqjVpO00cGpdWg3I5RIJQx8lB2N7esJcv1ZKnKQG+UUzVBFLUoSsgvpYQrFJNFXAqhLGhJ6eARxg2Q6SWZni6umjhtEhFGMKmPSkWR8LkG6L4FnxnTwkJHE35WISkj2jkKvKckkFQwdDk5OM1oY5sDQPh6f+jSxs8TBnkOul6avJMnkodlUeON2j0pFgBQoKPiJLs/fbLE64NEMWnv98DsOcU9wetTj4cMKas6m4wZYisWO5dMMNeJIRQ1i7G6M47hkrQFG8iOkUiniOGZtbY1avcbM9AwIQblY5HsXLpBVFISmEY+PE4/uZ+Fymcsrd7la3uX6dp1y3Mfvf+5PGfIjvn/zJXQUJjIjTBcmoAzJZoJ0mMJO2/yLz/0RZv6j5a2wZ+bzL//yX/Jm501co01s+kTCZcjwUZUsjqfTC132JR/m+GmHNxf/DWvOGpudTTa7m0gp+Vrta1TaFfSETsJKoCgK53bOoSkaJ3KH0b3w/cqe9xECJYwJLP0X2jXVNI2XX36ZWq32viGQEAJN06hWqzz99NP0/zznedXk9fPLkJwkskaJjSKIPeOnKIrwPO/npkgMDg5y5coVNjc3mZ+fZ2VlhYWFBQzD4PDhw+TzeVRVpd1u4/s+tVqNqampj0TrGIZBuVymVCqRzWZ/7me/z6+e+3P2fzzuC9N/IH5TL3Ip4fx5nddeMzl/3uDOHZV0Oiab/eUiXgBSKcmRIwGqurewevBgwFNPeR9fbvpfOl7bRr927X2BOJTpcKvSj9MFZXQAmcvhODA5GXH6dIiuQyYjP1YY/1LfuWEgqlXU7W0wTQSSSxuDaKFHeOAYfn4fN8tDPP9GiSvraaysSiolf/JStraUj3UmjjQV+zvf2TP0VQRIAEloC0TQI06lEU6Ptzamabk6qu8RDQ4Sj+6Vj2kaNBoK44O7bL79Eq3Fc4SVq+TkdVTL5s3rU+S2b+NJnVgKIlUnkoKXeBbNc0ilBXpUwRpoUXaLJPUuTmSRUHsEUkPDY92dQelamEtlvhU9S24yjcik0e7eRR0u0usqhK2Ime41lHp9L2oniuk6gq2KRtKM0XyH+uRxglhje1sle+1N4h/9GPXadUZ2rjDcWWBLGyM0EkTJNFPHt3js0QvMjA3z2IMpvI7F/PVpSsUttrcHOTIVcmCsi5CCJ0/tMj1scM2ew8jBzlqWtkwgnvwMrf0PMtK8iVou0+ibIugfJTIMpKZT3lFopYfpejoPPeSjqZKF2teId5psNRbZbs/T1Tr08HggM4mlmWjSwo1DIrpoXY/pzCRJN8Jf9zlfP029PYPbFUzuV2k0Q9K9Ok9/dpt00qeUraCpe07SDS9J08xiKwFutc7bzS5ONyBKpFgPYcWQNO926Ld6BEGSVreE15vl94+VKTLIp4/P8+DDXwc1pmdkWPUlgalSr/ZTTGh4O9O4DZtmL8d0cRFVibDzK2QXffR2iHRDLm2OIDZ9ihLe7J+hrzdOLg5wzTSz4RoaEsV8b9IZ+GBYKEvLbBcFoVrD9zUEMRohhqfQGE/Sl0pzyDEwWzVobxKiU4s12jForoNhJAnSg2RVm0ErSbN2gJmhEwymHPpTITfaQ+wWbqGrTSQWCf0uoWJgmEk6YZdHBwbYUHRkK4npw+xuh6wieMBKctUrAhEyionmjnD88GNoQkGGGr89V2ckt8MLP+6yttBgZ7MBpsDYepyl+SMowSs0ax10TcEIJbrWZavh4LV0Hli26MUpXg8nWS39kGoyZFdmcESH240qebXJaHCLk//dE3ztheskFJ2c3YetWkgv5tC+Gb7wqadY93fIS520AoFwUfJLCG2Tre2ICS+mY8VoJohIxRHR3sJVGOIKyUxbwZBJ6JjEsUKk6BSGBokaW9Rsi5tdjYs3Nmg0BOvrOrutNjOzN3nyEz2CUMNQIwZyA4hmB0PXEOmQqGET+wHFdBpFg77IpPqIAsMwbSps1DNkQshqHXw/JvZVxpWQ6vUk6UqEMSaomz1ikri7NrtLSVJLXdrJp6kvPkPh6mVizaQdSlRRI44dfJmlvCVZ9tPUaSGQ5BM6g6bJ6XyJRsHAdhWUZkxnPUB24KhUSaMQhDHlJowXchybmQAiSoMzpDSN5KZLplrBUCMKfQo6WV64VmWnFeJJCBB0lABfl1y8ZmGmLYQuqJYrOGFAMhY8PRfgRSqqplCw8uybGODdO7tE0qMXZTANC8frIbyQrAFa08HwPDaa69wJ73L+zgUqiW0UTbB2Y52uEMihIeLBQWQ6zcLyApnZHaZPu5w+PYaZn8UPDC7f+AGzRoZl7y5KzyXq9Uj19zM2OcLk/jGm5saZmZnkeN/BvWivn+Iv3/xLrpWvMZDM0BM9dKERyJCGbLI/l+DQAZvSmOS/f+YI39n4v1m7vYZt2miKhiIUzm6fZTPeRPgCxVLo+T3CKCSdSHOrfos/mvoiahR9rPgUMXtj+gWEqRCCd999l2q1ivahRd+f9HEWCgVmZmZ+7nGuXbt2TymsZVl0u11KpRLj4+M/8/WmadLr9Th//jxxHGMYBul0GiEEjuNQKpXIZDKMjo4yNjZGFEUfm/eq6zrdbpd9+/b93DHf51fPb+qc/b8Gfi1xMfe5z0945RWT1dW9aBVdB9dVeOkli09/2mV6+mMc8H4OhgGnTgU//4k/AymhVlOIYygU4o/4BcUjIwRzc+g3b+7tYmrw5YPnuOQe5PbEAyhazCOPBMzMRH+vMXwY0WphvvIKaqWCurWFWFggHB1lctDhTuoYWmnPmbZWU9D1vfLlYvGj587pgFzfRBXxnjPveyXBUlMJel1UTUXEAC7Cu4XmOhBHiMQg3kOfoP2NAiKboDMwgt7/0RXa9TVYfOVFVF1FUTJUm7C6AQf2vYsz9RzN2efI3DyP6vUIS7O8VH6EWtOgpUTktC4pR3JIv4SPSddLohp75ZAIiALJxfUDXKidJrTSJOyY4m6Pg1qVXGIX8853sEt51m4oKA+s79kz6zoogqArUVRBy9OwFB1dV9CVGHH9CkuvLlP2sqgquH6XdGeTP2j9G/4m9WXsPpNTj1wh359laMilkMzw336hx+zYBV54eYrB02fxtgv06gbH5jR0I8aPBJ960ONvL51mNV2kWPQ42T9OGslh/Rp3szb4oOngeqBr0MOm0F5B7p8lqYZoS2v0lF22aWO3JP0Fh6i9RNUKMdUpIkIUAYpbQqRa2IaNKgXt6hg/2n4AQw0xBNwNs9zt6QyPXkCP7pLJDJJPNQh9nW7X5JXLB9lu9mOnA+yNJk76Lo8fOYdqCETDRZUWxVREbfgtCpXPo2kKAkG1lSeQaR6eeZXXF7/AE58VdD1JIungV3fJVluU68O4ZpKRwdtsrT5GGCi8s/gof/zwv8O+o9LpGHiKRdVJM53eZjEYxNlWOJTr0l0r4WUU1DBCbG+izE6DDPdWmboOoq8fpMZU1eVCPiBhd5EhiDgmUjQqcR+n4we4lPMZuFZlJAOJpkZZy+E31zEl1E0dXYnRNY1Y09mR4+xeC+gqB4ilSSVU6ZtKQdyj6YIhMgRYCEJGBwv4Toxb76G3dGqFJHe9FA8323zuuR32jbaITZVWL8tfXXqcNzeGmcs0SWd2uNK9xltvCo4kVaQdU67ZXHxhHFt5HClqXLmW4PA+FyP2kLbANuq4TYVr85IonSIYmODtbZfRgoHu+JjBFgQSP2Xx+lqNxw8pjPouX/vqP+ff/u/XeefSBo7ocOLUEab2T1BZa/HF9O+yErxGOdhEy67iizKdrsQdlxR3FNqKwNFDXA88RaXh9lAz8LiZQrVDDD+moyuYZhI99JD1ZWTg8vbdCkueT8fP4fYSqEpIFAX0l3KsbigMDcDYQB8GFt1WilazwfSQzfU7UCwMMzN9HCWVwjc1otGAfQWdcvgabpTiYjdFQs0yN+lQvypZX0mQiIYYV7bQb23QOVHCFz4N2QDfJ8gVORaXmei/hqm1iY0QTVSo+z4L5Rk6gY0XRWjRFN0wQyHzElJWGclnSMshTm7FrCRqdDouZtWjECYQuR56OkJTVSxDZ7UsMUydhG1z7e46P7q6wvrl29idmCk9JL1gsZBZwwmDvXJZIfDjiFgNWb2tIoUk7IUkBhIgfLy6y/4MhKHE8wJ0RUNPaNzaqhLFkp4fUmk20DSd8Vwep94g7jkIoNzeou02sQQIxaX1t69yZfQcXjWDPfRBDmcUtXnwwct0jV3CriSbbDJ2os3liyrX55O86d0kZyTpKj7I5rIHswAAIABJREFUGK9awSqV9sRS2ONUfhTEvYvFsYy5tHWJlJFkwMyy3dtBSoki9vqMK04Ns2WSMga4VZ4Hi/dzRAGCMGA72EaqEqEKVFNFqALf93G6DsIQxJqCQCK5V3xKBT7m338nw8PDRFHE2toaQRCgKArFYpHZ2Vkcx2FjY4N8Pk/iZ6xmT0xMsLi4eE8Mi+u6nDhx4ueOIY5jbt++zalTpz44D0HA2bNnqVareJ73vpOu67p/5w6sEAIpf/kF/F8X3W6Xa9euEccxBw8evMc86j73+YfgvjC9z9+LVktw584HO3s/IZWCd94xmZ7u/YOPaWVF4Uc/suh2BVLu9a4+8ojP3NwHu43+k08Szs2hX70KUUT02H4OTU1xSHw0+0xKuHpV4+ZNHd8X5HIRjzwS3CMaAdbWFC5eNHB7UBJlTp9wycz07fXXfP3roKp7zrMHDgAg2m0e+9IIwYvbRJcv4RVKCHkYz1M5eTL4iJjOVpc4euP7JKMWQoA0DPxTpwhPntx7gq4RaRrICKNxBYQKiglxBJaFaq7wlvsUP3x3EBBommTfvpCHHgoIQ+iU72LtD4nk3oTjJ+J4dd3GCtcItBka+QkQCvXMKO723gp3paaz21IRnTnihWfIpLaxky5KIGmRQ8qYmlfk8t0HeHB4DRmrVLs2WTvgVtXkoekd1EDB8zXCWCEuNNHkClIe3ssylXvxBCIMuJI8zp1qHoSk+M4qO+0MnidId3coOttU4wK6cDlgLDExYTIS38bSCwwNRO9/lw9Ol3lg4DV6aDQHT1Be9fErEXcnPoXRpxMBE30mC3cibPuDLXIt8jENBc8VTE5ArRbRagnSyZBMtkdptovS6aF0utRTMQopbGsDoezlgg6FGrWoxrg+jRspSKkylp8kaq+SijIsNkax1A5SQISCqrq4Ev7jwjD/fHqXbB4qrSlSRo8X3x6l3rHJJH0KwTKhYbLUy/P27dOcOXKRWFFReiFRu4KrB7iaQzLOIgRoakSlnmB4ooNleahqgtLQBumNeZJ4VOQghhqhBh1ml6/xdvshtv0Cc8UrNPwiyS2dnbBORIjvJwk8k4ISsikS7KsKjPEWMtElPwjKy3WU0Nvbkpdybzc/nQXTpG97lf2TKksdBVcBpIdvh8gNi2+dO0jPU1FbB9AudzgSl0mlBK3eTTbUFK4t0YhBgbKRYCN00JQYI6rQCfN0nQmEn+TYxG10tUPKcGn2EiQTwwz27aCfrbO4EOAk+tA1DUYLPPk/ezBlcziscmHrBGpK549/9yv8X185w/nVQf63/+V5Xnyhga7rCMMm9gxSumBqosmtxb9lbqLE5e00V29mScQ9+tI3qSsqmtQ5qBk0xka5Vojp1DZJNHfwhYYnJWok0aoBJB0aTpa0Ibn21mM8eOg4E6UWQpi0OxIrjshfX8K++wJPDnk4/QG3RpfQDA11zODGVsDGaMTEKtwywbcilK7E0+DKEZ1EO+LpTYHfMsgKk5Tvo8kuOw3JRs9HtiNs3aIW59HVHp4fMF46RSGzQRQ3yaZtNNWHKMbO57EFPD42S99WgnbGxsqVaIZtmqpHKZPmcCJHn/cY1cQlfC/EixIcutDhVjuFpQ8Sxzo30wXm1LsU13tsjDroClRH0nzzkOTY8vf4nwanOJj28OI2MvZ5q1IAYROGHRQC1hQdRZE4/heZ6PsWA7MnEfU6aiR5su8g7Z0eftNHNzWWOoLfnvPJZEBVIyyzSTZR5eYtjR+v9GGlkgzsH6RzY5NblTqLDQc9hr6jgm4jIohAT8TUGzHf+7Ykkh1SaoLUkSIsxISaRwgkUzp6pKIIjevrO9zZFKRsk+F8iOtnkLGC1+3SkxI9lqTTKXaCHRQ/IK7s0kkK4tEctp6gqVfg7DskHjsDwMjIDSqVDr4XoKsacRDTqTocnva4vThCtdfgseQRXnHPU0z0EbseEojikIRmcyizj1C/d8rnRR6KpiCAKAwYjYZYExtESowf+Kx0VxlW+xGtiK+88RWsUYuh6SE272ximAa1Wg0zMnGkg5E2EOqe2PJ3fZxVB8uy+H+/9p/5Jw88zGCx9NGd0Vj+wrulP6FYLOL7/vsCVVEUoijiu9/9LkEQ8I1vfOP9kto//dM//Yj4lFKyurpKFEU0m01s2yaVShFFEa1Wi4cffvgXcsztdru4rvuR5+q6zsmTJ7ly5QpbW1uUSiXy+TxPP/00i4uLLC4ufkTQ/+Q4jzzyyC/82X+dvPPOO1y8eBHTNBFCcPnyZQ4cOMAnP/nJf+yh3ec3jPulvL9CfhPLAubnNXZ21A+3Ur5Pp6Nw7FhwT7Tnr5N2W/CtbyUwTd7/UxRYWFAZHY0+IqBlKkU0M0M0O7uXpfkxN8dXXzW4etVAfc/Z3nUVrlzRGRqKPhIXc/68zle/mmD53Ta9H1+jcXED5/VrjG+eI7mxiHDdj5geARBFpF56gX2lBoOZFoXdOzxsXqQ9Pkc6/8EJNbw2+9/9Ovkhg/6RPXMlNA1teZmoWETmcojdXZRGAzXYQgkbe8IUEG5AcGaO//PfPcTyvEogVAytB8Jge1vDcRSkhOMj75JLdT8yPCHA7UGutUbtQowWeXu5sBubrFXT1P00Ugq0wEUlpllP4Uqdgcw2Kb2DrTk0u2n++uIfY+Vs1Dgga/s0XQuEYLp0k65vsttNUHVTxJGPovTITsfYFQmOh+dExF7IVmqSS1OfJUIhkgryR+/gRgaa0ybT3EQgUeMQP9YpUEGMj7Bv9CYnH41A15m/YzC/aBD+9TV6ToRhFOhL5+gEJngu/a15Wv2jxEJBKhHnb/Rz5EiBRGLvmsjtLpFSezSaCoODGooSkM3EaCLklnYC1dRobgdUeyENWaOXWGd4oEqvE6JqClKGoBc4Yp+g7keYVsxgX4oT+jj+bj9X14z3JpIKUSgJpU6n6bB6a51cYZORKcnseAIZaVxZGqSU8cnQQFtaJ7BMWlpEu5tjdmQFTZNILc27lxcpawb59jQGNooCOzWT/cPLTA3U6XGC4eFNipkrxMsOPhGdTpGuk0EzJUuvHsJqdWn3pTk1eQVDj+hvNrGiFNVmEs8zkMToImKjcoTIOUzqKYspZ43Dx9fQbzSQtQ7oBkJRodgPRHDlTcSRkFzRZFyHvkiSC0Pk9BS3Vp4m9HfImx6brX6WwxFuu+McPXqWeMYiGK2hZRS0nksnH/HO7hj7BnPUo3H8lI7te8RC4zMH36CdvcNQqkk+A/3ZLs2ew8TWLqdSku1lBb3eYyJj8rnRkPHfk0TqEFIXDOXrZFMd6k6dxx+6QtndQSbucH2+jhN30OQu4yMx+azDxFiFTO4Ww+M9eq0uvbiJlr2BGddIWQaHLZOEzKGnVdSNTarVHRJERDHE7/XbCTUi8rocm7N43fxjVD9FY7eOIvS9dnEzJtttcLx6ESWncqVzE09tcuKRFmMCIqmy0YTmTIZbUzq2F5FICHaGU8wfMiiFKtGOwdAVlaipYUqBpvsYD7qoJzx6h1S6LjgbCepGBk1NkzJH0fU+ksZhpmZXaDV9kkkPGWlY2X5Op0303QFKwX6GRg4ShXuRSoMP/TaltOBuexsRJSlkm6zuhFibDUZ3fOrbo6StmNJ4g9n9W2zldF4c8Xh3NsP80RK3xxIITaOhS2jWOWiOo21sEgiFxeYosQjpNHbY0gvctEZIp9Jk04M8cahAUnfwbAvF99lXKqHqOvUoYkNVeODhDiIJpq7Qn9KwTcHJU12++vUEZluDlIVZSCFSBqLT4k69y/KWwrlrEcmMQqsnOX9O8r0fSGKpYCZ1xqbzKC0Pigma6y3MIMnRgZgwBhELlioBItLpSyVotQKsLY9Bp8eg06Ph98jlsuRHRthu7hBWKkQyIgwiUgUIg4BkMUV+M2Z7cwevUmF6bJ76bg3fkPSnbWZzDqMpj6IdMJxw6BgjHLUPM6ENUonr9KSHmkwwaA3woHECVbcgn7nnPqcKlcvly5x76yzuVpf6UpXhlYg+D/Ajnun7FGeKD1H1evgE3Fm9w+i+UZLZJK3dFrVqDTMwaQ40SRfTCAS97R5hNyQWMbOpWeaSc1y+vcBQXz+5ZBIR792HQ0snsD8mH+494jjm1q1bvPPOOywtLWHbNgcOHODy5csIIQjDkMXFRV566SV2dnYYHBwkm82i6zpbW1vcvn2bM2f2hL3neXzta1/j+vXr72e41ut18vk84+PjPPfccxQKhZ8xu/goV65cuUdo6rpOLpfji1/8Ip945FEenN5HQTWYLJRo7e5S7bRR3psQ9Xo9SqUSjz766D+6w+729javvfYa6XR6Lz5IUTAMg+3tbdLp9M/v2/3/Kb+Jc/b/WrhfynufXxuWJYkiwXuNjR9BUeQ/qCgFOHdOx7LuHUsisffYs896v/Cx2u0906EPi1khIJmUvPGGyZe+tLcb7Hnw9a9b1HciZjauEmkGDmne7hwjuLLKH629SDQ1hfypJlX95k2E7yMTCbJANmuAlPxB+3m+5f9TwlCg65KB+XOYWYPZfR/tL5WpFMbFi7gTE/hPPIH6jW+gbFX3BHAUg+cTFjO4X79B680hTtiXmNMKXFePUI+zaFqO5eV+vvCFLuFWEhWPiI9OEkS7zSdLlwhHprhT7SOIFAKh0igHRGkfO23geAnibkTLz1NZTmO2JP/DE/+WZs9EtU32PdDg+sYk7cper6GMwfUFkYzZaGYYyPaI0Xno0C1UFS5Whpn7xCRFtYS72uNv1g8TpD8oKZISyt0UQ30eRWeFAWOZiiygaREDokL/iE4xt0IUDKG5O5xfOUjXEViOg93rEid1rl6fZmooICtuMzjiEPR8KNxgtzXF7bsTlEolDN0jqy6TUGrUZmcYeuvHPPSwDdLECD2IYbk5zIlHYxY3wO9qKGjEyiCfOXaDDQ3aakCn7tEX2FT0CZrqQWbtJCcPhfi+xDcFZ8/5hFoT39BQnAgMjVRvkfL1O2SUJEuWw77rHaz6m7ilJ9E1MJwOKgGy3MNo3EJOjSLjNFGcJAo3ubS4xG6riGEbpKWNUCKq9RgpIo5MXqLSSRCF19hdn8O5fQkZWXTrSVTDo2+gzo1X52jUUxT0Nrbi0+mlmDzwDo2qib6rYfhpDCVCRgECyHk23xYzFHbrnD42gkj0Ib98EvHGCnJ1HRnHxM4uSlCFAQPxP+rw6i5aK6C/H/xZlfNvPUbBbhMqCqvVHNWmSjKzQ7HY4gKnKBg1LG8UM3ObQ3PLdOo51qMz6GKDoYcus7J1FD9t8XT+u6TCQT6jFaind+lGKlrP4PPJJhnbo+kJZh8UlMsqtds1zE9FCKVEHEbIWEdKFUWr059tYSShlB7AcSOiKCJjCiInhm4bRQEpNIx4nAdOSgL/BoeUBH45RamZIqVrSBkzOahxKtmletcnpcfEUY8+R+JrCl5SQVUVkrqkndJYWh1kODcAcpfri5cp17aJ4ojR3R0ygwkyosuAHjFkqVg1SfZ8QN+2T+TqSNFluQCXHrfY7Q0SlGsUVIXhjkFnU+WVBDwRu+QSIdnfd4glLEoNXxM89E8CkiVB+y2DSnqIhBUyd3iTkSEdnaOMjJWZGVqlNPkYiVinVUlRfyeN1aqT6VcwU0O8vnOc5W/aBHEWy5pm9sB16gMOxw+ZVG/n6NR0cn09Bsc6oISgqkwM65xMtTmrSyzrg5tFL2Py3UKPeMzjWXMW7co6bquGj0t5YIZLQ4eZrCuoioLrCURhBiXYxXV7pEolxqOI0VIJN5XiyaMGWuosUpponSZBz2d6Nsuun8Tr28LYzSPW68ipfhJjSczpQ4TfXmB3pUokB3n1LZdWrYZAA+EhgOGZPuykRavSpKl18YOY1RWX70SSJ2Y9AiwUNYevhXi+R3JNIsOYQFeRhmAEjUlpUmk06XY6pKMYT8L0aAbTNOh0OqArfCo1Sl41WVQUkir0GQkUrcvBQpcgVgilShyEZJKSJ/UKCRFjqWk+qZ5E1XTeulPjG6+9zH/0voWiqoyNjfFnf/Zn5PP5D91IYOvCFu31LiUZMiuhp0QENyImCglE8zo/8JrcbjcZz4xjJSw2FjY49cwpJg5NMH53nIWVBUYY4bK8TORHeI6H1CW5KMfnSp8DwErYfOfCWf7oy/8NQkrke9nbfxdhGPLNb36Ter1OIpFASskLL7zAgQMH+PKXv8x3v/tdXn755b1S2Cjm5P45hASv2cbMprEsi5s3b1Kr1ejr6+P73/8+ruuSTCaBvYzQRCJBr9fjzJkzZLNZut3u3zmeD2OaJkNDQ+zu7n6k11VKSSKRYGJomESnh1SUvT5vReOpx84wtbrGm0u3UBSFo0ePcvTo0V+pKN3Z2eGNN96gVquhaRoTExOcOXPmnpLln+bSpUvvn5cPk0wmuX79Ogfeq/K6z33+IbgvTO/z92JmJuL11+/9fxTB8HD0scJU9Hpo8/MQRYQHDiB/xsrJL0u7rXzseyoK9Ho/Pzj7wywsfJCpur2tcPeuiucJDENSKMT8JHFmcVFla0tjzFkiVj54c1sLOLc6wifNAoX5FdQzH1qNdV1Et4v8SSlQt4u2soJwXSbDkD/5F7MsmEdptRSOmbvk4o/vQxG990qlDYPel75EfMnEnH8DaSWJBzPor99itTaEYvpEmo2mwqnwPOF+C9Vw2WxOMZes8N3uk0ymz99z/GywiZYZ4zMHl+kF67y1NMx/vnQQTRc4tYB6x8LzTPQwJmk4jPU1GMxvEQoDLz+M0z/N6Po8G1sWteQUvtfFjwT1RoZ46SBSChzd5/cevEg2uVd6ZhkBF24VefrToxhzNgNv2CwsCOIYQCKEoD55nP1bf0OoGNiqx4iogJQEkUaQKaA0m4Tdada3nmW3sUou10DvtokDne2NU6iGwcZGlYPTXWSsYiLpIyA/tUp5scxnHk9xauhFOg2XKDYw+30Gvxwz0ojJ93bpNDr8+xuP4h86woHJHtNjIa4LbNZ4d/AKVpThUWsamfVp9bpURB9LpFASAzAY8b03IvoMnyAWVKMk/+mCzonZHqYZE2zfJbxzi2qUwLFchrVteiJBW9bpOC9TbTyFba9hLQtECxQnIhWuciO7ylLtqyg9j1Qo2LSexLj7CYLQodbscWDsKk8dOU/G8GkHv8V0aYtvvXKMR7yT+L1Nivt20BNDrF3ZTyaoMDK8xfr6FCnjIJmBRYRqEc0NsnvbJSM9fAwUBM12ktsMsppLo9ZNnC+XiO0YUdEhP4qy2oLtF1BSO8h+Ax7KIlplxMEAUBCBRyEIkbUkuhYTqYJqt0AEZM0mfqQT+V2ChEpo9ZFihFGritEf8+JSk92JJDLvcGLoAqaIOSHfZnGln/JOzCFNkLMjUrpPIrXL9q7J2lIaVcb09wdkEj7NakDS9nBjA9c3ULSI2A9RRIxEo7NZZGxsk6QIScZNQimQfoQbWzRaaZxNk2vn/hDpP8vtlQrTymt4ekiv22A4LXl81EAxdRK/b/DI/3GbN1wwrRg1jtACha5QGZ1J8/3F43izD1LtSm5f/39odvYmvRoacRjwg/UlnhgsMzWYwchqZG+o2Md8ojnBvmWFaxsCq+Ux90Od7+zXmQ2G+e30owTtOs2+Dku9FS7mEzz2dB1XSxArEscL8TwPz5cc+UQTe2SDxGyVqRmH6k4Rp2ExOZLC1jVWN/vR8jN8+9xhphMjJE7BXa/Mrr/G4tUDIEICqhjY+L7F0rUTbJUvUj36Nl/6/ARL72yyf65H20+gKCrJZIbAEGjqLqfSLpfivTYKXdEZTY1S7pbZzWn88KkJvEfH+Ku/yKOZJkJKQhkzPFBke6eMlCYDpSae24/Y2uBzQP/wMFoqxdMbG/zo2guIQyZ6RtCpexQLOk89lMYNBEIPAA0RRsiehzQkejdPqThEt5dit+WQNQyCTgcJqJGyV3KuRvhOj8JOg8lOzMKmiemFTF6L4LbC9FDMYL/Cf6r57PRSlEIITZUoihBxzHS6yKeHR7jh+GwkkxREzHgmSWvEIAKEquBcqfGjniQYHGRkaoqSMcngRJPtYJ6e5yBUDYGClVTZ3UxywBpBF4u04iNEjsObjsNLP/gBqVSKjLW34FipVPjzP/9z/uIv/gLlvV6RleVlujfbjGWHKNV2aOkxhjCwDA21YeCkXc6+8zLa7BGuV68znhlnx9mh43cQQtBL9uhqXfJRnsfF46w316m4FfKVPE8eehJVfHBP7HQ6uL6H9QtY7J87d45Wq/V+r6gQglQqxfz8PHNzcwghOHPmDJrjYro+lmkh2WtXzVhJym6XIAjY2Nggk8mwsbGBbdv3vE8YhqysrDA2NnbPYz+LZ555hueff556vY5pmgRBgGEYPPvss5iuj/wpwanpOvumphk/cpDI1P+Oo/6XUy6X+da3vkUymXz//K6srFCpVPjDP/zD9wVwGIbMz8+/v8N84MABfN9//3r4acLwVxPTd5/7/KLcF6b3+XuhafDJT/b43vcsdH3PuMhxBIlEzFNP3bs7qV24gHnuHFLbC9U23n2X4PBh/Cee+JWMJ5OJaTTuFadxDInEL2fE9JPd4LU1hZUVFdMEVd0zKJqf1/jX/zrFZz8LlXWfOIzQAwf5njCNIqjXFVquwYXufo5s/YCyrXPsWICmgQhDhOcR7tuHqNf3el2NvV4bxXFIvfwShz4TEj5wDCPog/nyvaXAUn4gbAEUBe/EZ9Gz8yhhHfPKDWSfRrETEsvTSMUAJJbRJKi6+MNZTK1DKdfk5NAPubjzOxw3v4HpVIgB1+hjOJkiDosALJTz/Pu3T2AbES3fpNPTiWIIQwF6gr7hmNn8JmGUYyH7MGrKwPM0bm3uY6ivgkgMUK3nae9IBjMOQtN55OQ6QlV599YspTNXMJQIRSrcdQ/j5PZcHJ980ufhhwO2txVsW2Li8uqtDvpah2H79l45aadHT0mymtjPZHp37wu3bebdM9y8+QRJrYPq+xwq/zWhaRMbPkGzTkr3aHspYs2gZyps7WwyOBfyOwPzWPuGiWKDMBQYuoEaG6AMQfoByls+y+V+VKnQ7gUkrJCkDTKb5ODWNAt9b1KUHvR6pLM68aECn9t3nH4t5DvP65wa7+GFEre1RS7ZRlDk2+dMIkUy7dwhRYoIHWPwx+RMm5a4wKW3DqL4go2qxVL8EBOlLQ4WN2G1yUBFMGvfxqt2uWOE6JbG//rMJV7/q2NU7uT53Yf/lsmpgJgUhqZzeuANfrT8FJYRsKIMcqzWxJKfR+vF9OUl9vAAheEOl5ppxEiT89v/lPG+DrP6i2zMjRLvROS7W+w2cvyHyue4nDrKYGabw9MOXdFkRTUZP76f+FgasXMHGf8J9SiB0XiHnJhHaXYgjPecekWEisC2ewSBCa5CwgxptTTiSCeKbHLWMs1GAaEZKH1pVgYk4fA2d+xFtNpxUmqLpOmws6XRUAJSqTb7SxeRQFsGLG/3GM1CuRohwwjd1pGKi5KNuHNe8OkoRBUxSbuL41uYqo0QLe5u93P3rsEf/GGFoaervP4OpNIQ+gbeZkRwp8VzzwjMh59nwzuFbe/jhH6Z0LvLVDHLcFZF69aI9RZZM8nhbITuh5x3VDxiIk3lhMiibuf4W7PNgcnb3Kq+w0JzhT4ZMqLvmdd4hk3W2+HdSsCxR1WyhyroN2PCNRN1NKDvVMjjOZubV4ps3mnzRwcPUxwYJXYbxGEHU1X55MgJZG+D4kiTjWaEgiStw1YQ0VeKmZwL6FhJihMuoa8yMxvjtgXXrig0W3dZWgtIvbiFkdRZnzqA1CPeCX/Avs4pLM/EFxC6CRw/RlNM/Djm2689y0PuWcaO9PPMs4eorK5jpPeiboQQ4Ps0UhbTrsalDUlGsxkaKGKlk7iqTcbI0Gl2kbFk6kiNxStjWKaPIiGVSDI0MM5Af8zVGy9S3a3w+WqFbxsG+TtLnHn8M4xnRvmTE4e42rhBayjDwek0U5MJhAxIGAoDBYP6Wgot2ET6AVFnmB++22S3nsb3OwRBSLfTIQgCgjBEVVX6RJaJLZXTlR2UAMDgtzyPSSE4p+vUfInq5FGWPI50fCo5iRsLnFaPWEoCIXg4q6DEMQd1nc74CVr1G3QMF0+NcUOPjYUGxXWNbNHG13Vqa2ssbcKXf8fjcKFAT0nRNmM0IybsZjhmTpFQ04RhC8WyyD/wAD/+V//qnn5JTdNoNpu89dZbnHn0UYw33kB8+9sMLd7hqG2zaUe4qkASEjsR1VaDTa1GRlOYb6+xL7ePslPmmf3P8NDsQ7xw5wVqbo2hiSEaOw22Oltsyk380EctqLy68Sr5u3lyMznSyTRFpfiRHcafxerq6vsGQh8mmUxy9epVyuUyuVSaqaECP47j92u2Yhnjey59VoKG0qS/v58wDInjj7//q6q6t0P9S2JZFs899xwbGxtsbGzQ19fH9PQ0iqKgNLofvxusCrQg/LUI0zfffPMewydd12k0GiwvLzM9PU2tVuP5558nDENs22ZpaYmzZ88yMTFBpVK553xHUfRLlTff5z6/Cu73mP4K+U2tV8/nJYcP77noaprk+PGAJ5/0+enqEaVSwXrllT0xpWl7Ks8wUDY3ibNZ5K/gB7BYjLl40bjnvbtd+NSnfJLJX9wBL5uNuXBBZ2FBf/94W1sKjYZCIiExttc5/dpf4HzvbW6s5ck4ZXRdgqpRrytIKRCqwunJCmG2QBBAt+pR6gv26lGBOJ9HP3du73x82P7+wAHU9XWCY8eISqW9/NOfFqbdLt7TT9MRaep1BVWVpFb/Bq26gUIdtVxGaC1ymU0ur5wgiG1MtYMi9syAvHSCYr7DmTMe40Mt0os3uHnxGPXOENLv47AaUqrVkbaNL3W+cvYYVSdJGCnsdiw8YROhISUYhkToGslUmwdOV5iedohjgZFKstvMo2mC0A9YrY6SzKnoWYvYyDFS2EZXXcJIQxMBpf5MTRx7AAAgAElEQVQ6t73PomX6ODD3gSuyru9dZ2mvSt/ffBVDvMXoF26SPFXGfrBLdFhQrUyStC32ZXcgnab7z/4ZXZlkccVEmCaBnkSLHBKdMkJ1EL0mU8O3saIdOuMG7bxkKNviyNACOglkroiigKaCERVRZQY1dNDNERrVGN+DrZpB01EZL3jQ7RLGKom64InQRcq7+F6b9JOH+My+WWasWb7/dj8TqS6e77C6epZut0oU+UwPr7Hi1qhWDIrROrqxizV6luP773JoaIeV1TmSyQ5JtUvadOn6BuXWAH5CkDJ99ptXOJh/GTWOcA/pbBzM8GLZYGyhx3MHz9HobZHJ9ZPPhKhqiJTQ9iO2ncO0oiRHjvQj2l16ob53aYYdGokuNw8bLJjn6WSuU9jdRa9DN8wQbusEW+DVFGb0m5zO/xBjOs2Bo3UG+hv0RILhbBa3m6W88Tar2wEXF112NxO4LuTtClrQAU2CFHsZwjJk/u5BND2k1uun42ZI6h4yVnhk9i1WGyWcEIRxF5k+T9+YpDu6genkscMC2WTAresaJavNSHEBTYkRMkTVI7pOTBhIqtsa0guQyYAeIa7nE2YUil6KwsGYWEpkqKCYEfUgzV/9h6N84sir1Ld6zM54TE1KjDboUUzO1Pjcb5kM5HWSjSbXuqcZH17l8WNnGTH6SVs6SuxhBAGB1EhobVplDfuuw5yicASFkpEgp9lsWRYX5kwa+XnKa3WioEtN6bHcvEttW9LQBDNijdDW+cRnI9SuxGy4qHZMJHToWhjJJIVFyVbVxOk7zUZD4nkpAjckFYcUwjRaQuAPrBB44Z4bqgRDBBQPSfxYgZTENnMkrWESVhbH2eHKla09N2wzJPZPo8o2C2uLuAMtfLpc+OEUeVcjZ6uY6t7vfq0refFsgk5ziPGHLrHTTvLbn/4cndoGcauFLiW+InhX67ETeoRGyKaXx0DD22lRvLDJw5cE3Zfn2Tl/h1v1JqpRxU5LWs0cup8mm8jxxMN9SPki5eoOY4ZJql7nlitZ2I5ZurmLKg+yu17ikSevMHRskJzWQ9ffW7VUPCbFDNfPC9rNgOX4QV55Q7BTTZBMPsz65jpdp42QXVrdLinTJJVIoIYhn2+7NHshsVTQ7AQH4hhDShJCsKso6IaB6/sM2zZrzQa1Xg8vijANg2nLQpeSwYkJ0tksS6kM+sxJil0Xe7NCZjkiuBtS8QPebja5srTE/8fem8ZIdp1nms+5a9zYIzIiconcKrP2RVWsIlncWRJFmjRFyW2L3m3YaA1keKZhuPvPYBrTGKABYzBjzK/BYMYNz9jtlmRZtkjJkriIO1mkyNqTtWZV7ntkxr7c/Z75kcWSaVKy3C1R6hbfPwncRER8ce+Jc853vvd73xtrazQ6HvZGgd2FHr15lWgpRTBdQFsfYOD4URLlMubILqxDj6LG43zta1/D930qlQr1eh3HcYjFYtsCXkJw79YW2vw8jqJw8vp1sqqKHbVBKDgixBM+QS9ES2oYqsJSPKIUK9FsNfmtz/0Wc84cT88+jaEaSCHZYosmTcyuSeRGZK0s1WyVeqJOt9pFS2r0Mj1S+RRj6bEfuvZ6nserr76Kbdu3xHjegxCCWCxGu91mPNdHyrRYWFnGdtybVT+JpuuYhkE8l+Vzn/scmqZx7dq1D/0sx3G47777KBaL/1n7t3Q6TblcJp/P34pTdz0+VGpYSiJVJTR+/DWht956C/VD6GK6ruN5HpOTkzz11FMIIW71xr43Ft5LzKWUtyqnUkpc1+Wxxx77J6nA/7Xi53XP/rOAj31MPyL8PA9yXYdyOWJyMqRQkB96WGi88QbC8z54kmgYKI0Gwb59/8VxGAb094fMz2u02wLPE2gaPPigx+joP8/+RdMgCODNN010HTwP1tdVdB12Wkvkrp9nON4gb3aYdco0ojR9tVm8RJ5Od3tyL+Uc9sVmmT74WVb2PMiGLDFxokR4/Hb0qSmM8+dR19dR2m2UbhdpmoTlMrJQQDgOUX8/slAgHBlBnZ9Habe376Gu0777Qb45tZs33zSYPdXG/Ou/IHv+BZKVDmIBZFcgcyWkarB/cJYL13YxWr/CSGuOlN0glgr45d9axkjmUFZW6e9dZ99Qgv0DbSb6XOLx7UVO2dzksr2Dq5UiW90EtW4MUFCzCbo9Bc/bvleWBflkhUfvvoymgWlK+stxen6CYiGkPKLhiBL5fESptO0L2/SHiLQ0qhrRCgZxMg+w1S5w4oRLOv3BQwTrW99CzV2ncMfrIF2shI1mRqBr9B5I0t8pkh5O0/njP0b29ZHNSt59V0fVtvuZuslhNN8nVq8wEKtTKhhEexJYRxIUkz3SMQ/FbxEUDoC+TYdSwgS6F0eJApTQQ1VKdLoauhqxuKHTdXXW13zy7gYTl75Jcu06B8MZDvW2ODLSZf9+k1Q5hha7yFarQcwdYWbpe3TNLVyzgxQRcZHi6HDEnPgqUeEtBqxFDo61yImITqsEXgIz9AjUBP/vmT+i1u3j8T3fppjY4ot9f0bCusRcXuWtX09wPdrFV//t68TUGFHmBQ5rKa7U97Fqj9Bw8zTtOCmrS8/TWGqkSMZHULN5GqqFCAUeBtfiOoulFMW4iW0vk+uts7d7GhmlKGw65Gs6iUKedCmOZSq0g5A97XlGPqcjrRSKqqOJYS7cuMDWyhZdW3B6bYWmXCejDiCCkIyooxghRBIiwWBqi1BVWHFGqHcKRJGOUOChfd8lDHWWmiU01SHVN08qucqizPLEvTZ9pSkOFS4xGq/S6czjGBWyjkqlmaXWydK1LcqlDlPXJWgS3dKwoxDHD2hHkCgrLHUi1q7eQSqbwldNLk2fYOna57g+9SLLzQXmlgIuX5TkGxH/Ygj2KQZ775VYKiihT3NDo7Xgse5YHJq8DJGBtCVSCDTfQxUCTbFpTHdZrgW4oURFYbMwwFwixXxWZeNoloFMnGQsxdpylZ7SwrE6eEYV392gIzygx0PHQYlULL9HlNaQisBQdCLTYWPGo7sU56uOwfzCPLPrFTIyy0gvhmV2UTWDSnIdL6Eg/ABNBoQyRnpcp61bqLKfkcE8SSsgk7B558wWChb1jkupmKNWKeO5VeZWFrATXUZCj+JUl+em9jO17HFtNeLsVTgzpyKFSmg0ofw9UqrLXftOUC6HsGMXqwmTi+kmDcejogmu9UJm3RZtWuybccmt6agtjbiuEfMdcpsdruU9Ku4ldj/S4Au/vJs//Ow+9u9S+Yu/+QqmabK4tIjdbFG343gyYMGukEgk6HR6/N3L07y9tsDJqRaXrzfYNakQcwtEpx7icGkAcvu42D6KH8bJZ8ZZr5wkkchTrTcwdJ9Qerg3n+Mduk6m0yFUFBRVRWgak1EEmkZWUfCLJXLZLCGQzOWot9vsVhQGk0l2WBbmTd/LUjbL2Be+wJTvE2kaHZFAthVWGjZnWm3WwxDpeShBAEHARrNJpdpmn7OTuGISOhkgCUaK0IdUUcXNn0Bq236aX/7yl9naqqArAVEErudTr9dRVZUHjx3jwPo6WBbpRIK3rl9nvdtFhB6BF+BbKpGM0JM6ekKn7fmsVUPsLRvVVFEdldfbrxNpEZqiEcmIil2hW+sSiIC4GqdLF1/xiZQIwzVQUbn/nvtZ7a0ylh4joX+wpxHg9OnTPPvss8zMzLC4uMjq6iqWZd3qgex2u9x+++04joMlBaamMzE6yvzCPFSrmLZNZJr0FQr84b/+41u0VtM0uX79+vuSLNd1GRkZ4dChQz/W/ZuIIpQg+sBeR0QSN2X9s1SIf1RcunTpQ68HQcDAwACpVIrTp09/gEb9XmL6+OOP02w2aTabBEFAX18fjz32GOl0+sce688Kfp737D9tfCx+9DF+JiBcF35AH4PwvA+9/p+DkZGI3/7t3s2qJeRy0Q/62H8SBw4EHD3qUa8rzM2p9PeH5HKS0vl3sXUTQwlQkXw6/Q43lF2s04fRbqKJFCKKGPNn+Kb9CCvTOxkcDCmVdtIe6zH4zJeJRkbwwxBzc3P7w3wfGUWE/8Ag/L0+lahUwv6N30C02xBFyHSav/0bi1OnDHqtiEcXnqKZaLPa34ff9RkYiFi62s/5MyMs9e0hSYtP56fZWV6lttHF2rlGMXOW8PJh/AFQNytI3YL32kmkhDBEptNEfX249QIZo4dGQGhkiNIZYqpgQA9ZW1NJpSSTkwHFpIIqPEJpbF8bq/HGmRHisS5eag+ZjMTztr9TMrltWXP1ap5qu48+LWQwCHnwQZdy+YO0K9HtImo1jP0nUfQuQdyi2zPRLJ9CokKx7KLpEcHScaxvfpMomcQ7dozHHtvJM8/EkHZIJCOe7dyLb93LwclLvBVscre1xk5eBhlCYONl70Ya369OG56FIAABUtFBFxQTq4RJwd17fJ5+u0zQ9NBOv8g7VYODA03iVg9ZbqBsCJTXVrgqH+Cds2Wmlyy8ZoW22mNiRweBQtvo0darTCo7GLV0rq0dwIyqFLUlRNiBSKDLLlIq+OksUsDU6m0IEfF7h76EYfh02wGbRzTmGrv4+v/yTXr1MkGgYKRN3qxOoJgRa7EpooxJzY/RXhzlwMQizvUY6T4HNebi6QobiTINO0KEU/z2V/6Mk5/7Na4oAf1BDV2L6FLjuJIitadBe2md5I15asc/yXgyQatzFTFTgh3rFLQ41coN3KU4WhTS6Am8Vp6WAdNqi/2FBD17lFSqAnQQvge64L473mSfd5qTy3tZWduFEQgyepvF9TH6cgsk0xv4keR0Jc7xAQf/dMiBGMSykBpy6cz2WG1ovLo4wIjikI/bVLtJXj95nKP3LBO3V1jfctENSToPtx+G156GpuLS1N7m6jfuwpaDFEaOc/LcS0yqPYbiKfLNHh2/wEtnj3P2ksmxkR737nmDjNJBjTyEiLCMFepYNLsadrDM1XmNqm5jmoIhM2LcFxSjkG5CQ9VgNjnGVjaH1ikyNTjA6oKOMpDmjsMWl+deIaNI/LUq1laLg1s6lnQZLmpc6PbI7StxyNDR2iGGoqBECj0/ZG7JYF6DeDYDjTiZns3scgW1r489NqiWx8qqwcSnbOx0gkszISsrkhNmj/m5BDEly4G9OkJpoQqfZsvDdVxK+QKhp9Fuz6OpOo7Xxb7xFp/N1pjKZWhdfxi9Jal0JaqQqEYPJ3cNI1mj08rRyM3wF3Mv8YWhEsVUm+V+lVKryNSNeZpKgFvNsyNSGVzukfZVGtKmPxaRMCRxReC5LocrPotjEyRX48zuW2d589vcL47hhwH1apt6FNLnakCAUFRiisrJhdMo0iVj5Fk88wmOHFlmeaPGv/nX8L/fez9xKyAcG2Oh8IvsjUsqNYfK5ilU1SKIfOKpMr4PkVYhbqUZKZaYsG1018ULQ7hpVaLpOrl4AnyfcrHEwb37qHbazC0toA4Ps6aq7Flbw+t0UFSVtKLwRq1Go9PhySef5JVXXuHq5cuEpsl6KgUbG6hRRHhz/hdSklEUymHI2ZbH+Il70ezF7aka6K1s0T3yAMSGgG3F13vGapT0FeImBKFgthrntfki9XqdX9i5E+p1AHq+j55MMr+4SNkQiFhEUJGItEpyZxIrofJu1WF/6RBW3CKhJ1gNV1m6sYRRNjByBn7kE8kIGUpCEWJYBrFEDNd1cUKH0lCJcl8ZTdNIyAQXNi/w8NjDH5jj36OWvucFura2Rjwex/d97r77bqSUlEolJiYmGBwc5Jmnv0nOsFBqNR5B4sRjCEUhG48xuGOCTOb7ft179uxBVVXOnDlDq9XCMAz279/P8ePH/9n7gn8KnmWihBI1CG6t4UJK3Li5LYj0E8Dk5CSXL1/+AB33PW/WH0ZXllKi6zqPP/74TyS2f4woimg0tu23fliC8jF+PvFxYvoxPjKEpRLK1hYf4NmGIVF//w983Ysv6rz6aowgEOza5fPkkzb/lNWYEJDP//N6Sj8MqZRkcDAin5fbdhsbKkKA6tokVYWs3sPzYbhg88QdVzlXG2c56uerMwfJZQLetu5DCgUdWFlRqVQUTn2nxeHzHQb3xDEnJgi2thA3qb3C88D3QdeRhkFULr8vnveEora2BN/9bgzThAn7EoYI8AONG0uDqGKNZi/BRkOlFK5ST47CbI+TjT24fXDv7XOEcQiNHYjVJqLSBFxCbw9IiXrlCvq1awjfJ0ql8A8fZvQPf52XZQJPVdm4ZOC2BboOyWREKiUpl0PiepNSqkJRnSKUMDQxgRVPsm98mSsre/HrPbT2JRaWckTEGN6ZJJkU3Habz9SUzpEjPnfc4TMyEjI9vW1BNDoafp/hHIYI4ePJLq2NJKoTbtMLFY1QxEi7HUK9RqCqyE6PG8uw9L0Z0g+a/OZvlqlc9vj2CwmGB0P6ciFCDOELyXemMnxarbFv73m84t3Yid/D3HwR1VkGZVspGQFIb9sNvnsWRZjkU2k+MTpDwlzg9N+GuPU2w3GfqOvw3MwA5lYeTQtpX89y1Z7AxWBursjaWkS19iDTl+ocPnqOVKpJGEnWUxW66R7lvU3ClMH4yBbOso3XqLKqDsBAHAOPLzzxf/JnT/0PXFg5xpdcyRc/+VfMTqq8MjHJ1//tdlJ65+f/HUc++Zdcf/4zlNLTmPkWWqjQ7DWJWTYdvUm+l2d4cokVp8OktY9afXts7dr7LjvfeI7Ja+8y8P8tc/Yzj+JgICPIFEro9TbecpPh751BhCG6O0evfwwjOYjpXabJXjQtTbvrkjZC+oIKpxdKKI6K28tyo93lxUaZQ+UEewOwhkIkJqQkU7GQLTOkMLaB2tdhw9N5cX2U4VDlzJUU/lY/KSPLrxwfZf/gJQpyjYbjkm0nUYbLmOktrOYmo9kWf/PqPURSEDgC3wn53Se32P2JkK26wFUlmTgszCvcdp/g1OsqiuaT3HEBw/nvGblyikdnz3NobRE93+JdfScXm0+QVR0qWUl1MMtff/d3uWPPc5RGrtJSNgl9SS/Yx7sLNqriM6s6mIFCL4gIwghNc7mYU/hk0eS0SGANH0KZSbFEknXTQoguptnHq+d7pHf1s3p6hlSlgRn52GGErgl2qZL+JQVfdxFHhjCv1RA1jzAICeyQixs6F3blMKRP3dSok8WtdZhfbRHccS+pvmtMzducecXi7vsVOp0OzWaGd95J0ulANrtF3fYp9pnodkhC76FGCYLmBpWZHPlkyFI14I47rrJ/wiPjL3PfHUlKx/6Uv/rKF3GaBpEREqTnMc0m+WyF0UxIXIuTjqd5uhPwu+U7qa5PoS3WmGm5dHtZ0FVAEPcEEZKi5SGkSoRBEAZEqsKQ5+MpXZp+Ek0zsUOX+USNQFFYXFnZthaRCpNuDQ8VFYO62yGlqqwODdPrmayujgPj9BI9/jaX4/O//uugabhfV4kMiWXEcIMWm33X8ZIdAt9Fcw2iGYlIKoSWSbCnj4ELW3Qw2dryMQ2L0DCRjoMDZLM5svk8I+Nj+K0WtbQPasD3rIhCyyaUGtM7d9GSEvvUKY4ePcpjjz3GEV0nchyeP3mS2atXCaVEUdVt1VlAKgp9hkE3DOmKfmLZIRRv+1DTjlTmX10kXg6xhoZoLX+Fhw9GzC7HabR7ICSj2TYP7wxpFX4ZmckgwhAJPHfxIkOxJl/8/QSO0cXxfBbXBNenVXr5kOtxhSG5Gz2mIxDsy+9jRa6QT+RZWl0im8uiCQ2BQFEVgijAVE1CJcSKW2hSIymStyp1ilAI5IcL6pw9e5Zr167heR6apjE6OkqlUmF1dZWFhQWeeOIJjh49iqIoJBIJnvj8LzPz2pu0X3uFQFWJpTOkk0ksy6I6fQXlxRcZeOihW++/c+dOdu7c+V+2KfhRIAROykLxAzQvQCqCwNR/YkkpwPHjx6lUKreS+TAM8TyP+++/n0QigWEYH9qzC9vV5Gw2+6H/+3Hj0qVLnDp1il6vhxCCXC7Hww8//HEv68e4hY+pvD9G/NRpAZ53i+b5s4ioWES/eHE7a3yPyiIl2Dbuo49u+3P+I/zpnyZ44QWLKNqm5c7Nabz0ksl997n8CMJ+PxaUyyFXruhoGqyuqkgJifU5HsheIKmHqOk4O+4sk0v4jCRrKINFFtiBp8Zx5XZWFQSwsKDieYJDhVWM+RnmVuPEYpLEQAJ1dXX7noQhYamEcF28Bx4gKpU+NKaXXza5dEnHNGG8MUUs7BGhYql12r0YtmMSl8sYoaAysgMqHnrSZEkZ58jYJoqaIRIura7C2rzHVfcuvBmVwpW3MC6+e6s7RrRaiFYLrZjjhdndbFY1cjlJvS6IIoFtCx56yGH38Dxp5xSPHXsBI11gbFwhKWeJ9ALlI8fwmhtcf7eJpblkwi0GY8tk9CXevjTKyprJ5GRAMil48cUY3/iGRaejMDencfasju8L8vkIPWkgLr+KP3cZ63wXc8ZGn7HRNh2CrEBgo18McZ9v8KXzR7g+a+HWHRZnJedbu9lRsFlaM8imbx5Y+IIoyKCn4yzbE+z61H34+gOAQhifQIQ9VHcD1Q8QIoFUs4iog6YnCSIfTXOQ8RpTl1dIN1Y50LmCcFx6VYeY10B1XBTb5tnq/dSTFjOzGXxh42s9Qtek10nQ6Zj0l2qMJDpcvfYM+VcX6R+wGcm2GTtUx+nrsnN0g8vV+1AMBUUHTYTsL55hbm03V6oHuaIcoPHQRf7jnzxLtz7M8Sf/Zz75xP+BkCGvvfMEm6xzNN0GoUFooqs2phHwYqOPe++9xL69pyjEdzDUrzI+tkkh30I/UkZ6Ibl3rnL30nXajxYxmy65vkOUpmcovXUaEUa077sPxvvxkCRSK4TlEvmh3YSeixlA0Muw2UthqCFt20YRAUJGnLtyPy9M/w4JDcbEDbS4yXLRY04GCCVJN5ljuTeAretEyR5ScZmdupOYuYvHjyyTTErG+i9ixR2SsRiJKEnUctmQGZr1BO0twXfePEitmsLt5dmTHOeu4TmanS2WN3yW3hQ0XpEk1xRyabBjKpFvsnuvxecXzzAQXkGf3SIdgRlFnGx8FpmQoEji3QBzSLBohFxp7CI79g5Ny2fBVFGDdbxIZ3FVstHJ4oYaQWChKiGtdJylgwPs21lAz53gW5c3eKoCb/oNNhevYLcWEIFDTxP0WvswhUPBXiIpBJNJhXhJpRsKrE2L0qhH344cYngSxhLY+YBXp1W+cvkwi6tHmZ4dY7M+im/rSLWJlCqDAxleuVBFURIEep2zZz1WViwuX9Y5f77IHXc4DA2FvPW9iHrFJ6a5GDLD0rJPa62PzTXJ+tIc6V0X6O+vo3g6SssmICCT8dm3b4rrV5Looo6ZP8942SammZQmn6U83E+p5NN0uwyZx7j4whT1aZ+3nAbSiRBuiNBVcq2QrKmQ0QPUKIah6AQyQkYRgSrwCwpOZojsYJb52Xmm56aZe3uOZrOJruu0iFHzFazARVdUGip0ExaaEqIGEWnLB8NANwx8Kbn/wQcB2NpSqDcUDD3izeA/4ZsdVKEQhuDqdcKBJjFH5xcf7XH4blDmuhTiBn0lQUyL45lZ+jyXoFjk3ocfJmHoaF5A/6fv48zaNNV6A1RBYrDI2P4JXMXC7HQ4GIbUrl2jfOgQhCG99XXm525wfWWOjufczNcFUtFQdJ098Th6NsvEjh2YVhyppegsbdFdWkaNx5FBgL2yQLL6HepSpdCXoZBLEjMM+vJpDk8kUOODHNqrYGydI5QOb85dYvCeRRa7LZqeT6Co7DpUZHA8z97i5+nL7EKLNIaSQ+zN7UVVVExhsiyX0SMdkRMoQsENXXzh47d8dqd24wkPL/IwFIOkn+TAgQNomkbP73F76XbyVv4D69rf//3fs7W1dasHUlEUUqnUrT7Oz3/+8+9Tj11fX+ftv/4ycc/DsmIoQtDpdelFAYlsFmdjg1qhwKuvvsqFCxdYXFykr6/vAyJB8JPZv0lVITQ0Il37idB3/yGEEOzdu5fh4WGCIKBcLvPwww8zNLRdRVdVFd/3WV5efp//arfb5bbbbmN4ePgnGh9sqwS//PLLxGIxTNPENE3CMOTixYscPHjwQ3tkf5L4aezZu90uQRB8wAP35w0f95h+RPhpJaai1yP2ne9gnjyJduEC2rVrEI8T5T848f9UoWkEO3eibmwgGg3wfaJsFuexx5D/0FftJqamNJ56Kv6+XkNN46ZSrsrdd/sfSdiWBYcO+SSTEtcVSAn35C5Rrl4mUOOUDg1RzjRRBOD7nBt+FF8x0IioNLcTq/V1hVRqm1Zc3qEwtHoeJWawWVEoT+rIwYHtJtYwxL/9dpxHHiEaHf2BMZ0/r7OwoKFpoEce5fY0vpJAVxwcBxJaDUMNCVWTreII1E1QVHqexu5CFTM9zLXFJOtbORaMT3G19EvEr5yjePolzKyFULaTZJnN4x47QbcS4faNUsyG+FIlWwDLkgwPRxhyk3vLf8tvfPoNdo7UKCTX0BQXP3MUhEaQ2IWzcJL9iWkeUJ7j7vIF7hg5w3jiPEczz3Do8Calost8pcz8vIaibCfy7TZUKm1On5bMz8fZ2FBJzJwjd/U8aj5AqgrICNUOEVsQjGmYX4rz9OID9PQUpqVsKz/Xt2DnGG+ey5BJh+iBg7q8jFqtoTQaKC2fhpPlwPHc99WchSC0xgiSn0BhBKGVEX4VQYCmaoRhBATMbnZwfJ18osn4a6+yXEsQi2xUP0ANHTpahqvOXi76B0mlu4SiQSBcqm5Iq62QyrTxmhXWF/6c5e4mn22MEjcF+b4uyYEUer8kE7hM9F9meW2CWjNHs2vQ6kj+1cP/N8vNAzx36ZO89dIf4Nlp9v/in3DPI/8XrmdihwpXru9g0xnhwuYOLL1HZMZYVUq8VptgU/N55LYq6/YoaGMkDZuBWJKMEgOtQ+dIgp4T0H96ibGpJb4x8AB3elXGn3kZJYxo3Xsfzug4DdKvrU4AACAASURBVLeIDAzi2QbNHfcQ9aDVMllqNNmoWviRhmGUOLv2Sb63HuPllR1cnn6EYiHPtH0XY3t3MdIJedOuo+dNPDOFEJJUwsUN4rjCourE2e98hoePLhBPLTB6+AoptUnc7JFQVRSrh4rO1dUclhVnYeVu3l56BE2dIG3spdXcw4lPvsxcRcM92YRagB0oVDsKvUVBomWyRpryosWNd0KWVrPkqy0wTDpBkcv+7WiGh9QCRAjLKY12lERTYoyUZzCsBug+NTXi0pkYb2455OMCRYmwe0neWS0w1ZLsHIsTHvxt1rNHOLWks2HHaLb3osi76HYn2Vwcp7YwgNPuR2tatFuHiOIplgs6a0aWrWyHTeETfzPP+F33YFouW+t1Lrzc5Zk3DnNp5RCaKhHSRwQOy1tZvEij2lhmw17BtASuUmDXLhvb7tHXpwJpGo391OsuFy9WWd7oMnMl4oVXEqxuWMTVPNPXKlRqNp1ei3sf8lGNJD4+queRECa5eESxGOJXCwRhj7oaEksrTBx7jj37akxMKECIL1fIXb1CFOQJqk1qyR71nrMtuhJKNM1gOAoZ7dPoNTR0VSWMImodl2u6Q9PvIoYHmFtewvM8nLpDrBtjY2MD27aJApuOq9O10sQHsrRFg5zpYWk98toymuugNHq4QrBTSvT1U5y+9Bz5xBqa4TA6GJDPwkJlibbv4UegWmsk83F27nb4xJhKZMfI3LUDalD0Y/SnBGZ8iLU77uaB3/49YqpOODYKd91JLCu4/fAYK2sVhvoGGSr0EwWS/Ooqd+f7McOQYGsT98IFVnyf5099j050mUa1y2bbRVHANCBtxehLpIkLwfDYGLt27UJVVYJOh+7SEkGrReh5dDfWkM1liukFAi9NsTBKLlEgl8oi1JA+s0p/OqQ4NIHMJaFymZnUKebr22I9Qij4psFmvUN/CVLOLjxZ4OLbF9FCjWJxW6FdFzouLq7mcnz3cUIZEjfiqKrK4eJhOq0O0pd0oy4jyggH9h8gnUrjhi55M8895XtuCQXZts358+e5cuUKp06dQgjxAW/PKIpIpVLcd99977v+ne98h/jyMpHv4YQBThjgS0mv1yOTybC5vs6ZbhchBPLm9ampKQYHBz/QO/lTLyz8mJBMJhkfH6dcLr8v+bFtm/X1dWq1Gu12GyEEpmly5513cvjw4Y8kthdffPEDz1YIQRiGKIpyK4n+qPBRPvPFxUW+9a1vcfr0aaamppiZmaFUKn2of+zPAz7uMf1vGWFI7Gtf25543/P7khLjpZeIDOOHJjc/DchUCueJJ+A96XZFgTBEu3wZbWYGKQTB/v2EO3bw/PMmqdQHBXB0HWZnP9qhq2lw8GDAwYMBGxsK58/+Av7XF9hrX6VYSiNcB6EInHvuYUDXmJpT6C+FZMsOTqjyzjsGprndyxHEkjT6xkk1VwGTSkVhcNAkGh3F378f7557fmAcYXiTpizq7FqfIXIDmsVJfMUAGdHwymQSDRQ20HyP5dHbiIwxRGoL0eohkFhKi253gJXGMImow0b5MBljHmVA0LNyCDsglZZE2RydIw/h9iSh3QDDJanr3L+7SS9h0Ql1BAG3W3/GXXvOIxULECBMROSjda4RWiPozVN0WzpjlWlC3cSMNUmk1knYBqEXMrteQtvXY9VtY5qPAeC617n33teJx7tICVKmaTc/xfS5JJnB/WTaM5iJOhjgGQa0Bc1v5jAHI9bDBMnYGpGeRraToGuoS8tE8Ty1zYBRe3lbEfoWR1ii3biKXhmA4cH33W+pagSx7UqEaXdvVpIjItqEaotuL7ZNOV47ScNPYWOBdCCQaFJitdt0MhnsGkRDHpYO6x2wLAUn1mGlu0x3bZ7xkZBDSp6jySJyocfGgM/WSQfr4SxkfLJWyC+d+DqdhkGrnkAr9Ij0OE+OfYnX/9Wdt+I9+OBXCJQAu2uydeoE+epelpMVmmg8Vz2EEUbohobvauzcN0U7V2JEuY3uhgexgGbgMZCcp5jscWPLY/7J/fiRZPLvzvLvn/7y9j1RFFYfe4wg3o/b1Ailj5Izudp3P+GGxsRglzCy0f04KSMkHRestnWGRl2+1zIpJrMsld5ltbhEpvkQc5fy3HVPieV2ifrWVTacNr6ukzNNCkoOizaLl7Pc03eRXekNrJKk09pNz4wTD99FJkIUVYVkDY0Rrs7s4MbKLqSf2bZa6Sm4nsXlrQkSlYuYQYZAT6JSRUjo6RpRxSPpdVldcYk7Y+wqD6Csr9HodOlJFcfXSHfieAkXPabSNBRMTadaNZneytBvCZyOwldft3DOx9gqa1zoZhGoaDKPn9pCcZM01go8rtzA/PZbJFYzrMwcQNO6+HoDGSaxe5PovkZbPcPAkE3T76dR2UufeB49VqXuDDLsX6KtrZL+k1kW1CW2Bqpot2k48YMMDndZWdJQ0AgjnbS5ydX5LGZ/lW6QQm0GpNwe2eUsQqyxd+8I4+MZhNzN6voFXDVGy5fsi1QmTJ/gRh17LKJcMFEdHZGQlDMKi13IWT5JK6BASM/3MM3rNHdNsxwWccpdjPsU7jmYJa6niCIIAsnmcp3WdRuNLeq2SxEdu8/A6QbgRZQP7mOyLSh4FQbKEW/cqPBupUlXE9SigJJhMPPWBQb3DpMpZuhz+/AUj/7+ftbW1sgbBuM7RsikisT0NoVYP+1Oh7XVKyhRRCCbEKhEc4vkf2Wcq8l5jiU+hdeukZcXeDeCTLrA7971OF+6/Dwyvomml3A9l5FPKIzvnOT+iZvUyF+UNJeqrCxvMWodopz6NCCp1us0Q5+SXUOLQToZ5wuf+QzTSxusbtVIbbbI7txBN9ARQqHd62AD1779bQYeGSNy+nAqHl07pNL1SMXj6IokkgGpPQcoj4yg3Fw/7bU1vHqdjuLRclYIZYgRBOzS8xSkhRtJdFVg6XFSxjDSW6Y4cWj7d5xKYR+7E+PMy+Q1lXrPQN48mVOEwvxyjdrq13jmpEq73UZKybPPPstnPvMZxsbGWHtrjaXGEleeu4KVsbjr3rv4o4f/iEwuw2Z3E2lLYlqMq85VNu1NFBR29u3k9v7bUcR21XN2dpYXXngBTdMwDAPXdVlcXGRiYuJW9UxKiZSS8fHx983NjuNsV8ozGfR6HfmPKlDNZpN6r/e+jf97FOA33niDX/u1X/uB6+wPw9ra2q2K5A/y/vxZw5UrV3jttdcwDANN09B1nWz2+4rFHxW63e6H3jPTNNl8T2vjv0FUq1WeeeYZEonErfHoeR5PP/00v/M7v/Oh/ro/z/g4Mf2vHNr0NIrnIf/xwI7HMU6dwvkZS0xv4b3JKQiwnnoKpdG49R3U736XcGwM5C//wJfLH9H1RQQdtM6V7Y9K7kNq/0Rz6nuwbYyzZ1GqVWQ8jnfs2K2qbn9/xC88FsFjv89QENJ943tEhk64ezfoOpORj2VGRBIUsZ3/3LTsY2xse0Mxs/8xxq6/THrtBrLtQkHDP3QI7847PzSctTWFN94wqNdVjpz9j+y7/gbz4SMI1yVXucG8laOUcSgqVW4/4LO+EGM1XqAe34tS60E6RlTrUDRqJI2AmYZKMmoT7DDYV/w6QkQUy5eIPdCmvjRCIm/hZst4noKqhohOndGpb6L7NqFQcfsG2UiX6ZdTZIZWP/hAhIoSNAgZBVRy7SUiVQMk8cQWMtq2JQlRyXoVNv2dxLzrrC6eIJ1vcOTIC0Acx9k+1da0iEO7/5YWNnONEcaFTbRZQLdsRBQSNlQso4lfMpGRsi3iFItQcjXCZgkRBOQHBJ1LdUiIm+NPIsMQt9VlrN/GOncaZ/iJD9x7NxnD7DgEZg61/SaoeSKvAQvz7H5nhd5sl8TSCjV/u0dHERJFRESORj2ZQ1igde3t3uQoiaW6OGGIldQZG2yRcCxk+1dgfSdPtzuUoyUOrbYZiQf4zw1wbiJHv9UEXyKjiGvSY6hr47Qn+ff/2//4vlhP/a/P8QcP/gmbrUG21g4xHttiObWK66aJ1ACvnSSZVBjYscWhiQK3Zz5FLrcGE7No9RHUcB0x04OrPgd7JrtFgP8bd9E5v05yZhWA1078Chf2/jG7ioKo1SaedTH62zTrLoPqNRw/RAhJLqXSbaUwlDUWwn3ENQPdLRBhUM5HaMktau1v4FQmcRc1Zi2HqwsxRgoehhZyZUvSrc2jLwyxNxhCixtcnR7nzuFVsgpstcZIWG1sf41CPIEiAxqbu6jW0rxy6Si6sPDDACeMk9Y3uXJ9kE8bNnoyzdjoIWLxOFJ2qTVWubyxgnc9gR/1c3wwQ89pocuQKArRwi2UsEbT0zH6UvTlJNOxkEhTUa2IlOhy8ZqkUQOtLhjuNkjUYmwU2/S0An56DRnAA4MWt2vrHKvVOTXaoLn4q5iWT82TBD2fICohRUDg6cQ749RtlUAXaLTotvbTZ73OXmcZTaao9Hep+yEzGwE77vKZDvuRqs7kpELfQMCVqRCvpxHJkKQV4sdGONZd5oDTwwpD/A2PsU+N0G0rWM4645lniTotKkGbkbZkP8r27wiIpiocyCRxYglCJ6TRbXCw6GDoEtuJsOI+abXBmchhpWMiChVS/YKKHfBXF2v8d0cm8H2La7OzjIskmtSJJRyagaC0JAhG4tRjNg/ufYDywA4ySpIDwqO5tsxLK9/g8L4UkWHiuZvMGDG6FYeV+RXGCmOMZ8a5uDaFKiV9+TzHRsZRAh/LqDGUSfLF28Y5veXz/DmXa7NXqDkSx1vk6BGTU2sbfHbfg4SKg5ILseoR/XETO1tFIvmtyaP8pxvfpBl1MU0TP2lwaPITpFNpOl6HizMXCSuS0JWkzE2uz82wVq0ShiG6rvOda+eYHE3yyF2HKebHSJolbt+tMPPiazhOg64PkohSqcTluVkMXUfML2IeKLLjwSTpUpYbM1XaPYf9gzlGR4YY+NTneeDECeylJZyNDYy+Prrr8yx1GrjNANPUGS8N4YcGpt6hVMpTa/eIooh0LCSdP0ig1hGNdaTQmV8LyOfidGwHebM67XgeMoyIhMO1FdC0AUzTpNVq4XkeX/3qV8lkMmiatk2z1dL4dZ+Xl19mtb7KHcfvYF95H3cM3EGv1UO8K0g7aYaGhjg0eQjXdnnnwjt0Oh0uXLjA4OD3DwP37NlDq9VifX2dvr4+giAgHo+zd+9eDhw48L65TlEUhBDYo6NYCwvbh93vWZ0AdrNJb2TkQ9fTZrOJ53n/LBuUqakp/vzP/5z6TdGoZDLJr/7qr3LixIkf+T1+GrBtm9dee+19CXoikaDZbHLy5EkevEln/yhgWRau+0F/e8/zyP+sMfx+jHjnnXc+kHy+Z9tz+vRp7r///p9SZD+b+JjK+2PET4MKop8/v612+yEQto1/220faTw/Cmx7+6+qgn76NOrSEu9rGDUMlEqFzO48L5wZ+EAvaRDAxETAPff8cCqvUX+LWPW7KH4N1atgtM4hIp/Q+vDF6j2IapXEX/4lysYGAlBaLYxz55DJJNFNKtN7SA0P09FNKBR4jwcqBEyOe8wt6FRtA88XVKsKAwMRO3bctKwRCo3CBLP5o9z2+7sRdx8jHBm51YfSbAp6PQXTlNRqgqeeiqMoglJtmjvf/n8QMRPPE7TjA8SSChY9WpOfoPib97LvV3eRGN3gzFSanuOjxdL0PAsjp/Hk0dOI7CRX7HFWJ3eQHt8gIE6Egaum6Nu4TqzYwPTT9EpplFwPpdrGXJxnwxxDajpqGFBonGe3/ndkS7MMKteJuUsQSZR6G9FuIzUVNEFg7cQtfBpz7kWcpkTVQqxkFaSKIiJajSSGZjHVmsT3Qlq9HHuOnMP3JWG4TaOWEhIJScKoUpi5RLU9jEsa09kibEV02gV63QSDu6qk/CpTzUMIVbl5+q8S9aeI4mXcbIlfGjjJ9JyO6/jgOnS7EemYy2cO3kCNfIJDhz5kQAhCU8dPlFC8eWKdKsGFKdRzy5iNNoHtoF7poSFpRWmmld3MqxMsaSNsuv04kUVd5OmpedIJj5gwkEqKUN9ic6WIXe1nTytD2W2j+Q5dLc3V2gF2jl5ByeZJr+u87e7GERFq3xpHjrZBm+AP/qe/obI1xL/83f/Av/uDf8PFs/czvTlGozeAkB6B4jOXXsdM1bFKixiahtAl5V1X+fwxjS+OPkqhdwDdl6iuSdTL0jtXRW04KNIADBSho51bx3zpHCLcPlRJbq7xbjFFdsBl7BMVrMFFYuklhsY2yFsVWjUJmoJGiAwks+2DtGSBwEtxaRmiUKM0vIEu1xnsvsCjS7NsJS5Tb3fZ9F02/ATvLqW5MZOg0ZJ4ocaT2YcJXZdkc42SVsMoBqBByx9Htxp4roOVHuDi4kG+8fbnsKMumtlDVxV0zUC6Gthr3D44xZHbTqCqBqChqCo+u5na+CWurO9l1TlGrbmD2bpH0VplSECpr8B40mU29SAx0yKeDGhkA6RvMHHbSeLZZRpuj5mKjxcPiVomo55PPt8i7KshheDxgYB7BzyyXp6hhIeurHG4vEBS7xGGJsu1JFE4iJQquqGhWR0KZhwn1qUc9xkqNikl5xjsNfEZYrr3C8wvj+IdyJMxqyhxl3dXjmBoPqYmKBQkTt0ildLpOCpHe69zuNdAjel4kU4iv8VjfRGN5Sq15CgXZxbZ2KwTs9uMEGAndUxfIBQFB8l+zyDZV2S20WZ4skG+FOB5gKrgqpJWzMFE4etXDKxBk749CSw9ous5IDV022JYGAwEYM+16fktphY8rtdd5FLADjnOiFbg8NhBBpL9pOUN3l18g64Iscw2cdPD7Rp4SwqruopRj3HvyB3kKxW2ZmYwXJeBeJxfeOAEI8k0k0MpDgwkKcdgPK1z5/gg785dJ5M0eXAnVLMq86seMXcUEarETA0tEaLaSaqqCy7MtWa54F5H1VScwKHruUhpkop1ee3MKb791WlmbrS4PLvGW+/Y3Jir0JfOkE4kMAydVuRS3VpiMDtGLpVDUQVBGFCbXQBVw/UjMpksQhEsb24SSYmIuSiDSTRLJzGYotSfYngky20P7cTt7yNikE63y9CuXaTGx/EUhZef+hrNrksQhnS6Dikzg8og+UKPTF4jm4ScvoKlbKAIC0kDlAQCidfeoOHWyWQ0VqvQcxwUIdBUhUh4PP+CQbX6/STONE0cx8E0TYIg2KbjCagn6rRiLerONovF6rN4/q3nmX5rGs/18DyPpaUlvvvd73Lp0iU6nQ6zs/8/e28WI9l9Xnn+7v+ucWNfc9+qMrNWVrGKxWJxpyRuWtxtt7sbY1gee3qme9yAx2O40QPMywBCD9BPfhgbg+lu96DVaNhj2JbcMimRkmhRpMStWMzal8ysrMo9Y83YbkTc/c5DUilRVfZYY5sSLJ2XBCLyxv3HjUDc7/zP951zh+vXr9Nut5kYzjBl3GYuW2cs2aW8OwA1RRAE1Go1tra29rNLh4aGUFUVWZZZW1vD8TzcYhG9Xkc4DpLvE0oSpaeeYv3D3NYfhu/7nDp16iMzjX9V/Vav1/nCF76ApmkYhoFhGAghePfddzl8+PB+i/NPIhYWFtjd3b1nflOWZZrNJg8++ODHthZVVVlaWrpnQ8BxHJ5//vmPVb2Fj69mX1hY2Dcx+0HIskwYhhw+fPjvfA0/afjZjOnHhB8HMRWNBvLODtxnaDzStPsX2j8m3L6t8MorOu+/r3P5ssbWluDw9ne472+RplE0OtySjrC9LfaNfG17b1P0X//rLvftfogi5Lt3MS68gl57gzBZBFUHSQahIdsbBFqJSE3f52CQ6nVS//bfIq+vI1cqyOUyka4T5XLId+/inTjxkcibZDJJq99Dcz50GZQkiCIMJWT+NMwejZif9zlzxqVSUVDV73sgDAYwdyhg/pjYf7BaFXzlKwYXLmhcv65y44bKlSsKprn3L6fe+X10uwdCoqjsciK7RtwMKcT7vJB+iwO/9SyRYZC9epUzRy6TTfTRvHXOTNziU8dvIEsBnU//CwYH5km++V+YuHCB4Q8WSK/coZcv4cZi5LVNjCe2iUb7qKMdjPJVukOj2N4Q39mY4UY5zaKR5lr1IDZpjk+tIlo95LBMpMSQggjRaiIFPtWx3+C7H0xwc63I1oqNJhwKmTIhEUQyjj3Grp2gLMbQVZsrGyeYObT4A9dJQpZhZNjDbjdpb2sUXA9Fdug4cbo7cUQIR6bWiT1oIjwPBZ9F/yRqyoBUCiny6Ew+xuxRibPFO5wybhDTfEzN49zUJk8c3EQWEVE8jv9X3SCEwDPnkd54hzeuDtO90qfqlEjoWVirIoUhKalNPzK5IT9AGAkcNKS0xnOfvkhDKtK3NeJJj7srB6itztJtTGI1JrkzOIDJOl6ygxkLCN0Eb2+cY0cex3NDSqFGozjJ1KcWaG2O8d/+j/+VSnWM//Vf/Rt+49f/PQ1/mCcmrnDx2jmu7czS6Bv0im8gmS4PTySZSSukClXG0nUmCfmfJlUmvTryYAtvcJg//9ZxKndzbK4W2WiN03NNCrEW0t0y8v/1Eng+N/+bB7DzCiPLNR7YvoB44iqhvkGkqNhBlp4T0IytkI4P06vmcKRRutGT1COTMJJYrQru1CSywxVmDt0lfec9fDHgX4zs8H6yTKSqTNopImQWHAmtH5CJ4oy6w7zQizG+fIlMt4rZqZPc2CSWCHALObykyXJOY2LkAbr2P+YrX49jKpBQNQgSBGEMcJgz32f+eIlcoBISMbATOI7Jt66fIx4lSe5WSPh9Uv02YS+B7qscL/TQBjboKum8SzcvE44PUSre4vGH/4QTQ4tUtQF9TZAyBUdK8M8eFUiSSu72MJ24xWQ2wc9NS+jRHPHQJx3fhtDHshVKqksu1SMVt1ipToGsoydsdKXPKbfFuc/+BU89dZWHjmxw9uQWDodYWH6BKFSZCMHOq1xdf4j50UVuNScI2Wt71HSJwIrwQ7hTcfgMH9ALQryew1jcYzbvM6JGjLo6X63coVJvcjvsUxABkRzRjQJakofwwXA08mGI6Lm8HAw4EHcRmiBRCFDjIYousyt8Nis6qyMx5BENVZZQhcxwUiZrlHhBH6G3UyP4sAV18UaL9290kWRBQsjkhse4026hxGOk1Luo1jKX7jr0XRnXFfT7Ck6vi+IUiZoRkh3xqLRnLhP5Pj0pwD4ItWyLdXOXKDHgAdMgLanIgC10VqpbjOQj2j2XixWbjuwzmhoj8hUG3RBVDWl2BdvtFnWnTsvpcqN5F6EISokCh3J5bu5eo6g3eeP/2UGRBIVUHCFp7OyY7DbaeGHA8FAJOWaw7rgcSKXxHI+JoSGEEOiaTnNznbuVBhuNBuu1CtuNOkEQgOPA4RJyMgAEERFXl6uslNtcurnJ7ZWA9fUd+v0+i4uLzM7O8hdvv8XG9dtUO2fZsY5i+UOMpTyi0CNz5DOITB7NXaHrFfCDGFHoUq8v0u/WqLU8zHiclVsNlOEkA0klCmWMmIoWC/naKy7Nponv+x/e2vbmNB3H2Xd8tW2brt6lm+kiyRKe6+GOuui6zs77O0R6RCm+Z+AXBAFXrlzB931GRkZotVr0+30iz2Jcvs5UUUFI0OvbrN5dwXN6LK/tIoRgfHycra0tdF3n5s2bHDp0CFVVGRsb49q1a3iyjD8zQ39oiGY6zclf+RWOPvMMly9fvoeYhmFILpe7R4F1ZIdLG5cIo5Ck9tGi+Ytf/CL1ev0ecqdpGqurqz/Rquny8vL+TOkPw/M8Tp8+/bGt5XvOu5ubm/T7fRzHQVVVXnzxRbL38Rn5u8bHVbPfuXPnvkpxEATk83kOHDjwd76GnzT8jJh+TPhxENMwn0e9ePFeJ17bxjt5knB4+GNdz1+GtTXBN79poKp7aTGqCv2+IPjgOhOj3n0N6yLD4OyvTmOaIZWKjKJEnDjh8Vu/1eW+zuaeR+xLX0K5cQNV3ED0u8jrm0SKTPQ9owNJRXht/MShe4+3beJ/8AfIa2t7Cu6HPbiiUiFM782rhYXCR4yakokEvXabQP4+uQxkGSduEGp7rrmxWIQk7bn7djoC25bQ9YjTpz0eecT7wdPzx39soih7BsW6vseB33tPJ5UKicXgwK1voLnW3roEKPgcHa4zFa8TEw7OCy8Sa1mom02QSxSzNWYmemQTDl4/jt+fASFTvPwmme+8gmj1EIA6GJC/dgtraIyhf+YhCRmvm8SKT+OvCYj5fHvzGPVOnmxyB1nuESkKG9Yo7b7BkcQyUk+GnEIUxUHS2Lj5BH946QU6joEXG8OvBtyujjKc2yEXh2S8hKkF/PnGw5QbOt2u4LVrz3LiwCXiUgt/ECB7DgdnXGr1ADNaRcs7jHY3KPWvMpLa5Oj0CuOJdaQjGYQOYUxnqGSRLMUpWwV6vokYHeLw0zM8ds5BikKMhfcpDcN0vkM6tpefK1kWzlNPEaXv3bCwLPgP/9nnd7+ywJdeW+KrCyc4YNmY7t788FZbx0g7FO0GelxjKlolkBTMqM+Evk58PkbvgRIzE2UmxlvcvHuEXl8nmfSIIhVkwSC3wHZ6wCBm87Z1iu/2HqKmztMJp3h76RTXnQKf/s3/SLOp8S9/7WtUKmP81v/8v/E//Op/IJ0asNvKk9ENhtLfYXFjju3dwwz8LGcfXsDzArKBwZiTZsIr8PhUk2mzRVI7gOQP8Wff1KnWS0itCqWsgDCi62pwd5v8//0H4PkEn8qQes6iO6QwcGPklttkrnYQT/YIEmVWHJ+220JRB+SGlmhuPIdnF/HlPI+fadBKf0AztUlpukYi00FzGiStVR7ObXAuULml9hlEFlHgojZD3tZD5DAi0F0ygw4vbnoEMZ2BIuMhSBS7+OtdgukRwkKRVFQk7c4wnCyhxztcuBLhOCaRJCHJEvNHL+HHAo4fHScVNFEjg0GYpOenWNsZJ1+vYstpnNDC8VyyoYMbdJznMwAAIABJREFUlDiSWKaSnaScnKVzbpjZuSWefGiHI+N1er5HR26TVGzsnMupQwHPZANGch4zhyJKWYHXKfB43iWRLCAkiYxRQxMeQSiTEDo5NU17MM5wZpelhocTzkKocDL/bab+ySvkDm7TlFy89AquDbcW/gHpYYtcLcZUTMbJ9FElj7XtCU6de5nlzeMEvoqi+VRrButtm1jyXR4kItIMUlETO+gSIJjIqLhNi1RBZWteYtN3GetJaJEEvgRCZccbcHy4gJQzKTd8LvkW88UerV3w7IBMQiPoayzWA0IPynKcaqgQU4qEUZKIgIOZFPHK4EMzdgkl5/Pn37aQHIXQ9UnHYiSHigwUj4s3V3hsxkZGoW17bO3ahJ5Pp94gCCL6vZDAjhGGMC5l0B0bJ7JZnWkzNTXMZGmYtGGijSRYMW5zYiSHJuustmU2t5eQhM87d7usNjw2PZ/tepfZ4iwd26ZWdWlKIQk/hRSL+HZ9gW6/TyqIc3RSR5YjGgObjUWLWGOArEaEdp5udQjP9kEW2AOXmbEJXE2h4fQZyo4SBi5TI0mkSCGQ4Y2lDarLy8iKShCF+IFP37JoSxLmg48jy9tAxI0bVSqVLpIUEo9nkOUSURSxu7vL2NgYa2trLN+Gt1YexPF0pEhl4KW51Zxj5niJwrBKVlujtgu2G6LSp9st0+nWiEIfZBOr1yMZ0/i9L2W4cKVLpeZx5y5863XB5qbYM1j6kJgqioLnebiu+31XWx16Sg9sUBIKkiyRmchg2RaiJ5AiifHkOPg+6x98gNds0rdt1FiMWq3G5uYms/kOvYHP3GSOwWDAN99aRBIqybjC7sAgGYR7G8a+j7u7ixGPYwcBMzMz6LrOsWPH9g108sPDPPdzP8fE5CSyLNPr9fj617/Ozs4OrVYLRVFQFIXPfvaz+9Epru/yOx/8Dl+89kVeX32db218i/Pl8zxcehhD2WvXeumll/C8ezu0JEnC8zxeeOGF+xQkPzoC16Vz8ybd5WW8Tgctk0H6GzjVep63F6O0uHjfqJhkMsnRo0f/Jkv+kTE6OsoDDzzAxMQEJ06c4NFHH73HiOrjwsdVs5umyfXr1+9Rinu9Hs8///xP5Yzpz4jpx4Qfi6ubohAUCijLy3tRMb6P5Lr4c3N4jz768a7lr8Brr+kI8VH2KQSIVpNsf5vM2nW0d95BuXZtr4XWsnA++UkoFZmdDfjkJx2efdbh9GnvfqkyAGhvvolcq4FhIKvbSHIEioKo1QlGhveJZiTJ+Ikj9xyvLiwgyuU9BfoHZVxFQVgWYT6PPzVF9OGun3B9Ej2HoGOh+AFyEBKoCm7c2FdVr15VePVVg4sXNe7e3cvm/PSnbc6c8SiVPpqzeuGCSqMh7hG/Gw1Buy0YGQkxrQrF8g1CeW9GU9chkYjA9wnGxpBOn0GEIfL6OshJomiSKDxApB4isHQk2yGSJNSFBUyvhqJJBKGEJCSMpGDU3IBnEvjTD8HoNN21JvGVMq6t8tbOUVTfIKRJP1QhkghUnRu1A2QSbca0CmQTBP4c3uAU//XaM4jQh1IBJIlwaAwjkLm7NscjB24i4gp/svIYTiRImC7vrP8DRNen2TR55tH3SaoBmhwQtrsMZW4ynNskaoySnqrijyrsmg7vTNm8d9LndiFgMW0wf/ww4cwImcMzHD/r8NDTXY4+Ocm43yb20kuot24h9Xqo164R+f7+ho77yCMEh+7drLAs+PUv3OF962UkZZd6Z0BFXeQmTZ7q9ZGVJKrwqQcZRgo7RK6JExnUYzlWEof5w+Rv0gmK1C+r9AZxmtoBtrYyDAYqihLQ66Wx8zcJTZuBbdLpztDuzxLoGgPFZzoZ4rkh63GfZx6/iJnfwi4X+OQnv8qv/cr/SUSAFGmYgzbjnsNG1eHB2Qus7syTnrhGpthC81wkEVIwI3zP4MUnv0M6PiC+MUHHNnnz2gSxsIuzPmDQsDCTIYX6CvN/+H8gfI/gxSw8CfKMj6T69IZ0VCXCuOoQe99GPB0jVZIJmyGFXgUz1uDqYo61jTwzIw0mDwVcchfxVJ1SUaKU6VESVzHVMp+1k2T7Hmao8E2vRaVt8ZbeYt30EFaGkJDnVz08vU9KZJAClbjWRmgufnEKQ5vGzlUY7BRQu1lMahyZKqMkr3L44A2eOnubvnOXau06kbeGhE09lsfIplBx2ekO0WlkMUIDKdRptl1y9oB+6OPH8oxJl7gtJ9EkwVDmLr14gVwxglBG8iXGR9scGh1wKhswNQLpFEhCEA4gXnSIllP0Yi5CM0knJJKpPsIZ4Eoq57IjCFWi3j+IkGOMljIstSMmlDq9o2/xqYd6CFsnru+A6rK+O05la568HjAzkIk7Bl5uwKDvUfMKxKaWODH7NrJsE8oSF2/eYiNznli+yalBi2DQhCjAxSeIQdaw6fUHNMcM3or3GB4zUVsgWj6DECQpYjInEU9KZGtJOvkilyybp473mT8Skh9SMYRBLIwYzXk4fshbKzLZbYsh26Ik+vQMwb86/c+x6kv4vkUQKHzwQZrryy67sk8zDMkVU8RSJp2OTb3ZYbbYRPMiUjHBpdUGzc4Gsu6BL4MbUQlzPHbwEWKyxMAV9PJtwvEYSc0kFjMxM220pIdQY1hiwJGJFF13jZuXKzTrEq9tt+l/KF505D6B7zORG8HxZQwjxrAY4i/659myGiihgu9amKaKaRrUewN66yr1Wxp2RUK/1afU7JPv9ohbfWxNZ3T2IHc6LTzfoxBPYiZzlA4+gG+kaFk+b169iprNEFld3L61N2s2Mop77BjxZJpmM45t91lfLzM6msOyTCRpmD3XXAnHcchms3S7FjduPICcgr7Xx4nAVSJcyaZujfHkYxpy6wJBKNAUhW63zGsXb7BW96i1PO5WfQZSgfogSS92jDurPcplCdfNEkUqqqruOR2H4d6GgqLguu5+K6vv+xAHFAi8AFRITibJjmYxJIOu3SVNmgnbQL94kUq5jN3v01pdJb27SzeRoNvtEA82CCWFYwdL7OzscHuzQyqVptKw0QYBhr+nLKm6jizLxMMQq9/n9If1jSzLjI6OMj8/v09WAS5fvszFixcZGhrCtm1c16VSqTAxMbE/06hpGr936fe41bxFxsygoKArOn2vz3vl93hu6jkALl26RK1WQwiBbdvYtr2vnmYyGT7xiU/cvyj5EWA3GlS++U28ZpPI83BqNTpLS8SGhpB/ROLiui7f+MY3ePPNN7lz5w6Li4v735vvodfr8eyzz/6VBOHvCrIsk0qliMfj91VyPy58XDV7Op1GlmU2Njb2v4sATz/99McS0/OTiJ8R048JPy678SiT2VNH83nC0VHcp57aM+L5CcJ772n36zbGiecYfu2PGd1c2LOJD0NEs7k3J1Iq4R+5l0D+ZdDffHOfUErCQsgWIPbba6NsFkKPwBgniE3dc7x6+TIiCBDVKtIPzQNIQUAwPIz79NN75wgjYp0Bhmliu85+NqvwQiIBoSJz547MG28YGMYegdS0vaib69dVjh/37rkeV66ouO79Xf7KZcHUVEg7P8PU0uvIvocXKoyMBMhSiDQYYP3mb6KpMRASUqeL9L11AVEYsVxN8/atPP1OQGHnBoquodLGiEnEYhGqBiLeh1mFQIyjLi6RiId4HZu1W3FWWiVCJ8HA89AMDxGF9GJ5vIHEqFlB8hTSqSE8/xwDN8Xbd8ZR48r353IlQZjPY+WmMR97nmvWYW4sGlQHs7xy5XP0rDiSPWDQy9IZ6Jw7cZ0njy4gG3VGU+t0V3OUtleIr7WwOj1eL1TpxkDVZXxZ44bT4z2rybniMSIzjyR8fHMaLzxC7OWX9wZWdZ0okyGYnERyHOxPfAL3uecIf9imPgxBkvj9/wzvW1/B9UNiskero2DKPh1kXKoUhEvbCFBsSOVCrMPnsI6mOD//IMnJNk+lX6FZNdiuj9FZldGXN2mmx+j0kkRRGpSAtnyXIFDwQ43IGkGW99w61fgufqCSG2my7cY599BFcqUOT579cx468R5BKIEIMfHxd5JsrqbRchkMI+D03BsMHVyk3MrTrY6xtn6U9u44Q/ky+UKDo6k+onWIm41RXl2YZquZpOkXUCtbdBsS0uJtDjTep/vpYyiTCaQxD2FY6IqLHguIDqrIcRdpOcJ7XEfr2RRCCwYucdcietnnwNE7HD9ymWhkhNnYGeygRtPbxqZDmi4vbOjMmEWQZeobbdbtAdeLLk0piWUmcJQeRjvHo/UIXXSQNShpBplUlbYwEEMPsTnYZjuWIN99EKunYfVliokkJ6anKaTzNGtVdnfPkzfTaGaemOYz6LdIZSWOHPwkA2WW7UWBEfXpW5AVAi3wiKQ+ru9xQj7PpqxT6zYYLuzQTp5mZqiPKWmYaoQhJzCSFiE27TCNMzAwYjaRC5pQOOP43NQOMzZSQzMUwmAAEpxQs+jIGKaJl+ygxwLklEF6dJuj83/BgQMepw+3KGRCUloM2QpoOQkq9YOUYj7rjs3mwGU6UgmKPqtyltGJRTw9jjnf49oO3LjTJp0Ypq/VeTHocDjjU8j6hFKIrpukjICB5LMyK3E7cgkUBX9I4jlHYjxukE8JMqpOzNY4KCfwHgwYSTY4dsqi0FNROipGR0LrCnRb4f2WR6fuUUhESE7I9u0B2k0Nqavz9ttZ1taGuHpVo9vV6ba7uIGLYigoYzH0vofvyriez4kJFfBJZ3o88EyNathFSYWo6QBFM5iY+u8Y1WOYQZ9YsshWsUc8qdAY9HGkMvlCDM3IEDOTOCLGocQ0Xm6HG40sq4rD0mqbIAoRjkTQidjs1lhYX6K23WZ7a5e3t6/R9DY50FUoWhJB5EBKIZ2J0bAtjseHcVZ6zGz0iARYQYQVugy6A+RyhdtRyMrGOptbm9zZXueZ0w+TKxRASFy9s8JOs44ST+BOjqGMT6KMTSDn8oSey6/84j/l6OnTzM09Qr0e4Lpp2m0HIb5/s4iiiGQyiabFcZwkU6N9YnmPNgq2ouHHNSqOzKmHchitdwkRLO1s8/619xEyRMiEEVT6WT5YlVmt9FCzRzl2/DiVSoUoimi322iahmma9Hq9/fMKITh7+jSe52E7DqEeIiSBF3koMYWRsyOMT4yjGRq727vMaTMM31zb840QgpsbG+iKwqiuo/g+6sgwaWWX0HeYny7S6XTo+waKotLuDBDdiEBSEUIQhCGZTIZEKkXY63HmU5/6S0mN53l7UTKmiaZpZDIZtra29smpYRgsLCyACl+rf42YEkNV1X11WAho2Lsczx0nH8szPj7OSy+9RLlcptlsYlnW/t9f//Vf/1uJOal861sIRdlXSCVZRpJlBtvbJOfmfqTX+vKXv0yz2UTXdTRNY2hoiO3tbRzHIRaLkUwmefbZZz9iPPXTiI+zZh8ZGeH48eMUi0Xm5uZ48sknKf0lOfU/DfhZXMxPA2SZ4CewT30wkLh+XWFjQ1AsRvfEv7iL63Qy44ThOqLXIxKCqFQiMk2UjQ3Ezg7hX/fHMwz3Z20DbwpZLQNi7y7jeRCFSFGAl374vodH6TRUKvgHD6Jdu0akaT9A7MI9I6kPd2M124H7cUhZQrU9fF1jYUElHv8hgrsXD8qNGwonT/ofeS6bjahU7u3KHhkJcZw99U7T4rz6qX/D2Xf/PfPiNlroE2SH6P32b+9FAzX32nz9Q4dQFxaQPJdA1vnTdyco10CdHUavfsD6miCbTTCUG0a4dYj21hI5JoE5hrK+AbqOBJgP5xnr9NAqgp5l40pp4skOXWOIEIEcDEi4DZrxGLOX2kjB+/SPnkFyXYKRg/dcIskeQLPNu1ePcruzdz0NU2C1LFRJJu01SLy5y4jTIXe8zjXpQRwpQfFulYxfJdIEtaDJqY2A7bmQzpEUEhLDmsqrjsHd+FnGjDRe/BCRlkP/xjf2o5R+8IMIh4ZQNjcJTpxAeD6q46E0vobafR3CHsgGd7cexQ09IEQIBUmKkASgdni5uA2dwR7hTvkECcFnS9uUzzxH8p2Q2NpdNoMR5o5dZ/38JE0rR7WTJ3dti6Y5jSRFYFhIyV2C3VGIInw5hghBj7VRTYtBYBLmUowM2rR2sxx0JGyviJB2MTSPiIh4INPZPcnKrkkkeiiKhOsKHi+tk84NeG/rabIjVzg03UNRBe+89RyFB66R7yX42oVZGt0Ypi7Rl0N2OMJJ9zpMzPIf87/NL098myjuYScjVN+DUEDk43oQvaggfxqE4RE5SWQZcnoPaQ1mvCbSBzV6sTOIkxFS9gpPDMV4QkzT3u3z7p89wNb6Bh27zcSYzrbY5VEmqNtdGokc2YGGp7Y4Mn6HxECg91wCuUw6mWRHn6Sry+TogSmj+ykkCRQlglAldDKomsXszAG+e/kix+fmkYKAUIQEuoFaqdG5tcp0YZjRVInYQxlqqxLtVkTkeyTNCNdJcFS+iSxLJIIBqlBItgaM9M6Tqqq42R6G7qOGIVFzhpZxACuqsHFpDLUlOJK+RCHqoXQNDhSSTPhFbNel4JuUTANZhLiOT79jkE2bmLEG9cEEz2QPc7u1iBsMIAiBgCFtjrnxY8wW2mzeMFGKLmEg44z4LCQ1SiLO6WyfTz4f450llaW1DFuNDJHoUkjK/MaJJINti8RySBgGFIYiAlxuWwqNIwFq2yGMB/iRgy/B7w5LPLbpctDRCEWAiMt4xxU0u8nxeRl7I0M3DBgd9imYAUJI7DRV7FsmRyZilAd9dm4F6FEaM5FkaekWMIJlaRw7doxqtUqr1WIqNUU/7BOWQpa3qiTbCjkzSz8cZbq4jHZoC7vb4PmHJPIGyJpEYyvFwtYXOX89RUJ1mWtmqQYN6j7IukFL1Kkvdzl+LKKomQR2k+5ggKoneOyTJq//7hJCyPh+QBAESJJAtCT8ZsiN/irFiR5PjgwRX0nQHh0gIzhS04kndHaGbU5lxqm9bdG+2+Ga5ZFWoBjTkADDSDAhe7jlHd4Yl9mxdoi2I+r/ZYufP/cozz96nHQiwPccPDOG7AZIQPRhJ5EsKxhBhCbJGB+qecVikTt37nzEFCYIAsbHfQ4evIM9OIHrNBiOG4wc9dmsZOi0E+RSM1R2l7h+bYfxjMduq0urpzCp+UhESERULANVCTl/G56akVleXkbXdSzLQghBt9slk8nw+c9/Htu22V3fYDyZ5tDEFPqpswxchz+4/Do7vQZmwqRwrsCB2QPIQmbAgPGhcUZXvz/ikonFIAgYTaeJZJm4ZdEolQiUDJ94OM/s7CyapqGaXd69usNYQuPWjo+iQhhFKEAul8P1fQ4UCviWhfqXtIBubm7uk0zYm7P0PG8/kiYIAhKJBN9+89vYUzaxZIyY4vLzJ64xmrKQRUjNkmnbrwNz5PN58vk85XJ5nwyrqsrU1L0b3P9/4Lbb+L0eauKjqQGSJOF3u3jdLuoPFPK2bXPx4kWq1Sq6rnPq1CmGhoaAvTibRqNB4gdeS5Zljh8/DsDnP//5v5U1/ww/OjRN+6mcJ/1R8TPF9G8Rf18Cmv+2cPmywle/GqNeF3Q6guvXVQYDiWIx3J8p9W/e5ee0b6Ck40SZDFEms6dsSRKRohCl03vRMX8NyGtrew7FkkQYyuxsl2i1LbxeB396Ajk3itc+gvb2B2hvv43ywQdEmrbXmisEYaGwN6+bThPm80j9/h6LDEP6v/RLeOfO7Z9LcTxEBIZhYDv2R9YhReAZGufPaz/ok7SP7xn7HDwYfOTxQiFkYUHlhx3sLUviF35hwLlzHqoKo3MGM//9OZRffAH7s5/Ffe45ou9ZrbsBS0syby8kWHSn0TIGtzbirHSKyIfGiNIZHCPF9Op3cayAWFJDjmWI1BRRlMTPzRM+WULsVkH5kCFLEuYhuLl+hu1KjubwUXaNKQy1RdTvUkrvcrC4yXbtEPOyA0GAXtvmevFJ/Invf3ZSr4d6+RLS6ibPh1/HWSmzuJ0mTKZJJiOSdJhqXeVZ7buM5G2enXkLqeUhbndRWy08R0dSfIIwoCK6+LJKtgEbhTSSLhhoWVaZYfXuCdqV56g1ExQKAbGbV5D8j24CfO99SVGEmDqA3ndQa19Cb72CiGSEpBLJMq8tudiUsYIcKdWnPxAIeUArcxWEoJA8jC7ipDJx7OMRyVNnSHgFimqE5adpNvuEgUIy3mG9PI0uueh+n3pqBs+DwNNwc5eQzDqGJqPLJnoiRE93CGWZmCiQTkRI3RrPLX6NJwrnKe5aqBUVX8QJCwlqiy9Q7TyMrMZYW9siCBRmNnfI3Oxx3fsE8aBLBo+MrJMzddJayOqVYVZ2homnk9S7Bq4igRSiKCE1bZJSYZOJgzc58DmNy9E2QtpCCkMiW+wlA4USoa0gxQN6Awk1qSCUCGVLw/pKnmggIdUjWgcepFaK026YxNw03UaGP/izE9j9Lo3UHEbTon43JJA1Jh48iph+mOOpAzwSJZjobTGq27SKSUaaEXIKCjmZmDKgIUYZKc5SHRPEvGGK+Q7xRJWs3ESOJISmMohM3rq0QKPhsbIe0mhKbF/eJVrd5uixB0jlcoymVbLOJsEgJH8wR7/boddsMitu8un+V9F8j3HH5nC7AR1B5gkPRdpFsZp4uoYq+oioh5c+TcuqYK/GkEREfTCKULb5ymsqq9fbXLfSzN1JEo8UEtmQyNfAK7Gzq9Csaey0zzBkDvNQUaOprlJpW+iqxLncP6WknEYIg4RIMZGYYvXOKLvyBrKAjh1HaheZL71NtVfhjdUWF1ZCFMMh5mWY1Y6yXTnL3cYpbsXH0RJraPGQ8KDEq6kM71VDrt32MWMBa3GoNvcUwKUkLI6ZvJ8JmQ+TxFI6kd9FkyXiroxphqRjgo5t0nM0Lq9FSKGPLGvUNlScjowqy/hhyG6zx9mzM6yu2vT7fSYnJ5menmZra4v5A/NMj0zT6HeodSwaYY+rlQ2azm1Gxrp4XkQoScRTBi2R5ra5Z3q3spagrUlcMatYG13a8QFhAPEcmKkEm1t1VKnJmWyeYjyx9xsWqNzdtbjeqNFte8jq3gzl99wyo0iQjySmVRXXjTCdOIqh4is+B/NpjidGWHy5jV33CRoWTduj5QmQVB4cO8jZsTFmh4ZQ0rBVqzFRDyl1fBrVGl9ZOM/b168xOhzQ4w6yGEb2xf7mpu/7jA4Nc3huDhGE+IaG53mUy+V9BVOW5X1C9dRTZc4cP8TG3QNoqsCxHQI3IpP0SKVOMD8/w/T0Jt9ZWGfYbCOCDj07oOcKFDni3TsaYfwgNXeISr3DgQMHKJfLJBIJstks6XSaIAgoFAqkUikmMlk+e+wE8xOTmDGDVCJBLpXmkalDVNIuhVyRc8+ew8NDIBhJjPCFF75AfqdGu1olBHKmyWnTRFNVOh+OHbljY8wdPsF8rolpxoiZcUJ/gC77rDdMWlWLzXabrm1TGhkhEY+TMk0eO3KE7NGjezO3Fy7QvHiR7uIiTrWKVihgDQbcvn17f6ZvaWlpn9z7vs/4+DiKoiBJEreat8gNJfjnDy+QUG2CUMYPZYTweXi8yeWLEv/pP71MuVwml8uh6zpHjx7l6aefZmpqinq9zokTJ/6KyuT/G36vh3XnDvJ94mtCzyMxM7PfztvpdPijP/oj6vU90yzLsrh69SqSJDE6Osri4iKNRuMeoyaAfr/PiRMn7vvcTyN+VrP/+PCzVt6PCT/7kn8frZbEK6/ESCQiZBkymQjXhZ0dmTCMMIw9gfNzsdcYvnseuVpFNBpIlrUXlK0oRIaBf/LkX1sxDfJ5tKtX8VFYuKhRqcToN3Js9B/iJfdfkrixw+jqB2iXLqGsrKDs7KC//TZiZ4dgamqvxTOfR3vvPUSjQVgoEExM4Lz44kdIKYAURMhegBGL3UNMQyHh6yqLiwpheG+rkePA9HTA6OhHZ0xVFUZGAu7cUbAsCceRkCQ4c8blyJEAXYfR0ZChoXCvY1mWP+LGvL4u+N9/J8Or34xze1Vjp6qyZaU4vzZM6WCM0NhTJz09QaDoTGy8jxsIkkmQHI8oZlI7/iRvVv8hZuVdgpiL4wVYXUFQnmTWiHGjMcIN6RheYph6MIMxsDk85bFuPY42UDiSWAdFIcxmSfzaZ7i2FNubJY4CtIVv0Q+6PH7kApPjmwxnFN47H0cydDw9gaFFPDtbQZ+dJjNToJs7jKm5hFYD/U6VTiqH4yjE1AE10UdICigqQRhnYCpcaY1w87ufxnDmyKmjVKuCixdVRtQqGa/OPbsEYQjpNMrIOJEUold/H2Tjw9ZvkIBWK8flbgXLiWMoewZcLaVMJDvk4zoFfYwwVWT8kMLkYJfYOyscuFNDunabhDPASiTouyG+ULi4+iC9IMawUqWemqFrybiOQIQyQgp44MErZDJdbEtj4IIXCDxHRXEWOVm5zIvDLyFWPZorOrIU4C4qnD//v7DuzxCGG6hKnHo1ItffZGK7SSUY5vzqSeIZl1wijR5pIKtEnkF1KUmto2PKPYp5lUZPweprOL5ML5Q4eabMP/q1P6VcrBK0yyQjj35NhyhC1SKkAIJIo7FRYvEbJXrXxsheL+Evq0iyi4giGJ/hynwCu6TT9x3Wuy1Wr01TSmp0RJxIkmkkJ7gh92gNl7grfGK7Dn2lSy4LTz5aJDVyi7mDDsqpDrlqQMbxSZdOEZ+YwRo+ifDGGUukcFcbxFcbxJp91NYO8vVX6SWO8UevX6BW1wlDH8/zsC4vYyTHKZaKaC2JoLXLcHqFmfhdpvUyxws7HNz8U04238OSPPohpJ0BkSQRqDFEOsKPx5FERCzc6xrwRR5dSGzd1pCUCE2TKLsVrl8WeI0kcTHOSl3iytImY+ostv0IDX+SNxeH2KgNs1GZZYsxaq00R8YDjk+rXJHrHI59grwyiqT0QEQEckgx3WU2r7ParODbMvnGFp+eX8DaXUZUJAqux82HUutWAAAgAElEQVRBjE4rQhUvcmrER8ImCmycwGQtOE3u6C0GsQhZhNxaFeQfVjl3wkPdCmjoIZ4c4oYBVtXm4bURlLBHXPdQhY/XFgwnZebHQ4JAQhUquqay25fZ7fpAyGZT3ctwlmWEJBGGe4qX66Yol8sMBgPsfotffnGO4wcLxMwJgmEQiqDf6eN2K2SGJYQWUGvJlDsy40NjbOoGMT2Bqhh0exMoRorl7R26cZdkU6czYuDj4wcWUeSTJeKXzgZo6W1QLL60JNMOJOzFOkO+QAkj2pFLEABIaIbOEdNE11UCP8CzPbJBln/81C/y6CGT7355mS3PJ/BCikSMJ/Nk1DyZeJLffvppqq11tttb1NsNqi0XiFBkyAmFkmJwvdNg1+pwdG4Eq1Vnvd2n4tSw+n1wIZNOs7a1RdqMo+UyjI2PEwTBvumOZVlkMhmeeeZBPvGUTkaNEzM97q5NUCokKOSzZJIxhDzLU88I5uez3Lm7xoUVl5WdAaHvcn3d5svvy3SlCWLpMZKqQSGVIhjYRH4ARCAEmqaRSqU4d+4cqqryD48c49DYOIVMlt1Ol26/R3l3l41yla1bW1xaucna1hopPcXPHXueXx3/ebK+ytDQCA/0e5ycnOTw0BDdZpNh0+SoaXI2iphJp8n0PW4Go5x59GGK+Qw7jT5b7jTblkbQ6ZA0TXL5PLKqIiSJX3jySRK5HInZWSpf/zq+Ze21vQpBMBjQXV6mcOQIb3z3u+zu7rn6lsvlfTKm6zqTH+a7K0LBFjYPHL3N4aKF63+Y3RuFGIpBOipgWRf54IM8QRB8pL15YmICWZYZDAY89NBDf60a5XsYDAb4vr/vGCx0nd7t2/c3OhKCzIkT+0rtq6++iud5+0RbkiQ0TWNtbY1jx47h+z63b9++b0wOwOnTp3+sc50/Sfj7VrNHUcTOzg47OzsYhvEj5fR+3PgZMf2Y8PftS/43wTvvaPT7Yp8LSBIUChFjY3sq4Wc+Y/PMMy6j3/wj5EoFyfNAlpGiCLndJlQUgrk57Bdf5P55MvdBPI4/Pc3ym03sxgBZlWgMH2H18HOk/BbJd77NaOsW+s7GHimJxUDTkPp9RLNJkMkQe/11UFUiRQHHIZibw33qqe9nvHyIUBGotvehYvp9G3ApDHHiBpG8Z2J0+7Z8jwLqeRLPP2/f87aE55NXHU4dHTA9FzF3KOCxx1zGxj5KYO+HSkXw7/5dnN2mgh6XkAU4roRTaTG+8Q7D/SWQBYvVAptbMhvaQZpHHmZm5z1y3Q1QVdbFNN/uPsx28hjON1tc+PoUdy9M0L87zcatAs4g5HPntqlOP4QsR8wOd5iyNxhEOfq+wWcf2UGfKu1tJKgqsTOHmD2h0u0KxMp3yXKT549f4fDIFpKwMcwNxrMaV2+k2QxHeGamiuF20CKHktHGCwKWo1Ms7Q6RrO6g5V0GvoaQQiKtzR7n19DlDucjnYUPPkPg9njBHcEYKTGTs5nIOJS9IWb7l0H98EauqCipHLKqIR0+TqipEO2itV4D8aGzlrSnfM+ND/j2kkp1AI1OllJCJUzsIOldDuljZHWF4zMW43ab6YVtAvocSBj0Q5XQ6lG0drnKCB07w63Nw2SVNtvBMGE2z2OP1Th79gLnDq0RV2pU6xlGHvgWPS9k0M6g90ZI0KPoNvic9hI1p0S3N4p/W6Z7Po5yM0+17/Bq5iSTxnWurd7hynKT8a0duu0uThhnYedzBJ0ZYr5A6mmI9QTr/cep7SZQey6GKwi0Mklzm4KxSSLdZqjQ4Zc/9eekiutU/D5rtSlKYQ+3rtCzFLqWzvb2ENVWDs03aG0oWJFP/GCE/skrxJ5u0D/lUJ95nrI3Trl2kGa5RK9RYH2tQCEZ0AsjHDJ8+Rt/QikLEQoDq8mg18DMeMyf8JGFhOdLOOk1RmOCqU/odEpP4I1NsJWGumsyYwxhDAakXIVO10YYKtpgCaFaVN5c4mVXYTVaoi5vs7qjUWzVmT88g64pHBt2SWR2CVSfWLaHfKBDc7jD23euE9YdVFlGi0AJQ5pCRslDJpBxzFGiXgy3YrASnYFohHioIsKTJOJZyrVdLn3HYS59hAMHzzI0Msfo8BC5TIbly0sc2Cjz9fUXaLSnqHcmaLRyYOSRlBTLVcH8RIfDqRSmOoONRLMn6AUqwUBCdiT0hMPcdIBee5l8qsxkViWRSTOIXKLQpleN4RWfQEnEGBMQBqPEzRRSCK4copuCYn6H3UDDHjE4e84n76ZZXwjpLYQky1CqScg3BP2OTSRFnJwSnJ4OGC/qpKM++ZyNqsgYWgJdUcglFN5ddDBTEnVLYHsgFAWkgFTSZnurSzqTwjRHeXRWMGPcYGftBo9N7vD46Dqnph9iPUhw5fwV/l/23ivYsus+8/utnffJ6cZzQ9++3fd29+0MdAPdRCJAiBJFacZUsMZlesqSa2o87/bDlB78MA/20/jBZZUtq0Yle4YcQxBZ4lAMIkEwAAK60UAHdN8ON8dzT85nx7X9cIAmEoNoKpCD7/WEtc7Zu/Za3/r+/++Lp1UMVXL8sEQXNnOjcapdDZkM0SJwuoKttQTYNiWnTU+4jB3EyeuHCKVK0upzXOmzVAhYOgmK5rPer3Nz74DUSz65MMLrh2RVjQUzhidCGoEkVUhxLJ8jk0lg2ibZQpbZyVlOnDjJ/r7K9155g43+AMcJafUM3I5DkNRwo5BQ72HRY7TT4mrgEsoAGUkkghCwI0FXFdR6fSYOZzAe8ekOYoSKZP1gk6pXo2DkaTQa/F//8Qu88OUv8dprr6HrOr/927/NpUuX+PVf/3Wef/55FhZmSGq3EJHB6EifQzMNao0YUipkMx2ef8Ji8nASXdfJZDJ0Ol3urpZ460GHtp8imcoSi8WYyuSZn5nlNz/9a1y7cYMgDFERyEjieB5zc3OMjo6Sy+U4nxtBqAqKIsglU2yVy+xUKnhBQCGTpdZ0UCoKZ/V5Hs0uMjczN3yGmiaGHyLbbSDCsm1a9+8zu7VFo1Ag0jTUdpulgUf+0V8jmL7M+MIzSDXO22+/zejMDLOZDJOFAqO5HJam0XUcHv3d36W3vs6gVEJ5DwETQlBpNvnLr32NXhSxvr5OqVSiXq9j2zae57G0tIT1Tjh6r9fj93/z9ynkv0Eouvihj4wktmazlD9JtVzFsjyWl49TqVQektt3VfZMJoNpmpz6KWP5Dg4O+OpXv8rrr7/O9evXWV1dpVAokEyliIRgsLf3vt8TDAZkTp7ELBSAYdTND37wg48kHFEUYZomi4uLvP3220PPjvfsW1zX5ejRoz+38uNfBvwy7dlrtRovvvgit27dYmtri5s3b9JoNJibm/tHeRDxMTH9e8Iv003+/xd372o4zofrWDUN4nF4+mkPrVxCX1kZEsN+f1huKcTQWVhR6P+rf4X82zaHx2J8deMM5ZnzHEydpZ2dAaFQXH+Vmc1XyKzewNTkQzKKriOkRGazGNeuDUtiDWM4yVQKtdGAMEQWi+8fRwgCQyWpGbi9wdAsSYAXMwmN4cIyMjJUFfb2FAYDgecJDGPoypvJvKf3NIqwug664w8ddaUkLTziyQjMn67k5tvfNrl3Tx8+gIQgUhRONF7h9P5fYwuHdgvu3zcIy3XasTG6PZXKzSoLx0JGnj5CZ3yem7sjjDrb4Dh8rfkJFru3CDwNP9TIJV28ts/uo7/G879loGnQd1TY3qeQ8vj1pQfk4u/P6fIuXsSMKczPNLno/m8cL+ySsgfv/oGAwki2wtOHHby5JSbifUZjHZKjGvXAZ2OQJZ0uMX6oh6gsUx5MoeoQj4Ws1p6hm1ojFjZ59YzNQSzO3tZZzmqTnEpkOD7SR0/FcRxBu6VgzB0i3t/DRKKncwjXQQCaF6A324iDPVT9OmK1j3K1jPJ2DbHVQTEVzhUbvHT/GI1A4+iEZLEYcWE6wYmiyWShhR7PMHt9H6I+tpBMWBmsmMTpQ+CEdCKH76w8j+E7jIgDdq0pRnIVRsZXSCQEqXCPQwVIyQlGvElUu8vUVJknl15iOrXCJf17jEY1hOJzqFFhNOgwITroWgNdi3h95llubwckvA4TIwqF9jZzlwPs4wNq+jSxNPRqeXQlSWjGkGNVRo+uYuVaqEGdSDq0I41ylKdNHC8M+dTCi5TbY7Q1FyfQkSJEa/m4gcVm1SJAYGoKnmdQ6SRI2A1G/sVt5LSPn7Coq4vY8cNEusnq6gLNao7A1/EcG69v0XUl166/zu7OLS4dmyBmdEiobSwCpg+HjKlgmj5xTWUxs8q4ItBTKll7lpxqEY/lKCQ9Km2bTLUzVC6aJSorNxnLuEhpsNbY5ECLs+0FBANBp5En7W4zNj7CI8Usk2N1FCKCQMNSHOqHQJkJiL6+SacnqMYMXEsjHkT0ZAw94ZO3dfyJNMgIJQjQijMYcRBqg407R+lXYuTUEpMZwVzBx7a3iZR9dqIkOVcSTydJtTyu7sxiSRf8AFotemVJ3L1Fq6lzdFFiGzbT5gwF02Q0btF22qz09ykHPbpRhCED9h7cIVBVNp02Jc+hLSIiy8J0TcTmPLE1g6iWINI1dM3CNFL4gYIvXPKzt/nmiI4y2WO9PqDqhlSrfS6dijhyCKQb4QeCKDCot30OFeM8d9xFU/v0GhGZmIauhnihwHHiKG6Gm3qXW2aT/nhIMwiG/ZLmAFNT6LYVen3JSKZNzNug7UgyyQHNfhtkk727r3F7OYbvmCS0LJNjMU4d1pjKSDxf4oYWMhlgA9srSeotE0+FgQxpDtpkWhZmaoKYnyTmxMnFt5mfs5mZMuiXFL51K0C5GaIGPhJBJAWWraCaCrMxi1omwFU1cskU86N5tKTB4vQiSjRUD29dv8lKvU1fTxFhUdf6tBQHz+vTCPu4o20+m/JoBQp3+z6BL4emdEIiUYkUgSYE+4GDsghHj2TJp47TbQ7otx10U+egXeHLf/41lh88YG9/D0VRODg44JVXXuH5559/T9yHhRXdfnhWmkj4HF+ocnrpgLi9yne/2+AHV69y69ath8Y//X6fXC5HIpGgUCiQTqbI2TaXL17kicceZ7pY5Mad2whFIWaYHD1+jLGxMVzXZXFxkXGhPjQEvLe1xVb5gFprSDYHnsd2o4ap64ynMigIlpaWUJRhf2k4MooKRKU9bEVhtFplN5+nbdtDR93paeYWF9E3N4c54UJw69Yt4vE42UIBe3wcoWkIRcEeG4PRUc5duEDr9u3hAfN7EErJ115/HRUYX1hgdHSUIAjodDqsr6+TyWSo1+s4jkMsFmNycpJHzj/CbKbCZFLgNwJs1ybmx5ChxHEcgkCnVLrA/v7+O0u/QFEUhBAkEgkuXrzIyLsGfz8G3W6XF154AVVVMQwDwzCQUnLr1i0WFxdJFYtoqRR+o4EMAlTLInvuHIm5uYffIaXkzTff/Eg1VErJ6OgoxWKR6elp7t+/T7/fJwxDXNdlenqaZ555ZnhdPgbwy7Nnl1LywgsvDLOSTRNd1zEMg3q9/vDa/2PDx+ZHH+PvHdPTITs7Grb9fvMfKSGfH6qm2soKMp/He/xx1PX1oXLa6xFOTBDMzxMcOfIzjS3lh6s2C6U72E6LSAwjY94tgVUODghnZ1EqlQ9/iGGWqv7gAf7Fix9+TVVhvEAvcBFRNDSx+MDJ1GOPeZw751GpKOg67+uvfRe646EEIbwnTidSwRx4hLpKpP1kctpsvn/uSafCkcY1BnYKXZdcL82RzYEZdpG1dWqpGSblLm+1FzgX3WB3V8XQI0LFxrx3h37+Kb6Z/O+Yr79Bwq2jj6coTZ8nbFic1gY88YTHE0+AMdNA39ggem+Gj+MQnDjx0MVJ691DxlOo9f0PODsJhNJDSdpM2QEJ3UJdFTS8NpUgzsn5e/iOhqIaVKbSzFTXqTijvLn/q0zMrpIIl2imH+DFLSZ7OSYLBYoizuyUhdcasNZVaNYhCBUisuyO/AYT+S7HCg20e3fBtIiIEJqGShbx/Tpit4Uw37Hm9wdEr/RQRoo8MXWa/+lUlkMZm17o8UflP6MtW9i6SlJ2Ea0mjgbHkjNAhCpCRsa6aKLM8X6C373wH2h0C3x99bOYkUo82WXQChnLdRBRSML2GUlsEQQhpr3O5PQWp8wGV0rP0I3ZaLWAuc4Beb2DUHRabhJFDJiTK/zrc/8zzZECjm/jlAIWP62ht9qUaoLzM3/Ftc3fw17YJNEzCRNd4uOSX33yB5QqI3z32iOUW3HiVh+v5hIOXI4feo2db8BIsI3eF3S7be4eNpiRMSYMj8iLCOweuw3YrY0Ttyoc+xdb5DQf0YWSk0ClRyrmcPPWBGN6hf3eGE4vjqoGoEju3p9ic/NPGYlVkX4dxRDEkgFKCJlERNsPWNJUhNVGERFRFOIMXGylT9dXETGDhO7Ribfp1Vr0VQun7yHMFK4dIAdtWqrLpBvx6cfS9DYesEOF+akBJ1NrzEyOghzK4qrv4gkP0bWo3q0gDhvM1KHsS3w3xNNU0rpGfJAgDN+dD4iURn7hHkHk4Uc+k2fB6jTZ27OZnpzA7W7QDyWa3mY+uUrfzZMsJPCdA8QBDGoVgkadjTCFVWyQ8rrITp3opSuYv3uGAElM1Xmru0EjKKFJHUco9AOFv669RiEMyeoCQ7dIqBlUIdisNuhd36J88ArVQQHL0jjuJLFmzhLYBoVEmpF8gb/JqCiBSlJPkZZNHp90GExEsA+GpzA/A+UyvPgfXMJII2+0qXQtArePPRonkJKgH0NTBfW+xXdy+2QPGczsJ9lxdJpel07Q5lGy3L+jEIYCywoZHV3HUUMqFZPVMuSqPoV4AtOIODWyxsreGIZh4HkGB50ConeVRFagEuKhsH43zc5WCl/XkFHERCbH1t42upF9+OxNJKvUqjYz45NUlkPo+wjhobUhSoSoHZV5NcRsB/QNnT1dY6Sl07U9qnkVX1OY0PPE9TgtWrTqdRRNo2ZZyDCkTRuJRJgxOjLA1iSTj5m8GAQ8I3NMhXC/10FVBSoRkgiBIAgkSkpw0Kmxtqaxu6PRWq5gqBqmYfHNr3yPsBegKTrCE9y4cYNiscjCwgJf/vKX+b3f+72HT0538BR27GtEkQmogGRrp8Rf/EWAFfMektj79+9z//79h4qelJJGo0HasHjk0Dzx1HBzePr4CT7z3KdY3dggFY/h2Sb9wYB0Os358+eJ9g6I1jao93us7u3ieh5CQNyyeeXeMq1WiyNT0/Qdh8D3abfb5HLvRJOoCvLoIv0L51FqVewg4FgqRRgENCoVfNeldnBAzjBQGjso9iZW81vojQaKoiONMTpWHiUWw3yPoY/QNKIoep8atFMu4wcBhmWhCMHSxBTHMwXqxUNUOy22Wg1q7RaVSgXbtpmamuKLX/wihgHPPruMKlNo6nBb3G63cd06pdKj7O/vMzIyQrVaxXVdPM9jdHSUCxcu/NQ5oFeuXHmo1L4XlmVx9epVPvnMMwhVJXH4MObY2IeMkGBoYpTLDfNeP6iCeZ7HsWPHAMjn83z+859nd3eXTqdDsVj8B8sK/Rh/91hdXX1/vvA7ME2T+/fvc/ny5X+gmf1s+JiYfoy/Exw/HnD9uk4YivfFojgOXLo0zHCKYjEIAjBNwsXF9+dIvpPz9LNgZCSkUlE/wDMFYSgwEx8geUKA7yM6HYIfFbHzk+aiDH0OfxQMgx9bjqt5wftI6buIFNBdH++nIKamGZFOSyoVFVWF+cabOFoCKcGVBiNFDR0fx9GI9SvYMzmK0qfj21S6McLQ+yFhdn2SskVHL7A88uSQ6B8e/ge+B/2+4LvfNSiVVIg+y1TrDs/ar5BSekSWhX/mDP6F9zgfC41wYhx1e5/hjv4dp+MIdsopdouP03ZV0qbPIJvA3apRzO4ThBpSURg4sJI5xmryGMf29pHlAXGjjp8fYXY+wX8lTSYOh3xxWyFm99D1iI1ti5LjIqPhWIHok8roNPYNFLWHks0jB30i34PQAs8nvJpFnYVIDFCUYR7l9fIJvvv2JzgonuBKP0F0vIuYvMkTqbOs+ev06DIIBwSaSiE4zPrKHHccjYRxwOH8dZwgTjs7gZsrklJD/vnpv+RPvvPfEBEShiqWUicVH3D73hQN1+bXfuU/MZ9fx+sluXn9GXxDoS5SGJ5PWnQJQhMnsImAsXwHdyJO8s0a5csJjsRvoy8MaAcZUp5NLt3n9PG7nCj+H+x3jlGtTXLk5B0WprdwE2k0zWNqOkGpfQa/0ycRa3Ho6CpPb30fW+/T6Jq09gOENWD+uuCN6TwHTY9yS6NndLAyeUbDFsVPdpge9wlVATEFYwviygHdwQCpaCiqgtENkYkAJe7S6eTpVTQKbhWMActbq3zy3NFhP7amEPgRmhEhQ5vIuYmdlvhKhBIFhEGEl/RQoypC6AwcDVMFTWgE/QEx1UCRAseQ7Oz6NPLbxNZKmJ6Cnp8kMeZgBK9iaCFm7DB63UGGJuFhg/6OT7D5NuFoHFSDKXuAUFUsW2UidOn0Itp2nmatBVFE4bcMPKWDgkdTLBBIjXSqzpTIowmLQdcjrkU4tsTwy+yLLPO2YGyuhbJcYndvgBeGEA4wPB/P6eP7kqy3jLPaonNkl5R/iq1Oi3p1lsDT0YSJI0PqtVGq+jpPixGm9BFCJNLTCe+2qUiDKdHAc8aIi4jVcp+Bf4/8sUv0PJ0SGyjdx5hW4hT8+4xkmsyNR9zbFvTiEbob4Q8EIzlYOg7Lq4LiSJxm4NMRCptln3TM5vGxOGokqcfb9DSXgpEkMzFDv+EMnau1FqWdLpGwmCmOIgsSXYtwFJ/VALwwYiVyUAK4LOJMZpoYxjRCCGoVqB7M8tqdbdT9PZaKc2RTca4kSsRNBRVIWgE9zeFS4hgdM47jt/E8jd1Em4nHLL5cL6OFHY5lFc7kBK9ZOlYgeWRrgCVVBoZG0Pc4FYZEiQzTS6MkE8eZWFzCKJeHxneKQmJ2ljCf55AQ3Htwj4E/QNd0NG1AFDocf3ackbkGg6aPLGl8ypiiXF+nNfBQhEBVJEoo6Coq9mRAZPrcuDHA90sEbkAge9zZfJVQStBB4iFUgSWth7mbN27ceD8xNQ6jNn4LJXYNRe0SRTG++5Ikbmp4xg+3daZp0mw2abVapNNpFEUhn8+T1M0PqW6fefY51jY3eXv5NgPb4twj8ywuLg7LV2eKSNfl4LUrmKpGXwgSVoz7pT12ahXCMMTxfExDHyqbH8jdjATDIpl3nv2DXo/S5iZCUVAUBXfQp+9uMtHYIOHXuHAqYmWzQquV4q2336A9iGj7SWzb5nOf+xwAiaNHKX/nO4SDAX6rhdA02o6DEkWY+QIn8mNoisLq3j6KqpJLpnj83CPcqR1QadS5cuUK2WyWRCLBtWtbOE6e5547wLaTSKkSi3msrCT4t/+2TCYTDCNrwpBcLsf09DR/8Ad/8JFE80eh2Wx+pOmQqqqUt7fZ+8pXkJ4HqkoUhtgTExQuX0Z84MD8mWee4cUXX8SyrIff1+12OXXqFPF4/IfLrhD/2WZk/ueGWq32I/tJPc8jDMNfKMOrj0t5f474ZSkL+HlAUWBhIaBWU2g2FTwP0mnJr/yKS6EwVFFlNot+/fqH81F8n2B29meOvxkfl9y8aSDED0XQ/OYN4pbPmNEcuu2q6sOsynB6mmBxcXgC+VElMrEYwdLSR47187jmhuPzkbxWiKHpivHRJgbvhesKWi2FalVFSpjtLmOFAzwPxoqCjpmnkAvJZiOyGUny+Dja7i4uFotjNXIJl909jWFbmM8b6mNEukEUQSIhSaUktZqCYUju3tXp9xU0DVRV0LFHeUucZ/6/PAEXz32o7FlqadTWTW73TvL2rTROV6IELl9445O82b3Mpvkoq1smpufjp/p0VMGofgBCoBkGq906zUDD1TRskiwmVtFVl7xwyB3skl5KYCZVbMNjvTzJuG7xxnYRD51ACjQRkEwJkrpLpWPRbQmyyQArphP5LqHr4tzcQKlWCWWGKOERKpJvbX6KKwdPogUQn9SIzAIPdnWqQY3HptOciB/hePowx+NzGPURytc0NC2GiLrkjet0HVADl/jlgFzew4qbpBM9EmmN1b1ZTp1aY2zUo3GgUOknmZre4MTCCoO+IL7WZna7itizqHTS5JwGh9QSsm+iRhJND1CmJX4xjRJEtApxcnYNIxegahGOkkIXEjtok44HJDMhRx4vMzPyBs2BiuJ3KXkm2/Ui06MbnJm6yrWvLyLEVcJaibV2xGZbsJKpsTkVciftIWWXB6kUr++PMlsAMSZpne3zG88doOpieO8MwOnFhxX57gE79SfRIoteJ4WJijT6jNW+w6L4CqeTy1x0m5zo7mO7PQrpcbyUTjBQOToZoXqvEfaquGloFxQCGyBBXJ0gDDVKpRE8L0My1yGxHxA1eliaStJQuL8s2b2/TTq5ieh4GL7HzESNRKxNKWHTV9fIjtbQD9kEY+B599i7vYyqBwSNGLVjebJ7bfR+iKJoWJaGLBhcz0yyvJrDvRxiTUmkZpKc0SiMdMlnSuiORM8o4OVwdEjn8iRiGQxFpz9IMpK02GzcoaS73FsvkgldgsjAlQpW1mQhfZNicpMEOp2jGf7T9nW2thZI6Aae1FhtNfnSrSor+3mM0S2eFot0/BjtKCCodrm5uomfM6kmmzSlSl3GMAPoDAbMzY3wyWPLNMzrZJL7WKKHseJz+tEBqgxw/QihQtJRECKi11QpFnTWtjXOXJbckz0CzcM2AxLxgEY/pOeYrBltVlsKWxUPL1DZ2OpgWgHjOYORsST/xZmTPNisYJg6aF36ik+joxE6cDRlkB8YHHgh6VgSLf8sla1bBN1dNLeC0yrjBS75sVN4xjiqn6BltXnksSrnTyqcm9B54ldqPPZ4yOKiiTtfRaY0ThzXSOUGMHA56IWoRJhNQXHZgRiHq9oAACAASURBVK5GpGigCQxLZzyyuXAiz3UxyqGZRXwpeVAusxuGLD33HMcvXeLW7dtMTU3hRz5Vv4oqPNKZgCMXczz9T07hldcJ/ZBjxwTGZoLZdBrCCN+TJDBQs5N4Uz0SkwH1MA39DL7v4/dc7sfvEbQlmMC7IpkLkRlhYtLv9zl8+DDPPfccRBFKEKK7PhKLyDsEzlEid46Xr7wFCZvoA0TGcRxa7RZqXqUruxjCIJARadVgbm7ufSpLNp3myOIx5k8vMTIyMiz7jCKCwYBmvcp3brxFfnKS/UaDv3zt+9zb2Xqo3A08l6fPPkKxOPl+FTGKkJpCYBoEho66vMz+5iaKqj78rKodoBguaqqJPZknEbPY3G7y51+7g6HZWFqEhw1C5eDggEuXLqEPBpRfeon+zg5CVZGOg6hUqAYBxVOnSGoGfhDQaDRR3yHA2WwWS9P53htXEEIQi8VIJpOsra1Rr0/w3e/aFIvjDAYpXn31HC+8AIlEElVVH5pQBUHAZz7zGQ4dOvQT1+X3Yn19nV6v9yGlMwwC5MYG89PTKLqOomkouk7Q7RIOBtgfMH+MxWIsLCzQ6XTwPA/btrl8+TJnzpz5W83n7wvS86i+9hq1118n6PWwxsY+RLZ/HKIwHCrjfwclyL8se/Yoirh79+5HklPDMP5R3hsfl/J+jB8LpVQaZl56HnJsDO/cOfhbnAT+KFgWfPrT7o99g/fJT2J+5ztDJ15dh16PKJcbGg79jEgmI/7ZP+vzN39jUKkMTYjGj8WZHT2M28ig37qFUikRaTYkkngXLuB87nPYL7ww7HN978lSv4/35JM/1bj37ql85SsWvi+4eNHl6af9n8q3KVQV1DAEIXBcwZXrFvsHGpoIOXoWjpz8yd9x/rxPva4QBLC/r7DZWWSkvc6RJYMzZwO2r74TlxJJZCwO3R7trkKtH1LddknMQC4raTciookxCOL47pC767rgyhWDIIBUSsXz4Nw5n3f3M0N1UXDtZpwnnviwutzsxPjK138L2dnGTB7hdhuuvTnG2VNlzPGzRCpMz0jubCWY8vskcj2EiBFIyV6/TMNzCDyDXLvO7MEWiSMppk/0GQwsag/yBF9qsf3kaRK2xxOnX2PjtX+CG5kY+Bh6QCYu0VTYLJmEwmFgaOy1kkxn2limRX3XxYoEGlWMuRpSU3F9k7f9Iol0A68ew0GQEzVqWpLy+gTmmSaRGpLU4kRI/qR/mVMjV8k0tyAqoxt9pNDYnjvKqNEnwT6ejDEI00ymd3j2sXEShSadXpKNapFjx97g2NF7aK7H2ZcPcPwOqbEe49Q5uW9QDgrsJefoqBm0SDJ2pIYYUVERoEJC6THwYhiRh2l6+F2BG4+jhy3QYgwaJqPeXWJ0MU2PgWJihQV0PcD2e+hmQP3IFSb2O5SdEUzdYfnwPn1rMOzp1Exc3WN5VOVznxwwlu+jjvoUlRZON8IwwECgBhGaFkCkkYgahK9/FXczTzLIcV2ZYeL0y6jWJjIrOVZu0VJcQl1Blu9TWVsmyhR4ORdw5nSJXkESxuFByeZYwiOGBN5GSVq09p+jtDOLHdNxEkfYC3qMeCV0z2e10qXU8ZnIFajZDXQiIt1HjflYwmBUb5OLR/T9NUy5ialJFNdCRFlCdUii7Yk+D37nCFq5w5SbI/M757jl70K/QukvMyQWmvRyZdKpBdquS14X6KaGkmoTBglUu8BIKkAOPKIowkgmmZt6CuFfZ/rkOonzW8yPr3L/xmlu3zyOLn0m3Tt84sh9uo5K0vOoeQFfuXKIO5V1iGxEaKBrAYawUQ2dUvsib8wesNPaIwwj9vwy6+kaSstgxrAZSW5AcoeWm+N8AX7lZIQji4iozU5QQQ9UJh2HbskgPdKnmFPYLkuyGVAVhcaYpB64xNWAG0Jh0QwIAoWGFLR9wYTaIYfDF64HBIZkLJlid61CowuHwgKxqQFaYGBqGk9eGufWnRa7PQtD9Am7kpMiTqo/3IQkHY31mkVivMTCeIHVLRNVSk4WY7Q7qyyvfYPSYJ50IsE//Z0aY/08eaaYO3MTN3Dpduv0/AT7+yG2rbFV3UPFQ5EKCVunERb5zPkjKFWNSrJB9f4DDEeSkDp6yiSesPn9xz7LX6+sc+feXeLxOCePHebBm39FZ/sV0EzW/X3GT46zcHSBYqGEZgUUJzVE7yZaGCIjnwlNRb/YpH/TYimd5HyUpKMv0p6eZKK7zzfuvkqKDJVeE7/hUY0O8HdCqAIRaDYoeQiUCMWPMKKIwPM4c+YMG2vrjKBSSKXpSYcHBw9olGscOAMuPvIUUfzDpBQgPhrneuM6++4+uqYjpCDv5xnPP0k+lxvGQAkBEiJV4MaHa7+QErPn4KxtIBsNrMCntb3F8t4uTirFWLFItdnE932EEGQyGdqR5Plnn3tYGSNkRCTgQHP5zso3KQ/KFBJ7zB2sMJqfxtQtkCGK30SenABvg8AJ0CyNVtPh+JxFpQlEKsWUhZ6aIfI8vvhv/g2/OjcHQqBaFl6jQWxqion5eeyXX6a8soqbygDQarVJJZOMj48TAZaq0e/3AR6WPL/bd9ntavy7fweJRJpabQ1FURgbG+Pw4cM4joOqqpimyfb2No899thPXpjfg0ceeYQvfelL78sXBWju7/PUOy7B74Wi6wy2t+H8+Q+9lkql+NSnPvW3Gv8fAr3tbdb/9E+JggDFNGndukXpW9/iyL/8l5jvRtz9CPi9HvUrV/DqdaIoQk+lyD7yCFY+//c0+18cTE1NkU6ncV33fcpov9/n8Q8kSvwi4GPF9OeIX8TTF/2NN7C+/W1EECB8H6VcRr91i2B+Ht7bN/h3BJnP4584AVISWRbehQv4ly+/nxz+DDAMOHw45NSpgKWlgNRsEuP2bRSjiVLoEx2KwaRFsDhD/7/+70HTCY4eRTk4QGk0EJ5HZJp4Tz2FfI/5wAfx7jX/4z+O8e//fZx+X6HbVbh6dZhj+sQT7k8kp1JV0J2AviP4f76UolpXiaTADVTubtnU6gqHD4c/LLX1GhiNVxBeBWmMg1Ae5qIuLgaMjkpOPhnnmZkHTGc7qIaGqQXcL+UwK7sQSvZvNanVNJ7wXiItWmyVE+TsLpnpGDcX/ikjkwqGAb4f0WopJJMRS0sB7baClIKDA4Vi8Yf9sqo6VG1PnPhwXuiXv2wjPR3NEyh4dKMk27VJ6v5RJqd+eJ2TaUHTt6kWv0XkbfPgbp1aAxRFoGghi5sbjBUCpk+dxA9r7O2pKDEbzXNABS+psVeapnQnTzxro4QuipSkUgLbgpsrKrtVjXNnm8SkixuaZGM+1XKI0tohkbo2PCCJVErdEW5VF7HNFlqmg55pE1P2SERb7HY6jE/pxFMePTlg1xuwvHyIQWESN5fAN1S0WYfmkQm8ZJp8XpBPlVEij0iNcWhe4alPdDgzt8/ZZ12UcItjp2/iORqjf1MmZTSYnqpgGyGJVA/dVsgID7edwDESiHSCVKqBZUj0wMebt2ilC9hql9DX0FMhvXYSx/XJagGJqE9KaaF5XfRYiK742JHDdnOGLkl6A5uo3+bVlsd4LyDrupQTAZVCC0NKfEMifJVSv0A7Ncva/iy1G89g1scpavfJaAH160kwQ+x4iI2L3zSJf7sPnTTr95YYOC4z5p9zhA2amYiRVonIc9BjCqYCIhT0vDZFo8vv/Lpk11SpheD2JM59wdtvxFAaEe5KDPd+l5vXXA78A7yMR1IfJxot4hTPIUZNvt3Zwlc8cvstOqlhrmkyHXJoMmQs5TOfldiGgFAQKyhEugDfolGP09jPIV0dJdumFrkY6RTxsQkmP3GIOxurGDGV4qHrFGK7ZHIDPF9iaBkMLULTNYgi/K5BtzWJbQ8Ia03apYCtjWk26pNUkru4GYPZsQoMypwu3mXp9KuctAocOz6LYh8lXZiFsXn+7/46337pKbzkKkogMNWIAINWR9DuuPSCDrExj3QxyVa5Sc8N2JNNFEuglwX97oCcLUjpHc6c7nDy6CVuB8tMpzusyg4ChVTNoe26pAQ4nsZp3SSWgFVVQmwY4XJFCSjLkOMCAn9oWhYKgSoEjWZIrRrhjIEqderNCFDpdQWJlMJS2iDupzBjCrMzFguPxnh5a8BcqIENAz2k5Ut6voWh5xErXaoizmg+y9FJk0FnwLVVB+gh3TpHUg1SYZ/ado254zuMzRsk4pJMNqIxaPHVGy1KNZ9UEgZdBUTIEeMCuWiJdCNBpqsQTxTIjy4QbO8iLDAujJOxjqPMLvCgUWducYGpdJti/vsYqVvcCN9kR7vFZnmXPadLz+xhplscm9OJ0QSg1484okcsJS2+0epzdeCxmmxxXXNZwSeTGkWREf6dPpW1Pq4T0qrVGCgeUoswfMgmQXEhnoDxjMa8Z2IOFC6OjTNiWfiBpLKzx8uvf49Xr/0N26tb9Pp9bF3hT775BczAwjKt921Mfenz5t6bPP0bT2OoBtKXGLpBspjk4vnHyeaKRO9U5vi2gRcbrvmq62O3ejiVCk65jNA1VE2j1evT7HZR+30WL1zg2PHjjI6OMjY2xh/+4R/ym7/9OaKY9Q4hFfimTtOQvLD8BSLfRVdNQtvG6wzo9qpkjQxKwoIzGlE2iRWWsUbjKLrKN7+3jaYKYoZOTA2p9lRavZCc4yDDkKVMBkXX8Xs93EqFoNWirCh4YUjcMFFicaIIgsBHVVWmp4YGMGEkeePuHXRd5+jRowghcByHarXKxsYGqqqiaRr7+/scHBxw5swZ4vE4uq4/jGiRUv7UTrzvIpFIYBgGGxsbeJ6H7/uEYcjpqSmKicRHKoKh65JaXPyZ1EK/3cbvdFA07aNjaH5OCIKAV199le9///vcuHGDvb09xsfHMU2TlT/6IxACxTCGplG6DlFEa3mZwo8hTNLzKH3jG0RhOFSRdR2kpPvgAbHpadSf0970F3HP/lEQQnDkyBH29/dpNpu4rouiKJw/f56zZ8/+Q0/vI/GxK+/fE37RbnIxGGB9/etEicTD3g/hOGgPHmB+73tD19owHDrj/l3aTes6cmqKcG6OKJP5uY/V6wm6Sgo7u4+x8RaiHwAqsjhC+MQUSlgljB8FXSdcWBj2SJ4+TXD+/NCl98cgmUzy5ps9/uzP4qTT0cOpmyZ0OoJaTeHRU2XMxiu45Xu88j2FqzcKrK6Z2LYknR7mxgW6yssvm/S6Cro6JKsdqfNgZUhwV1c1Dg4U5rw/plD7P9G7NzGbV7Bq3yTQx5H2sHxWUyN69/fpXN8hGh8hNWGjdDqMxrtMGgdU/Sz73TRhAOemSoxO6Rhul9L8Y9xKXeLQP7/AxcsRZ84EPP64x+6uxvz8MHPVsqBSUQiCocNwOi15byuRbUccO/Z+Ytqshlz/sxUSOyuojQ6i7FIvx6lq03iBxthYOKyejiKEdAh8hUPTCb5wpc9YWEPDpTfQ0BXBpXCTjphHmnk2NsaIxcpougMJEyVtUjr0NMtrn2XvlW3ubWmodnwYLSPh+j2NclNFqD7zp7ZAREjXZzRZ5mDvFdTJdbSFLOp2CxFIQlVwc/8IdqKFPz7ORuUQO/VJDM0ma3R5dPE1OmYeV5GEhs79u3kyVgJD9egnE8iERTLewQttxvN9MgXIxmuMFgLswiQoKl76CfzoGaLbqziyzs7eLBPrexSnN/F9HV/q6JrEG5iYRpftTJx4q4eie6hCkjGrRFMa1dMnGagFJs0mYWDR7Waw4hrVVp4ULWJRnyjUEP0ZlHgS1bKQoUGpm2Ggm6g2fPeVPAeyT9ewWao3WZ/ooNshkSYZRBFBL0sjOYGfVgnDAdOdaVrtQ5Rrhzh75BpS0WjcjpOcEST7EfaVkN5BnoPNy4wk+7jZ29ixPlNOie7UgHTLHzpby5BYTCEfU3nqdIbD08ew/VnM4qMEPRVlv0VjB7J1k1F0EooyJFQxC1m3SSQGjE/OoEpIyCp9YXNjfZl0qUna86mLLrG44NBUgGFLLBU0AU4UoWoqoq/hRRqt1REmtFkOHgiCzS30fJ9kO0Ct9AhGmyQWptjZ28OijNtvAQ6JhMROdNETB5gxgZqICDMVOmvn8FshUXWFnZ2Qjd0xNnYThINb5MYrYAdUOhOYI1uELcHkxEWyk4dw6yFh36PnmKRzMxyeP8NrV1yEFyNMljCkSq8UQtDCDXR0zSUcrFHa76E7dfR+j4Hn4Ng+RkugOC6KCDE0lZnFNFVnDF/pID3B4ZjCtnTp91wG2x7FUTjUNFmYDdgyIrJpDcUQfO2ewn4kiJuCV+oRWSTZlEAYkmt9SVDROJWB7UjF1SJCTxJ4FugS2Yxzon8MM+ajioiBZ7PRmudrW6tMtWP4usBDIZI67dBH7cRJdB3MUYMnz50h6Nzkm1dvU+n0GAzACBTGi++46aoK3X2deCwiMx2xs+dw7c0uX78b4A48GlWfvXLIiJFnQX2EthwwGekkOnKoCipJ9MkRus0mKiaR3eQ1s0tkGkShx8Lhb9McVNl0++yGPpYScfQw+G6Ss8eeRs00yWsH+L0umnSZVwWfsJK83A7Y7UlMX0OQQARxOskYfRlwrDJGrVRnrdFECw0GvQ6qpSDVgNkpGDRBt0AbqGgxhbQUFBIZHj99gYSiMJnOs92o0+rUMLs+J8anKNpZ4qqBYwz46/VX6LgdFKmQslP4vs9KZYWps1PkRnNkMhkmJiZImAla2y1WtlY4N3sOPR4jNDQiVcHou1h9B6Pvo/kBYb1BO+wTRD660JgaHWVtd49mr4uhKJjZLJlMhs9//vMsvusRIQShoT1sQbm+9n0a/Sr13QZrb65ysF0m7oYEUyN0RzPkZk+g2iVAQxMDklMWQlG4dqvK7n6Lfg8Egu12itBxoNlkdGSExWSS9ttv45ZKSNfFb7XwNjcRuo6YGGfx2BLJdIrx8XG63S6apmMaBnutBlsHJY4fP/6wRzSdTnP9+nUcx2FychIYZo0mEgl836f4nvYUKSXZbJaFH+VJ8WMwNjbGqVOnyOfzHD58mKeffprxsTF6a2vvi4l5F4quk3qv98ZPAb/bpfzSS7Ru36a3tkZnZYVwMMCamPi5x4ZIKXnxxRfZ399Hfac0u9frcfPmTSZNk/Ybb6B+oPpOCIHfapE9dw71A73I76K1vIxXr6N8gFALVcVvt4l/hML8s+AXbc/+46BpGouLi5w8eZKlpSUuXLjw8F7+x4iPS3k/xkdCW14eKkTvQLTbw57PoVSGcF3M119HOTjAe/75f8CZ/mzodATf+IZJtaoQ75R4Nn6F/NgYuecneC+j0gabeEGXSHunxEbTfmR2qpTDbNLVVQ1dh09/Gr7yFZtU6ofuw7YWkDICiENttUZs/z9Sa07xwtfPYaiSg1qJ7c40f/XVJGfPBXz+830ODgy++oOhccHIiCSfl7z5loGqQjwe0WgI3L0bvHAzx3/72QIJ2yF655md3P7faST+V8r7Nt/4X9YI+y6mLVi+KkhZNr/xP3wSY26C4he/yOeKO1y5ekBUeHeBEjiJAigK4USRt294jGf6YJqsr6u8+aaOlAJNixgbk0xMhCwvq6hqRK8nyGaHv7vXg0uX/A//Yd/6PvTHiOI/XJwyThexUyIqThEEAnWwgersIiIfc6CRXD1gqv2bXBvUmEq/zeF0B+lm2QgsLM0mLEUMBhqDwePoegeTFrdaz3J/8yLRfpXd9DmyrWWW3xLU3RSqpXJkXhDJkEceeZvx4jpCk+QzLZz8GvrYDO2YQWZzHX80gxnVydtdUr0BO/2TLN+bQ1Mkui64tZUhG7fJu1/m//3WM4SKYGq2R2HUI+aOEilJkC4HzmlM3Sel7TCWaiBCCKwFelOfR5rjSGMEZXef2Nf+jOOK4GoYp6Dvk4vvEoaCMFIQQCQV/NBH0wPGTzT413v/I5807nMm9xbl4wUyZyVdL00mYyKUGFpNZefmZepek3xxhwNnAuGr5MbmEL4D6wbhKHjxNJP5JD9YmeH+/SO0TYeYvoYaKNwaTTIe7tGPXKwRSasTUPFGaRYsgoGBHWpoZgJEyE7pCA/Wn+Ls9E10M0XvfoHUEQttZYO4O8W5sXUEIYNUExIdxAOXkUY4dMcGFFXFkRG2AkKmwOsSTTYozHZJ3/cZdOKkGi0cTccWENOymPERkkJBqkvU97K81S6zu/86iozxaOBx+s1bpDMD5i40SeZCgpGAvCrpNCJMFYJI0PQFlhEiXJ/2nkX3poc74RGulLENH6sWMO70iBk+wYrKg1f+Al8ZsFG1qO+P8filPgMpSKc8ZKSgJutIKjj/H3tvFiPZdZ95/s65a+wRGbnvS2Vl1koWi1VkcTNtkVrcNu2Wum1L3V7gxgAGBujGzMsAM2Og4ZcBPLCB6fFDe2Z6MA1Z7oZkidooURYlmXsViyzWmrVk5b5nRsYed7/3zEOSJdGktrHUGLn5AfkSGffEiROZce53/t//+3ayeLHO9lqHrrLJ/P4EQT0HSlHscQhWQ+wSBDINmQLLmRbl0jTS8FC2TcPQOTZQJhzOMKSbPPXIa3zxK59mJOjmdOF58j0Nok6Bu8tdbBQWyQqd7Pw8vXaWfS2ibipCIvYzbXQhiJsx7eEZVosBjriCVJLByCa/280vd6UodCB9o0HwaoD2RA7vSA1fKhoNg7dWUlSTCIVDnCRIC64GOos7GugJoSYZDw0acYtSI01/Xx5tqMqthQb9YYaBjqQR62yuHCGOm3z0yUla2RUmxzy6AoOG0tBJYaYEplKIJMPRiW6670+T1Z/nhaUaXhRSSIHuK/Y9xRu3Yp7pyiB1nVDB3Bsx5ak8Vy+10BKJnkQExKQigd1QjJbHId1mVBPk7JBw0MS7GiNTYGS7SISglN1EP1OiUX0LkRokJ+ZpdCq4TY+lOEBKjYQE5QsGezbY3Nzk/qNljqRvc64vh6FJiGHnrsti1EA1pwhCiTISMmVF9xi8dXePldUWQb3OlG2zsrtLWkGgBF026CaURsGtgupAOgenpoo8NXWctbXMwSFOo4FKXLoCODJ7nFgl1NpN2rseXZHFI0NHqZkKpkH3dSZKE5TLZVq0aNVabC9ts3Fn4yCnM5Mi8AP+qvpXnD59mrNnz6J7AXoQHciBVcSuv0cl2ESakoX2GgY6M8Yov/ORp3h7/ibbnsfwffdx7MgRVL1Oe3ERe2AA/d29VSnstsuOt8fc+Xlqew2s1EGl62alzchuA/OECWgkcR/KX0d/4BRCX0GELk+cKfPm25tk02mW60UUAh0IooiRcpnO8jKx5yHe3auVQiUJ1sYGbxaLrLkXmOzpI0wSstksh8bHiXSJPTXKwx99imeffZYgCDBNk3a7TalUYnp6GiklhmFw8uRJrly5guu6eJ53j8S6rvsPkkeapsmhH0wc6O3FKBQOemR/gIjFnkfxp6x2qSRh93vfO/Bn+AEjJGdlBc2yKBz/CfqCPgDtdpvV1VW6u7vp/YEIv7t371Kv19/Tp/zu+l07f56+H0aEk4TIcTBLpQ/8dbC//4FEXUhJ9I+ESP68YFnWD0RL/WLiQ2L6XzP+XgaYfvfu++S7KpXCWFggfPBB1A/5Evn/I+IYvvjFFFIo7l95jnJzjtzhXdp3LTL7G6SPHVRogQOpib9NrP/oeJoogmefTVGrSdJpRZLAZz8Li4vfdwDuTvlkjJg4EQgSSkYVMznOSxeHSFsx1+4W2a/bB4TKNHjzosHNmzkmJmJc90CSu7AguXxZkMsp9AN1IAC6cxdpabx2bZaPnr2MUnBrdZjrCwN45+9w7bUxJlI+VvZgMpkMBInNi3+xzNP/ax/CdcEwUMnfM1/QLVLtClO3v8XI1QUyyz4LnX6+U38SyNGfW6HLXmFnu5sok+foWMTV+SHy+YN1dl3BzEzI1FSM60KnI8lmE2zh01u7i2m+N4s2bSeUtTq7YS9ZuYHmroC06PgW5dwupUyNx4e+xLcXf59Wa4Ir7+xDQdzLR4KXUXYKw1REoSAMc6xU+7jccxrLjpFxyEi/xi13hvG+ZXr2q9Q6ErNh0X9U56lfeptKNMBgoUpo71HLLDE6HrLz71oEmoNuhpiNBGXG3HfiFl/53D9ByINKtOoocnabwcImb8yd4pC6S0MdwVkaI1tosZLsYwUlRrQdwkDjVvsh/sm5DCpjARFx1++RpEdIDB2SBPuFFyCdRgIPRhOsd98l2+cBAk1PkECnkUJIhQwhHNFpZTLUnhzg5VaZ6FLMWPUtTvza87w690t8vXGOibiMsR1Sd4pcnX8KI0jzByf/L4zaFgifWCnclTE60SSGbuLXJ6js9GEaGn5uAnPD44HgJkODipfyLqlmDOMZ9oxphlSb9YpFl1MkIQYlyaRiVmsnKdjdlMwIz+/gdZ1AzNTR1RJ6UIeiiVGtse22yb3z9eIVBZkdBZqOllgUCyYi6UcFW+Cl4D80MIIAM/TJNhTbOYlqpbEGevFiuL3Zz+cunuPq6jixsInZ4lG+wqHUt+iejsifdYl2BL3ViLqh4Y+GOC40atDbp7AsgZBQ8wRv31FsZ6uE0qP+uMf0muCp8z6F8QS9R6JWAk6sLbH45EN89suPoxKTrd1VPv0vv0l1N8ayLPKaJPbTVG/Okjv2tyQ3yqztCcycRVdPQmVt9MDMjJDObojqtSjl0vizgsQxaUcxfjHLsVIeYyCHmFwhld7ik5+4hZX/Swq3QtodgyDoQaX2OXvqa8yvtTCXIEzr7NstYk1x2MvRFbl0koC9gkZzKI06YnMjTBizAzoi4prepF+kmd7JcLSiuFIsUPUrlL+Rwx2FC4UEwoBa1qIrlbATBAQILAfMlonpCjRTkNITiobOSttgZ1fxyakGQznJA8OSi9cVRrFJJ1wk0eAjH+3j7AMwv7LM/ZMptDWdgqYIPEBJekQGX5e42hj92Tf43vU22ZSJZmSYW64wlraII4ETaKzsNYLLKgAAIABJREFUhkwParTqMZmMxl9/bpc33nY4PKbRv6+xU47RF3X0LNRDhSEEI4YgQ0TDsVjXDMxmnYw0ELkq0akszTPdqIvzrF9POHm0ima0iBNBmChIIgxNxw8jLKtD4HuYrsN2J8/cTp1Ixsg4QcoAbz8BtcsuOWTGZmQkh2Y2sFSddm6MOJ/HDgJ6hMBuNmgHu3SnUiTKRzMSin0aIi15+HiRPzj6NJsbmwghiOMYp92iy4DMwDB+ELC4s0OURORSGS7fmGMvcGgOBLxdfZt2tc0AA5QyJXzpk9WzOA2HvbU99nf2iYkxTINNc5PLly8zMTHBqJm+5w6/6+7S8ZtITefOwhI31q/TjPa5lEvxuw89wNigybHpj6Hncux/+9skYYiQEvXWW6RHRymfPYsWxZDA/lqN6l4dO/X9w0m/nGHBCcjVHRgQJMYJes6MkxvZI2QG4TSJ53WGJlO8eGmHMIoBl0hKHpqYIGOaRJ538D/1bmSMlIgkYdn32b5xg63JSdZr+0z19hNV9jB6y4yfm2GtsUDFr/Cp3/4Ut67fYm9vD8MwOH369Pv6P0+fPs3bb79Np9MhSRK6urr4yEc+Qvln3OfY9+ST7L/xBt7OzoHBlW1TPHmS3NTUTzWOu7lJ4vvvq0RKy6K9tETh+HGc0OHS7iXqfp2CWeB032nSRvoDx4vjmD/+4z/m4sWLhGGIlJKxsTH+7M/+jK6uLhYWFrA1jc7yMkkYomUypHp70XSd3Tim/4dIiKVlYf+I7FdpWahm8wMlzOIDCOuH+MeFD4npf8WIZmcxL15EmeaBlLLTOaiWKvUeea+ybYxbtwjOnfv5TiiJQEWg/cONl+7c0QlDwVj1CoXqCr5dAiSaIbi8Mcr+0iDh+CiTMy7Hxtoo/cdnfF24YNJqCdLpA6YoJeTzByZPW1vQ3x3fI6UAUrXpL7dQUYq0ZrHRht2aTcpMgBhUgu8p6g0d2z5wLa7VDno7Wy1BkkBPjyIIDuJmZMtHajqVegGl4KuvPMTqTg+ZlM/unuDmos2cmOH44A4jpTaGlqBJxcZ+ivjuKkkuh/Q88vmEel3eI9Na4FJ2buOILOXjJoFt8uqNMcrhTT45+VXeXB1ndatA0b6G4Xpkaz7/09ErVP37+Nr67zIyIXFdwV//tU27rRHHCk0TzPS6fFxF3De0w+X1PlJmfG8tp8r7DB+qoTpbtKMsKSviweNbWGoPz9PoLtTpMleoBuP3rpnPPcBMqspZ+wqaVCwtSFQ6xduFJ+lO38FQVVS6TTkbUUwNM7c6xMmuC+x3GmSjJr/yyHnW3IdAq9IuvITVVSVtRNhfvcjwSJEg6eC5KdqWge8V+M6Xu0lZ/ye1tk4YZRgp93FooJ9cymdla4DuYAnD2uHSSJuq73DsVJp67T6a2zk+MRjxyJFl0qmYRBskyj+CsnqxHB+3oCM3NhC+f0+xoFtppqJzaCMZ4rkv0tFTJK4A3UEPDFrDafa8Mkk6y2zzBse3L9LQqwxGO/BFWNiaJJgM2DZaTE79a3Sp0+X72Itvkt/OohpjJGkdZWiEkSQwLJqBRU5PMzW8izBCxo1+hqovMXG0ja3pzPQLjLzOoKGId9d5qWmTN2O69k8hNItCIQI8RoZv09pLk+sZQnWdxel+mPzE/4i+G4MsgUrojhM22m32yj7uaA7pCux9E8NLGByQ2KUeRMdD9Y8j165D2oGUAFdDGGWK2ybeyDDffOMcF9Zn2O0UeHv5OFnbJ512iAKNu82HKRk+z5z8IrauU8852L5Ea0csJgJGJc9twAPthDEXEkcnbEu+mko4PBxTaEgKGsw2PG4eArYhtSgQhs5m5zDBlSFGhiP2W3D55VHarX/F7336PzEz3GLn5gCd9VGKJ6/y1tUGftVENzI0mgmddkB5cJ36bol0fhMVGSShoqMa5KcMRvUSzs4oUU8alZZoA6+jiRZaLFHs8M8+coPOpM3zn58G0UDX2iSx4HiPYqsG10yXSCboQuGbkI8sHCtGK6SoDhgIJ0NP4wxR3w30zDwmEbvS5ciu4k5YZF9sUU7nqFrbtOd6MM81UbpHKRNxf79kWiXsVySXdxOysaLtK1wXjm2luBtLzncsDo95mLEFKkcx6/JbT+sM9ozjxQmDuRzpvpPEjmTSmKSYnaB5fI2FS1uEWkLsZwgjjXbzDN+sfZxVfZhq7UsU0hX2Wz5r1YhGWzHbk0HXLG4vCab6BaWi4M68z//ypQodR/HrZ/L0WymO3CiigoTAkKSXdjj0qeN4mSadeZNKI+BCnKBrGo3mLvtdLQpbMU96JmPTBvNvtGm0NIb6Y2xbo+grOkqRNiFJFEGQYGk+W/s+zh1Fw82h6yGx4+NqPtdKIXFvDT/dwTIka401egomOd1mbOYYD4z1cn5ujmFd5425OfK7TcLegHTKRJc6cawYKaV5yj6M7wVoWookSRBCsLC8wInjJ8lmMtzd3iFJElKmTaVZp9JqEuYSOqtNGnEbzdQIUgEL2wt0Kh2mJqbwaz6VnQpex0Oh6Ep1HYy7sMCf//mf87/9D//zPXf4RW+DEVni5atzLK/dxrAlSSzYr7r8xXPP84f/tJf08MfZfO4VNNt+T3XL29igeesWXZOHEEIhK5JIj0hUjBTfJyrtnIbbN8ngr/7qvcccJ0CINooUW+oig7NL/NZ0zNLS0j1SlN3bQ9RqB+kzqRQqCA56EU0TpWnMVSrYhoELdHyPyyuLaLrG3KUNjvTcPZA5JyFX967yxOEnePjhh4miiC9/+ct4nveePd+yLM6cOcNnPvMZhBD3ekx/1pCmSfGhh3jzjTdYWV5GxDGjlQoPjo+/L9bnRyGo1ZA/JDYk9n02mut8ffk5TM1EJILzr57n843P84cf/0NOHTr1vmv+5E/+hPPnz5NOp+9V4TY2NvijP/ojPv/5zxPX69SuXUMzjIOWpHYbf2eH/JEjmJkMuZkZWnfuvIcoR45D+ezZHzpPgPzsLNurq++p+gJErkv5p+zt/RC/ePiwx/RniF84vbppIoIAub4OloW2tnZARqOI8PjxA5IKEEXEg4MkPy+9ehJgVb6NVX8Js/k2RvsWShok5g8/UftxuHZNx/Mk4/N/d/CelMSyG7yyeow3145ip3U8B+7WRri7PsDU6Sl+nL/AK69Y73uObdtksw7LyzpFO8AyFCCIE4ijgD985joZK8NmJcvF2xmiUHuH7yuUlmFnTyeVOTD4OX48ZHv7IIzedQWue1CZ7e2NGRpK0Jy7CBWTsn1SVsAbN6fJpn1U7HN+/iyra0WCRKfqpNnrpDG0mLwd0HJNyKTYzk3SvX2Lcq9ka1NSsCMyeoD0XIJI0rB6ud6e5KW7Y/zd/DiTIxdp1HTWnEn6Mwvk4zrZpImQIbfWZzlpPE9+dZHv7TzKhTdTrK7qmCb09SkMAyp1k+LiVe6fbaNrCbutNG5oYOkRD/Yv84n/fpizY9/ixJEaZ05sMtzfot2RtFsCyxbUGjZbzTHeSSzANBXlMyOc+oNp0lM9rJVP8pJ8kqR1h5TYQ6mIotbClD621SSfsfjNB9a5r+dbnORVzAcc7PYype4b2KMNTLNFd5Cgn/cQtonUs6RSNWxb8tyFEi/caSDSaWwrIWO1cf01fD+hZHfhe2kqNxXf3O5jc3EYZ+cw1Uof9z+2Qs+oT6HH5Gj3L4M5S8AJ1tcL3LprUdmRrDctBtQWxuoKGAZGqQc9Wzg4HTYHERMFgpYixifWI2pHNJwTXfz1i/8crQPnVl/HKm9ilNfJ5hISXaOyOoxjZvD0gFYUMG1e4WjlLyjoV5iKY0zPR2sdHAwYluSrV8/yvYXj6NsB+lIdZ7mL1FqJpwo1Dg/F9Azv8WBPhkMZk3onwmoF9AQ97C89iLQjTOoEicTzdY53rRF2suSdW4TVkLlvVOk9s4690kIohWptkokSKp0O//dQxKtTMdeKPkvjNsNH+xkvjRGSJ/f4EGKvjUgEodxEWL0IYwChuwhT59lbz7Alh6k7goWdKTpBBjey0DTFkbFL3PfERcYfXGT84TtULAfX1hAFjbsZDaeowIBIKOY2FY4S9ASCORd2LYVlZUl8yfiSg+wodARhPqZUkThBmhVnFsur8XJqEF1qDOgWQ90he8vjDDjLqJZGttRiNdpEJBDtaSRKIjRBGNnEqkGnIbG0AHPWwMo1EX2baGj0pWewmvfjSIVeuIsZrKLtech6DXv1OonQibUEp92mWY2RQqCEJNuWiC4fORKQEBNGEukrmtWIQCaE5hSd+mdIbT1OvD9G6/Yxou0cgmU2pc1SaNG1t0lF99noxKx7MTudCnutiE6vx6MPhJTyEWYEtBOOFBVvvKpQHZ2ZVhbdM8lIGzcHI4UZHj/yGN35I/SXDtMzYFJ100z030/HH2F1bxQn9um2Myy2N0gXMhQyJXZ217h7J8PV5Y8T6900lYPTlizsZGgGBc4d6WZ+Y5f9tksriCjZFrrQ0UU3C9sBf/HcDo6v+KXDfRSzNsWqgQUQC3wvIvID8qk8ttlLXhjM1Xxc2wQhuHDzdYYPKzxLp14PGShLDo1Oc+NWk2PjdZJA0WdAOyPoshWaLtjYSTE5dYbV5VWOiUGMlE/QcIhDRSXl8ndeTFMHlVKcGI44NRAyUPApOxpT6lcYKQ+xW6/Tchwsw2B9dx/DyzM9rMhraWb7evnN0RFErOgqZzCMk6yu7mNIybrToVOpMDE+wVatjtAkdzfW+OqrL7PvNWm0HZqtDu3ExSpZ5Mwczc0mZmgSRAGRF1Hb3uewMDiJxbAbUg5DAtNks1rl07/5T9GkRClYbC1RazS5fOkaaVvHj10UCZ2kSWS2kfYgI2Ydr5J9n7GO0HXCep3U9CRLW3NcnLtEy+uw7e7ixz6mZhCqmKHCKBNdExw5cuQHrtaAFGCQz+e5fPkyqVSK7u5uyuUymqYRpNN0l8tYa2uIJEEaBkY+j1ks4gjBwv4+flcXrq6TJAnpdJrUaIpap8bwxDCmbaIJDVMzWagvcLR8FEu3yOfzXL9+/V7khlIKz2vxsY/10Ne3jGGskyTFd+b3s0UURfzN3/wNm1sHmatJkrCzs8P8/DxHjhy55xr845BEEc7KygfLYDWN7xq3MDWT1blVvvGX32B1bpXqWpVv/e232F3d5dy5c/f6UIMg4E//9E/fl9WqaRq1Wo2Zw4fp2dvj5ubmvTUTUiKEINjY4Eg+TyGfJ6jVCPb3gQMC3n3uHIMf//iPfB/vHna4GxuoJIEkIfZ9cocOkZ+d/YnW4ifBL9w9+z8ifGh+9F8Iv4h/5PHoKElXF7JWQ9brJJZFdOLEe3owhefhP/30B2Z8/iyQ2v4iMqyBNA9+BBjblxFre6gojcrnf2pDpHZbsLysM7RzGakOJMvLu+PM1XoppJuk0gqkQuvK0zLuJ4hMRkbiHznm5cvG+6Zh2zZB4HHmTEB/IaReP9jYhwcj/vAzHXpTK0iRplK3uL5o4/j6AU8WErQM1ZZOb9+BadLYWEx//8Fck+SgavrQQyGjo+88Jg28/U2euP8Wc8ujRLEBKmFlu5/t8AE6+wGGhDiRdGdddtoZvEDj2maZeW+M12/28dzdY7hVn2cmbqKHPlG6gH7qFKmCzevbY+gamHrMVjPD8ZHzvDZ/ksGBGnmjSTpuI3QNIRTNTpa0FjLStUFru4tLtSlsGxxHMDAQH2ScGhJ/32Uqtc5Qt8/9w7ucGd3ivp51eg/niE6cRDYvYxoKKRTS36ZorVPdi5GaIMydoBOW8X1BFAl+4zdcPvEJH802UKUSA7MZJnpusXptk3wuopAN0CyB8HxEEuHFUAx2yL1yi2vuCKkTAensgalH3q6w05rgrZceY+mtAbK5mIwdoUgThv381ashqcRgOZlGxQGeJwgii3q7Qnd2lo2FbjZaOSrFPUyRIKIApUxWVgaxc+usuneYdzfYcV06G0PM3c5ye8lkftXi5rKNI/Mc8a8jCt10VIGaY6JrCRE+16tVnCM1nCc2kY8GJCOC786f5Y2l+/l18Ty5bA2tdJliJsFUAiMJ6DE2WVw+wU7OxGKXX26+TGNX5/DaHOVmDdU7jEwChBOzEvbzVv04PV05ahse7XYW5Rloe01mh/eYHqiQ795F6D2YRPgbLn1+yK4cot5M8fbSIJtbJVqbkry/SuCvMZHs0coOorpcVNBiraLzna0HePUtxdrSMktOna8djojGE7xIx2nmKem9zCWwpx3m9Mws2QHJ+rU7XGnUmI/arHhp6sqnbOeod7K8svMAUVeJt1ZmWav1kUhFoscUSzU+9vHnSCINJ7dJ1/QWuVKCMBU3iWjaIUQphA7VeojrazRiwau7Gb4+d4hiKY+h+6zdcli/E7NUS5hvCmoRPKBgozNGI0iBjHkrP0C9mmG+OsvG3iQb+4fRjITBwjpu5NCw6gQh7FsSb1tDN5pYKXAcSaOaZb4xRNjT5OgDl0Ao1qom//HZLo4WJujEOpHxOippYRsuyf4VICDJgrsnUOmAnWULITR0M+HouQ69sx7F7pj7DkXQCFi8nJC0EzqOZL01g5Wz6I776G020XHx2j3kA42Bdo2NQpuHRMhaI+FOrcO6Cqn6oJqSQgqWtxTpoqCyGVGo6uQaGuNZuPGihqVMbMMmo+lkeodpuDFnjpYY609j2zpG0o2tz3BxYZTN3VEaXorNrSx7uyV6DMXNyjqeMLjS7vDt+ZPY9jC5lIPUOxC3yWVNKvseh8dDjk0VuL26S60d0PRDHpjqp+37/M2FVbwo4cmZQZpxCIkDeZ+RCZiZEuT7IJ8ycRvb+K02RrdFPYZ2fpuru6+wG8f0FSPybkS45fH4oUFcq0RfqsV9PR1GBiR5DcpSUVEK1wfZNBjvP05wBXAdqjVJEvoEpsZ3DQ8zVlhp+OcPJqRMhRdDOSs4jM2x0RBvZ5opyyafSqGlUoS+T3lklFJxmnOzEWePgl70iLZD7M44ujVKIZejEsf4w8NUFu4iwpgXrl/lxvICF2/fRNckuiUxdYPN+h5xO6DQlyWVyuDsOkhNUmwXKZgFRisNhqUJCBCClJT0+j6OpvHIxz9Ol2mBFGw2NvneC6+xvr1Kq+NyeXWefWokZcVk/yBJIJgpGYSdHzisfidjVQ8ihOtxN9dg16sg3ISN+W1KWhHbskhpNqf6T5M1ihw+fPg9xkLvuS9IpfA8j/X1dQzDQAhxEIeh63zit3+bVFcXzZs3MfL5e0QsDALWo4gjzzxDT08PY2NjjIyMcLdxFxIYPTp64J797pRRCARD2SFmZ2cxTZP9/X3iOKZYNPnUp5oMDwcIESFlA8O4glI6SdL/k9+M/AS4fPkyq6ur7yGBmqbhui5CiPeY2Hiex8WLF7ly5Qrb29uUy+V7xFDP5egsL6PeqbK/i9j3UeP9XE9WUb7iG3/5DUzbxDANNF1D6Yp2pU271b7n4rqxscEXvvCFD+xXjOOYrBCc6u8nkZLNSgX9HfOjsN1msN3m6OnT6LZNamCA9MgI2YkJJn7/939iebJVLpM9dAhpWVjlMl1nz5IZGfn/tL4/DL+I9+z/WPCh+dGH+JGIJyeJJyfxPvYxUl/4AjIIUPBuAyH+uXOoH+Ke9g+FdDcQYRXeNR6KIowrVxDtDpq2gPbmNiqdxnvmGVSh8BOPOzsbceGCiZPpJt/YQEmN+doAbjtD3sqS+C2i8gRR4SiGEKysKH6cUrm3N2Z7W3tfkk2nA48+GjE17JNqeyj57oYgid0RZHufmXHo7bJZ38mQSQUksoTvw/ThkEZTo6/vgBTrOoyPxwwNxZw+HRDHkiA44OV+Ms19Z3aZGvoWNxfLREGGlf0JXl98HCUNtFyKuNFG1w9ePwwlry0O0tWliKWFqQFdOb5RfRItd4LP/G6LQiqFrFT4+l+b5HLagemVgK50hwQIEoMkDNGFD0KSeDGGFqHHHeqdLCPFbcrNFaSEVktSKIRcXV2jOLlIkUGaw4/x2GhA19ZNRBiidJ14bIzLAwNc+tzncHfnybPJE1MtZka7cEKNvvwqvmtSd/4lvb0xhw5FPP64z8jIe3uiASa05ygXD8M7ZjroGkkpi3RamFEFfWeByvgUxXQKd90l6PHYz1e59bV/gYpG6Coqks4eNy4+yKmRG/zS9CJNTyeIBWkrYKuZh7hMzmiiq5B6W/Hsq2OcsKrotk+iIIolfmjDrmTb9+kqBxyb2qMRZdjxKlx+bY370l3kTKh0dPbbggkroXX/OVp1SaR0Gg2XzSvzbHjn6ZvYIujYdG5MspkBd8ZgdGaTXxt9nkOvXUJrJrhrglyoYacTgn5JPr3PL6U/S5uHONIQaF6DB701ehsbyKaCvgHC3ACCmFr/UzwxU4A4Irqvl1rFZ+GtJfb7qny2YhPlV5lWJl1RQr3jQhLgC4N8+RqnU8vMNRL26xq+tkxu8BQNOcuRybtMZxbxwjR394YZTG8xkH4ecTJgpXUMTr1B3mqRCXWUF5Aphfh1myjMEWZqtHxBxW1wkz16UKS0Akol1MOQ14OAQusRwoyJViqAVkDoikgGJKZDvn+HPS+HpTUIclWCNpDXyZVBNGJipRMYOlFb8tK1CEOXVNrD7NaOkPijVDvLLF7NkAm3Geiu07+eEGmw0YLveZKRKMYF0j0x56ZWqDQOUVu7S2e7SNmzqW738TXn13nk+GfZsmJakUSzfTgWEezbGN4mtulzZf0WruVz7cWE5y8k9M/YXFuYQDPWuZz9t9yX7eLXM9t4yqcRtzjcI0nXBd0mWAoMAcWSg+dZTJ7x0ICtliKjEhZXEjaqMZMnYPOGzo4aJOPHdNauYuplalEBKRWmAXu1o2jF65xpNngt2yTYDwgCGLR0tEQj2weZgsRtamyeD3j4jM5+QyNJQf9QQncRtpsu/ZkCjSRhOxTUo4iXWh22czqH0wJbT7M4fwKnvoeIFdJy0VMG9WZC4B9hOD1HpRnRvT+AXB4hKESkSzk0DHTNQ1cwMznOtfUKh4bg0GCaIFI0Wh5funSXOFHEiWK0O0+mx2AgrzB9H9cRXFoJyA6kGB3VsQZg+YaiGG1x68Y8N4x+Mg2bw26J406D4LKJMaVQZorRLRvz5nXicshSJ0cq0TDLHvfR4mhNYvmS19fhwne/w8Vah3JZpzsvKNgpVqwmgQ+RqfP0YIiqCnQJhS6BppnYuR6s1grpha8T7fUwrRSHDIPHnnmGV6Vk68032bo1y+a8i2EIHj96DlNIUiMjDD/4ICcsi06ng/+pT7H69efo291lYXuL7kKROAyIDdhzG/hRSKZgkuwGRFYH3daJnRgpJTPlblpinpCDaqCpaSggkpLZKMIu5vFtC9MNiDcDRKKISFhu3SUyItz9BCUU3aNZwjAm1V+kdtc9MDtSCsMLkSohQdBwHLavLLK/W+M7ly/i1Tv4fojvB6T7sgwWD9Fb6v2xURaPPfYYExMTXLlyhTAMmZ2d5eTJk+i6jnfoEM7DD6Ndvozl+whdp3dqitknniB5J2/0XURJRK6Uu2e+9C50qeNEzvf3k4kJJt7xnrCsb6BpBdS7LoNoQBbLukAcz6DUz+6eaGVl5X2VSTg4+F5dXeX06dMAVCoVnn32WTRNwzRNKpUKN2/e5Omnn2ZychIhBH2/8ivsvfIKQb1+cFhgGGSnpogPD6HuXOLai9fe584rEKTSKS5evMh/88nfwvBDxq0MmdQP7z09ND6OkJLTMzNMDg5yc2WFMIoYs21yUvKDNV6p60SdDu7GBunh4Z94XTTTJD89/SOfs7Ozw2uvvUatVkPXdSYmJjh37tzPTXb9IX7++PCT+xDfRyqF+5nPoN+4gbaxgbJtwlOnfq6mR7q3AtoPOOTOzSF8H2wLQQCZNCJR2M89h/uZz/zE4xoGPPOMx3e/8gizL/4fJATETpGubEQhaxHTTTQ8+/0+WvVjBgQefTTgP//nNKDQtARbNIhcnb6+hPHxmEToRIaGHkb3gs5je4xEZLHNZf7b317k33/J4OriIJmM5PBUjG4Lbt8WDA9/n3SFIUip+PSnXZJEcPOmTpLAkSMR2ez9NJL/nd6owX/8d8MYpoEfHWyckZ5CpSU5USPwFQ3XQs/adM/a93qHZJyQy8LLV0r82q8n5ElIymVqToJmacThQY/N4d4GcWihm+CEKcp6hPIDDKEQQuE6aXryG4QtgaElCAUBbZaSS6SiXeJkhy2uI4wMzuO/hm2fQavdRYo6dy8us/H/fIve7m72y1Mcs+6wtVXlay9vYNtpIgwiOYDd/rd8tOdRZnIO7B4iHDrF+/XWMR89+wpffvljGHqIoSeEiaCT5Hnk9MtsvTnK1l4R3YvJLLncst8mU/1nVHaOkilvgBdT6u+jsNnhrdUzTJcVRXWXIjHX4ofJ5nK4rqTmSESnRRS2OGwush3OMGGuIJEEsUUUSETG5eHSHuMujLNLr3J54do4hozYSpbIMo0mE473tVldN/i77Bj3jzQwvBaT9jYXO9cxe0OwDTSZkFYuPZFEVOocynTxeHGV7d5D5F7eptUss6dVEZHAuq3hDabwMx5D8pv8RqFAXmmkd9pgSZJCgnz1b+HwJPq/+Nfomwl+ax+lKzQbRo/UiKb2uf36Ht4CNKTgbaUYTHYZxEeLBPs5izhRZDIdpL1AtmASeAmyaNBfcPGKG6SNhFtzh1CBJC+XyWR3kMDI9A4veD55GbPSBL8pSceKsXKLxl4fKreHpmf4+soaXUfyDLy8TigMIEHTBG03wWaHRl+GvF6lUG7ipc/j5lZIjA7LvXsUZYOJUkQhDNlaN+k6FqHJiHxa0nAMpB7RvF3kWAYuJxZN9zhDhQS9MYQjrhC127S1XupWQiNTJePFdEuN+VBjNLXJ4UHJjSMldFHidHEHs+sO65s93L45C1dCGrrGhZUZ7hzd5clzEZ4vkRmFLHcIVMD5tyKato1HSx7yAAAgAElEQVQuNcwSvHHd5NIc5AYlxomYbg2S4jKLaxGZPp8k1phXCUfziit7itGxiPpLKTxXkMmGlHt8VisxHTTSCtY3FTlTIkyFysV0nBT9zQhHHyAOlsjkx4j8NFEARuzR3JrH8xLE0YgFIbEdi04sKPQqlCbwFjTiQshSNeGhhyJyBUkY6AShRi5j0W7FrDVdzHIXQSJIWSYia7MfeVxrG9yvd8gXNin07hJFLbZXe2lvWMi0QRimUFGO9l6L9o5GFIDrxGw7AU7cJoiBXMQhq8jQ5DBr2hLaTB9ne3t47cJFOs4BkZgZHmSgKIhjsEsOelVnoG1jCElnX6BMG5GLKJoh1/YC1vpNgs2QfJeJ2QzB0bGljpzXkKqBPrTAyGGPphdSPy95LZdiqt/BjxOaHcX8dozjafiBRz4I2G1mqTomRSum02fge7DjOpinBV77INu54Zlog3nSaQmrIfRt4O0cSFJ1TWPGcej9xCe43Gqx5ziUcznGBwbQ3zn9DKrVe714mUyGTCZD4fd/j1Y+x/l//5dkbBshdBqdBvtBE8s2yKQzxAEkvo/db+Ne9RiZHmEsDJk3TeIoOnBtlRJT08iYJnkpee2VV9iv1XBdl9Wtm7S79nl7/y62HqArg7zS6KobBE7I8HgGa/BhNGsdlSRoSYLyfUKVsLG+jjfQT7VaJeqE9OW7eG1ljSiK8CwPv7WJXDX5Nw/+mx/aP+nu7uIsLyMNg77Dh/nVH+hD3dnZ4Zvf/OZB9VTTaB89jFXU+eivfoKJ0gSjrTZf+cpXcBwHwzAIgoCclePYY8fe9zpO5DBd/GDio2mbwPvJolIGuj5HGJ7+wOt+WjQaDW7cuEG1WsU0TUZHR8nnP9jz4jvf+Q62bd8jlrquo+s6L774IuPj40gp0VIp+p9+mshxSHwfPZdD6jqJSkjraZr7TUz7vf2dmtCwhEHcaJFudUBqGAn8d5/8Lf7qhefZdzrAgSNxtVpFCIHV00Ncr6MBpVyOR95x/K1dvozQtPf1kGq2jbO+/lMR0x+HnZ0dvvzlL5PJZO5Vjefn59nb2+OTn/zkz+x1PsR/WXwo5f0Z4h+FLEBKkv5+4unpA9fan1Ol9F2IuI3uLoE0IAzRFxbeIxmOwwM3S9lsEo+Nof5eM/yPQiajeGD026TH2wzIXUZyO2w4RcycS3D/Ywce/Ry47Q4Px0xM/Ggpr2nC4cMRWuMqI+KbDNqXeHDyKqcPXydJjYBmERs6SgpErEBArOt4hTJBcRxVHOTMQwYnTyWYeY1sQTA7G/E7v+O+k3sq0bSDiulHP+pj2wdLMTiYMFa8Ra71AmbjIu3Nef72u13MLY3i+wey3+Rdp11d52Of0pg6m6cW5VCGSfoHlkwkCQKQQjE+HDHYF4MQ3NwskVRbqHYTUOhxQLZkkx9ss1UfpCg2MGKfGEnHsZGh4OzwZXZu9bOeOcWCnKaWuYgpDQZn1tHNBGKTQjEiztzhgegGeusmqa9+h7VvfptMUKNQ9xlbWybVBy8sKFRSolQYZ7v6BLdvnWN5p8z1zSIb1Ulye8v0txeJ3smOS1RCM2givU169dscn1okjA4+z7G+Jc5Mf4ubW4d48dJDCOFQj0y+bG8xYUxRX33sQPIc27SiAbxMP1m9H6NZobNS55i2wJqTYa7eS9uz0DMmdlonYwVM6gv8alfIVthHwWijlCTUG1gkjA1V8FSWkcENctkGgZdlfn6Wgt1kNzQpMkbR8CGJ8XxBO9A5NB5TjKo0Kuu0VQs9twdCYRgC1+nQ3E1w1iwqwqCw5iA+VyfIddD70+iFFLluhzCI0bcC3rivh4fbEWMij9JizD2HJNGY845xOTlJcdIjmxrBr7bY97LkR1r0jC/iWg3SaZ384E2GZ6qEQtDHNvu49Fsa7cwAVt8IGSPNjc0St3dyaLpPLmPx1C+3eezhlznaXyHfHRBIiaqFpOUebd8kVDo9gw3mOgZKOrS8CC9RWIYJekghm0Fgcl8qx8udbXQD2r1rlPYkZstA8xOELak+prPnnQItYT79dfa0O3idHFFgMTCwR2xXCQvrzAw75OwstWaWSJfs7Be4thdx8brFcCfC0lNsqScI0gkld5qtusGAalNtb1PMpTg5eozyVJEk6FCuhTiBYHzcZPd4ltT4L3NkaIr+/l7y3cN0lwOa2+vEiY4deywWJJ3sIo1tQV8/2PmYKBa8/Lrk9VWNbiUQOiQywdAMtvcsokSQvi/PSHeCHnfYX4/o6QLbVPgoRCIopQVXz4M3JWhlPCq4BGmfha0EPQoxM5LFdUWMQEtF1IgYUDa5oJfMoMDyBbZdRIs9rNAlcWvE4RVkJNnei0hVbdqhItTAsMBQAttWBC1JxwqZOKYwcglxRxK2BUtzBq6Kob/ESjZD2Uxh2hmKowM4QtDXv02edVR8gk7skcQRXT1NWk0Tp2oQ6Ra315dQLZOXLl3Ad8ogQS/YgE7HckkMSWQVePSpa9jdDXomE9ykw6039kjecZMPCLGLMZEIKA14dLdSaJ0DOaGrKQp9BfYbJldqPndGQ8wU1Lc9thoN+hPQdYGmaeDCEw8r8iMh2zLFVt5j7/6Qltbh2bbPW5FC9wQyUMzvJlxbixhNG0gnQYUS1Y7xUzHrbptAJdw/DXEoCaODvNXQU8ysK3zPp1WTbNwxQdeZPnYMA+i02/hxjN9uE7suSRSRyWQQUpJ4HrnZ2fe4k0pdZ+z4ceqdDourK9Sr+1jSpLuvQG4gg+N4CFMgcmDGKR4/9AQnxido3r5NMYoIVUIhbZM1TXRxQE5702ma4+MIErajr1HR3yan1yjnDPYrbax2wmiUIWmHpPyAj9z/IKmhZ8iMjdNeXsa7eYugVqNZrVHTDVLlblZ3tnHaDsJLeP3KFYKhAGvaQs/ppLvSzNXnGCmPMFj6vkxVJQm7L75Ia26OOAgIGw2at26BlNg9PURRxBe+8AVM00Q3dG43brPqrLKxv8nNnZtsGVtMlad4+PTDlMtlMpkMp06d4tHHHuVW46C/8l34sU9vqpcz/WeAv3//pjCMt4APIs4KpUrE8T9cVrqxscGXvvQlgiBgd3eXOI7Z2NjAMAxyuRyu63Lq1Cl6enrodDpcuHDhA6W1juMwNPT/svdmwZJc93nn7+ReWXvVrbvv93bf3hsNNNDYuYAkAJOWRGo0ilDYI5vyhO2H8YylkP00M4rxhGfmwQsjHA4/2SGFtrFFaySSEkkQgAAIW2PpRnff7r7dffvua+1b7plnHi4AstmASMigKM/ge8yqrDxZWZV5vvP//t83dgehVXQdNZV6/7cjhMBUTa7tXWPz2ub7iwJREjFgD5CNNXK2zRc//QTv7sChmVkS1+WlSxfZ3dujVqshhOD06dNcvnKFpbU1To6Oor87Jikl7vY26enpu/JLkyjCrFRIDX98Muhnnnnmrm3v9cAODw9/KMF/D/+fmLP/V4pPekz/ivDJj/yjI9GK6N13QNEgCFA3t97NEA2Jw0FkfGDLLqKIeGLiI1VvFXcLo/066YE01vEypfsLrMkpWnoJQwtIjPK71Ul46invjujSZ581+Ff/Ks2zzxoMD8cMDx+UVO3wBnPpFxmd0Bge1RgZyxO4XfTeVcLsyQO5q6qQaCqRoROb+vf7Y5WD7dmi4NDhmIWFiJGRBE2DkZGEY8cijh+PmJyM7xiL1r6A0XoFIVSWbpgs31KRnRWymZD1+iRBcEBMi0XJyEiClFAsShxHEATiztZgCTJKyKbh/tMOw80l1CuXUSKfRRbYCststnKs6IfYsU8zOKwwYO+wu2EdZI/5GloU88jQ6+yvDNPZH+CN4S8S5WM8fRu72MUuN94dT8LxYzH9xp9zIjOA/coKccdlea+DqiqI2EExM1jbq9ww8uTTKerdYW6uHsUyHVTVYL/mo3tl3tka5qh2g/TCCG87N/nu2ne5uH+RC50tqm6DBTtidniTI1MrzIxe5Nb6IK/efoz7D73CfH6R4uQlJipr5DNn2dwdxVAESSqNYvYJY5dyxUSxBeasZHriCOMjU7y5WUOPm6RyKcaHGzx9/AJPzcJIvsGA3SIOYyb0Bl7XJhyyKOb7xIrGAyfPk4pTyERydfkkjfogG9uj+DsZGtUIO+6jRCEF22dm+DbDyTZufRUn7hGqLTQjJpGCjU2TKFRAKjjZEnvVedo7KrP5FTzFRglVgqhAZbxOPTXM2aHPc+/oSdTCIaLBIbrrdX53/RfZTo8wEa2RS2VQRw9T1OrsORkGZtZJRIqODFGFwX6rzcx9byLHPaRuks4p+CMWk2MZ/I6FJmYplb7CWLFIvdnkocckMzObZAevMxFahD2bVqfM+NAqO5sDhHFILqsyMu6T18rcxKFgWGjqLAOZEQy1SCB8CrHCy7013nJushrusCcS5OmA3vg0u/M2t+dTzI7nOTLd5tryGG9Gr5K2e2RSVVK5PabmbjGWsbHzfeZH0mTyaaSZodUd4c0X76Oxv0snUnGdUVbiKfZ6RaZUm2grhYVPJDTuKU/wc2ceoGznWUhpHJ48QVgqsdxvMPBYmUMn7qNkQeKYBy6pMsC2NYaHBOsrEEgFyjucfqxG6OS5fDHF9RWVrXqRpaokN2awkIMkiQkiia7GJE6IJrNUzJiyE5O0QTYFe5sKsZdQqkak+wrdrsozX9dpzhbJzav88Yt9hifBzsHsoGC2H3O5ldBNElJpGOzCF473GDhiMnK0RzmTR+2XUHclMsigxs/gRS10U9CzQyrY7PdjzFhAD0wPlBBMFaxCzOwxnSA0qCcW59+p4MU+W9JlNR3RdlpM5irMHxkh0CI0TePY2DJqE5r9YURiEssYGWvk8h7NnRJv3Y4oaOssr67w9tIS+dQOKCfICoMoBX3dIW1VOPXAm6TGrqHFJju3Ovzxv71J6Mf8N1/5OUJidrb2qQY++pBgNqVScExiMyGMQdEEWU3l5k4bPa3CbA+jkZDWFaQraXQShnM6pqZwz3iMoYKX71NVA1ZzKraqMFAM6GxLWhmoagmpnuTPLwmSRHJYzTKWS2FlU8jYI90T1Es+OdUmW4Jy6eA/HMYJuY6Ju+siUjFbb8+Q10oEYUiv16MyMsL1lRWu3b5NOZ0lqxlI16NZrWHbNlrKIv+u2UsYhiRJgoZAjWJGRkfxfY/D2SwL0zMcKo0xnCmh6Rpzc6OcElP8+t/5X/j0+AQTwOzCIYKN6xQGDFRDoqRUhspZRs0sUS5HMjeHqr3GNpvEbkzHSaj2I1QR0o5CWg2Vgpnl7/7s34LeAEiJOTRE9+pVyjNz5CYnqWo6wrQIul12q3UiIfFcj4udG4RxiJJSsFM2WSNLuVjmeu06nz36WRRxQJ7ai4u4W1uo71YFhaIcmOBsbmJPTrK8tsbq6iq6rnOzdZOG38BQDHRNx+t4TB2d4lrzGqcrpykVS4yNjZHP58kZOcYyY+w7+/TDPopQmC/M88TkE+8f+875m0BVVxEiumteIYSD73+aj8ME6Zvf/Ca6rpPJZGi32ziOg2maNBoNisUiIyMjPPzwwwgh8DyPy5cvv18Z/EGEYcjc3ByFQuEvPF7FrnBk9gjPP/88cRxjqAZD9hBZPYPTbPO3f+bLzE5Mvv9+VVU5feQos0eO8Mrbb3Ho0CGOHz+OZVmYpkknivA1jaMTE8gkQc9ksGdnkWGI8kM9T7HvU3n4YZSPUWL76quvHiwu/RB0XSeKovdl2R+GT+bsPz180mP6Cf76QtHwKl/Eqn0boUXvLlB6yLhEHPxAk3ySkAwNfaSP1nuLoH6/XCgEfOXz13n76jDL6wGucYipqZj77w94b3EvjuFXfqXAyopGOn2QVfqP/pHJI4/4/PN/3kXvXECqP9R3IRRE4qH1byDUWXQvRLyrDU5UBS9tIbUPzvP6kZAxRvciqDatlmB3Vz2oZiRp5orvsFy5HydnUCqF+L6g1zsgo0NDMV/6kss/+2c5Qj9GETEoOokQSCmYGu5x4u3fRQv7kEpx0lvjtdfqvKl9miCfQyQanV2VKDrC2PAc0/YrOIwx4S8yHG2ztniSm/4M71hniftpjj3QY27yFmNTDn5wUGg3DYlIPMKoRxBGqGt7KKGP6nugpxHSJ4wVAstEjzQSJOv7R7CUPkkIMvFQZIq400LLlfn9Nxa479B3uHjMw9ZsMkYGjAxbPZ/fam/x1XEFVTZIDJXr3nEOD1zGoYBQYrywzXiryyn/WeRqQC8pQcUiKuXwrAQMj35ocH86hDBFPgW/9sQp/s2LKWxricdmb5IWY8TCoNHvcmz0T0lN5vjNy19GjC4wY5lYYZl7T/8+lq+TyYDrxTQbA4RRimIYY8b7JCLHte0cExWHp8beItdbx6v3ME0TrX5gzKNabbbrBUgihAqRoZBFo97JcrM2xPHcVYKKShJrJFLBy8xwKJ2hmUiiuopa8QnlGFtP/T1Odr9Hpt1j8NY+ajmLUGPcwOL0iRs0Q41eFBGbAkPzGJ9+FqErFKTPdSdLydaZFj2UtCA9fIpacxS332F+fJB84VNMHX+J2/oyqxvzdByNwVSdQO+TSB9jeB038lEyEm/HZaqr8EDa4HLWZLAY4Uc1uh2NCW2M4dQEy/t/Sj4vaEWCllB5rRHy4PBVFH+WKElxdnCYXX8X+9yvU1kyUMIMqWwLJ4jZ37yXiUMJdpIh2JaEto8mYOnyBCEKsXOOX6hH7BUV+laKdHuSG8sFSuoahiJ59Ng8h0oGXcdhwNCxTUHo9xkanODwjMPReQvFGsbMN8nEdVruwW9KE4Ly4ACa0iJRDf7B6CLfSEwmxspMzo+ilHfopwVrz3coGj42OrppIlyPsBbglGAqE1N3I8JmiFWKCGSKx857TNUUYtUip0jCYoRbTjFgCJY2B3ngvjlmJ+uMlDr4bp10X/IPj6icX43xQlj4vEA3EzLBMqvJLIdnY7avrvKNKxNUjD9jq7+CUAXNQkDTgBOGTkUNiVxJooMXQ9iFikh4MGfSrquEUuEbzxbYb+qMxvfwqb+5wauNJi03RaPYIZcxSTQYyLQxUEFx2HNexOQsA5kiCRIheiyu1bi2scabne/Q6vQYz6foyRYzI/8PSXw/gTdEZiLiS1/5bcYmb1B3I5aWdb75LzoEjuSrv3yIx0oGj+Yf5V/0amxsNFm74bFctMilIkIhCIyIwQmFzX4XLxdQb0vGjAg/sYiShKItiCTcN64TS4WUGpBIwaoMeDaOcFoa4xmYVxNmxmCjAa0Y/nMVbFtiNzT6sU/BVpixLI6QYbHZYHJDoz4WsbRoMTuUkDNi2utQc3uUigpXFos8X90mk67z+cwkcSOms7fHYhAwNTSKlJKW0+ft1VWa/R7tSy9RH0ug+bv4XZ/JcJJTyjyVfJHPPfoIs/kinzl7jm9vbBC5LlIIbNXi7z3wRWZHR1F0nfzAALWlJTTb5jX3Gt7hHKWbTQZMC2EaKAlUoy76Q0+gElFnnYyRxlVcNqt9bFUlmzHI5WLcok22OcS1tRpnDpfor64iDAMpJevbmwRugBPGlItF9EyGfC7HTr/L79z4DrEZI6QgCRNsYb8vRw2igJutmxwtHTjzOhsbqB9AvNRUiu7SO3TlbVKpXWCUqltFE9+fwsZhTJIkhHHIcmuZQ8U7Jboj6RG+PP/lH/vRGwSPYVl/yAEBfa/q6BCG80hZxHEcXnnlFarVKkIIZmZmOHv27AcSpQ9Cr9ej2+2STqdRFIVTp05RrVbZ3d3F8zyOHz/OY4899r5sN5vNkv4QxZimaYyMjPxYx50qTPHv/+W/52tf+xobGxvEXoxIw3/3M1/miYceuXsHIbh05QpHjhy5yx3Ysiyubm3x9//JP3l/m0wSqi+9hLe3h2pZyDhGxjHl++67q4r6X4oP+66jKPrAnt1P8F8HPiGmP23EMdq1a2grK0hVJTx5kuRjdh77iSB6tydS+xAb88RHJAFSTYP4i63OE2sEZ+yXUd1VktE8yrUq0vyBAGvfJ5qd/Ugy3g+DKk0ePBJy7sge/ZEuiX7nX+BrX7NZX1fJZr+fVZrNSl5+2eSFFzyenuuD0FGCXVR/B8IUaqAQp2YwumtgTYAikO82dQopSXVdnEL6DmfhxK2zeuk2rabK2FyBofnpD/yelLCNSDykorO5qWKaB+OyrAQ19smZVSI5husKzp4N6XQEv/ALLpVKgohd/ue/8yf8X//2NM1OCt2AVFYydSrgi+qfoQsfrBRSCLb9LGLsHUasb3HZ/gyKJhgZFAS3/wZ7tSyVTIpMGNK0jlDNHuUtb4SOa/C5qWWiByv0gjyhUEml5J3q7yQkJVTKV5dQ1zeRaYNBAmq7fUQhjTBCypUp5F4DgQ2RBjIhkQpxoiBUDb0fooo2SUnj25ubzJ6avOM7kpk5usk6y6kSs0YZVJ1jQ4tsJIO4jTSZ4T4nnS1MfZec5fNl2+E33/kl9P0uIpaIcoFwWaU40eL4vW8QXnoIYp3xgsdn5kfoNQWKqFA4uYJV8KhELaxej/zFNuv3vIiWH6Elejw1cJm6Ai0R0OkZ7DWGyec3qe5MU2i1qGVDvNghY5QIon2m7WuE/RQ+YDo9optX2LF66IGDaZfQ9JBYKuSnU1SXZqjWh9CtOovNk8wMLJMoGiKUmFER35Ws2o/g9ENKW3voM12MQoqGO4u9fI1WVGGQGoqyRF85SVpzqWT7DNIjVTS53d1HDMWgGAgJfgjXGyq2PUdFnEXmdLKRgq308PHZddcJuqPcuv04lq7QVAVmcQPF6FNTHay0TsFVKC93cAyFbHGLz88VedTUuWBk2e+2mByU7Ndj+mHE6YHT9PNLvNJqUAs9fCF5qRYzU7jJLy4k9JMlikHMdMbHyLhAj0BXGNFV1huTbL2hc/joOmfny+yGPm/vJqSsPSaUSe4Pf5YLr7Txhw2SisK2+QqOcwjDaDBZCHh4dopEjem6W8RyF88HhIlhwdN//79HV64xIhMabY3MZB/FsfCDNJYe0GwWyKVUHso8y9yhKeaFz6qawkZhra0QaU0OpwQPnvfJhRFvORGOGXOjD9mMwsPFhAtbWa7rTUqeyaMXQyb3IdRVVF0Qmwlu3eRLfZ8XGieZGY5p9iVLNybIje9x2EpguoW2KrinCGSgr4MjNOyJmCdm1tje20Uj5tPnFG5e1NGEwrrjEe5F5DIqEXB/xuI2PpEek04diFaOFnRmtIC1psLz6yX6nkUmD2eHz2I6D3F0/j+zuCPZdzv83vYLjGUVPjfdRh3uUc5kmdSarK0lXNkbRJM2VqrN7bUVthsvocqEhbEBHNdl2LYpDyr09dcZXyhgnFtneKjPWzsJ27dizv+fLoEjmft5i9khG0u2qAc6T35ulm9+9yq7Wy6vvuIzfjJFvpQwOAkDAxqNpmCvaqIH0GhAqtxHdlIIHSIF/CgmigR2VmM90+XFJKKPxE8SWr2Y65GkrMCbDbBigWaBZibkdZVMRtKLVIb6IESMm8QUHJXsdYWepfPiJZX0qMvIVIAfJLz4ZoYg7ZPNSOpemz/WW4wIg/TNhPQTT5FO52guXubPrlxBUxQaRpuNVI+0NsD1b12leKpI12qT4DJyY5A/ef573HP8JPl8jk994WmC9RUS12W4XEbXNJCSgUcfpXnhAppt4yU+O1GN1IkJ9qbKZC7vooYJ3HuY13b3ecBQKIgAPwzY2urTaIfEoUSKmEQRKFJgWgrjY2Msb29z5vDhA6lto8Hy6iqvvPoqX/r8F5kdG6TZb9HrJ5imQSVrM1EqoLU0UvkUhm4QBAGFYoEoihgoD9AP+9+/l8fxXcY8AJq+gS7eZG42x5Urq6TsdRBN4PsyYNM2URQFHZ2m1/xRU4EfiSQZxHX/WwzjNVS1iZQGQXAPUXQcx3H4vd/7PTRNe58cXblyhc3NTb785S//WPEudxkQCcHg4CCDg4P0ej2mpqbueI8QgoceeohnnnmGTCbz/mu9Xo+zZ89+YCX1w1AsFvmN3/gNHMfB8zxKpRL5ncb7r0uZsLG9zX6tiiIFl5dvID/EiCOK7qwqC0Vh8FOfwm80cNbXUS2L9OzsBy44/JdiZmaGW7du3XXuQRD8SGOtT/DXF58Q058mwpDU17+O0u0euN5KifbNbxIeOULwmc/8tEf3gVC9gEyrj3iXmEpN0M+nid5zu4s9zPp30fxdkAlStQgyp4nyd4c33wGhENuzuA/Pohtvoi8uIjwPaRhEhw4RPProRx5rmDmKWr0NWgbPU0lRwlBMpAyJ9TKprkto6gTp76+svfyyhf0BRnTptOR3f9fmqf/VQustooY1EAZIDTXsoXrbRMVfJlF+6KEqxMF19UKi1MHNs3HrEn/yRxFRYmPokosX+5TKl3n6bx3FTN15g5XK93W4SfJ9bjs4mFDdBj96L3MNHAcOHQqpVBKQEmvvD5ksNvg3/8NrXL5SYds1yQ72uPcBj9yf3IK0RhgcQ8oyr7fqLBZukgklM6Ul/JxAErJZXKWy/j8RHTuMfuEC6DoXN0e4uV8kDAUvFU5jXUkzNxfRW3qAzti3yWUObiuOI1heU3i6Y+DGPkbGQkooZMdZbTVxthzSQ4KZYUGhMkiiBJhaj7bMEQYKQQh5K0O7k2J8epXTp69RfeISMZLNzVOk+tvk2UTJNlBHVLZqmxwq5cFJmPZ2Gahs0hkooboB+UZMYOWRrS6FssEvP/RbPHfpSVZ3VJraHJMDq/z84X+JZiowDOHuY2zWB1AvLPLUif+EejrCC2xcTyGf6RFEPuY5wenLCXtlB93T6Ggd8kkJRVp0RROvN8qRfIuF5BIvJRUCpYyeylFMr5DJqijlOqnWGE01Q3zlLYpOn3v1hH414aX6NJl0C700zv53F9jdKZGZriEHbeIG9D2B7vXJ913KI/fCzDRnMGlMzrBeP8JE7jkiLyJfzKEPRJSiFroSEqx8F7MsEb0JlAcW/UYAACAASURBVJKJTCSEKteai5QNg5zm0+0pbO/7zIwMMIBB6JSIGh2i2z10V2LGKkfbCraVMK9bLAUtMukM17uT5PO3mMgqGMDQnks7zqAlLto4iIxCXlb4tNTwJkboNDqMzlZpreWoxQYv1z0eLCbsOQFtdPKRxj8uKdhSpdYXKELh0yOwXlXYDEGJEna2bTLmJscHPUZzeYb8CgOxyoxq4WsW2fkOK+Y+FwYliWphufuMDrzD49O32ds6zsnpaRQpUFE4fdSEqITqQmlomNLAJC4BbrRAKtmiMuBjpUNKjQa+36bh5ChZNb76D38Ty9FJHrP4wqUBfsvVeaZznU0R85nrDv9AGDhZjaWXfU7HkjMuLOXg0pxKvxnxqLfHuVs26+N9pvcDfBWMSJASCs1AECcJg2GKYw2HWsVAN030SEGvwY1kmGzaYrPdYlLanDvXpWOo+JMmJRvWdmNqtT5GSqBORTSvmqiOAaHEjaDQ1djQHSZliuNFk6FCgmKCoQkmR0OkAW4VNkomg/kCjp/gbEvqLcFQqLItVLqiTzEX8Pg9Ds1OQtbS0QyVQc9BM27S299HV3QST/DYUz/L8LV7CMN9ypkehyfLpDMpvuZeZ18EpPR9Dr2l8KyvkMpA71JM0Jec/rsah88ovLHaprFpkTGGaPoun/viHM99b5Xt7R63LclARqMbK+xspklWUohujw2tQ96PSJAMlULUjoatWcTZBdJYxIMtrg6vUYgEXc0BkaACiQn/aQ8iQ5DqScYyCmoOwk4MagaBwBCStK2R7lkYakS15yFbEkVKlmoql67lkLpAP6eitB0ywscUAteJ6Octvj2Y8LDnE+c1Vk0LfWwcRcBWXANhsVffx1VcotWIobkS5+sXOL17DFM32a3uUyzkeevttxixDE4C8tYt4tFR8qdOof/AQq4jfRJx8MyOszbth2dBCAonjpN/PaLrdlm6vM7G3hYdYnpujOdF6BM5iiMmiS6peBMIX+CHIQC6baOXy1x8801s28bzHHq9NSCNH0Ts1ffpmD4LExPYaxpqXns/+sRQNI7lJzgzfYyzYgKr4xDYJno+T9hu/xAh6xD0l0gfnWZ8vEKhsI7rRphajyTpIpMsgRcwf988cNA7Op79eAx2pCzi+0/ftf3ll1++g5QCmKZJrVZjZWWFuR8jEiWdTpPL5Yjju70tdF3/wBid+fl5MpkMb7zxBr1eD8uyePjhh5mdnf2IZ3YA27ax353wuJkU6W6fRCi8s3iVdrdDyjCoBR6ZQoFXXnmFhYWFO9xukyS5I8rmB2GWSpil0l9qXD8uHn74YWq1GtVqFdu2iaII3/d5/PHHSf2E/VE+wU8On/SYfoz4qHp145VXUPf2eF9HKgSYJur29kE/ZSbzExrpXw5KFJGvdQ5YkKqAIhAITMcjMDWkqpDa+wOUuA+K+W4mqYLqrSEVg8T88aS4yego4enThCdOEN53H/H09EfOMQWQep7riyF/+r0hXn/nMBevjrJT15gac6BwDFQNJUyIVQWpHqxw/s7vpJDy7mMJAYYh+coXtzFbL4JycDPXdZ0wjAEJ+hkS6wMa+8VBBTU2NGTQ4Y9+ex/dMNB1iaIcmCr5HtR2+swdL9+5r2KiObcRMiKRgmr1IK5GVSWpjM6t9iN43oF09+mnPc6dO1i9VJzb2Dv/N/rVi+jLK0wk5zkqzjOjbWHkQlhTwTBR1X3ieJw/6i+RRAoKDmHGJ0ylEEKgml26dYVDM8MkwzNEXZ/vXZlAKiq50RS58QxSCnZ2NObHcuTSJuQ2uLUWsHQlQ3TjSeTrFd7YmOJ6ZxK93kIqCfm0JD18nPTsGYqHJ3jss08TxSbbO7e5un0UJfYZyNpURIXJB95CajGf/dlF1twBbNejt9jn4nNH2FsfZIA3Ea3rnLRtRi5tIK7fRmnu0turUWALVZsg3XdQtQxGt02i97FHWmSNBkfL18kXe6zVLK7emGbu1A5WlMXQh7n5H66TjjtMPHkNzY5JD3RJF2vEBpgkGFqCoupY+TlkdoMNL0VFNRhIdRnP+JCYrK6XqCc9pLrP0ECPQnoP3a8TenUODf9H9NYlNP8FGNjFLtcoWH3s8TxfW//fqVc/S7xh0HWyuL5G5OlogyHlwxdJdbuMtfcxJ85gnZqlE0+hd8HqN3EKFQYmXULVoRa5DGi3sbZ9QtXECwzc2gbR2k3C3BrLrs/l2jBWbwKhVknrNdbfUZjpZzk3M0qkQTop01lRMTsaJICi0O70yBoCXb3Bli+5vHiOlZv3cnl1jteu3sfmrRb39GroqQhNJhhjMVEyj62VwPGRCihmghsJAl/D3YvZqq9waUWytKPSFZDWIyxXZTKCQi4EJcINTNL7gj/flyATSqEka+/SbtcZbZTZqToM5ExymYREaAQJhNmEVy5MgIjIF1o8eOJV8kqV+yqvsjAcUc74DOQD9nuS3d159jr30nYP0+rpRGofNA9D5onVFldXeizuxNysO3iyT2XoOuYDayhzGQSwMnyLmm+y3i8zUFc4s+hRbUpySy5GyqCbV+kVI/IZhaOqoB/ofGpNI190aG0LprsgYpXYF7SdmCRSUHUdpIU6kVCr5Bgwc6STgJJsEkmFwLfIWk2EbREMOkRJwqYRURMhuVRCv55gGgolfZyHtEf41LmjHDo+R5h4NIIe7UAwEnkcK2tEqoKKpKq7tBJotjTezquc1yR7PY1epLDl1Knve0wtNVjYTjHZK/D4SRA7OmpNQZM6pYEe6byBKiHyDqqUl3efxrcqKMptPjWrMDGUIZ0y+SNllbrpkFfznGsZlKXCiubRDSWTEyoThzUmzwgKccLGmoJujSJcldWdXZr9Lg/cM0L/iRydMcFATyPuS7JuAT3Q2Aj6vKl0GClLohh6QqEaw1cePktGyaAPFnheiwjKTSw7SxIEdJUAaSSsI7hVBy0SRJrKjJuiYBuomSz3lHMsTI2RigVWKoWlKuw2epi5mM3BgN5QRD0dYMQqhfkynuERhQmulWJsdJbK8CyZiUmSosrQrkp2eIxrt5eJHAdnf41tfxvhe3T6Ln2CA/JSkDg9h7IskRZpGq0me9UqW1cXqZ1/HbVW45QQlJpN/I0NkslJzEKB/uoqmm5yPVh/X/oqkwSzWETP50mVUwTLAX/2/IuMZgxcy0cAsVTx+jGWrWBZKaZasygoWKbJoUqFwpkztFWVt771LXLZHNOTgwRhh9DvUa/X2Oi1sbIG8zNDVKZVtkWMrugMDQ7x5ORZDk3OkIt0Co0Yf7+K1vfQJ8fpLN9CaAckttVqsXj5WVa2m1xotrl5q8rjj8/R6wW0Gj67nRqaVmTm5Ayjc6NESUTezPPgyIN3zyuShDg+iM4Ju12aFy/SvXmToFZDLxbJl0ofOn8TUYzp+BhegBZEXFpcJEjuJpSGYeC6Lod+RMTJeyiXy1y5cgVVVVEUhSRJ6Pf7PPLIIwx/iElQJpNhYWGBkydPcvToUYofU2pCbOpEikJrb4/trW1UXWPP7bPqdCiVy6ysrNBut9/vY02SBNd1+dVf/dUfaTL0k4KiKBw5coTBwUHiOGZ4eJgnn3zyQ8nyD+OTHtOfHj4xP/orwkcmpi+/fIfb3vvQdYTjEP+YQcR/VbCbPZQ4+YDIDlCjhEiponevgPpDrnGKjhLsEWVP/fgHE+JAT/aXIKTv4eZNjWdfO4RumdjE6Jqg7Ze4tnuUk8fig49WBCKRByZFwIsvGjQayl2n6Djw2c/6PHzqFkrYRInbIEN0BYJYEmVPosoMSWryrnGIRBKZGommsrN4hetLNoZxpyxGUQXNesKJBwbvOnZsjaH3r5GxfKp1Axn5qErMTf/nsHMWk2MRX/2VPiMj3/9Me+f30W9dQTQ8MDSE3gdNQ0QuohWSKBWEUECESGlzXuzRbWkYokZjaBb57kqwSAwmJruk3AJCH2elP8TKThqrYDEyobx/eVQVXFfwwPEin1k4yfp378G9cQq/P0J2bx9VE9RJc753glH1MkZuFnX8PprWMLcHhzDUfU7PHeFQeZTxYp9YO0HkDaOXbpAp93nib6zQtabodm0C12VkpMHu/hC+Z7BTG2dy6nV+5uYeYRLyp6HHM2rCFSNk0fDZUHeZG4F0HvKBjzWo0+4ZBI6K4vqE2ZBCtoOfmeV6fZozpRLO67dYu22iZLIM3ncV63QHJZ2AGiOMAL2SILyENa0C8QK7SZOUiLD0DF07jSt1QiPiz24UcWVCq7NAtT5FozOC09EZz7/BXOlVWnQp6yqaEoOt0i/p/HH9Z3i1+hidZIFukEJxuuRTDi0vT5TvUHnEYSjTwB0xSB89g9MtErslNFU5iG2QCoUJB6E5VHffIZ9vozcjlH6Ek1jsN+YI+mUay3meM34WQ+uiArJ1DKOqcSRWOJGrIZwmVNIojSxyN4+eCFBVnF6bThLQCBXe6LzJlY3P0lcUTFOlHyesLpukd4ZZaC/T9TO062nS8x5WAOnCACL2CHQPoUDkC2Is3rm+TrUX8UpDoe1oJF7MIwMJTU2yE0iO5QS2KtF7BrWa5KylcdxViWoe7Rsax8IQRc/R8wLeuFljZtAka6toqs62u8PytSnyuYQzR94gI+tENMjpLoFh4yk2tjXAzv4Ie81hDDVBVwz8wOIPXphHVUfJ6je5uruIWdlBG9ykON6mGtb5xtXzzJ5L08+ncK0ce6KJnrdZbUSMLLmkwoSxbY9ax8fPCKwgYKwvKbmQaJJNBbSSxlo6QksbFNuSKJYoQiFWJHGcIKSK0g9o3acji0UMzSSlJwxqXVShYWiClAIXowh8GM5HaGWJMCSdSNLcFmSNCin/NLGhIdIRfggD+QnkuMQy22RTKkc1l2rGIzRCBlSJTEW4vslvj2bwYgXdL5FvHKfWHKGvL+M2NymrWag1GTtcx1NDhicCDCtLr5omDF3KYxrrjRFeevsL7C+38bdu8eRnHeL9iJmhh5iYPMmGKVCERaYdketLhOGzr4WoQlCyYXZIRWsrJGbCznqGtDZAOlAoV+oYep2TRzsYUz69tmA55bGVSxjUj1DN2ly1qmALavsxI6WEfEHl3H0zLBy/B6cEV1ZtrrlNNno6nhJTayVcWmpzYwXWmgpqVjImDAY80IqSvJ1hX5nh2JxLHICoH0hPy70+nbTHhVEXL07QVEHOUggnBFruQJmQQecXTzzB4fI4U+VhHpg5yVBmgHiji10aYHt9ne6NJWIS1rWDKCjHcUiiGJlSUbMqru8x5FXAkezX6+QNk4mdbZI4RlgWNzyPYwMDpDod/HabzGc+g1etIrt9OopHK+mhOyF23cFXFF7YPs96fYvVpVVs1cZ1bUYNhXReoRdGB90lbTjZmSeud+jW65wYGuLwk0+SmZmh7zj81re+heIHLEyOoMoIgUAt6LTjiNHRIpVynr6/T04/ycmHT3Lm8DEWihNkWxHjffug6SVJCLsd4lqdzANnCVstevU6Fy9eRCmGJHNZDEsnSSSLi7v83M+d4nOPLTBxaAB1/AhqTiWWMaPpUZ6eeRpV+X4l03VdnnnmGV544QUuXLjA4vnzhJcvk1ZVZBQRdjq0FhfZ6PV4+Y03WF1dvaOfUwkj7J6LkBLBwXwhanaIZUIvDO54VidJQj6f/7EqpnAwZ1xYWKDb7b6/7+c//3mmp6d/rP0/biSGxnMX3mS5WWPPd+jEIQiBEILDhw/TbrfRdR0pJaOjo/zar/3aj00CfxBBu039/HnaV67Qu30bGUUY5fIHyrh/FIQQ5PN5ZmZmmJiY+NAIog/CJ8T0p4dPzI/+mkJ8WHimohzoNv+aQY0+mJSiKChJjOZt3k1K33tL7IBMfmS/6ceJt97SSWcgYZhYFhHywMKg2VFY39KYGj+oLv7gdfin/7THr/xKEUWR759qEIBtw1e/6kBwIDmOUzOIqAOFMmH/QGMbRx1IJPygnFfKgxDzd4lvtyvQtA++7nECYXj361Iv4oz8bbT+dU49uMPlm2NcWj/FUDrm3FyT2ZkIzYc4Ubndsnn1NQNte5Zj3nUKRsjh8gaKCrz7scILSEbyqMt1yKhAQCmlE6S77FNG6ioLY1uM5XbRjT73zA0xoMOrr86xsVFgbi7GMO5cMxACOh2FY6VN5D/+dzx8I8DtPsisJfCNNI46yM1mhYbr83b7/+AXj4QkHgR6CmUbQnGdcqWKUBUOjzj4/g5L+n384i9vEvkpNpuT3FxLkUolhEmIkDET82u88/YhCPI8Wp9EJIs874Ys65IUKikzwc3b7AcW/6pZ4ueLgxw52cNYSfAjiyRUSEyd8vgQs1Gduc0lwq0y/UwaxQtJMhnQJcGoScoXCANUVFQZQRITVSw6PYPbrRsUcoNI1acW9BhUS2Ttcfbi65y6d5dv/fHPoFgCVZfEoYUe9mjUBrmwaXH6aEQUxVxKEvYJafrD/ObyA+TTbR6ae5v1jRwXth6HCM6dbTB06C2qzRMcf/YZXC3D7lSZ0HEZmO6jFtLopkpGdfBakv7qd8ht7bAXmlTtPHnLp9zvIetp9ktDVIeGuHTxS2Qnv8OGuE3a2kfpDnPSsJi1p8kqXa7eLDO22eHM6WFIDiIt+mGAn8myvnSTamOOhqvRHhC0AkmreozJ/BtYExa7S0MMl6pgKNTakoEBQdxpo2Vt9NwgSeiQMatcftul63ts6h52SsXW4VhiYPUCZA+WBdzatJmZl2T0hOmiRmMrT0hMe1cyYtvEcRe8a2jmLMVMkecWq/zN+4q4/TdxyaHEPl6QQokjRvoKIT6XmwG97cs8cHSOpc4tdvaPk83ESKHQ7PpcXNZR0nDpep9y6fcQQy+w6ZhEkUHKcFFSHhODkme/0+ahz9s4sorUU7h4zJVjrpshaSUkFSTs+QpzjQBkgqKp6EHCXCdNNp2m+3mdzed1XCVG1w2mAhdPSwiCA3GKkoBvmXTKC8ThJvsIMrrBjKoipMBW+lzfdbBSGtv7BgOlkFYzQrFU6k5CN4bhaIpWW8dRYXMTDCEoZRK+bNzDf9jeoj4ScU1Vye4mDIeCggFqJeF/GxlBFRGGk6ZQPUYUG0RhjBLn6Y/ErK41CbwuRxKXwlBCrGk0O/t0FUm/p2AGGU5UBtHHFgjNGpVpl0srw9R7p7i06JE22hhHN/j04Axb1fNsR7vodDClwAe8UBCY4AeS+pag2u0zvNNkfHyXSHYopzWiPnzuUMiRSkL10hTVm4JwJM/MyAAKBpfPX6ZvC95uxZweMMnZC1zbVNm7ZZHZ8zmUG+IFo8b2cx5dV2ElUEmnTaxaSLqh8dQXLXQroulKHspV2K9J6pt57v3CILe/t8LgZohGRHMq5qSboZFKCJMYqSo0Q8lNs0khlefLhx8lbRromkLFMnGaNbL5MofvP8d6PsvRJGZDQrvVI7ZjPOERxxGyH6NN6aCCCBTUUGW3us/Y8AjpRoPQ8+j0ugdeDIrCG7rOuelprFu3DvoWH3+c7vIyj65meePq93A6PXbosbe1xCFp4w8P8fzeClEUMT80j6KdIk3MyaLP9s0VfDdEu3cIc0Dj7NQUC5OTuLu7yKEhnn32Wdqex1tJwuhOlZGKRnnQRigKY0aGB+6fplrvMrswwheP/o+kUim2Ll/ltW8/i9NoYug6x2dnOTw9hdA01Dihv7XF0Kc/zTvf/S7+8eNgrqEoO7w3XTUMjddfX+Mzn5phwRljuDqBJyKKC0fJDd8pf43jmD/4gz8gSRJSqdSBwdSlS7wQBHwhk2GwWCSSkj+5cAH5zjvkjx0jSRK+/vWvc+bMGR588EHMvv9+Lvl7D7tcschgELDv9Eh+YP7Q7/c5efLkXzQtuQvZbJYnnnjiI+3zk4QQAinlXSRR0zQef/xxfukj5Ml/EPxGg/3nnkN51wBLxjHtxUX8ep3KIx9gvvQJ/n+HTyqmHyM+6uqL2N9HabfvJnv9PsG5c8gfYf39Vw3d9VHi+O4qZpIQqxqBlaA7yweZpHdBEP6oPtOPGa+8YrwflaLEEpEcZItq2gHpnB6PIJFEpk6iH6ywFgqSc+d8Ll7U6HQUpDzo2/zX/7pFoQCJlkfvXATVAjWFlS7g+T7ImMgaILLnUMMYkgPCKxUFL5M6kD4DhiFYfLuLYfzwymCCYqQ481Dpg4vEQiExB0nSc1QmK5yZdzky5lKuSMJYIYwE+3uCb34zBToIt8qgt0gvSlF1CoxntzgIMI1JogLdgZP8/t5T/MeXjvDcvkWquEN8RJA/rXLv5E3mS7coZ1vksx3uy/rk9JsMTT5JEGZQVdjePpAUvzfWKIKhsscvvfrr+Ls9XuufxBcpBBK7X4MkYV8Ms9m1kZrNw8f6xAKijEESK3T6RcaOqOzsnGJ3d4ixgTxjJQ+rtMOt5RPEzixXb4ywuqVjoBJ7RXJxnnLnBDNxkbnMG1TEMn+qRxgyRk0i2tk8fmyhyYRaYjAYZckmMYrpk1RV2rVh1GOHyLV2MTo1/MAi7uYphS0yy9fYiwYRtk/unn0wFaQjQMREoUrLhGbG5g//fIEXl3Wu1NuYosipuTn0OGSzs0EiwVBn+ezxAVZ6dSzdYdhcolzaI/J1eqFg4voW3xoQbKlQ7Wf47dqTTFcu8aXp8wzFMWP5Wzww9wa6IdlsH8WtbzPbeI7y+SUa1TqpiQchiem2ujjtLmoYUG2H1FffRPeXSeX6ZKwemVRA31NxBnNsl4+zoUwwMayyPrBCw7jFaBHGywkdT+UbN1IEr5U5c77F4Hqfxn6V1pUl0kGNLhpLThm3do3hzA5aZpixSh9Fhdu1cRZGIka0Cm3RIaV1GeJl1kWL6eAQ+dk+Tm2fJN/GyvRRRQ+n3kPcrqJ1bW7pPXKJxaCbJpWY2LaLJhL0Rox1I+HIDZB7Kj1VknQ01qox+06EroETaFhGgIyaJNE+O406JXsDZ2gTgyZq6xKDcpl0sEmvvUvfiw+qTGFCbWeLvcYDrG4OsL4WcrWa8PLKJkk2YXjoz8lmrjM5/w3CsIdp+Bji/2XvzWIsuc47z985scfdl9z3rH3fyCJLJEVREiVZ8qgNy3YDHve0gW4P5mkGBqanHwxMe4ARMPDLYJ408IvtHltyG5bbbVGyKYkSKYqkyCqStW9ZVZlZuWfefYs9zjxkiSJFyiNLlCX18PeSy0VEnHtxI875zvd9/79PEKSoWFDMCxYvQXnaJNEGWCZ8a1Hx0v0G23YFJ1bUsikztQArStASha4kTr4EQqOSCXjmWMzVRoQq2lxq9SgIGyeIsJTCQse3HL42P8lyo8C542XyTpdtXyeIFXvTNrNLHjc0D33gkfcDLg4kHV0SKUUnEjQDh8La42yoiJUdSGMwBcxUoZCDUiOlc63N0XKZ5l7BvTFF/1dC1g653KgPIRKF0RnFjHJIs0Pk1QATw2jhbAXEmmLisM/wZEzTC9lIIppJRCeNqGhdMlt9oisDJrU2X3lxP0oewFcRDS+mG5jcXBlhaPI+QwOTxfoSXpJSMlI2ZcyYo5ExUq7fi3n5RoTZVtiLfe7e71GITYZik0wFTh7X2VeQDFRKku7H2lvEGSmQ6AmhF5KsJtAU7KwJ0rhE2R3FbfjsLVdwtQy3t1fZqDcxHEEnbmPZOkKaTCsL3cjTCqHeFMxlylSHJNXj++hHQzhGl+zyJnUfbtgheqChC0UnTTGkJKPrNFydIVXkUWOYcr1HseMj2n1CoZg1RimWRhg6e4bWC9/m2soyK+0WXsfHsxJMaZAv22iORpKT2Es2BZXD1R2K2Rza6n1ajQZCShzTRCpFvdGgbJoMZbPIT3xi17+yUoE4puybjAzNcWnxMgWjhKW75LsRGyKm1/bopT1G7BEQGiqVFIKIQzMzfO5jH+P43r0Ml8tITSNsNnn28mUUMDQ0xJ07d1ipN9k3OYxMdTQNHjqzDz+MeWnhZe4tllhYWOW73/0u3/jKM+S13axbnCQsbqzTHwyYHhtDCUG3WSe3dy9vvPEGaZqSplk0bY3dCUwgpSD0fBb/7jovf22D9dV1hrIF4pVVEs/DeVsG79atW9y7d+8tcZy418Pf3sa0LBqdDnsnJnj1+nWavR62lGiFAtIwsCyL+/fvs29+nhw/mOi8ep3lN96ku7lBq9lkeWcHM+OilKLX63HkyBGOHDnyfixffm5kMhkuX778Lr/UKIqYm5tjZmbmpzp/7eWXd62A3rbQkbpO2GjgTEy878q9/xgfZEx/fnyQMf0FJXrsMfS//MvdbfEHDeXC80jGxkh/ypv/Z4GXc8jXO/xwvk8ohZ+1SJw9qPZLu+/n7eIFSUCUPfzPO1jg7c/V2NQxvRAUBKGgXEh2s5lSENnvDKQPHkz4kz9pv+c5lVEkzh3H6F5CaQ96gNMAJQyC8hOgmcS2gUxSlBBv9a5+H6cyiu1sEzSWKeW6KHMET1UYDAQPPT3+41UuK4URxHT7kvPnDTxP4Lrw8kWHfFYhlIbSHG6vPMre6TeJgIZfoRwsQzLHSvhr/F/nf5P7Yo1aZpt29yjq/DHmin/L4YlvMVVtECUCQ2ocL5TRNBPiBDf6ImfO/D4LCzqnT4fcvWswGAikVBSLKf/9vq8jXuyTK7vo2xEpEo2U0MrjpD6H53p0jBFavZBIk3iuAwhSJTD1BK2fZXo6JlYlwjQhqXU5/8bDZDIRnq9xcELnqxdG6LUynD37Bt999lc5UgmI0hr5gs+FOOWWrrCFQJMGGUNixClKgukqWoZCapKmVmRje5JOZi/7VITmeUSWSxJISAZYTghTUxy7dIkL7hH8Wgb0mKTqEQeScMwiMmFlaYR9ax9icmMPfzHyn9hCIzIaVOeWyQnoBRpXXi8ylMvw+CGPi69fp2BKglixnQ/RenNsZF7BuKxxvzrC5SNDlMMBH3JbNKIcnTaYwsWyFKcmX8OplanEG8xO9HA+57J3qUV3cIF+7mGiJEAQUW81Nm16jgAAIABJREFUuGglPGp2iZoCr17EyXRIUsEbd6ER92jlL1HMXaDuZTlc1bBwuR+OECkDw7FxVIgx/h3C9gi2nmdEWdTiHt71BS5GVfLnLpDLNIkTSTsu0FMjnKi2+cyJBbbic5S9EsLOUA8jFtK/4sxti0LDoPaNLKXf9BGVAUEUYnUdnHqObL7BiGZiBRlEoBEqnyCJWNs2mA0jVKwYVQmGsmAjxloRdA/qaGlIHEjsTITQFZ3AJpcJiRKInZDKp+uYpGy/qDE9KugYHklXx49ShOeiOxrSCCDwGHgv8tJlg5xhs1OC6aEpDlS6VHObNPsuqdXAG0gclaLpKYZKiRJJEEG5oBj1A+ypiOvtPp3EZMiq4pnD7JR3cOodrs5GPLIAphJolgW6xCPg64cTFtqwMaYIIo+dbMx/dFrsdTOUU4dO5MLcJIFM2Tvkcu3NDPnCCFh1Lt68z7WlDh8pK9KCR2in3KzrOBWIViXX9un07BQ9gcOjitwA6tsgirvTjamDphnkh+vY/oC1SY3JeQdzOKVvBgRpilIGpqYo5SNEfpHNuyYKnThN8AYhfhJQLMKV10zUvoB7ARzPHKFkjINM+c76Eh+JVjji/gMv3Pxt0taAuCIhDXFM6CUKO3S5e2ec43MJw4sFlvwIL5DMZ01ybsL5qwNuriZYTY297Ry6s9vTf37F4yMlm8pA55tfHXC+62MVPQpGl6FgHNftc8JpcPZYG3G8wJ3lIS5c0VhrNPntxwS60slnAvKp4thGBqtQ4WpvDVMzGTLzTGVy6KLHYEMnO+YwXTDYe2pXYEeXPS72j0KpQtpRRL0aqtihk0Q0k2TXszpNcZHksy7/Rp1iVMvQNtsolSITwfDSABnVyT76FAGCW6urWMCxSpWGyiEMQVhJiDIxgWFxYuZDXCrf42B6lGsXr9Nq1+kPBozE8e7CPo5BSgqmydbmJvMnT75jgddfWkKzbVbu3UQIgXxggRLrklNDQ3xto0Hf79PxO+TMHHqSEIQhn3jsMVzbJklT3rh1i/tbWzR3dhg0GuwpFhmzLP7l8eNc6Hb5yoXbzE/o/K///mluLd7k4s0NDOMAjrOrnfBnf/ZnVIslTk3N4vne7jxtmNxZW+Ohw0dQ/KBSzLZtfN9HCIMoOoOu30KIDp1OwIt/e4eyXiSbUahGlzt37uyKAClFds8ezAd9l0tLS+i6/o4MoGA3K9gdDADYqNfRH7SuKKUQvo+1tYXt+1z84hfJffSTZMbH6Szc5t7Vq6RCIjXJqGmx0Wpzvd/l7COPcOLEiR/ZF/rLxOjoKAcPHuTmzZtvqf/6vk8mk+GRRx75qc8ftdu7z8AfQrMs+ouLmKf+eRMYH/CLxwcZ0/eRf/Lui2EQHTyIGAwQngemSXTsGOETT7x3yezPmV0vToUeRLtluUqBAj/jEOZcEJLYnkYfLCCSPkLFiDQkdmcJy0/8VP2iPwn9vmBrS+7G/EKQ6hpCKdIYPvnhHqkeE2RdkP80j9HEmSIxxxFxB9fN05WTBJWP7WZR2b2WkvKdJb1AqyV45q+7HCg+T8VahrCFEy9TzdXY8/gTHD6VQ7t3D/ub38R87TX069cRUUQ6NvbOQF8pthYS/v4fHLpdie9Lul3JwrJFHIEwQJo6vbbP9r1hBu0iwYUB87KENA/wR6/8Ks1ghw2ngaUXcMyUREh6ywc4fvZljmX6HC4W2Z/LYesSSEjSSWTaRmQ/STYLm/dqVM0FRvP30ZM2pSGTw5f/jmzcxs0IrLDPG+19WFrMxB6Xg2cK6EcOMToes/+gQmVASEESSwrZDtlCh7niMBNjKY6V0vc0Wott6lsumVyTNBEYmqA1ULT6kvrmMM2VaYK2z/6xG6xMfZd82mRBgSEEicigLMl2FHIngtU0ZTSTYcbXiSODaLtAUp5iKK1hxB5Sj2mszlLJ9yhkGojsBPqgz2iuSTybENh5jLSMM5SD0jDnF4bokOdC/SjV4Y+ybfn8zrkNNCRSxiiRYGlgeePgVzkYBOx/+XnK3TtUW3fZ1+1Rd0b41qFVdsjS6e3Bb1Q44qRkDYMkdBBaCoMqaazQpc7H9v0D89UuW+0EVehjpjGmvAJC4jrDuI7O5nCGULvEgC0mZAsJpJHF5bUeUeohY4Op6S1OzinqhPiiz6QbcTJ7EwePrZaFRYjuL7OnU0W3bQyho8IsA5kjRGfyyCaDWKfjjqBcF5VkOTlnUspu0fLnyZV9VJAyMtrBnV5ncMghnjtFWlVoRkrQtzHiFEcmpIaGmTSo911u+XAtadM1d6syipFCq8XcaUywff0zfHf7o1yoPcJyby9mfYWZowFv3gkhUdgyJaspVJCwFet4wyUa6Qku3p4hXRI4jodTDLm7ougOBKN5DS21SJyIvA1ray2urj6EX5UMFUpkbYM9Mw16+GSK65w8fZHV1QiBIIx3H30raxphAnNzgsJAUvxeyguvCTIbilHfJTUmIFskKJmMb7XQZcRwqGMYFgMZ89xhxU4+ROkpomCx1h2ACXFbsaYn3EgTcsUJ7LwgxmNyfpRsVmO7VuP6xZfpbm3RSxSF13vcv5vwDxFU8zZSTzGzAq0jWS0IsspgzK6Qly7dZoqlQQToQuBKweLGa9QSl/XJBN3MMxkLzuZSpt0If/UzNLQmSUvR6Qj6g12/yFALGF1b5Vgxx+iYyUIj4KqR8FvTn6ZkjKISDb9tMu1M4esVhraXubyzlwVsSvl50iRC0xRhKsgbNlFsUJ3d5NbgPrS6mMpk0p9AbMYsvD6g31FMNC1yloXUE6QGSapo+in1IGG1rvAsGNQE9256nDw5zJmDmyxvLzFlz+CnHkPVHiNDGpNjgimrx5T9MMXcOFm7yN2dJZJ+E7etE8aKPiGbjQ6N1gC/HjFRNXj88CS54u4uvyYj6v1RuolinDwb8Spfz9VYNUNSIdAjQZikBFmH2f0zPNmboJytULSKFGSWHBaWm0MJxdBDZ2mrmO9+9auEvR66aTBaKuLoGrnIpNK16Ber7D+xh9N7DxPMabSDNjduX2fL89irDNI0xY8i/Djm0XyenGXR+fCHGXlbWWn39m0AtmpbbPY30YSGLyLqRp9QS+jkNBrbDYKtgMZOA13X+e8+/GFmHtjXfePCBdZrNQylsJeWEGFIz/OwdR3H83C6XbxyhWYXdjrDXLjYYWjoJOA+mP9aXLhwAT8M0XWN2aGh3SWEUliGSbSzzeD6FYRtUzh8mFyhwJUrVx5k7nTSdJQgGOdP//TbiH5CM4jY7naJ0pRKLsfKygpHjh9HhSH68DDf+MY3+M53vsONGzfY3NwEoFipEGxvI6RE1zQOTk9zbXERKSWmbWM6Du7iIlLtGr5ZhoHb6RB12tTWNwmSBMMwGCpXKRaK5ByHmcoQ88ePMTb9S2Dz92MyNzfH6Ogo3W4X0zQ5evQoTz755D+pf/NH0b15E/Ee/qMqSbCGhrCHh3/qa/y45HI5FhcXee6553j11Ve5fv06YRgyNjb2E/W7fsCPzwcZ018APE9w546GrsP8fPyDbJ7jED755M91bP8U/HwGP+tgDHaV+0LXekcQrcwK3vjvIINNRNIjtcZReobBQPDtb5tsbOw+kIaGUj784YBS6Uf02b4PnDsXogYBxShAaoqrm1n60uLXf+VF9OAKeAF6WyN25wnLT4J458NSbm2h372Lcl2iQ4fekYJNnQkCZwLGx4nW13+s8Xz96waHc18BYaNXprEqu63Ekpjj46+Q3pjB+s53dv1aDQOhFOabbyI6nXfYB21ua1y/bKLJXdGh7+N7kM/Aq6/b2O4MSVBG76/hXl3kvy1egqEDrPVHqDPEtnEds5OgKgJd2y1t7rVtotosd2yPY1UHiFHKJE2rtNp54gC0kZATQ89z4tOL3Lw/xuVLJidmWmTtHp01m42FlMKIzoHpHk+m17mSHmdyn0sSJ5SGIJEWUWYLERi4Yof9oytoWh9HFhi1dljZ3sszzwyxvhTRbI9QLaak0sIqtMnnAwgE927to92ocGiojug3+HD1/+YrxGjmFHuCNe4mPkkMd32frhLokUG+7TNYWuI5JfhMrsjodJV1PUAPE5CK9sZRSjmHsdE2qVYG1SM+sY/ksTPoO3folr/LjlZFxCOUBwl78opnF8fZdLrM6TaP5gZkkylSkaASjYLdwpQacXWLoDnKyNYtOppDmARYvkPfiBnO/C2viZj76X6oPU4pKJBz3sDNtBjoCkWCTCNMTZHP+EwVF1lvnGJuxMZU66yMh6x1e8wlL3Jj+xLbJw4QZpqolQbZpIpXczicgThNaMcSx5aEaIyUQrqhS2p6ZK1thmwXmdiMi/ucKqWctPq8VgM94xAriZMrISJFT0wS5VziXJ5tbRvTzSAjxex4lzTNk6aKip3S6pZxnR6ps0lZHODS9hUKwyZFvQ96ilPsEJCiNEGo9Wm4HrXMOoMIhKHwFbR9SX99gF6fQt35l0Shh6k65LIOsv0E6/U5Hjv0fzJZsbm2keIaEKWSJKpiOB7Hj5bopyaG8mmHGVJLMlvaYP6Yw6VLRa5ve4zrAbWWSbSo2DdQ/Eb+m9QmPotdqVEuDvC6HqkV8ehTz9Fs7gEkW3WfQmEJjYhOWzA5De2mzt6XE5pIvKKJY+UQYcx0bYHN8ZOUynvQp7eISwaJDl5k8OqQQAtislsBO1OSog22ZrBqhcimCQNBIZ/nibkWxYzP8HAR27rFhlfi5VoTw0gJtAiZJqS6YCw1Obyc0stFdHVJRnMZjgbs8WxUzuZy+w3OGE9gaxkSBmSlyYCUe5vfoSlN0C0OjEqWnMMcGB/Hd1sUCjf51P5vUXphnFejJjmzz/79MSrrMisGTB6SjG8V2MwmnJ/psi9zjHRg0kqjt4pm2t2AvD3MkjXCgBqDqEIQ9hAYiBjsFLwwYthw+RXnNNfsK9gHy2QbMa1Gm7XRgK1rCsc02JMtkIS7mepExZgmrHY8ihMWtU6CKsVoZNGFTXP9Jv3+KCIVDMwBs7lp7KjJiZFtksEojn4Sv7ZGp2FSzbU4O9vnq9sbbNkGcZhihwbFXMrBqZC9++HcngzYq5RdSWMwTKo0vFgjMhNenujT2dJxt00GlYCGkxDnTIbjMkE1wyfjhylk9F1FWE1DWiZY5ls9/z4pvb6Hd3Q/7cYiBUsRSwtFihkrapkMebfEcLHKRHaMrtji0NlD3Lt8lW6jz/mC5HBXkoljjloWGAZr8/OMzs29Y/7RczmidpuZsRleW3+NG5kNekaAnkhW0z79imTm7AyfG/ncW4vyQZKQxjG1Xo+dZhPXttHX1tBNk7ZS6JpGo9tF1zQizyNnGFAsEkUxy8v3sSybmeFh9G4Xy/eR7Aai19ZXWV1b5cDEJEXDJL6/jGab7J+aon/nDjf+6I+Y/73f49FHH+XChQukDzQ3Ll++vNsvatt8P2yoDwYIIRhxXe4sLHBybIyv/uc/p7dzm4PjUN+OkVKyuLiIEILq5CTNO3c4duAAAOV8nkajQeHwYeS9e7sy+UDg+4yOjqJyOZpXr+KXK2iaxkh1BE1K6q0GUZrgCEm8VUNOT73LF/2XmampKaam3v9g2xoZIazV3hWcpnFMbu/e9/16/xhra2t8+ctfxnVdpJQkScKbb77Jzs4On/rUp/5Zx/IBP+C/nrvoF5hXXjG5fNlA0xRpKnjxRZNz50KOHYv/vw/+RUIp5MoK+q1bYNtEJ06AfA+vKCFI7bG3/gxD+Ku/cpDyB844nY7kr//a5bd/e0Am87MJTnPNDv/N4ZAgkvQ9wcn5Aaa9SMqbIBzQdr/+ureEqHkEQ5/ZPTBJsJ95Bm19HeW6EMcYr71G+NRTxD+mDPwPMxgI6C6TGx5gaBZhqtGLNKQU+L7OYHuN/Jubu0Hp21CWhfXcc2jLywhdJ6lUeKP/SVotk4IZE6c/2NUbG4q4dtdis6szNZXQ6RfQDYdU9LiRe5qPlbfwZI5UCRQpIk1RUQymhvbA484L9xIml1GdEVIhWW+P8+wLZ2h3bZKgQKYq+eyRu1THXJJBj0OzNuVMBU0OEz8d467eotlIKRZSPj63wBNzDvf9McL5GUqnIpoNyeb2FFIs4aZXWOt4jGVGSbSYlfoG/9P/cZTZMYtM4OHHWa6u2qy0Yo5NmQxaKZdf0DB0i31jW/zWIy+gK8nK3gpue4mg28PQhslmIq6LHvd6OfJWSGk75YhwsURKy4i5/IbBrwYrJPskluXA8hBjVZPCMKQyiyJGCZ+gFPKN1Y+ixxnW7mwxObaKGcQ0Wlna7YeJ28OkapWQPnuGBNtBh2ljCkMz6XkuJB6m3acabLK4k+NmM0vs2cjKHfLlS0x5His3jvH8sEF3/jxy6Qnqzf0MWTewStuU+pPsn9uhXNbI2G1sZ4pWUKbodshlHmGY++wU+3TpcD6x2Vi+Q5jtsadaxF2FNcugHfU4XOyiNVPy5REmRjTcQpubag2EYs7pUY8BFVAxTVw7op8kPDqSoC2p3XteSjKOYMip8y39BMPJgJLQ6NJGaD65nI40Em4tNllo/j2mk2C5DgcKJdasKhfzDYqyS8EeUC60SOJd0Z6dviKMu8RaQmYm5M61LHtLJn09ZU10KTYNjNVfJaOZeIZJIgXr9YD56gJtVebrl8+wb7rHvtEBd9Z8hPDImwG/+XSeDZWwmfpI16Fi1hkWAbLtMF1yuW2kJJUM93tZppsOWdmgP6f41GdvYhpd1m4foR9kqR5d5OjpG/z5X/5r+lmbkx96BdtU1BvTFPJXGBvvoCeS4iWDTj1FSZN82cWPk12PS5lQrDXQS+OE8zNUXlnANTN4Vp9El1SbKZo9wnK3h8oo3ILGTM5m/xEXXd/P5P1NRoRBMVcklRIvhul8k6lSjdfDLvkUzsylHDmXIFzJnOfQvaPT3Bacd3UamsXrOz3Edh+xXeR5eZs9MqSaZHEyfdbayxxDY6mTsG9fzJn0OCX/Q1jJMmZymdvPBeTrDp8+vcLj/Rw7vTE8Tyfv+4x/eBTsFnFYw/UOc2zLZY89RpLGmMbuhlsYgpZCmPgUh/cgWabdOEUvd4/hoYdIVUIYJ/Q9waPHN7l25TyT22PcrazTMCSy4HDozBybN2+gRwJzoKFpGik63bjNrcRHTStuD4e0ZYQe25RbQxiOSbc2wEaQMx1kGjEZLaKJGKXVGB87Q99fZSFjYNdvESUDysMa0yNFetoaSz2X0rhgrBrgOBpPP6WTMTzqqwUs0aLgBNyp7adgDuE0d9hsKNY9MKwK060B7XxEWLTIGzM87JwhHkh0QwMp8UIfQ9dB7Vq2yJEsWuUVKuGAe8VrbB8sM7wVsdc0CIXBdt4hjU0+cepJStkMmtRIlWJtfY2jHzpC0VyiXusQJkMYUcwV4HtScnz/fp7+IRGe0okT3H3mP3PTu8dGocem2MGIDRKl09VAqYRipYhpm2gPNmk3g4DTxSJ3r1zBBNIowoxjzFIJt9XCD0PCMEQKga7r2J0O2UOHsCwLQ9dJb97EbbdB1xlKU57K57k0GCA1jb4QvLl6n1ODAVGa8tTRx3Aqld2KozTl/he/yKnf/32OHDnC6uoq7XabXq/HrVu3CJXCeiA6ZEhJvd9nNJsl6HaJkqs07n2HXC4PAo5NhNxYWUWYwywtLVE4cYLDTz3FqaEh0iDgQ2fP8vXbtzGyWVQYogyDKIool8sUi0UUMIgDWuurjM7vJYpDttst4uTB+k0pEqUwvRD/v6LA9GdF+aGH2PrGN0iCAM2yUGlK4nmUTp78Z+0vBfjWt771lvry97Ftm6WlJer1OpVK5Ucc+QE/Sz64i37G3L2rcfmy/rbga/fnSy+ZjI8nVCo/u4zh+0qS4PyX/4LY2dmVqE1TjKtXCc+eJTpz5h899OJFgzR9q40WeOALGvd5839/gU9WL+ye57HH3rcSZqPnYXoRStcwNTBtQIHWbRCYBVLtbTLv0kTzVhBxF6XnML/3PWS9jvp+qcGDnT3z298mnpyEn8C4OQ4Vx4a2qDoJkUrIioSSDVt9Gx8N5fvgKXDfKXhlXLqEaDZR2SwiSdBu3cJZC3l97HPMVDRGihFpKtCkYu8MfPXlPGEsWVnZ/SiTAeipw+qgwp1GyHy+jmvEOMqhza5ok0AjUQLDislHDcbXJFIu0e8U+Ju//yjuyICcLQisfYzYN7lxO8MxB4iyjBULJA/83Cw3pfXr/4bC175Eb3uT0nwZN6OxfyYheGoWtJRKJSJJNcxOjTiewlF1YgKOHYn5/f9wkowV0+n2KDhgajEF26fRtfBijWsLEq8X8diZf+DTD1/EkDBdaWKYA5ZUC1NKhJZnJhJsGjAfW5SXcoxZEYkmiUQMWxae3MFpVhip2yS2hultInoRangGmVrEqkMqBlzIfwbLW2Bt5x7NfJZu6zCgiMhgBh32an3aK29yupMlN+KzWZR04wFuGJFqMYbIUY7GsXq3aV4TaCridOYNWvYCAkEtmOLjgyZ7ZI+/nN1PbfQGL937DHsri1Q6Lh/9yDrZbAekRupJGr1zzE9VsFQTEsVoUuKlWonX7tRZDCI8t4dV07i7A2JWcWwjh11q0dHzHDt6DqNooxcCdPsQs94O8eAN9NhAuAmkMaHwsZ029XaeU9Jg00hBWKSWwenjHttdm9WNYezmNPN2zEgqUOaAsFvgyuZN2kFKqRqgmYrY3+Li+e9w4qEqGZFyvvkiB4eGQUgiJdAHBobVxHTqqBTsLHz68ZDtWoTdtGk0HMxSkUFYQKqEGImKJZWCQ73rkThd3PgwKrxITtf4zUcCdFx6nmTQ63BqKuXNbsK9JYv1SzNEoUshCyMFm4nCDhvtVSyhMZGmxK7LwY8P2F+ZJuw22D//AhJYlxr32/O4bh/ZT/nua4eZHdlhqNjltTcfI954mRPnPCrNGGUohgsW52KDv3faBBrcjAK8+BZhq0EVxdlcAZnEFDs+g5bO/W6K6oeUzjusntPQzR6tfszyTsz0RI2HRjsUcwfoDxKiNGHMEXSEy2jhGu16ymOnJGenY6iDHxiEuiL/aI/vdV36KwqtE9HSDXp2jKF5uM0aWnWCu7VbDO6FTLgR9ozJv3rEZpCNmchM8fzFDt/8+6/g9fokDYUuBPsnHf71JxWj5R69Vha/K+ls6RT3jDI0ITklYw5M5XnxLmhCYCaKRgcSuauCrgF6DMPGJtOj27T6owjxOpncHINwjAPTq3xv+Y9xvrXJlmVR17M0bI9sGcIXa3z0Qx5vLkOoD8hesfCXDVaLCREwWtKxQ2hbEs9y2LD6VBOL/sADBKapccyLAEW20CEJc8SYXBh0GU9XyToBceqCjHnsyVHiqx3cVou+brBvRuPw6V2xNz9NmJroU5CzTBfHGE7+gDf/7i/52oW/IUoVRT8gL+HuaIHZ0WlM06SiimRwUVkd07YhiulHAb3AQ89kyI5HZCaWMSyDFa+BVa6h9ve4pZuIqIyMJQaSmX2jPH7uYa7Xr9Hs1thZuo7R6FIsFck8vI9Lr1xjlDImOitbG5DJ8PBjj5H9IR/09U6TP29eZHTHR5RNxqMxammPe/YA07M5VDiEbupspRvMOlWSRCOKYwpnzzJtmtTOn8fJ5dD6fYhjhksl6u02tXYbXdeRSlEqFqnOzaGUYjSOMT2PSEoMKVEIDh48SHr1KjeiCCwLG0iV4vC+fWSq1bfGKqQkbDQIm03MUon5+Xlu3bpFo9Gg2Wyy6fuUlCJrmlQLBRKliDyPg8enaHbuY9kZeJBTHRmuUil53G1kafYVn/3sZ5mYeKd67796/HFu37jB6ssvo3e7DGcyVAyDqNvFyOXQ83n89XXqzQZB+La1Q5oSGAaz42PI9JdkLfdzRjNNxj71KXqLi/hbW0jTJH/wIMY/Utr5s0ApRa1We8/XbNvm9u3bnDt37p91TB+wywc9pu8j79Vj+sILFvDuWnVdh15PsmfPu02afxExX30VbWVlNygTYjfqsSz0xcXdLOKP2Ona3JT8xV+4LC/r1OsalqWwbdBv3sT95rNE211OySuYr76K9eKLBI899lYpzU9DttlH/FCPJypAhqtoyiQ2/He8JFRMYlRRZgXr+effGUW/dfxufVr6tkntx+0rzoceG+s2eXGFFAv1QGEwY8a0fJ25PQp9ETB+8N5Fs4m2soLo99E2NhC9HjKOkVtbVHcW+Lv+k6x3HOpdnVeuOiytmhyZGPDwoQHD1YRAaYyOKQr1RXaCAjP5JgfGeoSJxvLOLE1zA5nJkqDR6tocOLDAfPgSTwefQg8FL93dR6ubQ24LQudx0sw0ufQ6Zf0uvb5J2R0D8QOxCiFSNozTxCfPYh/fj3tsHnXyNMzOIuIVTPkShnaDkbENqqUVNCNmaCRkfj5B0+CP/+IItgVxnNJbD3Ad8BMD4pTFOwH9ZsDpmVd44uR1TMOkmg3YU+2S8SQR6/T0Ih0/gyRly/SQWsx0o0MYlOh1sgzpHYbbNSwjz7GwhCBBz2cQtkZacGG4TKrHRDOS+PE5Xlk4gNddRsUxiRwQJAlRbOIGbVQY0PQD2HHZE41gbW5T3dtFVIskkcmYYzG5so5z7SVW/nqDYnuDY/ICOXOTjXKCrWvs+BUwIasEQddlvWSQNGZpLD3Er527yezkJkIkRFhs69NUJ1fQuwV0U2PQr2O7HpeW7tCLHZRRItJD9GwGb5Cws+gRVyA73OLokY9hGiE9XeGlKcIcYGk5XNFDFx55o4ymYvxEoTVGOIqNUYJgPcPRkwlHjtZxJ5YpPLHJmU/eph6eJrO5imt7mIRYySJXtlKUOkQ238MVt7BZR9MUvfYKT8wM0LQ+z254HMu38foRYbuNW2qjEvA1aGU06k2JYSS0A52V2jDmTEC8dYg5OyRXTnAyAYN+QprqBOMF/ud/e4Kvfu/bjJc2qOQUaWQhpEaqTCb2WqTeMaaL/5Znb9QoJw1kl/E5AAAgAElEQVT8MGTgGxiywp6Czp5Jg2IzZaZYYt/TCjkYIPoByjCQSJSR5dr6PjQtYtB2GUjFnXqOZ16bYuXqFIYcEOot9to9yolOLmMyXg3xjJBn9R6KEE3vU8wmzMcm90SL/dkuL/Z8rtR94iglkpJWO8Fv+AihkIHk11dKzFQS6v0OrWibTFHHsCRKBrSj6zTjkPubOX7rIw5xYBDFMTIyaOoxvbzLTiYmXIzY0SQ7mkCZKbpUGJqgvxPgFrNIp8VnxiTBwGB+SOfU0Dwbco4v/c1XkcLDtXWEB5om2G6mNPoeJ/aZDLoWSINQSdJhyNkphVGfvJZjbTVEGUUaUYRKQBOQShjC5rn7lxnFZri0zPTYGoY0acV13PIrVEoL1F6/TqaXcKvRZUJp7FcmB7MhXSW54oW4U1BvxWwPB9SJSWLB4XGHdhgzMFKyZhlfxggrppIMUSkrxucUc6VxRrsdEr2LZYVEgc6mN4snY0aidVKp72oBCEk7gZ1kk185rTg0plPJ6aQN0Ps60tLIRA6uexTD2sebX7rD889+k57jYxkxmuYThgFDXsyS8CgWMmQpkI+y7JmZ5cDhY/Q21jAyGZzRUTQV0qgv0yKHPZA8X7vCjaRBlMRETkxUVpzZe4BDR/Zw4vhxZq1xzr/8df76mWdYXd6hud7m/sIKTtZh8tg0+415NMMiOzLCIx95kk984hNvm7YUX/va1/jK819h22/RMDRupBvIoTKjh/ZSzQ0RBiEj1gj5XJv56TXOzNcYHV0litbZ2XHRDIf1rS1s1yX1PGSzidA0LMNgvFzGNk2qjoN9+DA7Yci1a9coNRrUmk2SOKZgOagoImuaPLZ3H1oY0o4jxopFPj43x4H3KOFMw5DS6dNvBSwvvvgizz77LHEc0x8MCKUkjGPCMESTkiMf+hD/4nN7CIKA20vbmA+ylwM/5OKtTWr1Gv1AMhgM8H2f6ekfeI6bpslcJoN/7RrFfH7XWiZJCHZ2EIaBWSpRnp6m02himbs2J6SKOE7IzM0xPTsLAmL7p1+7/P8BISVWuUxmehp3YuI9xZB+5mMQgps3bxLH765cjKKIyclJxsbG3uPID3g/+Jn0mP7pn/4pCwsLCCH43d/9Xfa+7cFy+fJlvvSlLyGl5NSpU/zGb/zGT3qZX3qC4L0bqKUE3//laa7W7917p8ztA5TrYly69J59srdu6Xz72yZhKEgSwWAAly8b7JsesOfVV8GyMbRdZT6yWUS/T/YLX6D37/7d+zDi99i9FPoDEaH3yMqqBGUUdn9/sJv7LgwD0ev9BENRaEnCxGyO1t1p8uYmKeb3L8ueiTZq+DGSkTvIVuutDK3c3IQwRF9YIK1Udo1Og5C5vMfmZoFfm/k6f9X6DBeWLD5+ss1EJaQ70LAsGCr5nNzn8fyNIsnwCKw02F7pog41+BePnGdoaIuvrB/kEj6tJOT4R5b4pP0GH/fPYQubuPYw29f3gW8RpyC1Frp6hbbQmSo30AYxQ1Wbujf64DNV+EkRU0souynZY3uIHYEIuzjtRYS/ieqsoCZsfNHHH5i09e+wfO0MpuZw6HC8u32jFIm0CYViZytAEdANbKpOn9964g7HKs+gD5ep5jyEgKsbQ9Sbo6w1Rwim7rIV2mgozETQzrQxNQ1hhuiWQncLeEbCiZ5AiB6YgGihSg6YJukT5widbRK5SmLPkMYhly4ucWo2S6FrkGQ9IrMPRLhunpu3Fvlo50lGSw2yTZ+xzS2uTVTIVm/hvrkGtzvUeqNsFqeZ6i+SC31CP0Lq2u7XM1Ukho6fWBxuxdwsV3FaIxRLguXgLFW1jh9q5O4tMr55C4cuKtrGGzvA6FPfJtb7PJwP2CsdFgcef/WtAtuvO+ALLJmyoxJqepG14ZCnj4QsbYbU23CvmzJj+WSsPejeGvGgiyVgqVtmQhkIoSgMG8x84RwGOmLnuyT6NLHdYtgO+LWPL/DKeIPz1xtgtlhe7FHvjHN6oo0RhwRpn04qacRNOp0upyyNR5TF9vo4d8ZblKMmE05CGEBkm7TdLLEXMHFVR697HMsOCMoBfiFk9fAa99fnyPUG6LYimI15YRn+l8dGOLp3kv/t9/49C//P/0i8WMMdHaY1WSLvFNjZPsCpQ7/LIAgZHalwdxuKfhfDF1hFG4xH+MxDS+BtwFQLYbZpFQfU8gO2hYEXS7JY6L6Gdy/P6vdszk8Z3MuHiDSmMGKyPJ6ll3GY1QUH6xFOpY7U8jSThI/FGr4vEfMmbgF6O03W0jZfaWnU2ylTZY21uiJUMVJImk2fomHxm4UzVGWbDdEjbyas1Hwyw5voIiURAa4Le/aNccYroFV66JNZNjdriO0sQ6rODRVhEdOpGizGGjKJyAcQ6RGDKMT2fWQ7Q37DRhY1DEfy/E1J7sgcty+10eIQ09FIUkAku4Lxmsa1pYBWL8FyU6J+glUWaBJ0PaAVHsEt7GVu6hobO9A2C6w3u9gKjo1aoG1TEOuERgHrikPRjAknNhmhRRaB3TV5tHKYb9x9jUmpU40iLDOgIVJWMh7ZwIJ7EafmNBIrYmU2Jt2WTBkx3go0Y0Xe0MiKHFvCQ0YD7MpJqmmX49VZdL+Pq3koldDrmTRjgaZrQLo7TwhF30vx/JjsToLYm5Ky2w+akBL1I7I1B61qktbW6HVy3LrQJFEKN5UI6aMeaN2JMEXvRwyCFqMcwTB1Hj1+Ess0mfvo0zQ217m3eJdX7r5ObIYY/Q6vXktoZkPS2T7kFQPRohFEfFm9wOFglqsXLvCN5T/m+UsL6BKG9SL5oWESkXLn8j2eLDzO6ROnSVWKH0Yc+/g75+IrV66wvr5OYiSYanfecQ2X1naLbDGLm3fRTA3HbeEWthi1phkMTJ57bok0NYH/yP37Jer1BlJKCrkcI/U6VhwzOjTCo4cPsbG1TZLNcq9S5eYbr2NZFrZpMj09zf7xCfr9AfMjw9j9AcLQ+fWHzvI7k5MM4oDO1avvOW1qto01NASA53msr68TRRGFQgFd12k0GgyAfhxTmZ7mf/jD/8DO/T/DrVqYhoZ6UOr7+rX7AOhSY3hykkwmw82bN7Ftm4ceeujBPJyw8+ab5Pbvp3vzJkoIhKYhdJ3+0hKzv/M7ZObmyF69SrK+Q6vdQtgOYwf2MzI2jkgVofvuoDQIAgaDAZlM5i3Lmveb1vXrtC5eRM/lGHnqKYwfypR/wI9mZmaGa9euof9QIiJJEg4dOvRzGtUH/ESB6fXr19nc3OTzn/88q6urfOELX+Dzn//8W6//yZ/8CX/wB39AuVzmD//wD3n00UeZnJx83wb9y0SplLK1pb2rQjUMdwWAfml4IIH/LjQNEQTv+neawve+Z5LNwtRUwsWLEtvejfca31tiDsEgsvhQ5foPDjJN9IWF92W4sa5hBtE7xyx0lCySqh8SK1IpqZ4ntUZ2x14sIj3v3ScdDIj37Pknj0U8mCDHxhIM/SN07l/ASu5iyIhc2cacfYQgd4Tk6TnsL38ZORjs9rZG0W5QOjWNfOhRUsskVDF2lHJ2IuRS/x6uqzh+wOPkAZ/SENy7K+gPJH1P4jgJR8Z6XPKnMJWkZDcRta+SeiUePnuIk5/wUXqAUhqe99vIv4hQaQza7g5i3gmpDTLoMkGP75KIWSIM1vrHOTB8k0ImoNvfodGvEKca6+FhpisxmZzCfBDXG5tvIO7eRSQSEerEL1xEZS3UyW0yeYOx2QXq909z53qGPVMdltYzaGae/5e9Nw2S7DrP9J5z7p57Vmbte1f13o3eADTYWAiCwkKCGmkkcaSgltEENSOPY+RRjMP2TIT1179sWY6xFbIVYVGrRUIaiSK4AiAIkCDQaKDRe3VXV9deWVW575l3Pf5RYJNNYiSKIj0zNN5flXm3c29m5fm+873f+/rZJE5lBxkERJHiN89+lon9IQMPzWMs3MYXNufXJlAKFso5RKdHetfGa2ZIxRtMuvfTS9+koi+S9AT9IEM4IMkn25xua4CA8SHUYBJiApoRkSHwrAgv8SRfef0Q169e5JvvzLFayDIxqDgycR1baxHT+2xtFRjcjHGg8iKjokB2ooL4fIeppZsUfuoUiTc9Gs0s7ZpNJ3SoDecYX18kE2ok+iGhqWEkFYHUCF0LTUTovs2kbpBIrzEzvosQgtTCGqM7S/T0BC2VIIp0EttvUn0TGscGqXYC4o7OGa3KTi7NZxs+MgIin+rGKPbEMLLdY2FDsm9KkctHZIDdAhjhCG5oICTcaeTphIKkPcnY8Wn0mbNoVh2x/TbdmqTT3iAI2yCGece5woLdwHj4OOZ6FauySaXX4nLYYaa/SSQVHm16tJFCslQS6J5k/1CNKytjzM1ZSFUhaUkMJ0Oi3UM8BzIMUNIi48FP7bZ5sS+ZO3Gei2GOWjxHzGmzva6I76/zu7v/Iyde+cc8/sFPoH/yt3nr//o3ZLfaDFU9pn/5WVKTz+B6PX7vL55ne9egLiTL8RR+pEgGGo/6FoERxzhcg1bAbiuimlHIjmBYCykKSS0BbtSjdPs4kWrQTQQMKgc/AD8MSI8ucyZR4WDSp1OxSZb64PhUHcBTGIMCLWcgLQ+70cEwNd6ueSQNnZiMmIlLmk1B27DIB4LhpQT7DhssHz/KVnCHedVE15rUGz65vAZN6LXgZtTl4x//MAPaNXa2u8SsMbJHJ9kSa+xWK+w2yhQcE8cLUb6LJiHeEnQ3BMk7oMZcKn7EN6+axHQLR9O5c2GLQjWPUibgg9LRUwG9cohuKPoetLuKyBQEAkaOR5Q6fRqui+rMUl4dQUZTvNl9ESuqkwgU8+Mh6+5VCr1VtFAS6hpTB3WCyhz3ZTRiiRA9hF4YsGF0cM/DuGHgC0XCkWzGe1g+KE0QdiOwfWwHcoFkwQiYRnJgRmO7LGgSYskYx1Ix/vvTj7EojvLK9QWWfcWA2+PsaJ6kTAMGl0u3OJA6jasSSBEQ+IogNNguLmFEEhEIttsaQxoIoQhlRLjro3IuvmdTudIjqtSQ/T55+pQSPpGApK0RegGCFhNqAivo0wtM/vc/+gPymSyPnT6GNVjmm6+9Smywj8JABTroknalRy9SbI1WsEyTINLxCLi8+Q7jVR1z0yArHbq6z7beIl8MiI+PkdUSiKWA3mCPMAyZnJ5B+y5RmcXFRRzHIREkqPQrGNJgIBxgx9yhVqwRS8WYnZolq9Yh0EkryYULW0hp02wK1tY2aTQq9PuCUqnE6OgozoEDPDU4RrLfY6XeYN9DH6Cm64yUyuQTScrtFpgmUxOTDKez9ONJVLmMlk4T+R5mJo0mJVYqhZ5IEHa7aLHYt+fvdpvsY4/i4uOgUyqVKJVKjI+PUywWsSzrrnKqYRjMPzTPH1z9A6L+IppbJjoo6Vz1KCwW2SyUMKTCiA0w+u6Cs23bLCws3E1MvUaDsN9HdxzSx4/T294m7PWQuo6eSmHl80hNI3viBNqhgPFqnbDdQYs7yCjCt4x7qqVBEPDyyy+ztraG7/sYhsG+fft4/PHHkT+kdqXQ81j6vd/DLRbRYjFUEFB7801GPvpRBt+noH5fePrpp7l9+zadTgfHcQiCgH6/z6OPPorzA7RsvY8fDn6gxPTq1as88MADAExMTNDpdOh2u8RiMXZ3d0kkEuTf7Rc4deoUV69e/f9tYvrggx7PPRcjFvt2BS9612nl5EnvbznyPy+EAwNo1er3Jqfd7nsKAtXrkm5XkEwq0mnF1FTI+rqGYUDY9ahEKU4PrnMotXXvgb4PQfDeVNq/B7rpBObOLsKvoaQB+gAoiOz99EURLajsvR8FKC1Gf/Bjd4/1HnoI53OfQ31r5TGKkDs7KE0jencF9+8DJcRdNnd+UJIffBB4EAIffXmV4AtXiPXfJMpmcR9/fI+6u7mJarcxlu4gHvwAL6jbXIvKeCLE1CTHR6c5l5/jvvVdjtlbpEMfShpZc4RIJej1JM2GYCDmYQiHuccGOfAzEwQHfmnPt1UIIAA0Go2Iz3++Qe3CA4hOh1TM44Nzazwwvc2NnUGSVgVlflsm/k7tOCdP9qn1YtQ7DsXeDLvNSYJIY2qgQzoLkRTgddAXViHhokSIUB282gKyFGAEFsGxPFND26SycYJI5zc/UeE3f2c/1aYklVB082PUKi6Hpq9y+ckuf5zqcKx6iQMjWcR1myDw2KgP0VIJsrmAK0tnGRlepVuexrZdTtQP0R7N0u0vMGhmeSSR54EbDTRpE5weQ2oxaHosLOU5X97H5249QTIlmDQLDCy9xFh1keNC51qhSrGcYqM6yP6RJRq3buIZBX7uAw0G0pDsBWgthUJnML+B/coujd1JIsMg5rjU6zZFfz9exueUe545M8WloZC836DSyGKKPiuxFCOlB3F9nftn1zG8OoaKk9zYpmcnkER73rKmT1sompfSeIdNNNUmGdTYKmcZzZdQUYp2O9hT9DQUPX0XPThIpVBDpBSmJgilIpXSubmi88bOCMeTggGny0AvT1j16BmPY8sDhP4OwcZ/wAsrKE0jdIfpNX0uuLdJDQ3T0ddZmRjCGT+B88Ur1Ls1lLQwRYRNjtCPo+eKSBHQkiEZI2K5KZhfsIkySYxxcHsa2l8ZGL6GIXwMWxAqCxHz+I0gycspF/Psp6nVpmi3DrBlL5JM3mR41+d/ufE7VFPwM6c+wbH/6rf53F/+O35x+ieITT6D7/f46uv/M2/eOkbdCChrEo2AvbSrx1Vvjb+6sURx42n8HZehY1/hwbOLYEAkDbIZh64Db90us8ow+oCiLWqk8MhGGZz4Jv/MavLoXIjsmqinPFqezsZKi54Ab9gkMhWSFlkVUNP2EtWcZhBP7glK1S1BRjMYjwRLBZPs4RD9kz6ziV2y5WUKGyETAvZbLkZREQSCrZbBxrLO+W98nWM/75EeHGXScCiXiqSHM0yl2myWJGEvYjDlUu6IPUuZrqRfCdgNXPStgDFTx1MRuhPQ1AN2Npos3q6zu9Mh3tJIZfpEEmRc4Pe7aErHDOOEmqB3psOlTpFaX+f8LcmkVsCWFXa9EiudLexQ55BYotBvsdv2kUKgIiCMmB4YJ3N4g87GNPQ1ogg0YRNP32JuJsLbAF0Kor4ilHvek54fYBkKGWigQrK6IpZUKD9A9XVGhiErPYaGhziZGKYmKvzV5hfJOhkGenPUOMrl65d5yGozbeeYbEQsvvQl6qHDaKaNn4+4lS+g9SLGNZOd2zZiSLJbhuFUiKMLLFPRbwWcf3ELe3OAuOehex7S9Rnu2XQzAWRcdBvODioODvSpNi/TbxxGU3F2q9v88atfZX50Dq/bxUmY6HaHSIYI18I0dVRZRx8VeKEgVCFRFJFphuihSbXfYUCmSCobEUmUITjWzpMaHafUaiGEJBm3ub68yNrbb/DEE0/cZbF9i6o4Gh9lrbWGQpGKUqhA0QybdNw2R1MHOJMf4ieG7yMy2ty8+SqGoTh/foFWq4+mKZp1HxUE1Esl8kfvwxmf4BvXr9Bstxm+coXBwRwyVDx25D6W+i1yUmIWCoBAun38wN8TfDItzFTqW8VqUgcPoiUSNK5eJez1EDGb9TODnB9dJ7rxRySMBPP6PFJKpJRMT0/jeR6+72NZFt2gy4a1wQH9AHryCGZ0ATKCnalt0lXBviBFKmFREXNsbGygaRqTk5P0er27/qZCyruWbFLXiX+HGm3Q6extZ49evPxnf0pnbQ3bcpCGCYkY07/yy/cE0y+88ALb29vYto39bpvTysoKAE888cTfO4Z4L2w89xx+vY7+bpwiTBM0jY3PfAYVBCQPHMAZHv6hXOvHFbZt8wu/8AssLi6ytrZGLBbj5MmTfyvN9H386PED9Zi+9tprzMzM3G0g/+Y3v8mxY8dIJpNsbW2xurrKww8/DMD29jblcpnj36UQ9174cewxdRwYGwvZ2tJoNiVhKMhkIp59ts9/SYyLaHAQ48qVPZrpt/ydPA+VyeCdO/c9HqX9Ply7ZtxlxGazitHRvX5a3YB/Kf5PTo5uf891VCKB+5GP/IPHa208j77w/6BXdtAaBWR/iyCZpTk8TpA+QujMEOkZ/OQJ/OzD3/YgBVQqRTgygtzeRltcxP7Sl9DX1pD1OvaLL+4l48eOAd9nj6kQKAG6F9zznIzLV6BUJPLdPZpwEGDcuIF//DjByZNou7to8QRf9q9zTa9go2FGGlJq3DE7VHQP79Ig+byGaUpQYPttur5FLKMzkPSZHCpharfJx9Z54kNfAC0FSrzrSQv9vsaf/MlpoihCS03hbK8RaSZXt4c4NFRmNtdgpShpZsfoByZa1OPcfQtMjns897VT5DIZRHKaVFqQy0YkrIDdpkl+CLTNDbTyGsKIgBB2NnHru6BJtLZH//Bxomic9socu7FTeNY0TzziUy4Jrq9Y1II2R37qVc788zWuRJsUu0U8YZBSBar+Ebax6LgjKKHRFyleufPTiH7I5MgSJ/ZdZGKswMFBlzNH7uMjM3NMdOPIfXFUJAiXKlS2KyzcFKzesbgRO0kjM4u5usqlV/rYfocMVYaMNlG3wZpnc7u8n42KSWSPMXl4Hwfnqgwd3yJ1NCAakVy7dpTb/hzbtRHi3Ro9leHm2jRBqBH6BjKvMxQV0RIWw8kcpmiQj9dI6gYv9f4HbC3HiHOFkVRIMGdRW/KYLa+DIQgxseKKRiUHeh2jC95onMFB6Ld22e5m0fUeO8tpXM9EEw66Pk1moEE2MU0oEiRicTTVJuxJcmaW11YXWW9VyNDngO8w7SUpdPNsN+q8mltmwH8dbfsmCIlb7uBV69RDwVXVoF/bpdjtsG3qlLwiOatHq7JOPt4jbbm0Oop8UvLhM+PsujtoyseL+jww0OFsNkn//FNoMxHbWz7pK12UZjAUTzIaS+LU9jGbaZMOuzCTJHU0zcEDffKz61wsrRD2JZof4kQad7YvYMo4Z2Yf4czpn8OcOw1el8WF32WpvMCVjRMU9B66BEVEGCjScYed5bMsbR1BdExKfow3K4dZLUwxN7OMzNqU6i5//IpJse6yvXWRfhTDb6Vop7pYE1f4wJldnjR3GRjWSCuJaXosDgbUBgWhrVhqhZh6gKGFNEOFdBVmVnEmF3J7TWIYGjKhsOdDtGSO+pDL8KEsYxMjhPg0/QJz6Qa6H2C4GlobZBlED7yGwXbHYueOIHkUItPFC/oEsoGkwI1FRV/rE4oAxxAMdHXczYjyUogTE0ybDpnIxO8qMkqjFHiUWx5Ot8/iRp9qTRF4ETErwNPa1HyfuTMWo8c/QHHQ4au1HV5e93nhTp2Sm+Ll2lu83bxJ2W+w269w299g/6BL2tFwbAtTk1gJg0ygsy8/TCIXUOrkSUQGuu7Q6t7G7RfZP6uzclVH0yShpxPmPGpGiO8FDGYFsUxIempP7G3WkDRaAaV2iDUIurJpLtbx7ig+u7JGGMWIpRVvFF5nJdpleXWCmlrnjLNDzq+RmezSdrosr2iIapeGG7Fh+fQLMRavZmm2IRvzCZQgaJk0ltOc/9JBSosW9U6H+fk56sUiXtTHEIpMOiSlNBQRY7NxSpUmlb6PGe9RqMbwYpeoNFrs7vhYQqH1dZRnYBgmQtl0Qp/lzga5eUEkhiHU6HV65FohE5qAnkfU8ZFSQymJ0jUGozh9NEQsxtH5AwQqYq3dQDcMFm/d4tjcPEvXrnPl8lWqjTqpZIq8k6fcK9MLe6i+4vjMUX7z2C/zjyae5HjOwNQszDDN9labr165wO2lIkr4+O2QTtNFKoUEpjNZlrcL71J2LXRDI5tKc2vlDgcmp+k7JsqyCEyLAT/AbzXRg4BEPk9q3767VcPQ1ImCgNFnnmHoscfIP/YoXxlYoZuzMDUTU9urQm64G8iapLJTQdP21Jk1Q6Omauzau+Sms+wbnEToBpE1itup0CjvIBOSsBanKadR7B3XaDSYmJjANE1OnDgBgLQsop0d3Pdgf0nTJPNu/LryJ39Cd20NzbaJBIRRiN9q0bx5k9yDDwLQ7XZ59dVXv6fiput7ld+jR49+D3X0OxGG4fdVVd36m79BfoevaNjt0t/dJfI8/GaToNWiWygQn56+m1i/j3uRTCZpt9vk83nm5+eZnp5+1zf3ffyo8SP3Mf0Wl//vu+27MTY29sMYzn9SvNc9jI3BmTN79F0h4IfgUfz/PcbGYHQUvvpVKBb3Kppzc/DBD5J9jx/ZsTF4Lwus4WEI70syf3scsbZ2r8JtowH/+l8T/4d+D5ZegMtfACMBYhfcXWj7mO5VEqd+F3QHGAPu+9vv98AB+NVfhe9aVIm98gocPgzvJtDf9/e204VmB4IQ6nVoNff+AzPfocSbyZC+dQseeADm52lrcPnOedL9vQk6sjQiXSMBLLDD6TmfWsNgaFDiB3u6UfNGmQ0RZzRTwPNcDk+3+Ymz6xi0wb8BsQfuXvPrXx8mbgssEcKAAWfPwq1FbPpcXpvi5z5Y5sQ/30/x+qcImmsMp4vopsHFhYdQXoU7lRGGpnKYMqQXaVxr28zEqqRSGlK3IZ7Ys+ZRJagtoukSIhC+xB6w6Swdwu4LIm2QRkNg2/ArHw954qM2zy1cQVP7qTVbXFttobw02wLqccVH9ToTsS79kR1urj/Clxd/lSgZ45b8KCcGVtnRM0xmQ07PVtFXlsBagbGzEE2we6lOxTBBKK4zizdiMRgt49ZXCLbXMMw5brWnmBtaRUUaRwYUd0pzdC1IJg1OnuuSasM3Ln+E6YkSSVmlrE2jPRqivRUhbajnslQvxInFPEbGK/ghKBFyI3OO6GCOx4zLzFQ8CulBbu+f4RP1r/LXXxvhRi/LjZvzfGxig33pEpW2idTAsn1uL4xSq2c4c3qRWKrP1GGF8lu0nQS3KwqpNFSoOL1vkphziKX1HRAhX792ng+fPUy1eJi10jFca4uz068xvuvxSFbHkKB7ETr1aPsAACAASURBVJ6qMByv0bcdjo1vsX6pyAFjgJjXJOoJTFsjqXp4PZekJvB6SfrrVYZGakzNm+QmckxXIFvb5fH7AzLGIHhxXBK0bY+p/jCplsGOGML7yUc4YJxhdOpLJIbPEzg6oW/RLw2Rc5L4LYlhNRlSLlWpIYw+GxWLfNLhShMGIpDSQGo2f37hj3n04NOkY1kAel//v0mNxtnsTTC07yVuF+/H6zpEkU0s5hNoGbpiAI8NvNDHcBSpdI211gzvbB3igHaNG5uSPjEiJ+LBkzZfeelzdPseM5MWxw8epZ6U/H69TaygmJca51yoOnDhNUW1BqsGrOoQt2E8A4cS8NEM+MOSfM2n2wDTFnQ9A9upMpUxOXMigxZFGHKXKLKgEzA0oTC+LrD70NVAdRUPGw0ubAvWh7O89fkkww+lKTu3CTd7VIuDJII+B8MmR4QkDZjK4uVWj8zxEFWUmH0NpMH40Ci2HedXjx9CGB4337lDXltmJ+izs+OzXVJk4ybOZERDmlyLf5Orl/voBUk+UqS0NJeTTcJ0hBt16Zdc9J0ImZCsZyNm4iGIkIRpoYcacVej2LpBL5uhF43jJW2qpbdxG7skLI20Ldifi7Fc9agpgbmURDtZZyAnwYlIzrj06yY75TRjGwkGOgUycZfKoqJ0M+T4kEctusmuL+iv1dhq6fj7NWrFLlF9kvuP6qwVQzJGHCPQGRmS8ECH565G6HWLctfB68SxHIsDV/Ks3dgibkqGSiliw+NESmFIiet6TH3gUdzeIq1ynVavj9ICyEQ88sFBtsvQ6nWJRJy2bLHQvIizVGQ41NDDkE4sQXJ+FqnF8WsBmqUz4YyQ9pJs9wJiqRSVrS3sMGLUiIgFIfaQxdqOj6Z3QDj0/QjN0aj2enzo3CO0JZS8Pt16nS89/zxpO8bnP/0cI6MjnL3/QW5dW2B3e4cPPPIwTw0+RaPTQOiCf/XxX8YOxbsLpvPAKi3PJZmME9NSCIpoUUTPVYSE6EIn7jis7u4wOzyCJiVKgGVamIbB9MQEl5duMf3A6bvzmXCSZFyP4WYd51vBaKTAMojFbKRhMDkzA8CN4g2MmEHCvHfVPkOG4MMBdmRz6dIllK1Y769jGDrH0jbTOy6t8qtMDc4j9o+xZs5T0xTxbJwg5u7JCby7KOy6LkopnnjiiXvm7vYjjxC88AKaaSL1vYQ59H2mn3mG2PAwXrvN7UKBROZe5XwcB69eJy0E8dFRNjc3SSaTpNPp7wkB6vU6iUSCwfdgXi0+9xyrn/0svWqVyHWx83lmnn2W7MGDDD/wwPckl7d1HePd+ElFEa3tbSzbJlIKE8iPjhIFAWJlhbH30AB5H3v4ccg7ftzwAyWm2WyWer1+93WtViObzb7ntmq1ysDAwPd13kKh8Hfv9J8xxsbGfjT30OthvvEG+s4OCginpvAefPA/TYZ77ty9r4vF/+iup05Jnn/exrL28tgg2BODeuaZHtvP/iaxT30K49IlhOcRZbN0/8W/IJifh3/gM0x97Y/2aF/hvcq7bOzQffPTeDNPvfeB3wXnU5/C8n347n5TXSf60z+leeLE9/WZV6uCN980aTQktq1x8kTA/tWL6PXK91SaAdjZoVsoIKam2Hnt8zRSJoYu0T0flCLyoJgbxHeLTAy+zvmrT7C54zCUE3i+wvcVDx+8wr75LUJRBBHtMaQbeWRiBVVbwe+cRAQalaUSordMtzWLiN5ECYl/+AiEDh0dCk97OIU/ISMvQNInjEKibgPZvY7sj9PoDlDejtjjKkdAl92iwdGTVQzTwgxT4BVg+TJa2EY3BV4/wo8l6BZm6O4MooUu5VIP0wJDh1ag6LVcFi/HqG6M8MW/GMCey5KcWObUwW/wYbnGtLZO0B+j70FMK3Bm+DO8uvpx9qUvkAqK9GtxkgcF/tICgW4izBRKX6e3ZFCqdzDSKXbdNPXaII4I0MI6+d1vUvZSoCL6gaSjUhh+kTu9OVKEdOMp5uZDhNSoDEsS7Q5vrJzjodNvYmoSZ7LN7tcHcIWgm09w05xgpnwHI2iiWWkGTtTZfXScyOjylvMkufZFnr+0SGa7SKMLo9OzZBoOhd4DrC8MkJ86RSUoIUqSQmEY17PxpUanFWfiUA0tKTDCCBvJ6bk0uvoJNg636Pa7IBWnjwzTNVZQYYNXro7TbCYJHI/IrnH5ykM8FFuFTJkw0FFC4SvQeoqeuo6o22i2xa1Vj/nAQ9N8glBHhB4xr8+Nis7t1ibprGRqXOF2BzCigKfmbZIije01CP0Cu940NwKTl0qS+0dCZmIp8hsGsrdNVT9JWnwIM2pj1AMkEt2WSGUQbbaJEjrZ/To5v0PKDzndszBTJuu1gGJX51hbEsqIc/MfJul8OwjU7v8ElTc+z7Nz01zoVLk5+Wl6fUE8GWNqpsKVT/9PYPVYaQ+zb3AX0/EgiGEYXa7fuZ+ZkXfo2RLdkESRIicFv/DUPgq7Pf7wq5tcWF0g8ZMGJw2F7nh8s6l4TSjWX4E5G9Yz0BMwpaDahJWmzqkjaXKWzZZT5elnFEs3dVZXBLnBkFNzbSYPjhOGEq8q2KqXyWs+6QGJJCDsRtS0dxd0FGgGTEZ9SuUm1YzDpU2frK/RbbvEYoq4NMhkNVQYUPUVb0cuK3GfKAb5vIVZ1Bga2oftxKl1uviBwPAsDhw5QaHXQ9R28DyLKIrI2RqF3Tqvf6FB/+0k8YzA2QdSSRqNiEMVycKgZMXoYTQk8aZFUFdcrZk8+GybfN9mIFSkPYeNWJcbVp+tQoHVnRoPiyT7UxpNQsbiNlHfox5B37IZMAyUEKSWsrydXGdj1iAbZBg0pzgXDTE4F0MYEdutt9g8fwfl+mzsCGzHJvI8zCikc6WHZemEQ4qjo2UyskmsoQiDCC+K0HSLq9JjcBCamwnc5jylSJA3atzMKKaWzpK31rAcDbPdxopChAqpCRDdi5x9OMPuhkukN5k8V8SO20RRg7XtGL4cpOZX8b0WI9sGthK4QUQY1DmYGkBsVelMCqSuQyOk7QX824f/G/5d7w+5/anb9Io9RrWAG7OKYUxGNYdcXqdW81F0EW4Mbd84umGw4/fY2dli+coVnv/yl5kdHafwrg3G1uYmz1cqPP7oY+yWS3zjG9/g/vvvZ2JignPnztGvNfn2LJlD08oUurcYmoD54RG+Edyi1zeIlAARodjzNl7d2mAuP0i7VATTZHxwCM/3iVk2VbPP9vY2XujhKpeCmeBnHn+KRKVCbWEBzXGIDJ2AgKhZZ/BDH7o7h761dgHqPTphZ29GkZLQ1FFC4IUev/7rv86lK5f491/598wl57ivA4Ho0cOlS8BydZmpd7oYw3FanRa2ZXPw4EGuXbtGt9tFKUUURczNzTE+Pn7P3D02Pk7i0Udp3ry5ZxOTyZA6dIh6GPLS5z7H177wBcSlSzx05AiZ7/K+DPp9Vi5dYkApOp0OrVbrPYsynU6HZrOJ7/v3vL/1hS+w+Zd/idA0gm4XoWl0dnZY+LM/Q508Sfezn2Xq6aeZm5v7drXZsvDfjU2CVgvP9xFRROi6xAcHqTcaANSvXUP8gP7rP+74kcXs7+PvxN+2IPADJaYnTpzgM5/5DE8++STLy8tks9m7tIWhoSF6vR7FYpFcLsfFixf5jd/4jR9s5O8D+n1in/703t+6jgD0W7fQNjboffzjdxVc/3PE+HjEL/1Sj7ffNmg0JMlkxP33+yQSCtDp/tqv/b3OJ90SRvMdhHIJrVH85H0g9yqJW1uSa9f2/FJ/slgnnjK/16THdDBWr33fiam2vf0ftcGRnc73dY6tLcnzzzs4jkJK8H3BF78Uo5aY5Jy/zI3qKFcLw3iBZCDW5wOzGwzYe5Rn5TiEDz8Gb1wmsAxczaLTcWjEMngk2ViLuBgc4xdOX+NWKUdtPclIrMNcfBenXCaKRTDx7dXdSmGem9vHyCZy9GSeoN/FLyax2gkqTY90am+SM9vXcDMfwIpL9PY7aO4OoTGMHtxGhF0EsC+/QqV5gW3lUFCn8QPBxoZGpyNIJCRlLUFy1sG58DqyE6DrecS1MkECGjWHG+pxhnKH0TRBaMYZyEEU7onV1rpl/ugrBisrGqEqEikLVZhlVPQ5FwsZ1F1KrSyBXyNKNDgzdYeh+FEst4zlS8xOh33OGscuXycaHkQ5zp5iJi61Qrhndu8FGHLvOTdch0ulk3T7Fp1ODiG6SHQsfKx4nF7HQihFyu4wPNpC5jRMFRBISTlMEuEgACUUPaWjIh1d+iw789zgEOey36Rv72f2TBnN0Nje3uT67nm28g0awwFm02Ooe4BULsbwk9NEn+9Ra3VpF2e4bfwcg8tXkL0uQpPkRIfR1AjROR+bJaSVRlgBB/M5Ll44xcNHNBY3b7JVrdHz4pyZOk1ExNevj4HRxQ8lCT3i1naFePUg+4eWSVgNUBBEoDkOW/0q9nWNkvY0wc02yoqRTxWQ6javL9bZXHO4OtSlZ3nkRkKq3TiZdMQn4iFmu0eQitGybEKtRbmu8WrVZrYXx/dMLrYaNFpVul9uMXj8Is/MHeLQQ6eZ/spFItNBlKqwcxWt0mJnUKf2nCI8Gmc5ruEFcQLZ5B9P2byRS8CSx09MPM4/feTf0PO6/MUXf5vDEyd58P5/xIEPfIyFt/6Ig77L0X0mmhXHFCahHhD6BkFPp9PL0Aw84mqHnLJpiAZ+GLHak2x4CtuuMlcYQlgQuglSCQ1OThKmqtT+oMXb+5OMP1hC6opFXVEMoFKCegiOFBiYWFLi+xpvdXIMVw/wwAC83Pwa5kTIufs9RhMRh3M6lrVLp1/lqhdnONMg0XfItgRBGUq6IArBigSOp6FLMCKNw82AvwjauG6CZq1KSEAoQlK2JFA6L8gW8UZA398jaVAzWJceB0ZT5BMpgkghdYlCISPoun2OHzrG2htFEjFBo9uhFeiI0CAZC7jPFGx1Q2auwqADgQhYsCW9ZZ07iRBThDjo9KSG0YU3XxD8kycVtumzYVTQsHA3YqzRww5M3vB7OLlZHjoySMJSVLcnuG7uYFkCL4owPI+GdFhZzjCqa5w9ej9S6xBkInytgyMEc/oZXuxuogLJVl0wZ8chEYKK8CU4xYhxXWfuxA6x3QYiiKHQCFWEG3g0pUcib7K6NEgQuZjKIpI5GqbHtf44N9wDnPb+A44UxC2DRCqG0iTp1lvExm3ijoMf6tQ6TbrtPT9paSp2egGu1scuKaQn8A3QoojRGTg+n2Rzs0G95tJKDmEbCT504iQnHn6cE//bBYp+mcgOyYiI8kLIbdOjlVBkNYNAwvy4xZOJI8ydOMGLly7RWV/HHB7mrTffxA9DkrE45UYdx7KRUhC4LgtXrvDEzAwNt8+zH/oQA9/S/Ojfa5URBAe5U9kmaQbM35/AfGmRzloRTRdkknFUKBC9HnFNo7C7zejwGDknhl+pYAwPExoGM8cOEbsvwdvrb4MAlVa8JW/y4TNPkJ4ap3DlLVYqt+nZkDx+mIHUu3OsUoyEMbbdHpa+R6eUUYTseXiOiaVbSClJzaR46JmHSLYUsUtruHqS1eYqhmbQD/qECY1czUUYghkxc1d9t9/v0+v1mJ+fv9tq9j1zvuOQPXXqO55HwG/91m+xtrZG0nGgWuX6q6/y4Owsjx46dM+xsXetRZLJJCMjI9Tr9Xsou9+yIHkvUZ3dL38ZPRbDq9cR78Z0gVK0dnfp3byJnkrx6he/yPmBAX72Z38Wx3EYeeop1j/9afRYbK8yKiVREKAnk3fHAnuKwyqK3qfzvo//YvAD9Zjm83k2Nzf5zGc+w6VLl/jkJz/JpUuXKBaLjI+PMzk5ye///u/z8ssv89BDD91VPvu78OPYY/oPhfn668hq9d7qqKYhOx2UbRMNDf1Qr/fDhmnC9HTIwYMBMzPhD2xRajTexq68iFAuQnlo7hZG6zpB/AAvvBTn9dctfF/Q60kG11+g50Iqpe4tSCoXP30fwdS3qbm+v6ce/NprJlevmpRKgpGREMMAbWVlzybnPajKUTyO++ST937mSqHduYP12mvoi4vg+zz/5iS6ITDdFrO3vsrkyjcZL19lu+awuWPy9vYUQggUkrZn8s7aEGP3pXEO7fVvJ/NjfLbxGqFpUeuP0UlkcQ2TrZ6PWTYYrZ/FjXTO2lfY795iZFhimgKRT6FVImjtIpIdriwO8DffOMl0ZpT14jBLa+PUSjaZhKLRTOK6DqWmIpXwgIh2z+ShRyyGtQvobgG9twoIhIiDjGFYFq1uAiNosdo9x5sXk7Rakl5PMDkZcuOGQTanSD44hyzW6dRirNywaBeT7CbP0I6PE/oBhw5KMo8doOk59PqCYm+blU3JV9620XSB64WgeYj0Gv8k9joT0Ram1ifohJjSZyBqk4j3SDgF9udXmYiXOKovciy+hdaooe3uolIpIl3SFoKdzQixUyaUEjMhuVqc5bXtMwShhhF54OoEkUak4LC2iBvZNLUhdFPC0y1ExiaTaqD6PqFukrIrnB5dJ4p0OjWT8uoQDTPDq1cfZ2nrIHbkMplaRRgupWCcobUXeWVjCbMbstEIiFp9elaW0lSe/aePYyUTGDsrFKrDzCYlijj96SMYwwHxRIB9PM/QxxTCF4gaqNYwWs1BhI8zki1haB65xBBHpvZzdn6WcXOcNy4cRiUVSro0FUSxIsOjYPod6j2NmVwRT0IhaNBot+jGk9y+OUFcf5bZ6X3kjBhRL8fnL7eobnWxKj3SKx6ZjiA5ozOb0nh2OMuQDNGUTkJ3sHULN3IpFyOG3D6XtgPulHpcvVNjudPGb3iEKah4RSpWj/ihSUYW1mB9g1Bu8vaEZHsiTTrvIsshtZhJ3s5wKDdATCSpqz4nDv40v3b0X9Lzuzx36Xe41lgnX2oRVzq56UNkR2cpd64wWZljQabpNDNkzCSN4iSF1f3kvSSZVIdaN0PPc+h3h5kYWeHQvl1iDY+zMk67HqePhSZs3t6psJJ1EbNxnP0H6CyWKb3mYsQ0gqRCdRU9CyQCpEmk2TSFBZgMDwzQN3sUPR9lNpgc7NNu5Wm0Mmx2NQbiHprhY1ptGm2BDPtkuh6xhsT0QdU1DF/iRYrIE9Q2DJoi4tV2h7WlErVdj6YX4FgSX/k0EdzudphpmIy1EzTKEmkKZKShx/IMm0kUOslEjIFkCkNJanbAcqbE1ewNgpk2Kh5wap8kO2iQdiOOWzrTdYXZAcMGEcBQRTEUCeSDLmcmFYcnAoyxgGLk01aSm6uSQVOnUg5YvwiVO0lGqinGRjSyQyn0fJajqRl233FYvJajjNgTxjFNaokEb1UqtGJtzh28j5QjKKwphhKjzOQOkjQnscMM15Z36NSqNOsGec1BD6Dm+HQJiQ1o9LsB+4YrpGsOcQ+iKEQpRV/BqnQRvk2lOIA2EZEd7iFEnLar4RazuK0BrNgtWsKlGCl2O10+fHQfE0NNlGpiDiRZXavgGgaJwQAhbAYmB7lWatDrRMg1SbcDKhJMjweMTwkGY1OM5lJMDzs89TP7mB4+SjqbY219m6u33yYTj4j5CrfsIj2duG/gRTA7EmNMGsxqCT4wfxhz+CCOZbGwuEhla4try8tIIchnsjTaHXRNEoYRGd/D6nSYFJLOxgaNl16kUSwycv/9aJFChtFd5o4QsN7cQqoEW3bA8MFRtN0GjmXiOAZz2TyT8RQnpqao1OuMjg4Ti8WIopCuCunGHeJHE2yH22STWVLxFKZm0nAbFLrbyFiMl6IruGNpwsEUQehxrXiZofgIGSxGRIq361cx5HfEOwL6fo8jw/cxlhij0C5QaBdwdprIjoem6Vi6Rcfv4EUecT2OGcJTT/8zqmvVu5XSIAgYHx/nIx/5yHv2cL5X/PapT32KhYUFEonEXsLY7WKGISvVKodGRnAsi8j3sfJ5hr9D1GhmZob19XVqtdpdoabBwUGefvrp71FNDj2Prb/+a4SuE3W7ewKTStFot0FKpFJEuRy6YeA5DoVCgYMHD2IPDWENDdFZWyPs9QhaLeyREfIPPXRPEqrZNsn3K6bviR9FzP4+vj/8SHpMf/EXf/Ge1zPv9ggAHDly5B77mPfxg0Pb3n5Pyq4yDPQbNwiOHHlvG5cfAaIIajWJlIps9vvvHf6HQoRdzOZbKP07+k6kBSqicfMVlpd/lmTy2+MpROeY8b9CvW59xzgV+Ar3xLN39wtD+Mu/dOh2xd2EeX1dZ31d5+d/vgs//dPYr7yCiqJ7nrFoNul+hzdvvS5456LO0GtfYNRbY2TORtchevUCnasWyVPTHLv450SagZIamgrIbC1wvnMfY/kOBBI0Dc3ziGVSvOQ+wsf5tmLzf/fAv+W//dz/SqHSwzFcOqFLXOT42L5/RerCO3gXb2ElLiKm96E6bcLpaYTwkPV19EsV/HealG5GHD2kIcQRGp1JTCOG8NpUGgmG8h10Pcb58wNkUn0EOqfu22R+PoOq2ER6Ahk2EZH+rrrwXhBzbHaT1WqM8PUbaNqjxOMR+/YFd0W9XnnFYuafhvSf/Rh/9oc68qd88sWb5Iu3sEKPZhTjFR7gQ2mdKRlQLkm22k0+e2EcpRSm2KtbRlaVuFlnytwlbZuojoEQkHY6mJqOW9XITvUp+xX6zXlmjr1DVBlC2Tai1UJbW2Nr3IZbNqlSgn67g9Zs4He6VPtZUAF62MclTt3Ik/CqHDaX+GjyVRKiTZCx+PP7Pok7HrC6U6NtRGi6IGrG+ZmndzFElm47oPTWMG93znFl8TS7jUmCbh+pdbnWPs18Yh1xrc8rho49LjDMgIEwzq1QI96X1PqCG7FVzs5Y5B54i+n+AL4S2LkiUX2C1tAcq/YIT374VSKu0pQWRAamX0ZZKap9j+srFfruDhKFJqcI/H0MJlL0/SzbFzR21Czzj7zE6ICGqUAm8wxnEqSntyh3YaKR4o3GDmFBUHaPcDqjoYRNJ58l7X0Kt1liODCp6CY6HYYrEfGvaRw+5BJzV0nogr7MIwRYuk+r7bLplllVHd7SBZEUSEcScxPU0xKxeof7hiO6nQG+jMmBTB/jzA5LPZ9u4BCLuUBArOGTW/FoTCaYMnSmM/Mcio+xL/2L9KIeny7+H1TSRR5uH6DlbVLq/h5O0SI39CDHD//XvPiFF8nZfW4Etylsmhw8tkLj7Z8j8CMitU0ofLqRhSEDfuWJzzI+2Gc5cLi5aSKTJqIjWKpscLE6hDa7Z8sRCYF2KgN+gu3z26jziuQpE5ICYhCXMSyhEZcajjRIWgY1L8QxOuzXxtktDGEaEV2lsVvN0m50eObUBinHJ294aD3w06C5EbFBkCFU1nUwYPO2JFABL3QUKU8nTOhoocDtemwtK86dHsePaTx6O83Qbp++DDicsLiz7WE4iigVImwTS3P4xIOH6HpvUKdHU5WRbgxqEQ1XoJKS15sPkC7vIxeFVLa32K9fpCYiIh+8YC9BnZaQq0Eo4LoES0Q8sF9RWDDooTi/5TPrxekTsvX/svemMZpd95nf79xz93evfa+u3vdu7qspmzIlUdYytmyPMY4nHmcEJJMPgQe2Pw1gfxggCJIvQhIjA2eCGQOeOLbH1liyRe0SZYlLt0g2m71vVV1de9W73/eu55x8KJJSkxQtS6Y9NvgAharCW/eeu9S95/yX53lqKdesAu+mpLquOHGjzGb9BEmvx87md4m7t7hTNwRjs8QbLkEYkOkMTwYoPPZMlGm3YHrYAAWBb7N3Yh+D7VVIEkqVGBKJ1fK5XjN4rkb1NO45l4ljXXbaFaaEgwWEjqDs2kRdh6n7Y1JbIBQ4MytUO4a1Kw8z6FtYwkZYksBxqNVKVOtVCnULK43wSn38hQliOUY/auOWlljZ2mFiIWUjtxkkVVy7zcwMTM3uCtRpFBgLW9rYUtKNbvLFF1dZWWvz3MVzFKagWrXJTIa0JNpIRA/22KXdZ6zQnL2Vsrr8TeIsI81z1lZXMVqTFQUCsftzllM2BmNlNEVKR0cURYbUHltf/CKfGwz4xG/8BqVCIbTZNWIFxv0Rrier9EXK6Owoj/zyk6x/6SV6KueUmODQ8DCuEJyem+O1LKM56COMIdAFT/78P+F59Ty+vLvTyJEOy91lbndvU/NqzFJnTJSxpAAJOytXmB+/D8vx+fjUh3hm7WukOkcKC200+yv7uG/sPgD2VPfwVyt/hSr5OEqBtCg7ZUq1ErnOuXfsXgJcZubv4dSvnGZlZYV2u83U1NRdtDKj9a5K8LsIEb3yyit3VzhnZzG3bxNEEd++cIGnT5wgmJxk4Vd/9a7tfN/n537u5+h0OrTbbRqNBtVq9R3HkK6LsKxdDuzrCYKsKNCANAbtuqA1xnGQUrKxsfGmBU392DHqx44BsPGNb5C3WnedTzEYMPIDqsPv433814q/FfGjf9QwBrm4iFxcRA8NURw5wo9c9vtR8NagM89xLl3CardRQYAVx2SnT1O8ri73XuHSJZsXXnCJ490XZ7ms+eAHU6am3nsvVrt/ESPegU8rLHaWN3gL3YPLc79I5eo6NhdpDOUIbdCxx+DQr2LK35scLl2y6fUsguB7Qe0bXNgzZ1yeeKJK57d+i8rv/i5WqwXGYMKQ+JOfpHhdTODVV+FP/iRkKrrG5PIdFq0qt3fg3ntzCHxEmjL/wp+hAheEhSh6WNk2S51ZymIJpkfRYhIKgxobw9TrDDqCosjeLNSOhCN8evp/5RvtK+zoZcb8BWaDQwxvXGIvl4ntHCsoQaeFiSOYnsFau4V47RZCStpFDd/OOeBHKNVBzCiUiVjbErS6gtmxAUOVjIUVl3uPrnH64CLW9AdQQF65B7t/FYONwPCm741R5KbGQE1hm4R6TTE3r+66F1kmWFmx8Dzoxh6VisvG3H1szN335t9EO4KTbp/SpGLt/IBvXFPkgy5CSbQWVD3F/vk2T04HDZHVdQAAIABJREFUTA7qOKLAc1fRxsaXEiHAKI0lLCwpGV9wMPkwyBwTCkw340arzJ3XKrS7Y0gNw5WCiqMQyYC4nTJfa9MbCDb0ApO1jDkvotROeU3t5ZMH/4riI5N8rHqBP/5PB+mt3seOdnGHWjzy4euMzqRsrwX823/381x57RioEvVawpMf+gJ7Zm9QDZqIwia97bHn+jLd4RauytncniaPZ6Bxi8jJqKQttnYsrCmXtLzAbz15lcs3FNfXZlAji4SJ5KmfXcayN0FVwCiWRcqoe43rd2bor9+mIl1sy6Acn17RY6N5nUrtNEtLA9pti8OPr3ForE9HSTxrhsQdYWboL7CtlFLuk1Ll8EKdP3yux4GFD9PvJUw3bCbDZzh66A+ZHfL44/9ykBp1tgYxhdSgMjae0/zsJwtG0pSm36E0aaOzEi/dymgFKZbRFKKMzlOcQGHsnMNtmwfHtzgsCqRoQqLJInBKPluFh7TnKEwHN44ojIUsJHWnySDPmFSrVNwRBANc9Uf804k1urcUi4MdPq9anN1MmY//Z55MP81M5WFuZOfpNlNmsgAsKMIt5n7qP9D6xsdZ6oXM17Y5PHuZf/HJ32N0ooVCc+jYNttJyLa+zfXeXs4Vj3Hw6ByXsvPEzgoSgZYCIW38p0aJWxH9r3QpVzwqHwiYKY3hWQJ3u0M1z5hM1jCBQY/vozgO0t3EaAeBxJaGzVaZ5TszHEiWyP/QcHtLgNQwDmMnIV0xRGhWbjpoBbcyxWYo0cZgHE2KoNwu8+Rjj1OyQrKdJZLc4I8NoaI2JTvmSODQ3SlYzjs8eeQwp/c5VO2zrBewFqW4ccFD9hq9McENGXLja79ARhk7KKjnGXd699OR+zhR/mM8oVEGyt5uoPXwhuYLIzA9DJUAyjaYWUWwE7DSSbma9+ilBksnlIOQmUkHZz3lprmKIy0uZrdoVrsUdk5N+7wsb9LuxpysnUQ1Ff0sYRCNMlqVKBPTT1JKgYtSFvfNTXL91hRhusTlMKZXzmj3Ye8hGzfVBNonixIKqahMRGy1fGb9IcaGfe7ZqfHyQkScDFFzBIOozyCNmXICZh5Z4oVnZjg8pfDrE1iWgzaKpf4ye0YthkYdCkcxonoYBrx0wSOKSnxteR/bssuV/AoTIzZH1xwmJnLSHJzCMIg3Ce05wokym9djnnn+Ir0sZKfTot2NCEKHjY0BKreYqCpMZuHaknq1ipX02Nh02C46TEyGBJ5H4Hn4loUpCi5tbXFzZZnhWoOtqEWnHrEjFNWyy7eGl5gsOSy0ytiOgzlzhsuXLnH02DGcJEfmBQiYmDrCd27fJEoiQjuE6SqTP3OKn+mM4d7YQCUJTq3GwRMnOGhZdPp9tDE06nXChWnyKzme5dHZ7pCnObWRGq7v0sk6GGM46E0zJsrshl67SIoUogjCkNnyNL+275+xFN0hUgMWSnOUnBLx60Fb2S1zoHGAW9zAl99bH6Uq5ejQUQJcwrm53SWCEMzMzNxlV6iLgubZs8Rra6AUMgypHTu2K3j4fej3+8RxjOd5bwonCSlhYQGyDNVocOjXfx3vXTRUarXaO4ogvRXhnj0MlpYQjoMuit1k+BvHOzmJBeSviy5prSmKAuctBYuxn/gJ2q++ymB5ebelt1xm9LHHCN4X93kf/8DwfmD6bkgSgj/7M0Svt6see+MG3osvEj/9NPrvyJe12L8f98wZTBCAMbgvvwxK7Yog7dsHUuK+8AK47m7Q/B5gZcXi2Wc9SiXzfZVJwec+5/MrvxLf5dH6nsDkwA+qCpvXv77Xs6tsjxcO/2smdi4y4p3HeCH5T96PecsEsrho3xWUvgHbhrW13XYbfegQnc98Bmt5GZEkqIWFN1t7s2xXpLhcNozfvEDulXDYFRy8fMXm9KmckVpO+fpt9J55UAOsbA1wcKTBr0isZgv2e2S1+xBGgSkQwn5bPmJurmD0wjH2VHazo0IVzF/7JllQw3ZydLmxe1zGIM+9jBWtYsI65CnGKTF1+giplFR2tilGc2zL4h7rBu0rr1C/2SQrlVmwT3Ns/wZ+yScOFnavrjtEVn8Yt/MyVryC0BmkA/r9Cn91+RS2bbi+vJdOYPHdbcnevQUzM9+bVItCoNQ7azwBCAxuLyWwcz55f0Igb/Kft4+TFoAdUx/q8JETVdKdNs3eLJONPtq4+I7ClgZtwCBIlMdas8zRiRhrfAT17RbmWsG51r1sjrrMN25QH+9RSI/13ig3+x7j0x2iNZde/RBKCQJh0whj/FqGNePjzfuIezWOvoW3XiYM9/LA/hu4joNr2hTnRvjf0j9g9crvMt4+Q2kyY7MzzZMf/xbT5Q1Co0m6Pk4tYu4nUw55i1zpxKw7DrXhbVTksL83zUbYguqAhpcyIffyk9NHqIqQRyZu8HD0LbDg+Tjh3Og4p/PrFFmONimjXspnV3y6X1umOvgC957+GGmU00sGbJVb6MoIX1j+HM7eyywUv8DRqT7ebQc/9TF2gD+bM35EkLZqSC+nm1q0VINXGg0Ojd+mn40yMnEV6bn0uzNMjd7h1371Mt9ZHsd8bpTBThtfuHxstsOISkmNhT+jsD1DWiQklkIIm0s5jI4quncCclEQhwk/5/cJjER3Fc6oAqnJLcP6jsL0qggfksBCORIbwdCQRosIR0QIYhhcQ8nriDDBQ+DtKXj+xdfYEQ59ISi0x8Vv/r/45vOUe0BjEulIyuU+RRrTtS/Sv9dCDBJ+9tFv8dTCq5SrKSgLleWcO1fHizxO+RYze21Cd4xu6LGyepjMjhFetJtosmIKO6FcC/ilTz7N6q0b/OUXzpAuZJyaC2h4LnMTQzhZwqHU4avnAuZmB7hVC9tugHF2nwFLYF2rUyzeYjWWRNICLKzVgmvbAnu/hVoW6FzQNx4vV0Aog1SGUFt0Ms2xI/dC12WpFbGn5bDlG3ByKqUGzXaCY0NjzGberXJoVlENbmN5E2RZkzzfwbMkEX0eL8O1y49jO1WMzsjE6xxXq01XDdEujvKQdYmlRDNWh6DS47plMT9j8GwLKRUlT3Bkv2azyHFXJa1GSlBIQJMVfVa2LMbaZbLKFufVJq1cI7SDwGVg5QwPNNsULBVLVIIK59Zucmp+P90sQ0lJZhx0BNICS7f5Vw8c4D++vEo51kjf4chxgT1i89LGgJE1RW4HvPIsTO+VjMiQ2vRxOqujfHTc4NQu8blbG2xFNo2gzrgzRqkjsWZ6jE/dQjamsER7VyBMFZSslDRv4A7lmKSL0TnGFKioyQurJ1Bakq1nWHULNVFiJx6gezmOAKfpoe0INbxFaXiab5/ZwERwe3uVldY60SAhShN8x8UYi8h4+Eawd7QMokSnG7AYDTg5P3LXezTwfSb27WOx1WJxcxOlNGpGQ6LxbIuhqo3Vz7BqLq+JFvdu1AjynJt/8Ac0T5ygV6sxOj7OiRMn8DyPTx34FMv9ZW60b1C2Sxzbd4QwqBBvbLD17LPYYfjm2PVKBZ1llGZnCZyQuB1z4YULpIMUYQmEEIzNj+Ed8ijZJUap3BWU8vrsrRwLJ1cozyLVGePBKCU7BG3I3buXqk/OPskr/hBXTkvkK9cJlc3+xmFqlPBGRmicPv3OEw6w8fWvowYD5BsFBmNonjlDZ3wcfJ9Wq8WXv/xlms0m29vbxHHM6Ogo9e9T442yjIeeeupdg9K/CQ79+q9z/rd/G7W1BcZgaY0oCtLZWSxjiGdm3tQTKZfLb3qjfj+ElDTuuecujuz7eB//EPEjcUzfK/zX1uvtfelLWN0ueN7uytq2wXGwr14lP3nybdXM96JfXY+NIe/cQbRaiG4Xe3UVtEaNjqJfzwriOFgbGxQ/hFfsj4JvfMNDa/G24EKI3arY3Jx6T8Z9A0ZWcHuvvCl09L0PDAPV4LU7J9/W7ZwXFqPHh5n+4AHUwr67bWlex/XrksHAesegyXHg2LHvCUOYWg0zPHzXPb961WZzs4RSCSMbl3GKmF0eJsQDwcysYqrWZ/NKF1Ot4mTrGCNIc5t79q1wtT2HUxKIsIudLCHzHUS8wlhth6N713DbzyHjJYzlUhmqcP2GQ5YJLAvqzUWGN66QaI+9BzT1ZBvBbiuQaLcQWQ88H6SNfXiBVj4OCFxyUm+I4Y3LiCzFrZeRWYdWJ2Zy+zIzj42QzH8Kvo/jo/1J8vJx3P5tVM/n5u0jPHv5UeLEZb01w3cu3otnZThVn50di+lphWXttn7/xE9klEpw/rzzjiLSJ8dbHB2PsJXCVYZQbjC/b5HBoEy76HFg1GeiJlGmSnUwYGraJck3sAWU3AylNLFVYl3MkOeaR/YopFUgdIWe3GHLHqYzUiJJbSJZIrVDZqYUxxc0dU5yZvM+VqzjFBpq/hqymuBUBH44zC8+2cEzA4S9yV9uPYoVe3jCEHoGbQxWnnP+tR2GOpc4OXOZjWgP+6ZucN/Ca5hYILBwrYLQdomNTTB1i1I340KphypSlI4ole5QTQom5yb49D0PczQ8zKAbkBYCvz5CuzHN12/dx1cuj3Dx+j3YYUpFtMiyMv2kxvLVNdpfSegkGWsrKwivQeFK3F7My2vXOXP+EtOjfcbqV5jdKtEflJBKst/v8ynvL5mcHyWc38daUec7/Wmi0gQtLIbsOrWJRcr1O0xM3iYtRoiW1hkux4xYMcmajzOw+cRT2xy9NybasLn2zTrNVok8tdGjCa2+YFFbfKsnqDiKNDFIyzCp4NFQEWhDzbGJSilDCIrrJex1Qc8UxP2IoCtI+orR2Zxs3JAbw0Rd4coYqzTAWLcxYQzuKl+NF3lmwyBbmkwUmLxA6yH6/R0uTebsndY8dGKD2Zk2M1N99k5scos1tlcO8NLiQXzdobInZTvJWXu5hBdAxQGvrPCH+7idbezxNug6o84QrrbIhKZQm9SaQ8xenWa+VuHQSI1/9sEPcWvxGtdeabJ/pMJjpXF+KdpLIy34quOQrCn2Hy2hkCBAkVOnwp7tFnJJ0Rqk6Df6E4yFH1tcrwdsUeZc6NLPQjqJQqOxhGDgKIqu4KGjD1JkBYWC4TQlUC5tmWCEQagclWWUY3hI1Jh/4iipOktHFDSzHtd6K+xkLaRU+GguLT6I5Q+RDgpkYWFaiqpRlHRMuVxmX/kicZYyv7+P6lqkPyW54wtytavNHVYtXOOiM0OyLvG7gtjPkYEBadOOco7kDokv6CmF3oFkW6O7BRaSvAxbsUJLzf2z97OebbLW22BfbZahcsi+hRFqlQHDvApbW/RNzpq1w5gOmHBcxGTODg63zuesJYqaNcXWakJ302I030+Q3Ucp9rniXkfRZ29Q4f7wGAflLOP+GIVtqAwtMjT7AI5XomhvoPOMNB7wwaNV5u+tIcMANfIBrq/0ub7t8+1LOW0zBghWV1aZdqeRUhN0OjS0y1zk4AxsgrpDeQGiwSov37zKrctNbm7tMFAabaekiaYoFCLTmLhgT7XBnvIEeeySl+pESjH1/XYjxiAch6EjR3DDkLTbpV306JUj5ushM3WBg8ESFiXHJbIz9jRdMmGxNBgg0pT29jJ/3v8Onz33WSYbk8wMzVAWAZULawRX1hlcvc5gcRFvbAxhWaTb2wjbRgixW0GtVhl+4AEwgs/+58+SkuK6LrZjI21Jt9llyB2iMd5gXg7z1nSwIx3m6nvYSnb47J1neG7rDC83X+NK+xo1v0HQGLsruymEYLI0yfGZezl675PMzh6lNjZN/fRpKvv3v1nhfCvizU16V64g3+JVaTkOutOBiQn+6I/+CK01ruvSaDS4evUqg8EA3/dxXZcsy6hWq3z605/+ofxGfxhYjsPkU0/hT06C1lQPHqS/dy/NUol8YWG3MMGuR+qjjz7KyMjIX7PH9/HD4H2O6d8f3o1j+n5g+oNQFHjPPrsblL4FIk3RQ0Nvq8C9J//kQlAcOrRLfr98GbSmOHAA/RaTUBFF5Pfe+4NLUz8GXnrJwZi37/cNDv/Bg8XbPvtbhfRfb4Hd+F7AZBRCxzh7PsK1WxWSRLx5PEWxexk+/OHknXSL3oTvG157zXnbLU4SwfHjOZOT796mvLpq0WvBHufPGHfOMbX9Ir7TIjNl0sJndkZRtgaMzzsYbTDZDqWg4Nj+LcaDJl63zdVwFidIEZYk1iNMhlf42cOfodT6AjJdx46XsNJ17GKHhVN72NiQNJsWTnuLsc4N5g9YTE5otOfhdLoAiDxH6BQhJWa0hphooIzDIHEwRYb2Ktj9HkbY+GXJ4h2Lvm5w5P4GTlGjOHLsrvMURR8o0GKBxbMpra7N8laJjdZebq4+TGcr59Zth5EpiVHgkeAu3uRB92X2ZFeRE8N0U5+tLXnX/RiSEU8faeJJg6UNRaoI8hzXsxmbWaJtNpmp+lQDh8fnCx56tAxRylDjMMadw60exQ73MLAlA9XioSN1GiKGqI5IA15er6MPZZxfO0nDWiayYLismR+x8Nw2r67M0cmGiCoTTA1fph62cN2U1kAyO3KDQVrGrgxR35PyrQv7sL0CBj5SSpTK0abE9vUlVLXKybnzbPdHOTi9jl/JsCyDkh7lsABb4aplrH1tSlcFVk9xWSsiK0PWYeGBjIcW5jg8XhBWlyiUptcZ5uy5Kr/77+/h0vUKS3fqDNKAazcPsDB0CykgNy6Nb2+z3XMptCZJCy6sXOLW7YvcvHOZbHMHMdqg6sCpTotHFpZ58sB3uG/iFfY1+qzQoXVrjfzwCFsDyXpSwZY+Z7dv0W6N8MhewfD0OapOyOYLLbbPg+NnjI7EjE8NODLdZ/p0SrzusPLMBPamRWig7QXkZcG33Yy+W8PPQeY5cttjuBtS9jTHrYLAkoyWwFRy3MUKWehgG4tKElBoC6Ni8r5P/7QitTWOMgzXDDLcfQ0IqUFGFCLldy7AJZmTuwY3lkhlWLfbnB2LaTf61BoRt/o5VR0glEOhM/bPL9IqL+JVtwjCmxzcswm3XZxI4mfgC4GFRmaaymgXVxXc8/CA8mCSR6sN/ptHupSX72H75SZRNODQlCDutGhtd/jX9Rn+h8kpPv/qBl96dZ0PjI4xW2yxqQ0vqiEGcoGxWhfPbxNKSa27n/CrAwygiy2UMEhhIY2FsAxd7XC+P8N4LWfer/PkA/McWHBZmNvGFTmbWx4H5g+TFDmFhKBQlBDU8pCq9qklBUOdjKM9m2Mi5PalVxiRmyRbHV7d3ubOZpdeUZDHBrqaZ188zOaqQ0X6nJ6bYHbEpxMPOBJCw4147PjLTM4X9DpQekBQ/7Ch31VsJQLfcfEN7OwYUqWRtmbmus984RAHMZWBxLpVMFtziWyIlnebYqzXOY5BIbhtSSqPjJLeSal2q+RWzs3BbUSnx77ZhJn6NjP+Omtntohch+tZi67XpOXl9LWhhMvLqymyIeilioXSBLGyuL2ZsNpTHN57nE7gc22jzZ69kunyQ3iORegbVN7l0NQ4Y1MV9OYGe8fajM+GGN/mySfmOH7C4qVlxZfO27x0ZYeoCFGqYGllh25ewWChlGJsZIzJ6zsEPUkjKVGzC8KaRuc5NjZ+oFm8lbF8JyeOc3omAReCkoXvCEYdl6khj4Y3TDOO6ScJU7ZNY3IS63UrElMUCCmpHDxIrhRHTh7l/NplvMMl5JxFWCozlOYUxmAJKElJZilmeiEbSU44P8/50XW+VPouHTsiEjFfWfoKy9lt9p2P0HGM5ThYr2cV+zdvUj95ktLCAmowwHJdqkeO0Dh9GiElly9fpr/ZJ9IRUR6hjKIwBSWvxF5nL/ffcz9RbxtH7Aa12hgylXFk+Ahoze+vfQ5tO3iWiyM9CkfySnSNhdpeQifknSCEwKlUcIeGvlcF/QHoX7uGiqK3K9QahYxW2Ywusraxw531NhcvXmRrawvXden1esRxTL1e5/Dhw/zmb/4mnuPixil2kmNpjZbyx15/hTMz1O+/HxYWmD51Clmv02y1SNOUMAx5/PHHOfC+kNHfGt4PTP/+8J6IH/2jR1EgtH5bZg/ASIno9//ujkUI1MIC6Uc+gvetb2HCd3hBv1HVfQ8QhoZe7+37Lgqo1d57jilANvxTaG8Su38BYXK0O05WewjhVPnUp2LOnHG5fVtiDExPKx55JPtBTi9vYnZWc+hQztWrDmG4a+cSRTA+rjh1Kn/3jYH9exOcW3+CNjHd8VnCO9u4/T4T7ksI+QC2GSArq7hPHuPAVy8iK6vguMhLdxDdmHtGN9lrn+f5nYfpHTjMQu0VppwX2d6WSFmhPuXiWgp3cJXCGCrmi3zsQ4+Sixp5f4zhP1YQ7F5/XauSui7O1jYmDBFiGPw+yk8RRcrYSIzvprT6NbQGqj6OhCzXjE7uXjPbtqC1hbv9FexsDbRCpisou4oQNv2bTf7DFx9hvXuKK9ujgEHFGX5/m1IeYa5s4GKo3LzM0x/cYf94DncUzvXrPPn0RwnDvVy96hDHMFrL+ejJNkFoMFg0mxZFYVFxKtQSl8MypPHEd5kprTJuO6AHGP80dX+U5MY1akGZ9SxFyQpDQ9MEO0usx1XssRrjdBm0b3HbGme/f45o+hbtnmHPxDQHZ8eoBBlStSntrPPY1LP8/MIf8uqd+7h45zBRL8NOBVu9Icq1HpfWHmV0ZQZpLe6aSAIYAyjouyS4jDnbNBoFHwu/xKXVB7EcjaMyJuvruI6inwtqtFi6Mc8fLn6YRu86n5r8GrreY+LhESaHjhCpYeK+RymA4foS6zdD/q//eBrHSgiHU4p8L8trPaYW2vx/L/0S/+1jn2WfmUDafazJHt9c7uC7Gq1TLKMwuYWfwv2nJlhptnD7ip1khOmiw7Lpc617EVtU8dOMF8+f4YI1yawZopP1ma4ZHj16mVn/JvPJCuXEJ+opGLa5c7OMTjTTCxEMQbIjWf6LMYwSGFfCek7pSIlBM0RMZphEMVIKqLZ8ttfmyACriKmNNZkcT/DIWJCSlcghrI8T/MSDZNpnNM7pmJTN29eQyXl8bVFVinwEbAHKASeEdEdwwwiSVc3cDhSkLFUzWg1DJgRJKpmrQGjZFIXk+c4297sBue7jK8OU1+Q1r8tloVhKQ/YPDNKAdAO0q8l1ihTQSA3WUJ+xPRe4z36N6FYFyy/zVXmRfYfGmJ9YQpfWSDNoJZJ/d73Kb9jj/O/3HWdlkPHpZ59lpDTgnx7x2S//Le01zTc2Jtgn6owk89zulzht/y+0KaOVhS00CokQGl8pVjIfv3SaIw8W7HFcwl7CvJwkU8c4MvU8D84tc2GzibZ9fM+hb5fxNztIASN2iJMZwjSgLGw2J6AylCKIuXKnR82CckWQ5IreBiTGsG2vkOlphIJiW2N5R9CyzjPdiF8+cZY7uc+g67M5IYlHEx61Yz5xzEZesljsGbZu23RNgWNp5gKbiVMZZdtw2HHY8lNuBLA0mlC6WCLQhsx+3aMVyPyUrl8QtmBiv8WerMtMVucnqg0+dqSMEPN85flz5Ot9KpFifNyi4y2SK03NE/S0INqAbKBwfMlk4LG50WWnOUBakpVuTryxxvOXL+DbLo8eP42p93Cc3QxluQpCtDgpQyZPl9ncbuF5Hk880EBU9vLZL32J2xsJgbebCe0OcuLEZXpuH9PDDxKGIa+88grZ9jaddhvH9zGOQ2dd0msJ5sYhW4pZv+owPajxXHqHTOUYqZAJ6JKFb2C8YVERVR7fs4DSu9XxPMtwgoB0chKT58gwxH5dVEfLjK35LagbppsFTTvHKRQDV+IOClzX3aV6GElqHFQlJG9IvhveINAeJtPoksTkhksr5/hsvMPPNX76rjnPDkM6588z8dRTBO/gCLC1tUXgB5wMT5IUCVEREciA0AmJ45hTo6do2qN0t5eJTUpgB+ypLhDaPt/c+A6W64ElKezvKdeGJuTF9Rd5euHpt41XRBHR7dsI26Y0P//XBqZOpYLO87uUcUXWxI0uIh0X0UnZL29hVMSanMeyPDzPo16v4zgOn/nMZwCw8gK/E+32IAuBTBRukjOoBBj7R7fwO3v2LK+++ipJkiCEoFar8fTTT98l2vQ+3sc/drxfMf1BsG3sK1fe7oUJkKZkjz/+No/L9zr7ohsNnPPn3+ZdKtKU4vBh1FuqqH9bKJU0Fy86b9N8ShL48IfTvzMtKO2OUJSPUlSOo8J9IHcXElLC7Kzi+PGCEycKFhbUu1ZKvx8LC4rpacWglxMGGQ8+bHj44fyHEjoupa/g5ttsbgukLehPTqCRmH7G/oNreIcHqKP7EK7E7K0j3Cb2S1cxsoQ6OAXjAaGzwwH3BkY16NkRDW8FjCAvBM1OiVJJ4+VLWPkmdnYHmW3iZHcQQwcAC3tx8U0xLiMtlLTIPv5x1PF7sG7exlI5Jm8hK1O4joP/xKMMlxPqske1LgmtFrVStnu+psAZvAL7SiAkdv8CMt1EFk1UMM8fPXOSa5cNtt7h+vIkUWRIEoMygkBkWI7kvuA1/sdDX2R64xykKVbaxLpnE49nmXu8xalTbU6fHuH0/ICKyLC0odO2KJRAWgIhFI6lENpiYyVn37xGah9t19DBDM7WFk4YUqrXcawGt5r3kOWzZMU+Xr2xjzPrJwjGfNrta1AqiEtrbMQlxvd9gJlalbpMkUbh1nLk0GESJ6Ee3GJmaIV9EyucuXMv1aEcp2RRHc5wyw3S2Cdp9zADD7cdYSV9VGJhqZh1E7IwepZDsysM+xFzt5Yxh12G/TbCdjG6wOgMaRdkmcNaUWO1NcKtwTEe++gtpib24IiMPHHY6I3Satfpdiz+8uuHWVt28USPopdTEjm+Z7G+E2APlnhg3CHTLvs3PPx+l0QqNmNNYmAgFBUr5OjpQ1i/8FESSzJ05SZH9w/wyhEt2oyVYzxLkzYDrrkNrgaayOrQYYe54R1OeBeIiJiuG1zT5uJ6n+dKO5xxcubLOdPl3fb9IrZoXy5hjAQDIhS/suxTAAAgAElEQVQ4liabKLHneMrZFYuNnSGSpSqZsXEcONncy8HhAt+SlKoCJ4zpN4cZn/8AudbkArRj4biChYmjuMkNpnSXSkWhjEvuS2yhIIPOpsvNFwuKG3DbA68Q1CJDU0McCAyCA2WBr8CojF6SUHIVUybAEjW01eHS1YjYs1jsKx4NDVns4vkVEClCaDQSgcDp5RRJj3CuR8Vv0rvZ58qdFqNHbrOaRWxEDoFdRijFWt7h5k5GkEn2B1V+2ltmO8z49xcKwtoNHt37a1S7E8jBEKOlmI/fcwsn69Nqb7NoVsmFRksDlmJ1x+fzQ1N8ZP5RHpqvMuS1QBbYyuALg+vvxRTXcJ1VCu84hS7w7DKRaxNmim6rjdVqM69STszXSOfXsLXiOzcyqvUCS2tMoBGRYHig2XzVZaLfoTDH6eRDLFQa3F5rUa1NMj7q8NDT32KrVqI5anOzDuvNAqSgZFtY6wHjayVcbdiD5FDNUN0RSASpsdBGsO0XVIfBr2ourBUMGQdLWfSiguvthKtigFstcArNByaP8OFjj3Hvwj72j95gY6XLV547g2sPUFHOYLDNenODiiNoOga75xArSZrAKgnGgcmiSq3wGJ2vMjw6TNiymHRddoocPywxHO4HNcAvGXJLkaYS0drGt0Pq4xOkecLy5QusXr1JtnSe668N0JbZpdC8zqF07QLZOI7llonjmLNnz3Lz0iWiOKadZaxEEdOWRSgcgiwk74GOFVaeEBnDhWhAL1G7bbmBRUNayKzE3nCUoWoVSwgsYyhlGaXBgLLnYbpdRBAQWxaWZeGcdHBdlxNuGbG0Q9MMiC1F5gpmJuYYqTfoiYJ5NcaR/feTlEo837jOQGa7NBBpYxwHpRV126OpO3wgeDtfUSUJ1bd4eL45R2vNlStXdtt4LZvQDnHkbrXV931OnDhBEFQYCceY9ccY80ZwhYOWFi8MLlGY76cFvWFhIyh0wfGR43eN1Tx7lubZs2StFsnGBr0rV7BsG294GK0UyeYmqt9HBsGbFVK7VqN35QoaeO6553jhue+gNv6K7c02k4cXsKouFy5do+xByclZj3Yl5i3LIssy7rvvPirlMkEv3lUxfqMY8Pp3O1cU/o+2ILp06RIvvPACvu/jebsBsdaaCxcucOLEibfZzLyPHx/vV0z//vB+xfRHRP7gg3hf+xrm+6VG0xQ1P4/5IZTW/tZh2yQf+xj+M8/AYLD7stWaYt8+socees+GnZ3VPPpoytmzu6q8QkCpZHj66YRS6ccTPhJaI4xBW9aPVfFN013BoiyDyUl9l33Mu46ft1gQX2X/sZ1dGSW7TDZ4GFXa99duayWrHDoaoEWX1VWJUhbFsRnmPjFJqThDXvu+llhpo6YPYp+6he4MARZoBWhSf47tlzIqH81fZ5a9QWkWDLbXKA2DMBqEC6bAbX0Hp/cq8cGfJR5+CvfceUSSoKtVrA98EFmtYgSof/JTcO4sVrtHUrLJj32I7U4J6ZWYVhsUWQ8dD948RHvrMnrehzgD32DlrddteQqS5jpb2UPY1hquO6DmtNlMR3Y5q8YjIWE02aJmblJafA1ZFFh2gnisA02NyWsUcRcnPI+Uq4juhzCWhcKQ5+LNRECmazjCkKs18qRL1M/QwyHGfQhvoHaJq4CK+1xcGsOVMcJycH0HSxdUShnfvCh5tJYh3Ap9PGYaC5TtMTZMTCpGqXvbjPg2ghI1NYQACi1YXBvClylFYRhuvF4xV7uG5Y4qMb94g2udOUoOxJaDOjzNf1/5U15ejOhENrVRqPpdRta3qR1X4HusN8skjqDX9bkWzbG/usqmrtJXFZrRKfZYHZRyWGuPgpNie4oo8ml3AxZXZ5iorVAuGYo4peZ5+JngA1XJg+UKVcuDww3mb91mxHZ5/IMJd6qGvslZaEhuHqmz+JUvsKeX8uDRPiPeKGuRR6qqxCYBBvRVwkvNPreTgmy0zOPlU5xw21i2g7QMV9sRofT4th5QlQW/PKW5p1Kw3LJId2z278+Y+/g2S58fxyQgvIA8A7dhCKwSjzkz/J9nHiZt9pnqxNQ784hqj0s3DEfml9hz8jbWUMZ4/xCFUWSWDTiAQGrNdmHYOPkYqv0MrdYIqu/iFoah4S6ivMHK7YzlG1ARgqGBYc03SAtQYHoGYQv2Zj6BY9ETKVpISm2BF7hEiUB2IO94eEITjA1T2tektj9n7WyObwtU4SClpr9lSOodgpEC3zFseXCtF+F6mn4M9dCl2VOst7vsLBnygaIYzTBXN/na9fM8MRHzeAX2PSX5T0nE7/3pv+R/+tRDfOL0gV3ttiJg5fg4/dYN+os2QaCJFFyXmv9nn2RqJKU5LDkTt5gQLkdKZQZugs41NaNpqkP4+hxf/vJfkCTDZIVASocpWxCtXuOw6zBlDHJYYLIIq5Astm0WY5+pWkRsFzQWoXPFY3/N5lgp4WPu/81r7iGWvF9EiIwjB9cYDa7hlVyals3X+l0GSUQoNDeuKQ4XigekzZDn4haSMBRcbllUNaRaYAHGCFwfnJLFaKzZDDQrfoftJdhuQ6Qt1KYguqNYGFOoQFAb9qDXY9RWfPXVNcqOwuhNjCcRHZCOw9aGYXTOZbuAGEMaQKep2R9WGRmUyQpFaiqofhnUDc6X11m0WwRWyEkdEy0F3L6ek46OUqiCR2fvoI3hmeefYfPaDYQNUkheW4y4fltxczkgLWlGRio8eP8J7PpJ4sLjv/sX/5zf+Z3fQQjB/MGDqOVlMqUojOFbScK/rFZ3fco0BG5IU2WMh4ahxCVUDjma7cxC4HC0Ns7wG4s3YwiiCJRC1Wo8+PDDdDoddtbXGTQauCMNvnvr28zMzbFPjHDsY5/kiXSH2+E3sBtNSnZKe3WMB+wnOakC8rLDnW9cIBE5FhZCa5S/m+i1pY3r+aRZ553nvXcSC3gde/bsoVQqoZS6K5AaDAY88cQTb/5eBC6F7+za1AgwlkVlwycabGFjYYRAS4vCtQGBb99dBOjfukW0uIh8i3ZE65VXyPt9oqUlTFHsCgl5Ho3TpynNz2NJyfAjj/D7/+bf0NnZYdiN0FFK14555tuf46ef/ghFUSClx0Q5gs3X56UsY35+nuXlZaZHRneJ1G+NE4XAUhqhNEb+zbmn586dI3xLN5wQAmMMly5d4uTJk3/jfb6P9/EPEe8Hpu+C4sABjJS4Z87sKvN6HsXRo+9pEPjXQY+NMfiVX8FaXUVEEXp6+u7A+cdFlmFtbYHjoEdH3wwWT5woOHq0YGfHQkoYGtI/Vuew0BqvnyALDcJgEBS+Qxa8ndP7bjAGvv51lz//84Bm0wIM5bLhJ38y45OfjN+JIvw96Ixg40/p9Mv043EatYTQLvB3vkwsS2h/4t0Ht3wwAyYn9d18VJVAN337OUcROhwil4cRiQbhYJw6W+s2UhWo3CFxanjWCkoEWJZC6GSXn+q4CNXD6Z3bDRaTNl7rW2i/TvyJnwfLxcoLgn6MEeB0v4sgg9MH0Ab+9Mvj/JffdyjVR3CkYah9jH8+/UXm92iQEue115DhEnqigTxzBlOSMJeB64GwGXQzLNvCrXqoKKPmdTFKkBlBHLgMTW3z8RN/wf1nz6BbLQrfxz6+BToA28ZqNrFWV5FRhBAD1KCKGj2NwSLTEEj95g3t53W++1yL+eQ6brqDOxugKy9B9yBmI0AHAbFTISlsPDLIOhR5RBq1uLF8ks21EdoTn2LP0EXONT1O1I7gyYghr4krLQIvYaU5zeRQjyipoWILYRV08wqB7JJao9Qqu636QjgYmZM5J3j6X13lkTvL3Gjv47mb08TG4/Nrn6KR3KbqfpF+tEx4oEk12oalEDXi0NkMSXYsXrUXCEeGqOgeI40GrmjS3pwhvG+blZ1xyvU2CBshyzh+uvtsWQlRGlCpDEArQmubkXCZPeM9Gm4brAKGAvIPfpBg/YvMHWgyxxArTsDVcRdr6SUWDjpst04yOTmL92crFE4bYRsQhqxQxI9KsisZUipcFKWwxbAf75q9G4s4HeMV3abiGT5SUZwqK5Yim997tkLcL/jNjsPEfRFzP7PBna9OIlVOZ6yCN7aH3/4/prj56mE2b34AicYvrVALrpJrl6XuIUadO7QHEjn+GpWDkmSrQGcWaSrB5Ph4DMo2RRzwyp2jjJeaBE7G8L4ea4OE/5+9N42x9LrP/H7nvOvdt7q1771Ur9Vsbk1xEyVKlmXLnomVjAfIeICxP8wMAgSJEwQBJpgg3+JPCQaJMxNgkkG8RFZkWXIs0ZQskZIocWv2xt6qu6pr327dfX3Xc/KhmpK4SJRkWjEBPl8v7j33vvXW+z/P+T//51ndyHM20+DoZzVvXldM3hGMpDX7Seg4MFKHahlkNUNqqo/TN4gHkiFtYMYR9pDE30mzUIxAjDLhTzJ+6jsMjbcwUpK159IYRGhLIQstVC5iaFwzf/qQW1xZ1WxXIAzBMEOwY3ZWJJEvQAp66R5/knI5mQpYEjD3FAwyJmdVQPGZBb72Vzf5t3/+Mv/mP/styqOabnuLdWeHifkU1XbAypjH5RHI43OgKrSsCuNCchApwkHMGTdJrNuAZqQ8xDcvmlxZbRIM2nhBiNISoWPOuRZ3pMFMGDPTqeO6BoHyMZ0EvrYJjAWsjsSorJMdqjMgJDYM4lSKC9E2c+e+zsHZFItnJXErQDuKF6v7uIaFVBJbCuJY0dnTXIkGPOsoigg2bppsRwbJkgITbAG9kZhi2sGRFol0yD/+R4rXX1Xc6pucmYFuD1bvJOh5gkFDsPFmle92rvHxuTm6ElRfY9sWRsZA2ga+5WFFDr4WFPoWp2WCbW2wPuLxOWcY3Zmm4VfRqoGgQ6e1QXfGI5fJ8LHpcxx0+/zAvMVMVGIkzqLiwxgO07bZHxywerBMnBugJIRByCA5oCMseiqLE7lcqfpc+dYlnng2wURigiiK2N3dZWJiAjjkLvVqFQA/inhzeJgjrRaJIEDlcmRdF6Ozx1ErZr83IIlkkJX4VRi02/iJBFEc48Yx4r4bf34qg9W6SMJrcX1tB+P6NXJDQ5j1DQJrHT09TXJxhmOLGzwkZtmou+StLKVTEem5FbwqxL7Hx4seK68KXvR97EQWpCQKI4ZHhpGpJKWuQhBgGOsgPNApgsEw6WOn31naflQSpeTzn/88zz//PJVKBR1FpEybjx09Rv7eKrsbG5Qeeww7mwUh0MbhJsIe+DyeOcsfN+6SMQ/3M0akQEc0pc/TE0+/bZ3uysq7SCkcRsFUXnjhsKP7Y1Ku2muvYRUK2NksV1ZXebnXoxiG5IoKb0gRWwLTMHjlhRcZn57i4KCKwMf3BkjDZHJykqGhIQqFwmFd4HDP8kFiMBi8KwIGDjvN+/v7H+haHwbcuXOHa9euMRgcGq49/PDDTP0dqQI/wt8vfCTlfR/oQoHozBnCBx8kPHfuUC77ExjZL00WIAQ6mz10if0AdbT2q6/ifOMbWLduYd28iXX79mG25v1TWykPO6XJpP7bjbNqTaIzQGpNpARhLDFNkOGhjEdZP7tk5ZVXbL7ylQS+L0gk3lJXCzY3D3MwT5z4ycZM4f41/uL/HeLlq7PcXC5z9fYotWaC+ekuRlQlSr+3XOktKDNPxr+JF76jOxt3EBho+x1zIUJg7GygvGHkWgdZaaHI04sV1YZFdXKehNnAtT2ElcYQIY5skUiAtg4LIkYCEAgdEScmD+WTUYc4OYc1CJBaI70djKAG0kJreP67Jf63L50mCD1qTYNOnMHPD/N85WEe/5RBprpx+Dc+pjBUBanqSL+B6W2jCmUQBhgml1cXGR2N2d8X3No/CS7kJhqkUj0eO36JCuN4fRhKt0i328inQdyXu4t+/9DhOpWCSCB6dcxNF1Ueot60CJRBGEsiJal88zuc7P6vZOUOedHCemUN45V9yLYR+RnU0jq9Zo+NdhZjcIAlI3Z3Ar65f5Z+Z0AYCibKARdXH+KF5QVy2RLFlMbTDu1BGseSWIZJHJnMjjRpdXoYZgUzEbGyd4rJCQehTZR1FM0kSo+QMw9YXDjAKRq8cP0EN5aL3F4rc2dnlJXONCu7M5webjF8dBpjcZZoENM5SLG+VeCO8yAyP4ZhxgS+y8beFDe3HqTZSHFssc1BbwjX9RFIohiSbptXfvAgwqzSbmc4OrJEOb3LRG4ZGQf8xrk3yORG76ckhYSGoHdyn14iQ3+ojJ4+ysLNTYbjJHOFEeazI9BfZyvTQ3gRfaFQCcHBScH+6ZjllRT7TZ/RA5fjW0nmXB/XNMmlbUIdc6er+I+TbRaTIRtdk//51VFaykHEIfntSQqOJjvbJTHqs1w5zreT/5w//esnuXLXRAuH9sFRRkurSDsiOzTPSKZIUdzB68LsaI9oZZJISJIjAiNQhE2Jmx2nMDGN7W5zc81i0KlRDzMURkLaOmB1R2NJSb4X44WC/GTMzgYkAsEskIhg4MDxoiStBKprolMhji14MGPh903efFWTm+kzOTFPuTBOKSPZWJ5kfnKH8kIbN69wDYWcaJAfjsksao6eObzszz0n6SobyzPYr8bYlmS3pqjuKxwhyA+b9EJJvZvEyHtUjRg9CUNJA6U8elGTo+ez/Oak4r/99z/gL773MqXWLkeSIJwkW4aL5WVZSkUoWzHuOmTcSQItGDI0HaWYsl1cESNkmsi/xx9+vcfs9AxaQKfnIZG4tqRvwOyFmO05j8FZn/y8QnQMHDdNee4ZckMl0jsVJsZDOk2FaVq4SRcRajQR6aDO0V+dZrhcoNPeo5ersjHoEvcg6VhYKqRkhcQx3No3cXZsWtsGjoI4F5JxQCiDnqmoJCPyMkUkS5w+MsPoqSle/HobrSW+LzAxKJdCmrsmOdMl7vgkEkmm0knM0GalvoWJgYgs7GRA1+gQGwovssnlDTpVl20vYrARYu4GrN3bZr+2h+/3EekB/Qmfjx87xYXZR0hbWcYLQ0ymxpAlB6MW4Y6MUC4Pk012ebN1mdaggdQSiaTb9Ujbmq+3NNGOgWWFNB0I/ABMUMOKXDHHxRcv4tw/EdXJJCkhkFGE1op0waXwzAKtiSTlwgQdLyRhJpnNlxlJpukOQsLUCIXxcVqex5CU9NptikIgTZPkjMPDxzsU0jtsV28zm6hTthoMrHHAJBTQ2q9y/MwuVslEa4OE5ZK100j2yM4KzNJZOgObg70DxnNNvt1s0FMhCTfDyOgomUyGXtjnX579POna99FxF6EjQr/KdrTCra7BnTsbCCEoFovvcsC1LIsTJ07wwOwR5opDjFZrmLduomoNqhdfY/3P/oz973yH/sYGTrmMncvhdD0SdoKMleZedx0v8gh0iI4izk88yonS26PwOktL92f9347+xgYIgVMqvb30GgZxv09ycpIvfOELNLa28KXEk5IjYz2i+FAO7QU+x6encbM53GSOKHuOI0eOULr/eZ/4xCfAkFh++N77QAFhwv6F1F9LS0so9W7PDs/zOH78OKOj73NQ/j6Iooj9/X08zyOZTP5E5+K/SwwGA8IwfE8C/uN47bXXePnll5FSIoQgDENu3rxJOp3+QB2JP5Ly/v+Hj1x5f0n4MN/k5q1bWK++CsnkoZHSfTMl6+ZNwjNn+JmHNn8GyCgmasZ8/YU033klxRvXXG4v2ySTmnImIPwZZzSUgueec1hfN98WRSIE+L5Aa1hcDH9i1/QrX+jgeRLXiXHsGNtS1Jsura7LkckDYrOEMVgFFaOt7OH8z1vFUAgwEmRyRfzqDTo9iztrRfq9mNTILMJ0fijLfQuxaRO9dg/1Ug1LhcgoQtbqJFt9Lo78Jvsjz4LMItt9XO8AK2rhOh7G6Fm0mUWi+FFeqyJOzIK0kHGHMLOIER7Oi5mDtR+uvb0t+cMvn0Rrg1jFSBFR6xQAQSIt2Y1HeNJ5HVIJzM4NpF0DzMOMxniAtNpoJ4XMzrDfGKY1cBkeTdKs5TmxeBNL9ogji3zBRwuTQsZkLVpANUJGHq1juDbcN3LQqRQ6k0EmHAzbQvp5rKBF4DhUOkkGscXycpWjy3+InWtj2QapZhsRBwgnhJZBzRgQ2FMkgz41P4EZa6prTZ67MkSsE4hsBoHgxPEsw+WYG8s5JsZvcG5OEAqJkwqwzDYWXQzhUkxcJTd8j/R0kqnhDXb7D9MMhtGZOeLEFFag6Pckn310FysWLN0r8UdfP8L1lTK1dhLPM6i3ktxtHmU/NkiOt9lYc4nMBoOExZacY6s9h9dPMZTpc2dvjm/cOMNBrGF4iWY9xeykSaQ16WwfIpvq+mlqrQ32G2XOTV4lY3ewRB8ZGXzq5EucnLgF5igMIKy36XSrMLyPcLP0Bj169+5hVA7IJdNY6TJ+q0tbbRHaEqMsuTWvaYwaREkDFQQ8txSR9yzmagWMjomr+8wlFCIS9BOabNTmV5wWO6HNH16foB8YWBkLNWfy2DzMJB6n5Quyw7tc5jN8/frjvHzzIvjfp30wxMAbgziNbXscK02SbbyCSBogBcfHK0RmhnDDJxWUyMZ91ACS7nGc449TOrjLn77ZoOxWcSODiaMNtg58lBJY2sCSghEGJKRm3IHONtgmHPdhkJVYGUkkYxyhkJUE+VtpmhsOa3cjVvp1JuenqLbKWOks/SBNWMvQ2k0zPFZn6FgHcNi+DbszIQ+dPySlL70kWX0+j7OWohS4jCUkx45ppmdi5ADOndaMjsDtDRfPS1O0ajjCoDJqsGTErHmKrdDjnl/h1a7Hfz6SJaHgjy52qPQUQ6UUgRETJBRd2+fEyZChoiYw2yTjeYZMm0gFFE2TlNAIEfPy0hov3QxwkjnanT6t7qGLp+MYRCmPzAmFLkC9BZPnY7ozIQ86j9ATLrWsZuagTjbnYxomnVZMfzBAx5qUFWOlBRPPGsxPPspIocjF2zv0zT4ZnSKdsEhYMXYEjV2HUAomPAOloJGS5E3YNxTVVEQjJXBxSedK2LbLMw89TCn7AJdeuYltGXS7PoaCtCsxtYVlG4wMBzw6XaDbkkwURlivtzBMH6EVQReifsS+VLwZK/5Gh+gONGo1+v0ut5stGqqHJqTWDckXDUqPFXi8cIFB3EVrQT6dxTEllhBM5UZJjU1THh+lNz3D0uqfY/V9tBchwggzDrjRNLjdl9CJyYgEXUsi7vfPPv2PP82uv8v+5X3Mt+qllOh0GquUZP7pbZ74vTTTD0fI3BaX/QqdPZ+sZx3OeGqBl0whxsZIJBLIbJZesUjVsghTKYYnR3n0RJNi3qfvK9YrXRKBwHRgONui2Z9mEA8IBgEnz7cw01mU0OTsLFLXsZKKxFiBfr/FlRv7GNkGTlbx6Eieuw3o0SBdyFB0R/gXZ/85F06sk1sYwUo7yKzNi1tVtvsRUKHfH+Lu3bvs7e1x7Nixd5GcjbvLfONrX+PNl77H3uVLHPT6qL1dRK+HNA2iTgekpHnlCqnJKdKpNAhB2S3xQOE0ZWeI+cwsnxx5nPH87LuksV6lQtzvv2vd/vY2Tj6P9Y5NrxCH86DpuTkuXrzIzsoKUggGocFw1idhxYcHsMCFM6eJzYhb9XFis0AQBBiGwa//+q+TTqffNk/6tgibWBEkHdQvuFcyDIOVlZW3kTatNUopPvWpT/2tZkyvXbvGc889x/Xr17l16xY3b96kUCi8LZv17xK1Wo2vfe1rvPLKK1y9epWlpSXy+Ty59xiJC4KA559//l2yZtu22d7eZnFx8QMj1R/mPfuHHR8R018SPsw3ufPCC4gfd6rr9ZCt1uGppG2jxsc/sLWkF/JnX07R7UtsW2NbmiAQXL1pMzoUkB4xf6YTR8+DH/zAeVcMyVswTc3iYvie86aViuTK6xEJswX8qOiZhqbeMHh44psYURUj2Mfs3cLp7GPFZUxfYXkhMo6JLZP08Am++K0FXnhlmo3KGDcqj3F19RTF8SIlce2w2AnJzjasXO1S/36Sdt1lcDDAJMJOSPTYCObEMFd6p1GXKxwczLBdPcnNtSc5nWzgpJOIlEYoHxCgQmJ7GO3cd0XUijB7DiXA8QJkUEUQEgRwcGDwN69PEypNrGIUklDk8TxBqaQhjvmVzA+Q0T696gAvUgjLwzQEOrQgrdEJhzh5lCOTNXY7s+zzMKKQQKQOqDQKHJnaZnLI4cGjGeanDEbmE/QnzjNm7mOOD8BKgFLoYhEjm8Z0O8jlEUSzDs0tUkfr9Dod/uZ2kePrXyBt7JPJeGQzICodEBJkjO5ptsOYXlfid1pwsMrzy+NUuhErnSkcqQk6cGJhm2w2hWXF5PPbNDua8vAuQ2mXUAsUDqVkgIgOKCS+Qzg0jnFlH/Gqx/HVHbr+DJXSWehrsinFZ59oI0gggw0qzWFeuDJDvWPimk0m88tk0zvENLl4b4EJ68tUag6BKmOaLhIXB+jHBtfWTvK9O+MIIiYmbmEnQ/baA26tTlFdeYJ+fYZaRbJW2cc0fVy7y0L5NrP+Ghdab/BJ40UmaxvoezXE6hVeeH2Vv7pyk9s3NhgcdEhOJ4jDAIkmrjdIZmzkKHjXDGpWDWnGqL6k6Fl0TU0gIyq7ms0tm4XNFJ6ESISEfZehXETOiLCTDrteyN2Oybf2R+iLEmbSRToGxeEe57IFbhiP8adbv81WJ8nX1x/EU7dZWx/CsCVaGfheQKcxxGSxyKyzjRG1SKZ9TkwF5HMK46CDtd7C7/bITZdQMkmn2qew16ZTM1i5YREbHfLJPvnJPq1uhIwhaceUhyKGsDGEhQwUxYqiKAQtE/InNB/rOZxPwxO2YMwvYMUGd+8MePWgydknA9qds0Q6otsXdCsDVpb3WFqLeekHp3n8wh6FuSbOhObUUY3W8Cd/Jel+L4fnKCZnI0YXfc4869HNxCyhea0JQQqcWFJUKY6kLS5c8DHGNA1L4vcERiAQwqA+kIi2w41mgoW9PGceGaXd7hzvWegAACAASURBVPN/vHaAawk+eT7inohIpyyshMZ3BsSJffKcx8Jh2nExjD5KbPLKVszzt5rshnXaUUjog2vaJFIKL4bSWJGGslhvC1ozisy4xpmaY2YmR63RY/+qj261KZcz5DKQMB1yaZdTc4qRzxYJ0y7be4psLkd8bYc3tztEq0laK4qwAUIaGKZB2rK4kB5lM2hRNUJGdJnnNxNkRiJKLpjSoJAd4/GFf0F2zMSybnHrWpd21yfyI2wpMQzB2HSE4UacO26yeK7F2fMD0rGDWXGorNYxuyFGN4BqyOoND/uGz/RmzJVugyiIabY1WgkMQ6ASMU5ecVCLmJ0+iTBsrBjyKQuJC7FC2QYPPPVrjD9wjuzoCL6E//3VbxI0eiRFhCcE315XXD8wQGtStoshEwS2gZWyOP3kacbmx2iGTTJ+msrqDpZ92DkTQnPu6RvkRmDy2BFCBJaUTI90uYmJ1SwiM3kq3S5bmQxKHsbNjI6OsnjuHEOjo2QnJnhmKs1IZgUw6XshlVoHJ9YYroXrKvrBEAZZPEKOnepjuylybg7XSBAbDXIncggpWF8/IAgGCNEHTBKWoNA8wfFomN999Di/dfZfMZqxsazLCOniFBLc3KixvtkkkbCR0kOpESwrSa1WI5fL/bCjCNBoNPirL/05ru3gbq5jGgba9+lV9kgnkxjSQKNRQUBidJTu+jpjiw8emgkBUkiKTp6SU8DUkjBho9/hRmjn83Tu3HnbvKtWirDVIjk19a44GB3HOKUSiYkJRkZG+Ou//Evs++/drCfIWDH5MKRsJ5k8epTyY7/L2MIzZLNZzpw5w1NPPXVISu9DWQZK3p8p1aCkwE+5xPZP7wT+NJTLZbTWbG9v0+/3CYKARCLB5z73ubet/fNic3OTF154gUQi8UNTJSklt2/f5sSJE4duze8BrRS9jQ2a167RW19HmCZmJvNzk8LBYMAXv/hF4JBcvrXejRs3mJubexcB3draYmlp6Yeqgx9Hr9fj+PHjuO8XufAz4sO8Z/+w4yNi+kvCh/kmt19//VCrG4ZYV69irK0hq1WMvT2MSoXgscc+sK7p8rLB8m0TxzmMnNnaMqhWJYO+4NZdh4E2mJ19/xlWw4Dr10329sx3GhUThjA6GvP00+F7qp03Ngw2dzO40QaIt/+u+eS3GZ9NYySKIEwMXcKMU8iwhkqMH5ocKEXQifmv//sif/ZFm1vLRTb2SoyNCzIZuLVc4MSFOUzdptnQXHxzhP7mJEmvQ/JkB3ksolUwcU5MIYdnKdBgNlWh0zVBGpTTMZ85uUXKLWI0N1HjBWS4BRjEzjBx6tghedeK2B5GmNO4fR8jiDAjGxkG9AYazxO8fmuIRidGyghPl4i0SxxDIqE5dizmAX2ZjaUdvGZIcOAwaILQdRy/Szw5RVw8Tn/ynxEVHmb+7BinTkc8+GCfj33s2yzfTjNc0Dx4IoXjBESWhSamP8gwNHMGd6yJ1AeIUEBpCDMXQaUEvRBx7A5iYgMxu0mpVGVxfIfxwRJFtU8iUUdogah7CK0RjRC91cJvRiijgNrbxom3mR3bpxumWG1PkEuFnM2vUJhQSCcHRkh26B6tWpmR3Br9UJGxk6Al13YNjk7dIJnzMP9iC/FaG7EDomswN7jHBes6D/zTk5w6o0kwoFc7QGPR6kS8dnOKhHGPyfwqfgwRipzTYyxVYaUyzZ3qHJc2x1DWMzQGc8SM48cFdptZUsYKRyeWKKc7KC3oR4pcscaNjSw72w7F/G3u7c+xWZnks488zwXrNY6uL5PWB+hIEQPh3ZD/pt/jhaE+G5kW67k2t9uK3vKAhx4/hpvJ4A7tYI43sAo+se/g6SZhEGMkNKYlKWsDY0XR/IrNdDtPI5Em0hDrgACLN5efZnv/IZyDLNH6BH/dSbLVz9CPXLoaXDfiH44mkWGJl79/loRT43IlSb0XsU+PpuHRjnMYc98kbpylZPZZPBYzYbdJyTqzUwOKqQFuqo+5vAeGQeBVKVot7tzZYW1lg4Nv3+L60j7JoMfVq08wXawwNtYg4UQ0ejHjRYex0XlkeZhEwkQvT2LrAmq0QfWoYsQG0BxzDaycIuwJUnqEoekpJk7OM32kR7szhZKKWze2qe60MS2DMIyobre59JUsv/5P90ilNYYBf/AVwZ3vJIlqBjMPhJSGY5LliCVfEQvBbF5guZqlezahzPGPHk3y6Scgm3VgqsVkSfHNbkhkC1J9Eys2CA3NyIGL1TcYLxxh89Q2r3+sS/9qxDe/6zM3YeGOCaykoi0NujS5E+/zwmqX1o0B/naK1uU9OrsHvHbjgFQs0QlJzxuAFQEmyowwpg36cYSOBc5YjqoY0A5M7r3UZ+VuAl0cZqzWZK9RpVoPmJ3KMJwzSU/G9C/Y7N61qe+3SGwnyXtHaGUcBtLF63mEcUgq4dNOm5xMFRiZmGSjXqfbCkjqFMvLOQ5uafYqeYbkDP/kyc+QyJ/GzK5hmveYHR/n2y/uQhARa8HoREizKdGxw+c/JhlK9RgyA2pbDdRBg/nTA7ADbDtmoCzKI5CUDvWehkzEQahoBTF2BrQTI21NpBS0DY4vHmF4LI1Q4PciTGFhZ9I4hSLzqWnChHMomcXh9RtfYyuos6kjDpQicjXCDAl8SUkW0cMF3EyCWMRMfGKCe9177G/eJWn0iTpt9Godr9kim9tn8mQNe8ym2t9nx9tnJ67SEDHpfJ+rewYnZ5MkH6gxOl0nlfKp1WxOnjx0YrVtm0w2y0OPzmPsvkR3r8dgr81uvYurNCpWGLYgJscgyOCYLqfODDN6ag4nncXMZbEmTNqdTVq1XZYvediqC5YFUhCGBrVaDssyiaKQI0fG0TqBZd0GDsnB9763wo9cckPieBw4JBndbpeFhYUf1s/vfe97RL3+oZPwzu6h0qjTRsQxkdKkHPtQ+yMEztAQfrPJZiLB9197lTdv36bb6zFaLmNIiZaS8D18JwzHwRkZwT84IOr10FGEnc8z/Mwz9NfW3mXQpHyfoSefRFoWhUKBRq3GrevXsSyLIaVR+5pev8Cx4fOE7gKxSlGYn2d4eJhcLveeZEybBpFjEbo2kWP9QoZH78T4+DiLi4vMzc1x7tw5Hn300XcRt58XL774Ivo9ZM9CCDzPY2Zm5l2vaaWofOc79JaXQSlUENBbXSVoNA6J/89BTi9evEi9Xn9Xx9c0TRqNxrtyWfv9/k8kpkEQcP78+Z9Ipn9efJj37B92fERMf0n4MN/kxvIyIoqwrl1D+P5h0TLNw4dSoYDsdIh+rPj8bXDpikPYUwhgc9MgjgWGBMvU1LoWwjbo9QQzM/FP/Zy3JLv37hn4/o+cXZUCw9A8+WTA6dPvPWMqpeb6jQSWm0SGBwgdIIixZY/x3Abjx0YPibEGKx4CAUINiO0RkCaxEvxP/0uOly+7CKGQEoJAcPu2ydRUfNgJdm3K87M89/IDVLwFSu3bHCl/A2nGCCmQpgCrSjozQPczZOImxye7nB6rMldqYRsKkCi/SFC8gB4dQVt5dDqFkV3FcHdBRQSZf4AzAKRAWQax6WDEHUylubfXwrKqXLw1xSBM0hgM/fA6JZOa/+K/7HPpOx5Hb32dbH2XdGufXGMfWU8T5E5jP/LooemG8Ikyh6YXlgXJpIltL7OyNsbZYR/LPDRR0lKiDEncKzCeHeB0yrx2cIZbzSGWdme4dukpsnGH/PnXEUIjHAMyFjgNjOQ1jFYDeSdC2h5S9RFdH3G3j6z7YJsMejap9T1Ep0s4XcB2NLPZbbRSDOU0KbOHpIPKxsj4gH4U8puf+T771WEa3QSV3oCO2uXRh1/heLpG9VvT1N4cZy84zvp+DrMRkfbriIkphDQQhV16e98h7K1giQ0cq861lQkMKrS9AoNYISQoJFLFnJ2+yk5rFK1jUlkf2yiRsNZI7K9iV7coD+qk2gq7F0FWUMEkVJLx0V2ePXGVUFi4jsfTF17CsSF90aO7b9AZpMkmFZZv8u+cNncTioS2cB0TC4vQMtkPPYayFnMnOzgjMWYvRtxKE4thVKNJLw7ZeDFLr+Kyesli5UrEcjqB1StT6Y4S+wVsw2b94NO41RFSPYvV7Sme2/1tzN1Fzha2kFoyHI1zpHeMs1P7NK+kWL04SmZQxaz1aWx5NJyYRmygghRubhu3fEAmPsb8RIv5yZPI5hrjQyYT4xVUFCO3a2CA4Xi4boJ7yzaN+i4pD6RKMDFW4NjRLEvtx7i7dpTyTItOT3FqoYxPQCACOmGSSjjNxLlx7CEX3d/BlvDYo5rMfIQxbJA5PkNy3sEUwySsNOXRDNV+mu3dNn69ziePdDhXrrOQb5IRksLsPk999keu1V0f7l5KIA2D0fmQZl+SGFY0Yo0hBFrB7DT0vRQzxZB8qU/YSLHTCKkREg8UFaXZjRSeoUj6Nr5U5Gs2uivZORbw5eE1Stj8wQMlPnva4f/6Uo+bNwKy5ww8I0Qql/JgwMIXHbIrTcovv4m30sBvKHYNg4N2SCEOaJkGg4EDKqawIDEzAoHEcGHoiI1Uku1VH29VMp2eR0lJJT+E41WJu30UYB4pEH7ap7pj0m64DCcXSTULSB0zQYZaXxAUXBq9LknD4wGSTJZLmK7N9r09JBEruw4HzQGOaaIiE8PM8itPT+OGX0dkDjCcOxCuc6JssbHWo9/xSGUikkaC3/p4ktFSjyEnieg77K5qUiM+QkHRMci7BjstRcq28DMdtuqKMKnwfOhFkEjwo5qgNUltY5qSifIkwSAiUILWIETEAWN7Ed6122y98C0GlQpOuUzOfI1erk6sBIMQLGmQzcL0qEO9MkSv79Hca2IP2VQ3q0TrbYpKMZmfxM4nmTgxxqeMET75hGR3ro00JN24TxB4GLZNSEQum2DouMPRo9Dz+9Ra+5RGIp55Kk+7PY1SBoPBgMWzZ5gte1h7z+HVergJiEwDPxIYGnQU0VCz9AeSyZFhSoXzFE55GJagEcZcfGMJR9+mtgPLdwa0my2KscROKtZ3x/B9mzCMmZzMMzU1SRQtYFk3eMt69vr1XaLorflHgzie4y2i6rru24jplStXUGF46LjbbCD8AO37yOBwLjNtO4cmU5kMRibDzdVV1jNpjFjhSIPqwQE37tzh5PEFglySn5TdZiaTpOfnyS4skD15kvTcHFYmg53P4+3tEfX7h5mljkPpyScPDZfu46HHHuPkxATV5WXGfJ/5iQmeevBBUkeOYGezeAcHmOk09i9J6vrjkFKSSqVIvIe50y+Cy5cvvycxfWt+8/jx4+96rXPnDv2NDYwf60xKyyJsNjEzGeyfI5XiypUrhOHbc+HV6irG9esEN2/i7uzgFIvY942lUqkUN2/eRL6z66016XSa8+ffHWH0i+LDvGf/sOMjYvpLwof5Jteue9gp3dzkhwOb9x9m0alTyEaD6NQpeJ+h9Z8Ftbpku2ISe5p2S2AZgIBeYNAKLWZnFZWK5Ny5988TnZyMMU3N5oYk8jS+JzDMw3zVX/1V/ye+P5mE9XWDQZhGJyfRZhZllYjMEmdmlikMvXUiJzHi7GH6uwpRzghIh1cuOly65lBv2UTqRxEvUkK1Kjl5MsayNHNzMdeu2cSxYLrwEvn6Gvp+rpsQoLVJvtggcuYRXvze11cp1Og4/rFnMVM3sdOXEDJC20l0uYjNNnowjtF5GbP7GtK/TWzZqNQ4B5WY3bbDzc2jbFaG6fclnY7EsuBf/+s2pZKm+peXSQctsvEutm5iGRmklSCYGsc+MoSwZzEjEz9ZAjOJiGLsQYATDVOpNshn04dFRGukocGeQ5SnOfLxYS53F3ipcoHu2jD9my6BLBFMXifneKTsED3uHEq4tEA694j9EspPILdicEPEwQCxG4AjIT+K10uhlMLudvEmJ8EM0QjG0xXqTDE+nqQ0k0Bbmo1txcz8EvNTm4xO7jA1tcljD93g6fN3mcyucfvGU/RfVkgrwkhGpApJ1hpFkvgkk3WM4TYyvYJSgm5PEGGjhcmIe5nXVo4RK4MwipFSoIUi7zZ4YuFbXN24wFBR4iZjCilIV96kupdjqX2ElkrxZu0c7X6RfPeAXq5PHIZ0Byn+2We/i5EJGS/v0mtkWbl+lCO1ZcJ2hJSCpG0RDwb8cbKDIw6dIYVjg7CQRAykwtw/zUPnBUGrhD3+LKLWRootKLQJTE1tx6SyZNAb9NizXe4ERbKRSWA4aNum3jpJsz1FSQQM4hFu8gjaEgyCBKI1zAP5DsOGSc/PIXtd5i7e4Y3BaQx7QCMRcknGaE/RMgQYEjF2idF0nbkT15jJjHJ8ocR8ustYsoeJTUgPY7+Frzpk0gnqB0Xi0KMdtBiL8ow/eILC7CQZN+Ls8B4njtUYthzOnb5LlE4So/B6WTpbRymmBe5mhbE3+0ws7zHjg+yBHoU4cxTDSqG0i5OPoZVio2ZRHA25fXOfXzlSRWmFIUykoZmc8/nd/2GfMIKv/ocMxdmQ8/OQHtL090yKRUW7oVmqhGgBqfSh4jydsAgsk8V5gZY2cdOhCezRx0FzxI1Z6wmaUuMbMZYvGaskeXW0xuVj2+RDlz/of5KzuT6u1Pzmb9nMXrD54z/o4TTg954QLNYM2q+7DA16JAYxPVNhhzDjOuTnXaqdENuMaQY5jh6ZxJxqIYMkaSPHiYenSVgu2ujR2ahTth0qm7B90CTUmlZhni/vdLieiKinHS590yA/ojFFjuHMSVR1gDAV/YrBdDzKyWiUM3IS53qP6RyY6ZhEtUtUb9HZTHJ7KWZ90CMIAjJJi2NHRzl1fIe1KOLG7oD9gy1ubzSodDsslCyeOmnwwEnJybJkenTA1JhNWqeoddJ02h5+qPB8QRTHdPuCvabCwiAs9ti+p/GTh47JnQASrkAaAsHhczkTuDQ6it+YfwgzlcAPNbobMtJymEgUqdy7i5nN4O3uMmjtcnv1Db7/vRY72z6maXHu/BgPHZ3hPz0+hbAusHqwy7Gzx+iZPQzDoHFzh9vfr7B0ZYv9zTo7+3vU9zrUM3vIsTYBikCGSHH4rDRMC1O3KXU9ru+ukjATJLIpQmK6qkU6EXGwm2NycpJPneghO3fZ/cESttNHGJKhtCCQmjDy0UqzuiQZyRSYm5hm6MxD4DxC6Gpeu/x9BpUeS2+UQZgkEhFa9un6Ed5ykWo8BFIwGIT82q/NovXjaJ1Ha4lp3gNsOh2PnZ0WlhXhebO88cZdLl26xNLSEouLi28jpuvr63QGfcxYEVkW8cpdwiDE8AaYCBzTQAhBam6O3VqNqhBMnD7L0eExypkco/kCaSdJXQcMTbz/CJG4T7DegpXJkDl+nNTsLJljx8idOoX5Hl3Hkfl5FopF5mZmGD96lOGFBcL7ex5pWYSdDum5ufdd/+871tbW8O77PPw4wjBkcnKS6enpd72nceXKe3oOS8si6vdJz87+zOtvbW3RarV+SDTVlSuYGxsgJZZpUnQc6q+9hj0yQmJ4GCEEpVKJW7duAYezt77vE0URn/vc5z4wwg4f7j37hx0f5Zh+hPdFPD9PuLiIffky2vMOnX+TScLFxUPNrNaIXg/9t5SVAJw9G3LpkkXbc9lqSQQaP5IIKZiaOuySRhF4nnjfnFQh4Fcf7/DZxTq9LigNyZxEFdx3zaW8E5/7nMfzzzvs7pooNYRlaRaO9piZ+3HJiYK3TIyEgTYOH4rXbthk0hrDEvBjTVkpodWS9Ps/+i3ptGIwkFipAb3MCMluFWVaKAWWpWGgUI8MIa75yF7vXfO1IgyJTpxAGjVkuk+gn3jb61IfYHX+DSqcO5xp1WAMlpDGNqOnfovn/nySwrCmMBzS7QrSacWDD0ZoLQj2m2R6FfaHHoDuPrO5gCg1gzI0zv42kX8KI5MBpXA7O0Qqje0FaCFApPnk4hybKx4d7WM6BlFUIghsFo5GeAPY3BiQ9peRw4BVQA/6jJVWaba7DJer0HIQ2SI+PjeXzrNy+wm27h5h2rrFJ/WL5Nq30MdddDANrQS5jKZmWcS2jbteo3ViGjPa4dTJcc7kt1mtlqgXxsnHsHhul/LMtxgYY9jCZUM9wr2mwXj+BTq1Z9jcu8B0+hswgKSTxrEtEosDzMjDiNtgBYhBSF51cRwDLWxCSkRDigtHErxy71lOTBgszIRkUwPSuesUkx0+3o3YbiWZymXIFbapv2nyg+oZPjb1KkIeEKM46I1wbfdxBok3CDMdHj3+HOatGq9c+zyOGWLLGCkVe4MxCmqFVEKhtaCT1CA1xPJ+wPv9/F8l0IYiMJqEvTTO0CwinYDPZAkqNWhoorWQmQttYuWwFpgs7z1IOtpjQwUIqTC0ou2NISNJKKcJTRssA60koTDZ7Q5zc/UkPXKMuPucf/OAxESDol+n55lcjiVDrqJka47LgI7ZYvHkXTZiSa1f5j/59Cqnj4aEvTFa352me7BP1BfUxQ6lQBB0HWyhqRo+eYYxEiO0RxdRUYWEFSFdj2QfHDfB1d1HKXVMQsMi1EnSZQ/3RhNjqcEgYWNYBmY2Jt4W9L9t4f6TGQyySKGwEx5y9ARrKy0qy/d4ZLJKpA7/l2MlKJY1v/Ff7YGC/+df5fjr2zFfviP4H39f8/SjAcm+5k/+SKMjSc8V+JYim4Enfl2hsQmUxHQClu9o7jQ69JWmYRzmNecMeEpqvuZJBo7CyIdsTXZozHskfIP/rvNxxp0R2oFg9skVnIkip4ZNPvWZ2/zxvwv4/X854B8uwCeONBla9UBK/L5J7EkSQchi1ub8+SRhRvB/pj5NVOkgkj7jR5Lkx1LEQNYxOT2T5+J6lZ1bO0yUFUY/yfJal/X9ZWzTpdfP4tZTeL0OK6sx/+A3ywwsHyc26R6YxJECS2FpSTZZQAqH5XaZ6HZMp9Li6rUEGSfJJ+YH/HbZJD3p4UdVZLHHf1gv4SRtbtXrvLrZxOxrznoJbDdiLjT4jx4RmIYiEWjifh/lGux0BmgsdGwiJahYMdDqftNOY9oC2RUYxQjHBd0DITToQ2OirGWSGpvmzFCZnTt3GJ08zmRmDt/os1/d4bVb3yUtwI9C8vk8//b//gJBvkvWsklj0VuOuLPa4nd//ySFsubU8QUgz932XURfULlUobfVQ8WCvhrgex4bawF+fsCN70X87iOCLdVDxZqU4xDEPrLfQcUhB3t9MATd/R2kncApFkmmU8Rqg09/7PeYnR8lXvn3dDYqVLdSDI1HJBM9bCfg9JzCC4eobFiMPaZJHbFoyTJbS9dx6mW8mTneeOMk4coKQko2V8BNeFRr62xu7fPxhSTRUJdgyOXTn57HdSfxvIn7NfgcSuWxzEucGCqwUtulGpT56ovfJQhDDMPAsiy++MUvsr29zbPPPvvDWI8vfelLiGSSzs42RqlMolFnMPAoClBhSObYMXQU0ez3yT/xFHO5IkEcE9yvtYZjYXcGiChGm7+Y6Y/5s8ToxTHW/fnNdxIx/Y4u3wcNrRS91dXDzFWlcIeHyZ48+VNzYt8P1WqVV155hU6ng+u6LC4u8vDDD/PVr371XXOqQRDw4IMP/oQv91P2Xe/hHPzT8NBDD3Hnzh0ymQx6MMDc30fbNkEYMjs6ipASM51m/7nnKJw+VGVNTU3xO7/zO1y5coVms0m5XGZxcfEDk/B+hL/f+Khj+gHiw376okZGkLUa8cQE8dQUanr6hx08oRTBI498IHOmpgmlUszrr9tcvGRTrZs0GgZRBDMzMdns4UPx4Yffv2NqDgLsQYi0BG5CkEgKTKExg4jIsX6qiZJpwsJCzOnTEQsLEY88EjB/RCDiNoZfAWkeVittIWOI3WG0XQbg+pLNQc3Alynq9fgd31Pz0EMhTz8dIMRh5uvVqxYzmTfopcZQQmIFPXSkGT3ioE8dIxo7TTj9APabb/6o9QqIbvcwpmh+Htt+GSEODZCCAJaXTf4/9t4r1rLrPvP8rbV2PPncc27Ot9KtXEwiJSpbliyp2+3YhrvbrQ5ANzAv8zDomQYmYDAYwAN7gBlgHhp+aD95YFt225ZsY2RbNi2RYrFIimTlXLfq5nBy2nmtebhlyhQVaNrtHmn0vZ19NvZee2Nhr/X9w/etrSmcxgMs00aJuW89rlCIbMBmo0rkTVIua1wXpqczjh/PyOWg1ZI8M/2I5sVH2P01otijPOYhLAVGEQcWZm4au14Dk2LUNIrHhP/xjRxPUa3YONpnlFbI5wWnT6dUq5rGeotrN7cOTxUa6ZZYnPxL5qYvk2iXWjlApim63+KVu6ukusqgt0IcnmTAFK8Nn+SCdRmrMI7OncGM1RC1Gm7OQ+ZyCGEoTkim5qax60sIUmoz28yNbVDwWxRzhv5+mc2dmN10Ehgx0jUWSdm4+wwv3xznD689xfruJMf0GuXdu+Sim5hghCciONcGz0UasBQkiULHDSyVcaR2i7n5GZ4528AuPeB64c/Yy99j05OM5v4C1x8yZ54i5R6tBx5Hp+7h2ANSk1L2dpnKb+IwZLfwkGc++hv8lJ8RCcVecwaj8kT4WJYm8B3Ke/u4to/tWEjb56rToR1qRM7CciyEtDBGMHItfurocY5/7BRuxUW5N0EOSfbXSeOMyIrZu5HHzitqymZ6QvOB03VOnZ5hx/G50YiJk3l8fYrZySH1epfI5DgbXuW5/musBrc5L9+iXmxRjW4w298mpxIWxg54YXSCe+UG+fE9BlKj4hzHP/B7FEttpmzDUmWZ51aeQww9ClGDXLFE9ciTFI+dxDp7Epp72FFC6ORIuzOwZxM99TzGL9EZumgFxXwPg8K2c1xWHXLlCr6CzGikYyhdWkcqST8DMephfEmiPOKgjO9Nod7Yxb3VI1vv0M3G6cWzxIOYQnSTrd0GaZhy5FTA5/7rLhj4yv9c5uFrOXaaCrtr8/vfDHn2CTh9XuMrWL8tsIUi9jO0NDSbMLls46DjpAAAIABJREFUszdUSC352oOMLFZ4SAraJlQxAZp7OxB1QPqCoW1oVmMKSP5xa4KB0YiZMqI2jzezztTiPono02lEVPIZZ6cN//G3Db9xecCSgnFlKOYzRpEgNYaRFSLQhG6fnWfuM7WgoOqwJUY40kJkFqdnG4SdhKuXArw0gyzD9RXD0ZCtA4Hv+yzPzqIHA4JhnyTQVJlhsrhK1AMnO9y3xg5IT6Ach167RaEyQT4scO3WQ4IoYXkmYLaWkA0t2jJC2IphccixMc0X74544UGDdiNDGcUoFSzbiiaGmhJUSwZbCrSAnjKEWUrvlo+yD8lmkoHU0B1ApjISldF8oHAGGe2aQ74IWhgyDbZjIZhkcXaRmfokViem2x2yv73BqN1k/eEaOwf75GybnhB87c4dbu3uM7daIw1jBOBISRRE7Oz1+MTPPMul11wkNuP+OGsP1uisd0ii8LElVExmUpIkIU0SogACt8zpo5CokMBEWDJhbS9jby/Dt1NEBmMDF3uUIKMEa9DHlkPa/88+1pW/IN2+ho5ThrsDhl2b0dChWI0JgxzdTg2TGdxaDa+SQxGSqGnidpuOEGwdHJA1Gm8LAqWphWPXcRyPk0tFlo4X+fw/uUCtdo4o+jRBGvHW/lvcad8h7Sp2v7TJ5Rd2Sfsu9y+9RTmOGXoexUqFqakp9pp7vHjxRTZ6G2w92mJnc4czZ87w6No1Os0mkaVIx8Y49eHnWXzqqbdLSCd/7MfYmplhrlRFfod1WirJzMTk30pQ6PshGQyIGg2EUnieRxgd+o8brXFqNXJzcwAMBgP+8i//kosXL3L79m2klIyPj7/v+xpjOHjpJQYPHhz+zjKiZpPBgwcUlpffIUT5XrG+vs6Xv/xl0vQwUp4kCbdu3SKXy3Hy5Ek2NjYYDAbEcYzneXz2s59925f125EOh0TN5rvGkUURhWPH3mXH873geR6lUom1tTWiu3cRnQ4amKnXmRz7lqVe0u9Te/ZZ5GPyads28/PzHDt2jJmZmb+VKvF3ww/6nv0HGT/KmP4I7wnG90mXlw/Lef9643kUkSwv/5VJ6PuHPrRbMVIwNmaYmNAsLWWEoaBUMtg23L9vYduHJPGvvkOi38d+801EGJIuL5MdOfI2cXOiGNS3LWpCIDKDTDK08/2nuO8bfP9bEcK4+jEQDtbwNkInZCJF5y6Ac+QwJWvg0x8f8SevTFIbF0xMaJpNSZYdii5duJDyMz8TvE1WazXDZz4Tsv/NaVTSJMwt0h+b58SJFFExkA5J8ycxymf0T/8p9qVLqGbzMKr4kY+g3xYnSAFJHAtef/1wsVYK4njIyBLstxVzc9m3yKn0GPY3kfIZNjctut3DP9bWoFQyrK4m2DM1xscC2vcHh/fLcohMY7TAdRMyW5LFMcqWSFkl+/Zsrmjgl9aZz2fMKYlO5sn0OMbAYHSNUbpEzjpcKG15j6q7yTDMY3kBQjQhG9JslxiLt+nml2ntnMYIibAKuPkCV5sf5xl5+bFVDpDEKGmRL5bxfu6ziPkcsgvG2gQlUWEDYxRSxhitwa1x/1KVW3vP0C0cY3u0ytJP/0d++Tef59FBEd9OOGi4vLK2xD+Z/go/vfJbOKHATEYIu0ActDBaH/rGaoWRPp7dQ1Tn+LGTazTikFeab1KNI1zHJ5EeJZMyyi5zuvBrTB9t89LWCl65Q7uj0O08toGMGO1tsug5/IIskGmJziyWJt7iG5d/lqlFC+lGbFVO47WHVPbfIHPyRGHIU1MeBzJkmBhUliKVTVDMcWRumk9+5CnswMFE38Tk1zD5NeySIo0V2pPogmbKSBpqjuO5zzDSDqmW/MITI54/4vHrF2FwfxblHJAkNh8avUR12CMWLl5RU8pbzOxfYUMp7GLEsJvRGe3TOf8fqDp1jCljTXZRtU2sUoZSDoVckX84V6HY38YO7mNEyt3uS6zHAfnCpzg29kn8n/yXJK192q+2aBdy3Jyv8IT3ENu2cdSARqjp7eyxEwx4EAx5VF/n7IWTzFbrzLkRZAZtZUR2kaC3zUbzBIWxEdV8j8KeQv+nh6jVCsLykD2N/fJ9/GNlZsdX6G33ODZtsd5KOf6UAANf/eUiD96Q+I5DPa4jHzbJBRn/y7/t89//n3DqSc2LL2hsC1IL2ilsbsJXrwuU5XHtdgUr2wY0odH40mJcGyIEdyPDeWWxP1TcKIcATORsfua5Aq9fDen2GxTGFF7h8zjOS+w3b3P5tYT2Rkb7DYsPzXr04oxffhgyg+B/WPQou4Y9bdEwhuXikOsLknlp8FSeMQoEZo27rQFP+hPkxAFv3u7hewWG+ylxkhDlA/yiwFIOJgtYrue51z5gtVgkFYLm7jZxv0cvjqmTkXcSXEeSJIJmb5fX2CB3dZuy7ZCZkL3jASwEXE4P7V8WUyh0Y1IBxrS4uQGZsEijlG6oUfmUAIWTKV5cM1QDG7UEuaohigXDXUWjqxhHIERKpBVoWJlO2LL7PHjBwrcVV5wyS1NLnPmAS5wMKfgVPvHxc7TuFXjt4iZGFDFWjEkSpJJ4SjE+ViMJhmjHQklNM25QzicMmgMsG6L+iCRNMbbN5Y0eL7y4QadTxHEcLGnR3+wjbYmQmjjMMMJgOMzAJyLCsQRX3gjJnAXC+bt4dsrDZkqjnzEvBWee0tDU2HGEtlz0YEgcC/xWndSxuXhng7XgAQ8NpIHkiHD5uTMWQV8hbYFOUowQeOPjNHtDtg5e5ev393Bsm6VuF601yvPQ6Tv1FkqFCabVArl4mo0/yuOM5Wks3uZr+9/AEha2tLn/ld+lvdNiyV3Gkha9KCBOQ6Z0wgOVcO/+PdJRimVb3L17lzgf06VLeiPlHz33HAePiV2tVHq7lNN99tnDDOETT7D3m79JGG6T83xyuRzj4+MoqYiTmLn5+cM+1f+MKB0/zvD+/cO14jGMOVQMLp85AxxmIX/lV36FbreLMQbHcbh27Rof+chH+NSnPvW+7hvs7BDu7b2jxFjaNjpN6Vy9ythTT/2Nr/nSSy+R/7YscaFQ4MqVK/zSL/0Sx44do9PpoJT6jjYtfx2lkycZbWyg0xT5OBmh4xgrn6e4svI3HtuJEyc4cuQIV//gD+jGMbV6/V1EUwjBu1Qsf4T/X+JHGdO/Q/wwRF+ypSVEu41sNBBhCFlGurJC/IlPMBhKBgOJbZvvm8n86xBa4/UD3CDCDhPsOOHKVZv20GZhISMMJUEg6HYFrZYkCOBznwupVAz21Sv4f/zHyOEQGQTYd+9i3btHevw4SIkTxt/V6BoBmf0+Yi9CkPnzJMXzJMUzJOUnSYrTpLaFUZLEs3HHHUaB5NYtn1K6y4nwKmOjDZ4bu8P/+K/vYi1Nv2Nc1aph7vg0s/krzM0GLC0LPFcjsiFR+Vm0P394om2TLS+TnjpFeuIE5h3iCwLbvkyjcZ9S6S5jY4/wvBaiHxKFFZJhDd81/NUjJ7ZNKEp88StnCEP5tp6VZR0KNUURfPJzgkrzHvH6I8LUIYg8xkoaV45QS+Po6SrKh2zsBFoVQH5r4ZByG8u6TRjaIDXZxCYmd4/Es0lEiToXefP2ApY63FxMO9/AVW1G3RrjUxuU/R3A0OxOY8uAm9cuMOwvgPRBGKTJGA4czt//BvR6iCRGo7EcD1MdQ39qFTwLUagilUYOHgIG4RtSoegMiuQ7A7zXL1PeauL3LTrWOF95awl0hiV7uKKPHyc4juGN/kk+tfB1vOUc8rjExDFWPkWYjDjJiGOPNJXYTkrofg63mnCrs8f2sEvBKyPcMnbP4LYFuV6DPU9y/mCPBXEDc1ZQP35Abb5BZ6dMkknCUQ5vMmF2Yo163mOi/jxHFp5mYdZlrDJPrnSCXKFIeEozcf4Ga6MKg2qFsaU6YwsRekzRzlkkkyU+vHqSf3/2PPbQR9/LoQcDlLsPbU1iHwAe167m2KnmiaRDcfJjdNrjpLgYJYgSl6nCiJpXZv1hiC81OT3kSPQKb811iWZ7XJhLWLQlhUqJRS9k1zVURl2+MhehjcGd6jBR2KdQaJNWDC0Fx8qSWW+Sk5bmqy/e4IuXNvidtYc03B6BGLLef5n/u32P56rPIHI5HkWz3Njcx+7vkwYd6uWITrLNcO86Lx9s8+ruJr1eSNwc8NLdO/SyjOmFaSJpo+7tctPaQDkVhtGHcPJ9kCn1ewOYLyLyJaRISMMxtFhgIgwwJ08zVWpwdHYfk0u59qU8u2/6NO442JbhQVdQkhXqjkvRt2kleX7ndzS3X/K4ey1hvG6o5MDSsNeH5SMJdXOczU6RGxsNPD/B9TIsv88o0OxvSHwE489lvDhKyUnJpOPwKIzYGCX88yTHBb/ALAbfzlOYH/F7f7zD7n2NPUg4aEHQlzhKslS1ecKG/2sj5l6YMptX6HJMMGNonXIo5jIurIz4yJlH/PjJAc8d6VErN8nplOFDBwY2QzXE1RIdR+THAyYXuzz1gQE//4Vb1Cf73LlcxdMQJgnDIGSiPk5tPsM+kWO7E6PHR9yc+SrFfAPV0NzZ73P76ABXQcnLkPqw3Hy7klC3FEmqyaKMhmsxHFl4mcQTkigzzAkLWwlUKljaPE66e5wsmKDZMAQHRQQWrb4hLVoYT6NnNMM5j2OLqyw/XWXm85N87mdX+PlfXGRsfJlPfvIJPnh2Ba+XslAZZ9D3CUYZaS5H0WgKloWOIozJ8IiwC0POHt3k2naPUSRJR6CskFRqpC2RwmC0x/jU59nd3Udrjed5rN9fJ4hbjEYhcZwh7UMxLFdIQFAbl0ShTXG6yL3ugDv9BMtOkT1D0JVMWIIVpRAZSATS1mSZxc7Vca5db3CpscntpM9BI6WXGtY7AZYX4MmUIg7IHHJ2lgcHB9zb3sazFbuDCTCG5nBIattYuRy61Xo7AxaEIccti4pt40/PgDGMei1+//bvUhmfxbIdZG9E57WbZDakpFiZxYNHD5BK4cQZux40mi0MBsdycD2Xqfkp2lEbT3jU/RITtk0hl3u332iS8MevvYbrujiZAW1I0/SwBNX3KZVKHDt6BG1bZO8huPx+IZQit7BA3Goh45hgMMAulag///zbYkm/+qu/SrPZPAxEWBZCCLrdLo1GgwsXLrznnsdut8sLL7zAK6+8wsOvf50sSd6l+CukJB2NKH6bUu33QxAEvPbaa2+XuqZpysbGBuvr6zQaDer1OnNzc/i+/56sVoRS5JeX0VF06BdrWeQXFw8zmu+TPEopGV9aYvj666hvK8k1WuOMjTH+oQ+9r2u/X/ww7Nl/UPEj8aO/J/xQTHIpD/tNz5whXV0leeYZOpPH+PIf+ly65HDtms21azZpCrOz76HXwBj8foA05jDLKQ+Nrvt7mjCRRNpiclLTbkvCUFCvG3wfej1Jcz3kzK0vQ7HwLWU+20ZEEaLbJVtZwY6S70hMhTEkrvO++1MOLyIel/OKt9+NttShLLwQnD2b8g9O7ZN9/WsUchk/9exDfuq5TZzdbeTBAdnRo9/2bm2onMKyJMKkaLtCWPsUOv84AhlFOF/7Gu6LL2K/+SZycxM9Ofl2ptoYl1zui3Q6EcbYGCNRKqLg77F9/xydqESYKqrTgkAZRuEeqvQ0zc0KlVxGN7DQ5vBZkuSwrPfChRR16gjy6qtMOn1KXoTj+Ji5ecw5g1d4Gbd8D0u8iilso3QNTQUw7G/dZu92xGC3x/6jHjduRtSXPDx/kyRexR1eZ6yacvNBHa0FFXUfSwyxZMCJwm0Uhx5/jZ0pdu8t8Oj+BxBpB+PPAAbubOMMNSefdGD/APZ2EHGK/tDzZD/7C6A6iMeZVGEkUqzBWILIZ+icwWsGWL0tlPWI0M4ThjWWezf509YHmSg9wFIZ2QicyIAtyJRHUCvzwXM3STVYMiZxHWwrQ5oBQVogzTw68STYs7gzATfD6wycAZZjIdMc4iA4zOAPA0Krw1nPRdo2vU2Drs3gOUXyc03u3KqxW6xw7tjXWJz5GCszP0GlMIftjFOrVJibE9hTAcvz2zQe3OLXXr3I9fImi7NjPNlIOd/I+GCQ53ld5DNTeT5x/gnUUJM+gmS0S9aMIctDOA+3HvF76YjbSQF3aJO38gi9Qmo3ia0Y7fVxigOsXEhhssZPrz7kiZPwlnyZm/XrFCZ7OBMH3Mrv0HX6nE/BjRLM8VX2WONmPqAcQb+U4voad0IgfUEGnC47nFBT/Pmf3eFr1/s8MAMG/Yz7d0MKOYv5qqERNbke3OXD0zW2v/l1ktF9ZiY3qdTXsHmIG95g4PZ5a3uHguNgkMTDNrPS8Eayyaa8TjZ9ixeHm2yKPt/s5dnymxQHy0wOXYqDgOj4HN1hRqdVpt0YI4gCeq1NLltN/vLuJpMzDeaKMbLlE3UsjDQ86tjEORdn3FCRY2gxIvEzHuwkzJfr2DmXNAzwipClEKQwvSgwhQZrowaN0OXR/ZRmJ6DVNbTaIFODU4E/7ULZgQ/VXP6b8nnW+31eSftsiBGfFS5O1CbdeESjscUbD1voKMHH0O4apJuRBQqRSdKCxT8/5dMKM/7DRkh7yWLjo1BxPD5ybsTiRICSDgZDwYX5asJ8SaKCKm9ea5MmI5QFq+c19TlwLYdaVbK8KJhZinBnO3zposRkEc1hi73eBqc+VWF9P0RMvsV67mvYoxTHMVRdQ38spKE0WmeUvcMAprQNOBk9ISgkBhe43bXpqMP1wRiDZSSFfZucBzPDMs88XWLs9C6VYxpRgJ2DLo+u1GnuFtjf9Flv5/jSo5BOvczk2Qq5ahUn73Ph6aepVztM17t0Xk7p3W6TDgN2bqxT6Fioooed95FjdSwvRy6fQ0QBuSxlcXkXYwQoiyubEbZtEw4FUd/Q7tj0Ow5z/gwzq6fwPA/LGEb9PpnWNHbXkQiSJKGQd1FCojNDrmRTrXvE5DlXXSWVHpNBwIoNfihgA9I3fdptKBUO58fd2w53rlTp7WQ8Omiz6Q4ZtjJsR4MwaEvQx7A4m5ElZfbyRfZ7PR7u7RFFEevNmNaoiiME5WPHQErOPvEEA63Z2dyk1elwpF7n1MQE5dXVt4nRnXSLfd3BjjNwFQ8fXqO/vsFABfRNnyzMGHVH6DTDAtZFSBikhwHgJOPYE8fwct5hxtPEHFs6Q3kweLtn0hhD3G4zWl/nbqNBks+jHAc757M0VidKErTWLC4ucvbsWdJun+2bV+jfv0/S7eLUau+JFBljMFn22EP2+9uaSNsmv7jI0vPPI+bmKKysvK1G2+l0+OIXv/guMqeUYjAYMDExwdJ7EALqdrt88YtfJIoipJRY3S69RoNWu83U1NQ7xykEpZUjj4Pr782WJcsyLl++jOM4RFHE66+/Tq/XQ0cR8dYWwZ07qEaD6vg49l9TJ/5eEErhT09TPHqU4pEjeJOT7/KH/ZtC2jbCtunduHEoWiUlWRiCMSz9i3+B/V76gv8O8UOxZ/8BxY+I6d8TfqgmuVLgeWih+O3f9klTieseVvha1qH3qG0bJie/NzlVcYodJ++SfG93FCQZjcBjb0+yu6vI5w+/w75vmJvT5C5/k6puUih/28dQKWSnQ3LhAhiDlaTv/IAbA0IQ5733/GF/v5i99FWOTB/wxJEW4+X48KBlofb3SY8efVf5s8hGqNE9RDYCJNqdwlgFyDL83/kdVLt9+IKVQgYBzpUrh9lh18VxLgEWOzsSywoBQxRV2Ok8iZsOyEYO0rU4kDdodG4TpBPcGrkk8oApZ4zFasxm41AF9/jxFN+Ho0dTChWLYGKClm0TL8zTWV7CntkmN3YNUbAQ+Qpa2chgFyE0qCL7WynJ3k0sBZayaI7WseImW3dh/owmM0dRg13GSgFnT+yjpEFnMU/MXmR1+iqWGUCgEdsZTphwbetZhuE4IonIzAI6yTNYH3Gs2uCg57JbPIp14RT+kVnMylGYnUMrgUxah1Y+oocoDRFBgDAKM5SIPsT9V4gDh76uMXNyg0KtwNevr9BS87R6PkkW4ZohQglspai6Ec8fvUQc5VFel8CtYNuSTBQRwsFSmlj7ONP3yE/DKOjyKBrhukPImohhCZIBpmvhez1OW1Ui41CbfIZk/jxefpraxAJqcpkzF/6A43M5jox/hiwzCHuWXuZjhE3oeOyPunz1z68RNQwXm4/ITMA/aj2ibRp4+UXsfI28XcJvOthmmWQrY6ud0hwUUCQ4SYKsaNrljJejTWoTLsPAYcqUkekigeqh7JCC4x16DqKJihGi1Kafb/J19TWOJAPqpRJSJrgaWtaIgnaYCUGvzLPV2+XaZIixLfKexHiSKLAQlkA48MGazebFIQ92YvYMDMShP7Ftaba3E5anLYpDzZXNEUtvNukOdlk6ewfXTVEpFEvXGGwl3Gj1iclYabdZ3d9nvpdxrJ/yUUsTTGQM6ykLczA2hKyZQyeCda/LytYMfTOOkYtsrFfp9vJoeiRZl1F3yK/fu0VVaRZnEgahIRoKTC9HnzybkabsZeRkgXQgGFoZytOYTJPPWeA7HMx0OLANe0OYnlR4Y4bQZEyVE15dT1CljOXZjCy1ODnK4WvDn1Yy6in87y04Wa0yMB/gC91pbuttXlQB15MRH41y2KpHuhezW8zIYg1ogha4wsIuZ4wKEfnxlPknIy6XNcGczX4z5dafpJx6Iub8cXDtFLAxKFKjKQkf3xJYvuDrNzvsBxqdExxd1pjMA23z4ecFjg2jKGNqJuHSW2M8GKXsKsgmW5x8RnL/wRv4pXW2+yH2QKONxq0FbGcCk4ESCpEZhJURuhFCGZRnqPQ0gwiu7rtEBZBCkgpDritwI0UZl58/O05tKcYplogjm85mjCU09kyH+9cddmSPWBpmxusUP6m5PRii8jk+fmyVdHOLYDdh96UG/bUU5Xkoz2djb5+imqKYJFRXZsnHITVPUqvl6IVbzBxJKObaJNUy47USD9ZH7PZCTGYQGDpDgzSCZ6enyU9MUNzaYjIMOTc1xZht0+7vkx+TdEcjdGbQmcAYzfyiz9xygV5UZuboCpYUTObajPkepSQh6gJ9yaiv6Ny12Hpg8WjDY6lU4vVon2YhYJTEyFgSxQKDRChJd2gzM6kwwqZvFEXHoTvok/ckr9yvsrHXZunECfx6nSzLWFlZod3v41QqTB89SqPR4F6rxdTYGN1+n42DA/ZFB6tooQxs6yauspnYT9BKoEXGIBtQ9sr0GwMMhoeeJo1SdKrJVXMcPXUYiBUIsijjsx//PPWFBUbr6ySjEb3r14n393HGxthrNHCbTTLPI8syTBQxPz3DeH0cz3HwgpCdG1cO/0tT4nabwd275BYWvqs4kDGG7vXrtC5donf9OoMHD9BJgjs+/p4IaqlUYjAYvOPY2toaly5dwvoO2hpRFHHmzBmW34Ny7wsvvPA2KQUwUuL1eoyiiGKxeOhVagxyFFIeG6dSrmJHCSLTZLb6vvsYy7J4+PAhSZJw48YN0jTFShKcRgOAs4uLtPb3KUcRUgi8iYnvO+b/XMgvLFA+e5ak1ULYNpXTp1n8xV/E/S9gzfNDtWf/AcOPiOnfE34YJ/m9e4p792y+XQzNtmF/X3Lu3Hf2CX37vChBavOuD2uxaNjdEuyOfK5ft8myQy4cRXDyZIrrwnj7LnT7TE1/hz6TJCF58km0pRDaoNIMYQxCG4yUhAUf/g4Mr78n4pjiW28RfjeVOtdFT08D0GxKmpsHFFpfwlN9BBkyG2L3r2Kki7zXwLlzFykV8nEf7mG6QSI7HbIjR7DtbyKEod2us709z3A4z2g0gdYeAznFrbWPUlh6mQPdJe9/goG7giUt2l2DKe2wUJnh9JEIp2qTy0GaCj7wgQTbBm9iAmPbhMMhJA1K7lWcqQirXD8cx+PssTEHmFKZgxsxlhUQpzH7gw0ynYBQqGRA5pfwCmd45a0zXHxBc/1WBVsYnn1yjzqvHCo86xAxPOw5dqyQNJvmxs5ZBBk6KNDfbFE3e9TNFhkOSSrZ2rPRKOpWD3PiBKlXQSZthA4QlbcQpgHax4QS2dwnePAqUQQcMbinU/KLfYpH7vPyW0/S1xOU/A4YTZRKPHdIqB2+sPwStcQHGTDSOcS4j5QFLDFEmgNiPYlbtklqESqF2ZzFtX4fkMhUY8wIHkUMjeLZgkMp8vGnn0KKiMKZCDcXUygEnJnOMzdzhOmJAnY6Q0qJBIUmRRUroBLCbsobl2/g2y6t/j6zaZPjCkr2Kq6jcG0BKiVTKerA4WH109zdKzCIK2wNZmkPK0yON7hq7dJN95BuiYd7c/g9Qy0/Q2ACpCVwhY8lEzqJSy7vcWt0nUvxPWLLotQa4Vm5wylgpcjMoisjntYl7Fods7bFTdknNQo7L8jZgpxW5AIHH/j0fMpv/RF0I8lQGBJpDvXEEJhQU7ETsrxgLUu5EIb4MsKEKZWZPjVvn0GsCQ8E9zsDKlGfhf0EY0kGmSATAsfXHGCYmANGgqgMdlHSGpV4ENhcLFSY3+pye32dvK2ZzSvyZkDQG3J59xGOs8ePfbhDvX6YkfJnU0aRx2DfQ0eKQRzjRyU6YZl2UiBIWvzjJyvseCmv+B1GXkSCwZkWVI5K6nlDJqDkCtKWxUEG9arPeFxkeTPi15cjarHF/7q1wLmCx/ndWYS/xJTt8ZO5J3gz2uAbqoNvj/hUKaZaDCmqmLXdjHLbRx8UyY888oGHM3JZPRdzT2u+/qbD5LxNftXmE5/XfO03Mv78y4aPfKRO3Z/A1j6pjilgsd4dcq21D5Pg+BKdpowXBEdnc/zczxZZnPeROqGmE+Yrmo/Vh3x8oc8HzoWUZk8xbTk4fp9O2GVkMnKJRc7XCGXYsxKicoplK6J8xPyxhJwPaEHeaGotwZffkKiaxM40sZ1hJwIdCBYtj089qnPu80WULNAdafaGIVaY4NsuhYqiP3DY6Q84duYYs/M18mdcRC7PW+1dDrY3Kbo1EIkpAAAgAElEQVQeZcend3tI1F+iv6loBFvstyIa7SFXNna4tbXNo80NDnr72EkbJSzc8i718S7xwCaxbJaFTTVnk/VhzFisFsuszi8w6HTI7t/HHBxgBwEFY5gqlXj+3BOUF/vc3W1gKUGl7jG3WEQqw4P7ICyXz3/6J/hnZz5EwStyvLrM9MQUR05tsbgSMC4FwZ5gbmKBUVXzzfwOtghQhQhZTClVUqpAJ7DQmUQqxY4ukMU+UzWPXLXEXsfwysMaI+1jVSrkJycplUpEUcT+/j7GGFzXRUqJGQwIh0N+99ILPBzt0Oh0mMpNcCtZx3gG41ooKWEQUY4lMZoqBTqtHr6xuTsa0XdB+IJcNcfSk0sU7EPV1zAJWaov8blPfg6nVKJw/DjDtTWkZVFYWcHEMY9u3yZut8ndu4cYDtGDPq1Ha7Q6Lfo5D3t3C+F/K6grHq9BcbtN/m3NhXei/eabDO/fR9r2YWZOCIZra/Ru3kQ6zvcV7PlO+7c4jnnttdfIsuxd5DYMQ77whS+8p1LeixcvvsOX07guMgyxk4REa8bHxxGDEY6ymHzmAwjrsFJLZhqZ6fckADU9Pc2VK1e4d+8etm1jHRwQa83q7CzlXO7QZs33cYKAwtGj77sk9+8CVj5P5dw5xp56iuLRo38rJeK/DX4Y9+w/KPgRMf17wg/jJL9xw2YwkN8xYBcEgqee+t6S6kJrrCR7FzG1LBgMBb/1RyXu3rVoNg/9NU+eTJh+TERTy2N65zKT898WrTQGXamQrq4e9oM6FonrkFmK1HdIfPe7mnL/XaN4+zZhlr3ruIgikqNH6Xvj/P7v+7z+usPDK2tcvj1Lo5NnZb6DlAKkgxpt4L7VQ4UJEpCZQSUZRkqMpZBhSHL2LJZ1DyFCymXD/r4kiuRfOfnQ7xfwyk9xq3wD6R5hTNXRHJbSxbFgGEUU5BhF22Z/5BJGh3Y2J09+K7Dg1euUjh+nMhVRGGth51OEeOfiJdOIdDLPjZf7DNMtRnEHY75FzLVQ6Ezx4sVPs3XPA3caUHR6HlduHeXYqsbyHFS8iehrhClAWmciv8+5+qE6Yt0VnOl/g4J9gEx7yKyHsYpYStDsKmamMuSpVbRjod1JjPJR/l2MdY+01CPL95B7VxjuSLJF8OZj4qFLEgiiUFB2elxrHEekAqUkWQK9oc+xyhr/7JnfRO45hJ0cjRP/kMR/joAVsnib2CzQTi5gzw5xLIFr9/FRHNFF7oVD2mGfaL+B3tSc74/x9PI0vdilUJxF5SXOjItvC4qeIAvr+GIckZMYK8Ek09i2wfEypEiQliYY7aLlJkeOCZ758BUu2H2Wyopxa4G4IdFdRdKXmL7NoOVhls8RBV0kCY4VExsXXSyw0f1D9gOJl5vGVYaX7xxlqdqiapVAZrg4NAOffjpJK9hn4OyxlXYBQeRF1Ho2CImwJTKViCjlmeoJhHJQD68jBjFbhQQnp7BdDY4gzQtWUp/xss2v/XFAwfYZc20Sz0XrBIFBxYbpmmHDVtiW5ql+AWyDnUh0XuCaPlJJoqEkMQnjGwGpkMhMo43BcQXkUw6q4DmKMGcI9h2SoWIQhXieISKPFy0x0dih0R/iqh791iP21rdoYjj70yEitZFCYRc1JJJ8LUaXLcR+Hlmosz46R0PXUP4icxM/hu/D1ald5qbyzJ3uUZ/VLM9LPAFhLJgrlQjiaR49PMNo8zhPlif5iZ0OK7GFpy1+cW8cK9a0QsFaP6TfPaAyVkMZwc/nJ8mSLf4rY1POJwhhqE2k9LYd+hs5HGnY7BtCY3DK0NvK8+ZDgyMtTlp56n2Xvsj4P/6t5rnVSf7dv2tz68qIj32wRklO0Ixb3BgMGPVnube2guVOM1ZdIHe2w6efyKBhMVpX6I0ESxjsmiZsFkiDMku5n+BEZZacV2K8sIDLNDvJGnYGOQdA4WgYVA2zCxrXg4EyZHkYGXj0TYuXrrtUAsV4z0b1JNVtm+KWYjpwOFuZQDoZC2c115wBj2SXwIxI44hUGgo4DLRkfT+mmM9hRkOuTzR4MOySjUZ04oDGaMDOaMhU06LVyHN1bY1284BhZvj9b1wj0aBkSBL06A373N/tcv5oDuUN8a0BJtNQLJDuGmodl+OlEssFj7LwKQyHKGMwYUhqDFprBvv7eHGMDiJOnvswn/6XZQLdptU4FLWKEp/y5Cxzq/OccRZ5evkkhcgiy11l6dgjFupTlP2IY3XDx5616R6Mcy3XZiEXkctl7DUMwobYQM4TjDvQDQ2VqsXYmEXYtVgPFwkLF3jYKxBJD7tQQNk2tm1Tq9XIsow0Td9Rjhpbhv+09iW2y006hR6tfJcLMycYxiH7skcxd1hSGY25RGFAuevQetjEINgwBv/JFWZXZlGLisqxArkdTXDQIup2KVeK/Lf/6t/jut4hmTOG/s2b2OUyo60tov19MmNIGw2kMURJgnEcZC5H2G6z7HvkK5V3lY0KIUj7fUonT75rvdVxTPPVV1GPRRu11jQvXqR78ybD+/fp371L89VXyS8t4XwX4Z/vtH8rFotsb2+zs7NDmqYopTDGMBqNeOKJJ/j4xz/+Ha/17bh27dq7jqWlEqllUXZdJqenqU7OMP7U02+LDT1+aFSqSV3r+2ZNfd9ndXWVN998EwVUo4hzy8uMPbaJMcZQLBYpFQpYpRLOf4EM5f/X8MO4Z/9BwY+I6d8TfhgneRDAgwc23ymgZdtw7tz3JqZaSezw3X2g7SZculZgfE7i+walYGLC0OlIpqczlIKBKLJa2KAmWoeiENljn4IoIvrxH8f89X4EITBKfl/v0vcN8+6sL1JS7PcJ9/ffRYSF1kSf/CS/+3t5kkTgOzF+dg/HkbS6Hr2Ry8pcBwArKSO2Q0Tw+D09Fm6SmSazFMa2SU+fRmsf276BEA7T0xrHMSSJIJ8fMD39LEdWbd7Ye4OSylMTefRjT7h8wRBGhvxBjyPrt/Bf+QvyR8f56E/67+LvQrTwrD/BCm8hZAy47zzBGLLKPDvXbbQpImWXQ59XCWjsrEs4mmDtlk3O3gPpYpwpcOoImdBtCZbOjAF57P02xuQeP3OGnWjmwk3m2eSt/VlyyYDMdhFGgw5AlbDSkP7iSarnpxDaIAwYK09SjskqEyAUMhsCAcOHkDs1pD2S9NOERAVIOyBKfc4+fYcHa6sM+w6OSjkx95D/7Sd+lVzJQi3kUOfnidUExvIR0XV0ssPO8ASZNU15cki+mOJ7CVgpnpjkia7hFIpTlREfyVwWT8+TmWnSVGPLPOZ0HtvV2NJg0jxmz8baH2L1H+BW6rhJhNAjhBR4dhMr7XMQdSkv7jJ7pEEg76DbHpMtg2rPYXSGEAolLOLYox95ZEdW0J2MxMQIJfALFvdaKau5F3ltzKFiaxzPByfhzzbhYRhQlBPcWb/AxcvHuLVucetRnb2tFcr5kJ69jVYZ8dQ4rl1AW5phvcpc9QRnVZX4YIv0YJ2icCinhrafEBcyvKLkScdm1VIMmg6vP0x45uinOb/8JEdnjrBYP4YtFK3mHvaSxba2OZ/WWQg9nMQw6gZkaRffi2i1D59nLO/A/YBIH9qE6ERiSimepXFXIHYMgfZxlCJMJZrDbPKyDIjjWW5TpiR2iY0GW3BXCuaOpVQXDK5xiONDf1jbN9gGcvOGxvYENw9OMT75Cc7MzrFSmaJSKnI/ybNZuktpuo9wh1RLZWyZw3JdhrpEff8nUd6AG9fOQXeCBztTfMZap6ASjg+r9OIhedsmGNZQ0iIwhlcn+pygTt3b5KNOGVs3sJ0UoTRx3uC2C0zMQs6HpQkYr0HStWgPFNVJmD8jSHxIHfh4IWYiv8z5xQL/5l9rer2Y/+5/2iUzI06dnqe9L9j6ixzOAyjvphSCFGtcMGhnlKMU5KHauT2TEHRsOg89Zkv/gCyTMAoZWpIgSKlULDwxzk72EDcWxLGgVhGUcxn7oaI4JhmajFZHUIgEk8ri7FmX1SOSrQ1FFGukFIxXHI7NOTDIuDvZJ3eyjbIK2CiUUPihJlIZyjd8/ZUu7XZCIgQP4zZrtRaFgo/u9GE0YnwQ0ug26d4PuH5lSCag1Wlze79HmGq6nR6bwyFjvnuo4+YYqtUuJxZq5H2Lal5zZPUED15qkcUWKEFPKcIgJU01pSyjA9QLBQppiklTgtEIezCgd/sRef0Mr116BElG7BVxS3k8pVnUZTaHDfS4wtIjnjjZoqQdvESjkpRw1Kfb87lV69NoO9QmMgrFPGloCGJJJjSp1EwCLa1wJxQzqcVc3aNoh0wdeZZ6vc7Ozs6hTU2aMjMzg2VZfOxjH+Phw4fv8ID80sEf0R61sFOBb7mUvQLHagvkcJF+jszJSExKwc7z9NIHeWNnnWSiibsQMXHMIVeUhNona0Scqo6xcnyGiekqz+Yn+OSgSv/Kda6+9BKvvfIKVx48INvYoPj/svcmwZJe95Xf795vznl4+eb51TwCIFAASIizyCbFFuVoyZZsyxHSyuGdd95745A3XjqiO8KtaEW0ZKndlNgSxREiRRIEUAXUPLx6VW9++aach2++14sEi6QAkFCTTbQonF1GZn5T3sh7z/2f/zn5PMONDaRlkZGSYatFmKZgmsRJgrJt5hcXKSQJVqHwjpEpOk3fkZhG7Ta9R4+emOq0rl8nODgYvX4rkzPu92m88grV55/HfIcq5zut34QQLC4u0uv1CMMQpRRSSq5cucIf/uEfvucIk16vx+Hh4U9+Xgj6acqnf+/3GD99mkK2iHgHlZfQ+onx4s+Cbdu0Wi2q5TKzUYT5Y795FEWcOXMGoTXZ+fn33Gv6q4xfxTX7PxV8QEx/SfhVHOTlsub2bWvEHX6MlwXBiJROTf0MAyQhSC0DM4pBgWAk33z9TobtngcIymXN8bGBUiN+l6Yjqa9taz78u9N4vo/RaCKTBJkrkH7sk8TTk7/w/lHRbuN85zvYb76JsbGBLhYRrRbOV7+K/b3vYb3+OvYrr2Bsb2Ps7KCLRXIvvIB/7RpyMBgx9SiCMCT49KfZDWvcvGnhOCB0ghHugDAxDc1RI8vTZ/eRAqykSDq2iLz3iH+omdZhQHz5EmpqCq2LCBFhGNsIIcjnUyYne5RK5zk+vszX/jbL99fvsr4tmTHzOK7CMEbPPLtxnRcO96mKgOnja5y+/zcYvQ7JU089OVcm8/+Qy/1rDLeO2d3AtLYRIkHrt7LOVEqaLRC7z9E9LuG3+yB+lEPm4TNhb7PW+jQqNhCkdI6PeLjucm+jRqMpIDrixSvXMXHgWCFSf0TElY06uogMYnSY8pXqb1MIW7h+l9SyETpB4jLwygw/++vUTjoktkXs2sSeTSomsKwbaGucNDNP2AlphSkyt0d/YCOFxlQpsRL8vZPnwsQRl+d3+OTC63zsxGucmnzMyso9zOIuRv4Yy1yjaF8DeYSI7mAZA1w7Qeoujl0jP7kPaQhodH4aUTkiM72DV4IkB2lmiLHgsN81yV9axskPkUaKCDIYr0cYhx2MNIX1N5GvryKKYwSewrACpLDphDBI1ylM1tkSf8daEHI3SeG1lEx/EqEhTgSJVqihZnPyHL6t2PN9OIYwKfGoDoeyzGd+y0OQINImptMkW2kwO3fAkTjE933evH0BaW+h7S7SEsxncsijpzjMfR/DGDCwIsx8DjVWARXyP1qLMDjE6/+Acg382GBMCDKJwMia2MrFj01CrSnkLV48+68YxAozF2IaMbFIsdxJjqVJgz6nBiv8C1dh2ILWQUKaaERRMFaOMYQgNBW3Kh0qXYPhQAASz3aYnxE8fyqhZsGtkkTpLAqLYSBRqUEsNC8YeQq5Df7Ob3Aj4/NGNqaX9an6JqWJALeisN76HwmGmm5LMOFovKJi/9o41ck+WWMLx54jb2bQpkHPDLFWbpBIn7xbIeelGMIETAahyQVviuP7L7HRcGgrQSxs2HQ5Yxg0RQc/lfQ7Eww6BfJ2h55nUp82cbVixfZHkVTqEMNQmJWYUEha2x7NAA6H0AugJWEl77E0bWBmBGEm5bALJ72EaSGZK81hegFurs/ly5r/6bds/urrAf/n/3XA+EEJNcxiYmBIgaXA2rBQ04KT1R5xqLDsGDMHO29mYThOJnOCnGNgKEXiGHTu2FQsg0q+xlZ/iyA7xDJSwr7m/g8E4V5KdUxx5ZTBgm8xaVpMT5tUyxLysBEpnsnkmSs5lAoSRwuOiwE3nCHZHEzlBujEwTAtTKURccxGo8v9V2yEI7FNkxvjLXaTCJcOcTJkOhVkTMHq9Zhr1wPS+oBbxw2OgxBlCEwpERmTpjHANUOWVkxyhTKRMjk9JUmIMbMJhtVn54bg+ljMa2WfR8WYx2WfhpmwMHSQtk1OCLQQI1l6HAIxoZHSkyHbWy0qOk9ROUwUJtFhRMUpYSow8hkmlmOw1+i2LAaRRbNv0Kh3iE3BljMg6y0ykVFYhsPMVJ5q0SYKYgw34bmaRpg2K9LimXmDNBpgiJRSuYJwx5mYmGBjY4P9/X1mZmb4/d//faanp7l79+4TKWk/6fNq51VUPNrMLeQzpChOTiwz9OAp5yKnJ+a5WDrDcnaOsitY3/0qlidZLMxRyY5h2xFTOcnE4SSnrEX+xdzzLB9bVNoKJSRv3ruHsm2sICDyfX5w6xZ/99prbB4dsdfrUZCSim3jWRZpJoNrWVy8coWJqSk0IwJqOD+5KfpD59Z3kvJqpeg/fPgkA7P1xhtI00TFMXGn80Tam/o+w+1t7GqV3uoqnRs36K2tkfT7jC0t0R8O33Zsz/O4fPkyKysrnDp1is9//vO89NJL/6hczenpaR4/fky328W2bdI0ZTAY8Mwzz3DiLZNEK4hH5pA/BqUVg6hP7DoYxntzJ65Wq9y+cwdnOByZTgpBFEVMTU0xPj6O1prKs8/+3EZGvwr4VVyz/1PBB8T0l4T3e5D7/ijf8sEDE61HpPLn5W5SwsJCwqNHJt2uJAwFSo36QJ9//qdXS38ILSWxY5FaBqlpEmUcXn4tN3JAfOsck5MpUTSSnQoBL7wQ8dlPBxTiAD0zgzp/gfTiJdTJkwjHRWj9nxcF8273ublJ5ktfGjn+pilyMMD+7nexX3sNCgWIY+zr1zEODjD39tC5HNbNm7jVKq3nn0eVSpAkpPPzhJ/5DLpWY3PTYG/PwDQBYSKjI8RbVcwgNLl05hDL1JgqT1y7ODI/2N76UZaXPySdnSH42MeekPA0nSNJTgOg1Birq5/jz//8Av/232bZ2DAZNEoE2YeE1iFWYJPPSczNDXLNHiv2JGw/QiQxuC7W/ftEFy6gq1VM8/tkMn+B1gUQNtrNIboRkgO0cka9u7ZDOPYpovjTlKZnCA4f0W8HXH9wlpurJ6jKVbITy7SDGfr1gN5Gm+AowLPa9MUCqdQY6UOWZ+4ynleIkgN7PjqqosIVGGShf4Q+O89D9yx7hSUiN4sT+aSGQX3x49yd/wyf/Ew64u9SPHF5Boc0ncQwtpGyT6xh92CHowKkgUQL6NsuX+ucpRkUmK/WufXKC5jCJGskjJXqzFQeAxKdeqPdEZp45ibW1GcIhilR4mJbITkxoC+y2G4bHRvEjQdIa51ER4THNtoM6DqCxxmb4oUquj4H2kUIG3krQUYa6XrgPwazjwhbsD4gPrGAdnfYHDzgevNlfOsauenrfGsj5qgH23VFQ9uMNSwKukAWE2k6NBeXaBRO0erusZoGrJYV38vc49HUfYLSbc7krnMl5zBVPGbG8FmwQmZqik8XT7P28ASHfkSUWCTKpGaWOJ+bpmwFlMIscW2Vtk6JOWbROuR3DhwmB008t4GX99B+niQdck9otiyBkctgWBZCm3TbFo10niuXLjM91aXd0UQxZC2DSysGn5o/S/n7gnKvyPh4kwTJcSdFugZuLWGYGOSrPv9ORKxHJnI6y7zQ+PMuc9LlqapFsRIwYWn285PUZYzPyHwoCQSX/TxpJDCNkDXfhtjE1Ipjs8HADZjaMxm7EJIoNTJ4QVDNK8oSuo5DfW0ad97BSQUZHrD6eApMh/qW4Hj+q0y7RXJuCWIHoVNM0yDsVai0P8L92x+i2FliIXqGuP4JpH6W6a0mB5bPUVuiYwvPhqLsce1slX5qI03F82VFqhvYdoPAVLzSNFkdCPq7Fp2eINEQRHCrLjjcgrIjKU8plCPYrrt8aEwxJjW54hhG7pioZ6N8CyHho5cdzlRW+L+/tMv3bjU4Wcrg2fbILExp7INJbNEj0Zr4B3mk9iC0MdU4tlMjVAFGHJNVCc6mIH0MucSgG6/xoBky2DDZ24F8CRxT0toQnJmPCToGiTKxXEHkpzzeD3nTCjkc80msFL8YsrPc51gmtFKN0hZF1yIrukRhn4EacHCY8MrXbQpHNlRN1vM+m9UEMBjsKYK6ImkI1q9K+nsWURjTacZEUUQ/iNlu9giFJi5YSEOSryhqdg0pLDzPZWlGgBUz9vEXGboX+MbqI1ZNH1IXicnQj2jhU1CSivKQb+3URkTYSo0MkhxoN4+4u19HKoOcdBjKhFRqsk6ONIyZPbXI9IyFCB4SNH0s2wV7yKDRAkMyPTXF/S1F3vRRWhJrBZ6kUrV4firmd87MM5PPMFnxyGcdziyNkbUEYX/Ads/mr778N/i+z8LCAo1Gg69+9assLS0xNTXF+vo60pTcj+6zpteIBhGZTBZ3rIjybJSE2WyNoihxYfY0jagJSmOUf8CNu9uMe1VKdhEsi4yVw5UK/zCgUphiqlymv76OtCwe1+vEUTQilrbNq7du4WcyozkVMCyLh40Gk4ZBtlQgN1GhkslSnJtHGAbGWy654dHRk95DlSSQpoy99NLbokYADNtmuLODThJ0mtJ78ABhmsS9HsI0n+SFCimRlkXn9u2fqMpGzSZhvY45Pf2ORklCCEqlElNTU2/LCv2HCMOQ73znO7z88svcunWLZrPJzMwMFy9epFKpEIYhlUqFT33qU5z8YSyMEMgkRSr1ZK6/1rjJ3+5+g9fbt3izc5f9wT4LhQVM+dPXPblcjuXlZQ59H1WvYxoGS0tLzM3NEXe7WIUCUaOBiuPRM/hnTFDf7zX7P2d8QEx/SXg/B/nDhyZ/+ZcerZbE9yWrqyZrayanTiU/d2ax58HFiwkrKwknTiS8+GLE8vLb+yp/Kn4otTVHDnOPHxtE0Y8mACmhWtWMjyteeiniIx+JcJMII1Vvr4wKgVSK2H37BPWfhSTB+7M/G01SP5z0hMBcW0O2WqSzs1i3byO0HjXHBgE6l0OXy7g7O/ROnkSPj5MuL6NmZkafGR2CO3d+ZByljSxGVH9iY3/lwg5S9Um9p8AqoaenSU+chChCZ7Oo519g+OLz7xA67aDULEdHc/zlXxbZ3jaIY4FtQ08dsbEXsVf8NnvpNioNmD9scqWbh/VHMPgx10HbRh4coD/0LHnj/0UELsFeyGCnQ9gPUZUqMlsBM8sg+z/j5/57kvQCIBHSIDtzlm+9dpIo1MxNt1mcbtLojlPeeJPH6yV0lCBQuHEbox3QzhqUJyRVb5eF2ls9thM5tMihuk+j8xXEJUl6cp6J2SE37k8RZEq0JxY4qi1Tzz3P5afS0dhLU+xXX8X59rexrl3D2NwkLS8SOy+QJGfQ5jP8m691kKqJUUypp0VebSzRT1w0ElPHBKvLDONpCjmPK8t/i2kJMBx0akCqGRp56u1p+sMMsZgkZzUwTAPH8GkenKR7rEl6LTJuHa0V6b5HGsQkhom2bLzEx5zYJFvZRwVFTAzsgxZSWsjgHiJ9A4EBfY2KBGrKZT//91xrvYGfDAjoEto+Gx2JZcCDh+BlPbSX5WAmj1g+TXriFLpks7/vc/fhDg/LQw7dDplCQLHU4L+Zu01oBIhsndm8TTGrKJtZCgOPTC3g0RtXyDccNlfPkPXPYYbTHBw5mMJnrpjyv1xJ+OTSAr9TkzxrnKBmmySNHg05SZqrkpmcx8qf5ruNLSzHg0xppCcNbKThkL+wyIniOMoaLf5PLLoszGcZr0wyUc4S7CWUHIUkIggDun2FPpEncEqkXpa/jxU3hgY6kfQnM/RFlrHHMSKRjJtTSLlE9Nyz5J0xzhwcc2It5eym4MKBQLtleiLGMBSrPZsokGSsLq4BPU9x5tBBLgZE44qhKSEHViYhn5Ucdzw6xjw5S+DlUiwd004dtuoZWgcFTl35BgND4h0d4Bx1MA8j+ocRnj3Nal9xs79L3VkltI8oqwXacYVhuUAp+S75rg9RQmWiz80zJSLPxUhB+Q61jAPZB7zZV3wpUOylsKUTNmJN/9ChYGmaEfQTAYFBqhRJFfqxZO8YQtunbcXkqzbjxZgoEERDg0HLQAd5kt0al85oikaFf/+DLTYP+pxZ8DBygtOqiJ1vIeJpaNi4GXBsiaE1preEioZ4kR61FxwbCEcRduE//Pk11tckzVjgOJArpWg9qige7Vj85r80iXsaRcJWmlKa1jzaBcMGU4CdSqY6DqXdHKWBiXQkrZbBdt1kYzvL3Tsm330EGzJl0Vxk04w4GjOJZMRwEGMexpQCj2Ao2dkaEiQR0ZHCTiRaCBIpSZWmMQhp9EKUsnEyk5y7Mk4Yhnz4GYf5pyVjLz6DcJYQMs+X37hKJedw3Alo9IYkKiGOQwxLkUGS14JUaZRKcYUApciqlJyfECQJh0nIMPJpiR4DAhIVk7dyPHVqgeDGFtnsY1QMThwTRIf4gxDXzbKQmeTWuoV2+uzIIevSpy4iDsyEOZWw6HhgVSjkXDKGyeCej3GYMBuXefTGfTLlGsWZmVEkiWli2zavvfYaf/AHf0BgBXyl/hWacZMjfYTOanRe4+EhkRyHXRp+my+e+zwr44vMWjW2j44w7GuohmTQ7KHNDk6mDxho7dI9PuLDZz6KjGPCoyOEabJ9cDByy8/n2W61aDabo7abQoG02xcnNxUAACAASURBVCXnOBiWyf1hnaNKi8fxHuvpPkdGnzlnkvzJU1SefhqrVCLudhFS4k1NMfbhD7+jBPfJrDg2xmB9HRXHDLe20ElCGgTYP5YVqsIQM59HAFahgOG6pFpxP93m9e4tbrfu41uKiewEhvjHL5yiKOKP/uiPeOWVV9jZ2WF7e5vd3V329/c5f/48tVqNEydOsLS09DbTpNQyMeIUmSputG7zyuHr2JaHzGQxDYt+3Odx5zHnq+d/5nV4nsfJs2c5+ZGPMFGrkc1kSKOIZDgcVZLDkOHODoONDTILCz/Z1/rPCB8Q0/cPHxDTXxLer0EehvClL7lkMj/iMCNVqaDZlKys/CNJ5LvA80YS21/Ef1g+r7h9++1uv2Eo+OxnQywLzCgZSVHeCQpi7+cnptbVq3hf+hLOq68iDw6Qh4foYhFsG3N9HZEkqEIBY2/vCeHENCFNUbUarpT4to2q1d527GxWs7lpELYD7M0N5HGH1J5kiMmlU0fMzkvC6qdIvBnM6K3IG8dBz82h5xZIykWSdyDfZu8uTvNlvvv1LsmwQ/0wR6I9OqpOk00yskg+WSZfFnRDl0vf/TOmDrZw/TagQTr8UJstTJvBqae4em2dG98TGFGbrB2jEwia/VFM0L6D/lYZ8+otGq9u8trDcR4fF1lbM6jp73Nu8jpT+S1mrGtU40e4zS6xkWevXcOzY7RISToDpvOP+eiHX2d/uMT4yizZfBUKZ2DmJMfFj3FkRhjGGpa9jmtHnD0b0Oh67Lc61J2U4qX7nD0bUnbLeF/+Msbm5pNoHRGGWLdukc7NobMVEBla0cv8yavQjUtEpoMwwLNjUDF//PUXmBwusjw9YGZyyGLp+4CLEHmQFn997zN8/fZL3Nk+xw8enODW3ouM1Xy06KBSyTA9z+qrc+R0RDZsgBmDNoikINECowhZt0ucAUtW8PIp0jpEfv9NpPlt9FBDMINKFyHr0iye4FH7JN32Akuqw6LcYCbx2RoqurYkTQUH+5piYZlSXxHqDofDLaxoj05vExX36eaq3Cp2mKqFjE8/4kz1kEWvQ9kcUjR9nFiNNnqwMEQGlXPZfFjk1XsvUNQnyds2IhGgBMKcojae4dlzx+SZww4lJDHXNud4fLxANypR7xao9wUR42ycOaQ64WEom2Do0TdMurWI3LRkPr+CYVro0EJLm7JTwCFFyIRIgeGVKBVLOLkOe/RwMlVma89TcC9xRyg6YZXVgy4HStHppDQWplh++uME5yYpnZuha5Yp9vMU61nE7iZebCGGFtndPo0MtMvw5qYGp49nxthCkpiCPVcjHrpMZm3GyileMaFZjOgUCyyPZ8lloN0qY1oJaegQRiaNaJKFpU1KS6+T113WRciRmeCZkrOeSVamXLv3DEJ7aD8hMFvY4/cQR5OIXJ29mRluFjap1+q8UWwgvRphFjoM+e+ea1M5c5NhL+ZbcUKloLAtTWcAu3GKj8Jv2XR8iRSCUCsehUNOTOW5valpeYogEXiFmPtpl6FtMGdYaAWm0Ahrmf5OQBInDCKbSwtVEq35/17ZJq9dLtYCMpUcShpQNPFvg9+LSIOEojNG1s1hliXxPiAFluUSD1e51tsmG0BQtQgiA9NO0QaoVGCkgheeFUwXbY6vlnjTt7l8IcG/r5k4KFLwLcaGDqV9l2xikPclaXVk1EIq8X0Lc6JGwRIstnKMJ1nqXkyOHNlBhV7qk48VtjRIU82gHeP3EnJ9A1saaCABEqXwpKQVJThuDik9hsEYn/nN3+BjX6xiVc5gDOaxujX6A8GbzQ06Gz1a4QBhS1wvxdSCx26I0ZHUTJPITEhMk7IOcfIxGUchhKRq2DT7PVoqYWBpUkMyjIZcPDFNracQdoY4DilUh0RpTBwNcU0Dr2DTfnCK6UaNG0aPfaeFLaBomFw2irT7AY+EZNnMoVNF980hpBBqA8Mc497uMeVYEZgm6Y/JYPv9PsvLy9yz7rEwu8DKwgod3cJIA9xhTBr0KfUlA1MzPb3A737qD4myLn/97ZcxAsHcVJ3Z6YTbawfsHrZwHInjDOgPIi4tLFNzT4DWhIeHCNPkoNVCA1Ymw+raGonvM4xjIt/Hm5igNjbGLbbYMbusuDmcRCKKOdpxh+1SxEuf+L3R3FwokFtaIre8jDc19a7kKe52OfrOd+jeuzeqrCqFlcuRDAYIw3jiPquVQtr2yPRHKexqFeHYfM1/nc3kANt1GPp9Gk7IamuV0+XTGPIfR07/5E/+hBs3boxybk0TwzAIgoDj42PGxsaYnZ199y8LQeJYJJbJV3a/heF6I1XYW6RaCkkn6jCdnSZvv/ui/schTRNvchJvZobuvXvY+fyTCqk0TXSaEjab7+p0/KuOD4jp+4cPiOkvCe/XIL9zx6ReN95GGKWEZtPgmWfem+T2l4lCQZPNara3DQaDkXGG62o+97mAcvlHZNQMk7f1XQAoKUmcn89i3Lx3D/vVV0e5owcH4I4kwka9Tjozg7G/j0gS0loN4+joR8Q0TVGl0qhialkMqlXUu+SCnR68wfE3HtBsSqKhQh4ccyF3zDO//xxp4QzazKENSWpKZJRgPHqEceM6abdNODvFP3Sdslvfxeq+gRCSa3emUamGwS5+mmUz2UAzMmcQ2qAy3iKv1jnd34JBwDgOQvWRKkCbBej3eTh2iv9wo0Bjp0m3rbjzYJmjdoWVuQOEozBfrmPct0mNE7x5w2F/I6W8cZPddJLttXtMZtawPY809cjQIDfYx8v2GFMDFrPb+KFB0drjjLfF8xNXCeerZMURC4ubmKVLhFGO//jVKdrrr9LrHrLZnuGgnadobnL/bspX7o+zGuTpiRxuockeN+ht3OPMWhPekmcBo8n7rQpw/+QSX378ZTbiNsd8mVuH8PrDcbr7k6xtlXlzbZKSP8+VCZcj9a9oxhe5svDXCMMFQ/Ktux9m9XCZjNnFsQL6aZVubHC/XmNyuk8QFtgfXILjBvl8h2LuAJ2JUEJgVBKc8QAzq7ALEbooUMMitiiBKZDrG4CGKESpPkm+zY6o0vAbpOYjxszb+IMxqo6LJepEoaKMoutptnahlp+l71nYRwYFFbOcCdFDTZqtkJyvkZz4JqdnjqlV+tTMmJnQp+JESEMhJNiGQiQKtInIlUnNLq+9+pt4MoNSI+l/qWgTxTbPnB7ilVokgzXseJv9+jybBwZOxkMIjS0SHLfP8YJg7NJDvEmBXdsnf2LIYWjj+w53uvv82sxJNBZmorFMC9dMkdIEZwNLD2gNZihkU6SY5s6qx/zEi/T8CqlKeKW3Sz9KmK1O0dINGqrHWG2eR/SYKM9zcT6DJiZalcixAlFjlyBIiRIbKSyyVsTfzDq0pUeclURZB0NBx0vxQptcbZ5QzNLcTdm/WKQjBEdJykdyPtPOJtP5A1wrIjLLNIornDi/ye5z/5rOzoATEwYLjuSEtJjISPxiQHQ/z4PNMQbSBkPS8wMedXfIdH5ApfCnDNrfZ6f/iGauj1KauzsH3O/v8pELbZ4726RlGlzfE+wrCJUkzAiubWs6HcEdX/E9FfJoELOZC9goBMjIRB57PM6G5LEIMYnNlLFMyH4aUDIMxi0J3gS9Xspxp4M4EIy15inJDE9Vx/it+Rle29nh393fYbaYYywjGW4oOj1JOJjGzBXZ7wYEu5qSWsKgTKr6+IM12v5duoS0fU1QMtAahn1j1NtupcxVBGeWTMw3PHZfT5E9k4FdYulIow40YQpe2yVKIZ8KliZsJvMuR0aEbyn2TYdMILiSPcd0u4ChNXnbpjczRqs5xOyYeI6BoUKE1uh9jdUQpFqQMQyU1gRpigKmHYcBkLEsVlZWuHDpMhcufJipKR8Z2pj9ChgKITV30gPWjg5hkICO0YYgmBAEFQ2JSbGkOH9acTTf5rrb52ExYiMXYhcjxiKDqrSYzORojDnUpnOcnK3iS582Plknx37T4GAjJVMcIM2IMLSpr05RYAUjSdnx2kylE1TVJBVdIo4q3Fj1SWsOJyyNsR+StjWhsjju5SlmbFYP+hiWgx1FDH7MeTYMQ6ZOT9H22tiGDWlKZXtIJ+oQWDGDfoTa1lSObJ4f+zhBEGIYBq9eu0pfJ8TGVYzMMXMLDtmsSa8Xcvp0lc9/3mV26X+jv7aP1pq03yeNY+IwJHAc4laLpu/ja02SyRAnCQulEmatzO7mPSpDyUomhyNM/ILF7sUy61aTX5v/OJ75syNYANIwpP61r43aYCwLw7YxnFEfcGZ+nsFbWaakKWYux9hLL5F0OmilyM7N8TipsxbvIhLYPDhg++iIXhChTY3pmMzl597rcgKlFH/8x3/8tsxTKSW+75PL5bh8+fLPPE5MymuH17DMt29KCyHIWBmmc9Pv+boABpubBPX628i9kJK426Vw+vR7ynr9VcMHxPT9wwfE9JeE92uQr6+btFryHRNSogiefjr+RfsE/UJQqykuXYpZWUm5eDHmypWYXO5HpFRLgRmP8kl//AZEqgmzzntyqftpcL75zZF817KQBwcIGJ0nSdCmiXZdRLdLeuYM8vh4dB2AiGPic+fAMHCFoPvii28jkACi3yf31b/m9LLPpZkjzk02eGFln6XcIbLfI11cfOtGRxEE1n/6K8TmOkorROMY+/p1dLGIqlTeum8ft/FNMEaE7NFmBT808XXIcWObe2GPYTLEj0PcbEDO2+DM4gFq3mX6+j4ThgfCABWiU5NQGvxp7ovk84KoFWFnethWQqfpIWyTyewe3htNur1n2GlO02hHdMzHNOUxhc5jMjM+7a5HPq+wSInSAlV1HyPto/sG5UzA+cmrLMZNvG4PUYDezDiOC8vTe8RFyX/6zklEd4dqtoNyshiOJNYZXru9hM4FHEpBV84ggIOtKpVaQHXtKmVlk7Vz7/jM/6K4TS/qUhQZMkYJadykFWqagUEclBgzbH4jZ4G1TJDOMD2pubCwhQxXUdh85c2XcOwESAHFgVoEJIOhw0Sujm2XWGuepL+zSWW8TDX/ED+KcSaGmOUIlQowDEwvT6xPUJRlGJxGSx+RO0RebSLSBPI+j8IX8H3JIPUoFQ7IO00MIegEM0h5gLAC/EDR14KDoYGtx9HColrrc7mmyeYy2GWX06cC2vtN7uoh2VyAZ5gIpTnlD9CmIJUpkUrxk5RhbCLSFKs0i840sYfn2N6v0Bu4JKmkVDB4erlDoSKYr+0h03XitE+nM4NKQWkDTEFieoytbNK3F0msQ7QOCXpD0lQyMT3k8X4WQoul3CalwjyW9MjaEtNM0NYOSfQI3Sxg6YTDwRS2KahmstTKLuVcQpx43NyJGBZ6qDwMVMx+0uZU8QQlr8Ru3ORRM+CyPIMVW4TKZ2goLHHAIHbpGGX2+imvVzIobTK3tMBG2GbruIM5jKkemyTDiACfwkdnMKc0ht1lpn9Muh/w9w80j+sBtXyTpxcec/mFG+RPXeOVboDqKY4HksRU+D7UuylfeWgwcVhiUhxQj306fkq9fUh16hafOn+fp8/4jE20uTijOWdbNA9sggOTbN/ldz85pFRLsb2U7QMIUk0sBHpgEMcGd1clIjFILE0nUvRi0EcCveOylx/SSlNaKkXZgjTNsNeEohnTdgdYcoCTWyLqxhQmLPYfFIkPQ6w4xRIxSRxw+amQ/+F/lfybLw/4s28fcWk+y+SpLG5tntTJ0E2qDDZ3Ebur6MEhQW+DUB9Qezbg7Asxbx6neBMKx1X4AwO/L2gdS37D85i9ZcCBR7+ZsBD0OL3VI3ZdslnwIrC7DtrWTIxJUCBLilPFHGeaVX59UfFrl2o8f2WeqZWz+MplYuyY+bEdYrdFLu9QnDxDZUdT3ozIDU2afogCMqaJNgzCNMWWkrxp0paSU1NTPLO4SHFqiiCKOLu4iNuykamDFimmKbnXXufhwTFkaljlHEnBQdoOWU/x6ZMe1RMGe8td6g0f29UkbUEaKw7dBDMTkR16eKaJuzRDdizD/qRAKEU86CMMk5mxBZxwgoe3TDp1RbteoD7uMVHMow3JXbGPYTqkykGLDJ1mh6BcZmiWiQc24UOb3UPYaioWa0XGch4PjwKEEBhK0azkaWQadN0uKlF84YtfYC/YwzZs/L091NBn1psi08gweBzxUv4pVrxZDCFp+j43btwgk8lgmjE9fx8j38F2I6olj6kpk098YhzXnUGJ58gsfwgVhkjXRccx4ydOcLy7S9DrkfM8VsPR7zFZrVIrl2k+WqUZdDmdz5PPjWTsY1s+E4/6WP2IYltRnVh40hf609C5c4e43X5bJqcwTdyxMaa/8AVUFJE/d47CyZMIwyAZDDBzOexSiTfCVTr+gFuPH5PGMUapRKIUh/uH9MIeL5146T2sJEYYDod84xvfeMf3lFKUSiWuXLnyM48jkdxs3HxHKXGYhJwfO0/ZLf/UY/i+z/b2NmEYks1mCQ4OiJrNd3Q6VnFM4cyZ/yp6TdMoIm63RxsN79BL/IvGB8T0/cMHxPSXhPdrkHue5ubNt8tiAXI5xYULydvf+K8EQkAmo3nH1hEhSBzzScg0GrQQBDkX9QswPrJff/2J9llnsyO5rpSjyqjWqOlJ1HwVEUWoYgVjawuUIjlzZuTY2+/j/tqv0XuXaql99Sqy0wEpMQ2NZyWjzQPDQLbb6Nl5in/1N+S+/wMy//5Pse/cJcl6HFohO36doUgoru8hkxTn29/GufU1zPZDtONBJkM+F3L1boWmXsdBs9kroKRChS7MXOXy/B5zUwFDR1K9cIrZeojoDtFSkq5M8/WLv0sYewgJUW9IGjkYVoTlhLR7Wc7pNcLVZTBK3Gqk7HGdhABFDPEm/kIPFUyCluS9FKUd4qaF0zsk75nk4yz9PYckyBD1Y9qlCvFsjqeeOsS0BaEP33rjLAv5XVIcUiWQEjodQbstCa0WGTNgO1gCwLQUvWaWs+UtrMNDxvNTb3vmTTXgm+UmncExA79NLTvDvFsma+7T8g2+IOa4TIFYV3CsDKHf4Xe/AF7xOYi3Cfr7vLZ6Ftvog3BQ7kksp8PwIKbQ3mf2cBWxm6Vhz2LrOouLBaSMkWkXs9pDmClCCqRTY2DNotIpXKuM0DGydxrpXYeCQnVLHB4bDNyzpEaEk1eUvX2ElFhGQHc4iWP2kLLPUKSQQFoqcNRMyJkOz7o9qlYFwzYYrxjY0obhOqkK2PRiyqYgqwUTcUxrkGBnFJ6lkcJAJpKuE9Mr90l7y+TFHM8//YiTK7tUTMkLZzVZT1GebDI7scFxaOLZhwx6GWIliGIHKUw824cJSZQUmbJN+uKAnj9ASoW0Utp9jxeGE6RHe4Rjt4mnNsnkHiPNNdL0GHU4O+oztCI8NyYduLj2CQwxjs6cx7EnOVeY5X78iCOzwXHawU4Fl8qniIIUJ5W0k4BgELNkzeFaJoPjPfzA56A9znBYY8HNc3M2T8sZElYD7m8+pt+P6A40ndkM/WqJNdmlLxRLczkmc1s8/k7Mo11QCgINN9ahfqw5fz7m3jDhlX3IDIFAM/QterFi557NmhFyWjvosE/oQTd8RD7b59cvLvO5xQ9R9Z4iby0wDHtIs8OzK5B0BTOzKSsnBxQnJVpIRArrx4KMb+DHoLSg0TKIQoUbGRRbBpN2lYVgnnNTC/RzPkpEJCKlHSfMOGWOhyHb2yY3twRXlp6lXK6SHEkadxawmKS2kCMYRhi2QW7cZOxcwsTYkN//7fPMmA7/+19scnMz4ENL0xiGoDPw6Bf7OPsdHA+UEphP7+DmJEUU1acsHq5LBlEKRoqZGPz2eY9LgxhvzCbsZSnGMZHlkyiDZCA5PJ2gplKmpYmHoHWkMYVAdwSlrmTpqSZ2lGIOB4jwgPLKJtOzHYqZJXJWDs659No9HK/NXUz6jQCdCEScEiiFECOrOVtKxh2HPjA/P89srUaxVCINQ8bKVc7NPIuVDhBKYSRZtIa86XNvo8dOt019v07zqEm0N2TmnofWKaeuVLnWq1N2NaaX4E6GxJEmU4nxZyMuFD0OApfgdz5J/uQyQatF0GtTbqY8rcaZm9hg5iSUi6eJQolTHPLiF89w9sUathjwnd1D4qHJkIB7w3W2vIDZp08zOT7DeLzM2rV7MIio5l26oeIwcCnlC2zt79MxhrxS2aKv+iQioXK2QnG6SJAGOIaDv7f3JELl0e1dPMtl0ZpESIlOU7KTk+zv7yOEoO7scje9w61DyXY/YSiHiI5Lcf8UjRsJzVtDGldvk3S7qCjCKhTwpqepZLP0TZO7/T4KqBSLTFWrRO02w36fnBmzNFVGKsi2Y7QUCKVJTTi18DTJ4y2yi4s/k5z0HjxAv1OOuBDoJKHyoQ+RW1pCDYcjp1/Po/bRjyKAuNNhQxxzc/MRQim8chmZySCEwDRN2q02nzr/qbdVQN8NUkquX79Oo9F423eGwyGf+9znWHgPklkhBP2oz6F/+BNGR1prpJB8bPZj71rd1Frz8ssv8/LLL/P48WPu3bvH/fv3mV9ZIdnefmIm9eMwXJfCqVPv6R7/S0ErRfP112m+/jq9R4/or63h1+t409P/RftfPyCm7x8+IKa/JLxfgzyT0ezvG3Q64ifkvIOB4JOfDCkU3qVP858AlBb4WOicTexaJK79c1dKfwjzwQOEeivuxvNIJyYgDBFhiD5toz+RhTM2TIeIQoz/oc+RLq5AJoP2PMKXXiL30kvv+psbDx8i+/13jLWxhjfJH/wlBm8g3E1Eo45OysQbD3kY7zNwDZpBi8O1a3j7x2TLE2BEGHIfo36E9jzyExb7wSN26mMgQeer9JIWExdvs/jMGnO5DbJWDgF8ZuVpxLPTqI/kUB+ZJHrxw9x9XCIMLYQG0hRD26AqEFdIg2mWrDHE1gHm7BRXjx5iCYdRQAKIVMK5mP7AxtEFigWNUIo06jGVrlM8thF+jazVRkQh2jTIX65y8uMWjtMDQjrxDN+++gXSxgHtZkqnCd2eZOiPzqGtPsoUbPtLT55bEhlMPnfM+YOblEs+wmiBygIWKgr5k/Im3xjc4v7RGreOH3KzeYe+YXNu6gXG0jq5oxfYbV/icDBPOZfw337iFtPFdUS0jSDCkDne3DwBmVPo3LNglXB2bpK/dUR/N8eF1j2W9m9xev81zv1OlV7PItSzmMLFKG0xHEJon6Ylz+OIAmVHgXDQZgGlz8EwhokhQcVis1smNScwrAiEIGs3EBqkSAnTCexgnZLfpZbzyLgJ24bNVK3HF6sZTmQmqBQl41UDUo9Y1yEKEC2BXx0wMLoI3ceKYtpRSlkLMpYAbIZuBns8pCkyLHo1mqHEVitYto2V75EOJ5D5hKmFPbrHHRoNF60yHB9brO6tEgcGrlPgILiEN90jGDgsj/mMDxTZcIgtTCa1x1JjjrjfJyHCjCKcc3XIbCPrz5H0itipBATShribwTtYR+3mULkJcCxsEWOimPFc7iYP2YlbeJaDGZoUdQ7LFhjCZCgTnmOSRFhkhlcJw4CM4eEok6GTJcwusXJqlrXeDocvt7DqJqIpaWd7JInGMEx63R4ffsZhcH+P1p6imDXQEhIt8ATsdWFqTtPNwWtHICzIdzRaK6QlSNsGTZ2y2A4Yzio6KmWvFfPZix/j2ZVJFnJVHNsikyswVTlHN92lWO1zXBfkxiWbbsChpXjYSimWFBOuGpG1NKW1a2MGDjqjyB2afLb2DGdqJ4njFCtrYTkGSdEk9gNSSxMkKeO2iy9CKoUTzKuTdOoeeX2J4U4HwxAUchkyZUXU8VBzMUeVlEORYI/3yTbz/NYLY6igwv/xH69y0FBU8xmGhMgFj3KaYiV9nBPHCO0gns4wtpDnuRMZTi5q/n/23ivGtuw+8/uttXY+OVXOdevm3Ikd2KRIDpVaM9JwLD2MMLLgJwMCLD8MMDYwgGHAr9aTbA9kGiNLkCCL0gyUxRZFimSzc9++fUPXTXUr3Monx52XH+qySYq3u6lAUhT6ez04VXvvs7DX/1v///d952YVk7hk8z66DU6Qg9jDjXsQa+6UfL6USdnMaOpobqmIGM1kbFLfVGS6Dguf6hGFR2vDtCSJH6HDEfm5LlHXxjUnePazT7G21uTevW3a6xodKkJDELuKWcOiLA2yUuIqxUCnUMwzVS4zMzOLVIokjPjExz9JpVqFKIvQEiGHyHSEjDVL9hRf+f03KXYEla5Frechk5jWTsjSiT69yhBEDneY4k1FyExCqlJGpJzKpqSlIrp2gs7mfWxhYGZyPD/e4uJn3yE/s41bvEdl/hqlrMfCJ/9XatMV9g4C/pdfe5lrD7a5EW7wdrBBX2pOXDhPKlM6aYdCY5zJpQsUDlsIp4A0sySppt1qUck4vDXepotAaEGhUOCnfvynSEgYxkOkkCStDjpJiKOE+2u7zNvjZB9O4QjDwK5WcRyHW4e3aOW7ODLAEAI/sGmsGYhbisXSODKFxpUhYauFUAqnWkUaBkGzyUtra6zt71PK56kVi++5GC9mMlwuV3BzKbGOcYYJMtGEacpBZ8jdlk8ocliWRUYIvA/SZAKj/X3ifp+hDmgkHQQCSxyRL+k4ZBcXUY5DZm6O3LFjZBcXMXM5MgsLWKUSo3aHb+xeIzs2SaZSJo6ODvEjHVFNqszmZ6k9wj/iUZBS4vs+29vb9Pv99+JkgiBgfHycX/7lX/6ex2Vnc7McDA84HB0S65ggDjCVyQtLL5Ax398V+NVXX+XWrVt4nodlWdgPtca319Y4tbBA3Ol8B9GLh0MqTzyB+QEk4QeB1pUrDDc3UY6DsiykaR6ZWD14QO5hnM73Ax8R0x8ePiKmPyD8MBf5sWMxUXRkdhRFR+ZCn/50wPT0h+SM/hNFHMNf/7XFV75i89ZbFqurJsqAsbF/2P0Mh/Bf/ovLF77gcm/DZnZ0m2zpW6ZGulJB5EYkPzEDXuHIKMjJZLJKpAAAIABJREFUoEseshzgX/454jNnjrqmxSK5XI5+fwfb/hqW9RqGsQocRbloy8a4fv27sklVfBVH3QBhgDQBjQh2Saw+8ahCZmObw/kxVKqxDg65lQtYLq8gtIuytsGwEO026cwMvnWD5cXb5KpDvJMG557dRFTvEqUjhPY5kanwLyfPk/fvYYzWkGmMioYILXHFA65tncCWCYZhkoQhpPrh2JHDyukS5oNNWhWT3XaHNFEIQKQp7Vyew8kqlfwdzs7NoQyYdN5mpfwWhfERRCnS3waRImsu3mNVPC8lmTpLksyQhFUGuX/H7/2Gx1zzOo/VX2Ryd43Z9juY/QMansfs9A43eou0o291pMcyOzw3+ZeMVcbJt3tI5aOcB6R9wSv2iG+UXV5au8qo0SXoBYx6IdutA3LxLj873uUXLx7wzOmr/NjjN3jm40PKmQSj8yIyvI9I9hB6m1Hs8OCwhGE66FSivvw2WkrGM01emH6RamWAZzVJH6yz9hM/jhwdYviH2BMOhYUFcnaBMkNscVTsShrgZ9B6EjHQYN2j14e4FdLp5nHdI22eEgGWHKG1wTCqYaR30GSRgeDd3kXOP1XhJ09nmLb30NSxzAQ/9BkFO2g1IOgYuJWYZ08kLFQE2UxCbkvQuZGjdd9l47ZLfd8luxwRG5oHwRiz+SwZt4NwDgk6ixhWxL3taU4cbxCNfPqDJkHs8OUrTf7ijXX+8kadr+yu81frO6ybCdVCwJSnWJ6O6e5t4uiYgvRwDclgbYJwtEq+NKJwIkCXAkzHJ7G7ZIcLKO2iyGK2TYzdBwyvSILDhGLFxQ17UCxiKEVd7fENXkJbhxScDO2kRVsPqRolDKEwDIMLuZP4m/exokOmqiP00CfnHJB+vET51Dgdy+bdN9c4eL2OkSZHXZGBSZSPMbUgNwh5+qTPzu0RBSlJtCTRAplohAbLgW4IM8fgyiFoX4KtsQYadEJ3P2RxS6OUx/2SRZodMgorfGzuApcmJGGUcmvYY80fcpAOITPN3f5NajrPW16HPgmPnYBzY+AoQMCYq6lWNW9eNUhCyVLX44xb4ydPPc/tg12klOSHPrWepOMMcIUiDkN8I+TEpCBG8y+XnmcsG2OoGMNJKU3OkpEaoVOsvM3W7EV+I53EcA4p1dpstUfsHPr0t2uMZ2o8v3KBl9bW+YNXrmJpi7kLNdJnFlhbqaOXh3SmPTxnliTN06JH420D2hYDTFrv1BhuZDnoWSQ9RX8YEmNw6/wE094SmDY6HeIYCa0UgpFiKslw7plTzD9v4BXGsZwMwXCATlN0GGFkBIkvsKsV7MkqXXufKy/XURICI4cXxeRcA51VnMpXWLRNsgWLaDyDWXRwihYIkKnByuwCz3/qU0fdNSGRsUTKFmgHHbh84+pN8ocD+r0Bsa8RxGQcwWMLZeLhiPZMQq6YIA2JaUWMOgbJ0CCom6yMxhlVU0b3epibfTolg5nqiJ/73CpxzyIeKhJfYLgutcsHqOwxouiT/Mf/+HnCWFI2axyMNzA8Ey2h0WwwNzXHKfcUV9+6yuLYCqnrIvcPEHHMcDAgGI3Qx2sMH59nbnaO6elp8vk8SZJQrVSxlMX52nmaUZve4S6OcvA2UpYDE3c4RPo+1vw8wjDo7++TnVF04xFBaCJlhyiMWWlYjE/nQEQY9Xnifow0TaJeD7tWQ0jJ3b097mxu4hoGQimEENiWRRjHnK5UKOfzlK0SjaCJ6Pv4YcRmvUcsBJnsBDKT4d7eHsFoxPGnnvrA/VxnXf74+u/zZnKHe9EOt6JNdpMGU1Ge6sVLmPn8I78nhMDM5RifOc43br9BaEU4lkMcxYRpiBnATL3I4swsYx9Cjr8d8/PzhGFImqYEQYCUklOnTvErv/IrOI7zPf8dIQQrpRVOlE5Qdsqcq57juenn8MwPHm/+0pe+hPW36g3xMMd07ORJqtUqUaeDjmOMTIbKU0/hTkx8z9f1/YBOEpqvv/5dMUBCCOJ+H2d8/Hsa6/774CNi+sPDR8T0B4Qf5iIXAmZmEs6fj7h0KeLUqZhc7ofcKU0jrPZrWK2XMPvXkFGLxBqHD8nhAvijP3LY31dY1rd43b17Bq6r/97ktNWC//AfCty6ZRBFkgfhBLdWFV7jAbOlHiIM0a4LTynI/a0NTUhE3CWxJtHmtz7L5SLS9PMIMTwyutVDTHEDVJs4cxn14AGi1/s246QYR/8VMj8B3zw8FQLRHSLiOvKWj9XoQxSiuj2SJOTW8RJzuR5F5yijU5k74MOgssRLVwus3pthy1ymPNsnawuesEY8bQV8rDDOp3IZ7NTHCLaBHCr1wBhHqDJlq0foK/Z6ZZTUKNtGa80wNPnUMw65uQnclRW6t68QqwH1tku/V2CQZnj74nG24yo5d8DPXPCYLqxRMd7BUhH4ORjzYMZGT/voUgZSRVoZQ5dLiKRPFC+T/M+/ydg7X2Vi7SYltU/WrRNlPNxgSKF1iD6zzHpUpDXKIjAIfIOfPP2HFAo2i7MXSScnIdVo5aCPZfmTiXG+dHWbRvMOytBIKZFSkpUp/8I8YNpxWC5MY3oGjhWhwm0i08QYvU3sjh9lzOqIubE9/HDITtdk0GyTbg6YMHf519U/xvdtdjo5mkPFYC/it3JPstkI2TAznF2ZJlPaxAhDwELoCC1y6NRldO8Sva0senSfOA1Q9hS6l0UkCT2/jGtp/DBHzmnQCwoMejvUMgfYShL081zd+vccNJ/i3NJtlPsARgMiMUDZfUwvJIkkudqAxLMo5C0KBYl7N+XwjQxBpFGJRqYCI9akbUVnwSMRBkuVhEy+hZfbRo7WkAc2Mfu0e+ukxgjTNLi3sckbV25zp79K6qaQKHQQ0djeZjge88zyOkkaEGYNklEPbWmiRgZ/o4WZb2JlNVNLGRwxhZ+CyuxBaZUkyUGzibj7MnEmRBcdFCa6m2I5NqntojyLF63fZaT2qAd9TGViaQtp+RwGHcbMLGVTk7P6bPuHTGXeJl/0KCxPU/zXS0ydDeiL1/jtF+8z4W3z3IUhTz0Jp1ZijCRh9laOx9pZKi2LHyvkuX3HxzRipK0BgUxAoIljMHNwfAnSnmTHF/QszaEr8bVg0LCwqyU+5lQZixSlkcuUcYmTxWPkiz1WgwHBw8hdJQVFJ8cV/wabnYS2Sjl32uTMRApCI7XAVhC1DMQdjzOuQ3jdxUkVx6ZPUTLyNMIRareNkgLDsKgNM8SWJukfQk4zO+fwq59dQOyPIe0QaWi0GlEaazBzSmFOKDpei7+Iswg7x16yzRdvtnhrLeBGCHev7bPbaOInKSdmxji7MMaXr9/nj7+2RXm2TCN3j/HxiHanSGt/kVanwNprXcKeRS+xuPPgGFZxGne9ySgU2KGDl3PQj32anDWHW7IZn1liwl5iv7eJT4hfifmZ5z+FWQNv5pCMA7ZjI2WOUbt9lKlpw+4Vm1ceNHj5eoc/+fPr9JohxfEC+ZkF9sMuRRQnI4kxipjLu8wkilPSoSINRlmHyIw5Oz3D5z73i9+KH5ECaa6i3BsIZwsT+Pqbd3G6HaarWaYKGeZzNrNFG9OQiChmMCWQXoRZiGlHsL0BX7+asLaheXM1ZXvbZ3kupLtls/H6AUrd4LARc+y0he0kKAfyy1nMjINprrG6epk//dM/xXVdQhUyMoeUhw5lX+K14cnjT6G1wcbtdabtIk62SLq8TEdr3t3d5aYQhBcmEK54rzMnpSSOYyYnJwnTkBeWXuDS7JOcCKpM3O6g9ptED7O7bcvCrNdp1+tEwyHzOcEyHpmpCezyPCvzVSbbKdLMoJMFsl2HsNkkbDaJu13i4RCrXOb1u3chTckeP07UahEOhzQ7HbTWmIuLLE9OEh7WmSrMYIew3ehTMF2SbAXhuBjZLKZS7HW7XHz2WcxHjJ8C7Ozs8Otf/k+stbdI6h0yho0rLYbxiPaEw2MX/sUHVAMJhnEbx7mFqAck/SLahGQYUlgPmN3PEPcGnPU8ejdvHh1kZTIfOlospeTEiROcOXOG48eP8+lPf5pPf/rT73Uu/66wlU3VrZK38x/abdVa89prrz3yeUkp8TyPlcuXya2skD9xguziIsaHZLL+IJCGIb3V1UeOGes0xSwUsB/6bPxj4yNi+sPDR8T0B4SPFvm3IY1x9/8AFewihECgkWEdY/AucfbkUbfwfXB4KHn9deu7dKeWBXt7ivPn/34uw7/2a1k6HcU39wghoFeY4Su9x3nq305jPXuB6LHzWOE7IB+9AWkjS+p8yxEvl/syvj8AnWL2rmEM7yGDQ8z4GronCM7+NCKKkO32kZtvycJY2EKmOcTIR6QJIo6h2UYPBhBZRO2EbjWP1+4zMsC5nDBhROSkB9joNMtuV/Dbb/08zfA8VwYOnfoY27drfGrsRYqyRZjGnM+U8QY3sbqvIXSKVPMk9iTaKhzdvJlhttplGBQ5aEKcCipjBi/8myUmVqYxMxmolBlcOMcfvFXna1GeV5wsb8jHae8dZ3qmx8oFkxPz/woV7CHjJqk7edSW7g/AqCGsZdAGg8FJblVnubur+fKNzzD+v/82YTdiKbyNLz0OBhXCocQQIUbNIuvCdeszxGoeqQWdkcuJ45v85PEHHKucQYkjLbAul9GVIma8ytfv3+O1u/eRw4TETtEqRgvNJ/IBudRiOlAsT06ilUB4A2Sxgck1ZCwhqSC1RugQ4e6zOLXG5WNvcmJmm2eX/4QL9nV27k7T7OcJdMrmcJY/PPh5riWXqBS6NFplXrk6zdlyk1zmNlKB0H1SXaFz/SSDnQShQ3rhXURzgM0FhmqJce8+Iulx0LHYr6e8cXuMaNTlzNS7pEGeg70Fbl97ip75JJ3CMyycLeCY+0h/iBBDUBq0QFoxbi5CTY6BKOOFAw5fMUhHBrdGKWnyMCKgoOiHGUQupDw9ZKbkk+oRzRsBmiZ+e5vbN8Zo7b5De/c+e9k+L7/6Ft3DA/atgJxl4qoQIRWu1cWL+2xlNStFaIfbCLvJzv2I61fbJDKmdkKxePITGMk8hihj9lfIJPPI7D5YLsbOJmIhJDHmsFyNOVtHuHX67ySoQYut4h7X5Ws4UcBeGBKEATZ5ECmRHJHTBs+4k2QMmwfpX3HpX82gji/CTA1tRWgh2eyuszJWR+UEncOY0EhJbXhq2mDaMKjvupjS4uzJM/TUHgf3IvL9CNHRaDtFpDAYwMppGM8Y9G57jIcGk6WEqmVQiGxaPYezkYuDIsrajHyPB4bHydkT9HSXlhxgSIWSEts+OpPa8je4JWJ+7PEqi5OQt2LC0MLvmEQ9g37LwGq6uNmU3bsWKlbUqjNkMnkWDIvbD/ZQ5lFHypCSWugh1lp8YpTlWFwks61YWkhZPp9jchyW5iWFokLYIYlv0Qxucitj0Yv2eemt16gfNOkeRvgPQnZaASqr0a0OqhPgYrC4MEsnk/B7X3iZl14eYJ1ysKRFpDUZbeO/GxILRXvgEIQlsoHGiDSesikvnyJ/4TkOogZJEhMWNTofYntQrlT4Wv8WLyxewBJF0tDErnQIjAQDTdAagFakaUBm0uTPr0KzHmE7OXYHLZL+iP07CfFeC1vDjBaIMEKFCcW8h1YSmaSUlcWsUIydWyI9VePiyeeQ6VFOtrRuYZX+gM3wDjcHt9g138BzGjRWBUY/xmn7GD2NOYR01EaaIcdPpezbDqEYcHtL8rXXYlRfMTNwyFopQZjwtTeaiKSLEQlUrU+7PuTtl4esTCVYMsbf90kChV0yuH79cV599VUcxyERMULukw80llbIKKEgJblBSObWAVMjcFodDm7cYL3TYT2KGIQhOtG03TY5L/dte5bGzJu4hsulsUtHe2m5zGBtjWI+T3MwIM1kEFISdLsYScIzzz7LyBiRCk2+FeCcXsIwapibAQEO494UcuuQoNE40qam6VHntNVifTgE08Sbnmbf97m3v09Ha7pCcNjrceFTn8LudAjqdZRps7N3wMjLMAIGStFqt+m327hzcxSrVSb+Vkcv7Ha5/tZb/MVXv8Td9C7K9Agcm2a3R258nNrp0wxczYnSCWz13YRQiBae9/9hGPeRss/c3AgnXSXnX0ZcbZKJbPw44fLcHG69TnB4yGBjg+DwkLDdxpuZ+VCS6LoutVrtA4vvf2wIIVhdXX3kZ6PRiEuXLlEsFn9g1/O9QkhJ786d9zVmKpw+/YH5tf8QfFSz//DwETH9AeFHbZGLOMEeBNjDADOIEHFKYqhHaiL/rjB61zBH90F92/iKUAgdIdKYxH1/G/bVVYN6XfKI9xTDoeDcueiRn30YPv95j0ZDUq9Lul2J1kfZrEJJejrL1JLJ6qpFJriG68nvfgyJT5S/gDa/ZcWfy72O7yeY3bcRenQkPhMGYKCiOtp3CI8/R3T+PNHFi8TLi7jtF9F2DrXbgjRFBxF0+6SuRG8ZdELNqJChN1lB00MsxyzLaQxxRC50Ividqz+LOVbFKJ7GM1yavUPKg01EMyDB4vFCl4ngKoL0SDOVKmTUBzWOxEI/1PxgZZhZeZZLj3lcerzCyXNTuN5DUq41qVT8+do6X9hZpV8aYVYSVO0uTuEmenOM//bMPhPpHczOKwgUSBOdLWJknkQa4wjlIHIT7E+fpWX1IQ/HWl9i/No77LWq5PxDKs6QhewaFdWlNmwSXFrCzFo893ydyY9ZnDse8XOffpLnT5ephJtHsS7fhE4xu68jkxGvN0u8tXWA1hFGoHB1ATe1ecKLKQQlCkpxbLaMGt9HFFoIKVBpA1HgqEM2yCLMPXQqGPmaKEpouFPUNu8yHLc5fK1MkAheHjzN73R+kUMxxrY5Rz7bY7K8TzVzn0xjiwVxG7oTiO4J9KFF1NOgyoyGe9zZgyh6mqDvk2qDkZzDypSw8pPU9DjVziZJkIXQ491rz7J78DyV6TNULy9QLre5JX6N39/Y5U9adXa7CRVMig5YJUjHqpiehqQI/YiDm5pUQ01r7gWKg0hhuCamA5YpePLJPkKYtDdTgoEmlRHDhkcYVDisT1F0HhBjsHaryyEDEiPBkAodS5StUYYkEjF6tkRt7zJfvRXwTj+HtHcY1SLSsYTTJ54lUglWCioyMDMhwdDCiJfwjT0sv43fWCZTnMYsllCGg8wM6A/afOPGPq952zzQOxRlhjGRZciQruggU5uMafNx4xQylrz14HWevDxkfrIAiQXaJonaxIMB7Uab0myb63smo0JIbGm0DZPSpjAZcf+mYvnyCXK1OU50B6xf28fXYOsUdZgnSJco1M7whPc4rTct1GCA6imGdzIELcX2gcETusqx/ArFqdNUSgvs1nPc2Frl4qnH2AsStBeQs47Mu23DYCAbxNksaalHLZelYIeUMzFRZIFOEInAwGW2nSW0fHbWjzJB20af2snzHDtMyHgm91otwigBHTPs+UzJIScLFva8S95NadxqUZyYojhtImSC1iC1izYe8M71VdZuPOBvrr6JkwTIjEWqEjAhuBMzJYvM5mepp3C/dcj27g65gY9/DtyKxWu/5RM0TX7m+SkyKibZjDGooPsLpM0mHHSoTM5h5UpYpSLlmUUy+XEOjT6RGTDMJMhUMQhyPBjd5unyWYKRja0lQdcmU20z7A9RgSYRAqOUctCr8c6dLo6VJxppXK/P2q0ItEu31ydLQLEdEPUilAEFz0Aog8SQWJZN4ln4Z2bor1Q5P3kZK4hBhJj5P+NOd4OtQQMpIbYiHMcgedAmXjNJkyNfPD/xCYKYyYzJ9DMhc55H2cnxxS8EWOuKsYGNZQIIkkSzfRghhclsVeCN+xTNozianX3NypKJsiAZjkj0FGb23/Liiy9iWRa1QcDQavNNq30NLE3PUnx3n9Rx8WSRdr9PfzCgnKb0DYNEKcaL4xxGh5g5E0MZrIfrpMWUelTHMz0e9B+wkF8gWNsg7vdxq1Vml5cplkr4e3vUikWO1WpUl5ZwDJudwe5Dd1hNWs2hDrvIOGXFmiFsNkmGw/dMpuxqFZSi1WwSTU3R9X3u3r2L7bqYlkWapkxPT7PfaPDUL/wClmUR9nq8vrdHIiWHvk8YRaRaE3geW80m5XKZM2fOADDY2mLt859n98UXufbFL6Lquxw6Q8hkEEIiHYfWcMjs3BxBErBUWHpk3qfr/leE0IAFCEzTY2Jigrz7gHuvhRTyeZ45fZp8vY4wTYRhoIMAd2qKuNcjjWPc8fG/ewHyA4AQgvv3739H1zRJElzX5bnnnvueNK5pGNK7c4fh1hYodXRA/X2EEIJkNCKo179D/6rTFMPzKJ4793373z9qNfs/J3xETH9A+FFa5CJJ8HqjowgUKR7qblKMMD7KB/0HklOr8xqCR4zcCoVIhsS5M+/73dFIcO+e+agEFrSGy5f/7vE329uS3/zNDN/kY1pDv3+Un+p5mt1dSbutaDQVrUOf7sEBxbL8ljxUp2hpEZU+/h3PJpdbxe+3MfyNI1KaJIh6D9npk4gSIoAoew4ekkqkhdF9C1W/Sxo7JIEi7fkQRCAM7l+T3PnMWXrTVfy8RzFp45YcJozCUZEShhyMyrwefhzH8oEUo7GBUdc8Nf4mHgbj2Sq53i0sR2FZGpEayDQCo4hMmmijhhHWIe2TOMuk3gJCWqD+lsZDa/bViP/r639N2ZxACkmYhsjYR4oe84UMU/o8i3MjZNDAGN1FWxVMvQKGC7YJjklkh+yHk+RlgXbqU3p9De/gAC8fEezEWLbAMHwsGWHEEe3ZaSrFGPPcGPnjFqWSAk4Qpw4Hd+6wsWHQaEgcR+PqbVTUAmFgqjx/dbfBIGqiBOg4ItYeS06CG7gszJ1gbsVAOfuQiKNOY5pBaBC2TxJYJNEQmXqYOAR6mp54nEJyA7+f4vccvrDxOfbTcfbCKdrFMkMzy7T9gBce+688XXuJmdw6rtFExQ1EtEcwlCixR319jzuvJGwcVhmbnKQXFukHBQ6s82TzmrmpJhVDMta/xv1WjZtXP06vN8/y2RqxYWFORbwh/jfqrJOTEpMeu6T8ZTelMuEwPV1EtQOMZoAZC1QnpLEh0EIgIoEbedjCwNYWNSfhxGlBfjImEin9bUhI6HUsWk0D22tjGjaWCKlk+2wejBgkAR0SwoEk44EUKaNhjF2wyEzM0t5JeOvOOqtBm27GIiNSbJFjqXqafqrppgK/L2i0JbE0UWkBbJ9MWsGz5xFOBqREmCareyF/+O4e622Tw3jAm/0e6wcW0ioTWgmnJmOqXguDDut3brHRW2dqSXP8fErGEFhpmTDaIu7GCCEI4i7KC3itFREFCfJhZv1M5JAZ81ie+wlmKvNUlUOZMidXjtGrHzCQOZzSKVa8Gk8sT3C40UGKAqmf497bI1qbDs6dLMu2y7lTz+Nmq7SUoNXPM5WbplgY4/XDW6yMzdMVoOMsKsyw2w3Z7m4wNfGAE9M+9ZHP7hq8+1LKO28o7l7TDEYWJyo5xj2LpC7YumXSKkWk0yFnrCUylChYFvO1DNVcjrlKkenODhOOxrEk+YkcSiYYTsrerS3kcg9l2ggZMhLXadav0f29iK+4A/pDjYoSqo0QC4PEMok9zfimxVS1hpXz6MuAyEyBhF/q1PhMt8DCx1botAr8P/95jVAsMO4XyMYW2XYL8fYuXpAiy0Xi4ZDszDxWoUSiIWuW2es16ZYSglCSy7jUo9sckwugHaI0JfUNhvUSYSvATFL2NizeuOEyiKt0+hIoEg81RrjAdnvIKAg4aLVoHgzp92P2hgFNPyRNUsqehaVMTMuk4yXsxnXeLXeJSSkVJsna99BiixvtTUyzT6AGAFh5k8HNNhs3Y4J+RFf0GMURwhO08ylh30M4Fc6f++/5yz99Fdt0MPwI8TB3u9UJCSOBxmBu3CPr+phuTJwImk04s2AQxhppx7RuX6J84ue4e/cu+/v7TAUhbmxxmO0RRwm1SoW5wCJOY86Xj5Erj7O2tkaSHDHm+bExnJkZOp0O5aRMTMyes4fKK+bH5zlbPUvNrRGnMXfbdzmWjB2ZFkmJEALXdbF7PbKZDGiNOzmJa3o4yqYX9ahIj8naLBOVWRZ7GYKDo/g06bpEvR5mLod8qCedmJvjoFBgdXUV+ZBYW77PdBCwks1iBwHdd96hmMngTUxwEEVs7++TKkVSKhEXi0dRbUKQy+U4d+4cBAF3fv3XQWv8NGWv08GUBqJdZ5h3SJ2jvcv3fcZqYwhD8OTEk0e5rd++p4kWlvU68J16T6UMxktQ7M6yMLWE7HaJ+v33IlR0kmDXaijbJup0fqgutjpNSYbDI5fev+VYOz4+jhCCnZ0dRqMRURRRqVR44YUX3nck+tsx2Nri4CtfIazXift9BvfuMdrbw5uf/77GyTjj4ySDAUGjQRoE6DjGzOepPf/8R668/0zxQcT0+/eLf4R/0rBGIVrwnQRUiCNyGkTEzj8sQ0rz/sxRiw9+wS0uJpjmd+tjwxDm5+NH5rV+GF56yaZSSRkMvnVdhgG9nqTbFXzmM8F7GaqHPEs2HfLuO3d54nEfISA1S/jVn34EYZ9BJvcAgah3kff3QYNwE9RLHqLmI/7NEC2/pUvtz/+PFN/9d2yNQEmHsh1ixX3u3bzIqrOI82ADtRxjCoNCdY7Ss4+THNRhNIB8ShQUEVt9RNRHkbB/6CIUCOFi4DNvfxVDJuw1shzzuiDz6LQJWiOSQ2SwAcJApikqCknDdUalkzhDH5ECaLQUBJ7N24dXMGKHvLHOhNUmxaDbEew2F7kbhLxUn+Xy6T2KhfOYg5uIqA8qC0RACiJhKPKYSqCQOJj05yeovXIdOzsgzGXR8YDAz+B6TRKlyFUlUZTw5mga8/oQIX6MiQn4whc83OSTnC3+OYMkw+GhxWI15thkSmIUeDx/yH8z9iT/6e4X6TldDAnOyOD2/UWePDnk+OJxRGGDRB1HNhuoQR3hLoORhZEHAAAgAElEQVReQ8Q9hLuHMciitQQhaYinyVkxycmfpfXOK7zVO4/UFkibbr6E7+Y4N34bxwrpHpTJL799NOaKRtCFRGNETcK+TTEZZ+Pgp7Ez4mgMVwu0m8E0E+43FqktLWDl8qQtj/6XBvQ6LsunLWIT1IJJqv+G3bjJpIrw0xhLFvD0HhlX8UfbIy6PQTbIoBwJUQ5Ml8pYh8YmdEONRjBuWNiJIOkZeMf26QcRwzCDnyTEvkljM4tnh0RpA6mWSa0CnYbFmfMOd37XoF/sUvHaRBqkNJGGIlO2aXZH+MoirbgMDtrsuAbBfIF5e5aV/TzjEwGN1oAiNlJIokBx975DWNV8/GIBsT2EsAfKoeUn/Nlr27h5m8OZCreuepQf79JUPpuNHSp5TZIqAtPg/ERE8ZJCE2OKFrGRYSvcZklK3jnssjYAU0rGDR+/65DTAaatiSKNMAWprVnIP8+dbU2a9LH6KaM4gUjyxImPM1mwkNJApylbt+p0CgIj1Xh2gdJxwehuSjpQFKxJDM+iQcpB3UKkMTrpMlYc49bLV7jZbiHPlAhVhutxh3rU5LMr+5iGZCzKMewP+H+/1GaiCHlbkgjB/rrgvhZYz4W8OcjiPGGS7/XoGyn/efA7LCSf5Of1NPniBANjm+jGqxhxRMl0kJPm0XUT0gwjwgQe9NdZO7gHQCUjyO1FVJ62sOopWStB9SVaKXTPp+NHpALu9nukOxt4T4+xZXVJ0oiihIMdzco+XLje5LmPV+HHz/B/v/guf/Vuk//h/Aq5zS46TsksVzAjn9j2SOlgZ0OGQYgMLGxdZLMZUyia1DIr5MZ/ipKd4OkFNrbWoZwglKC3W6F7O+GdvToDv4vr5vF7BWyvRtTvYpVzPHf8Mm/cvc7q7haiBgUtyTcVcQpXDjsI4OmlBQbp6MggsGyxWFik5bf4vXt/wC+dO4YWIVtBCzPu4FlDNAI7tXFdye5MDHuaqinJTqQEbkIqYHU0YH4ry+AbWdLOLEm8gWXEpLEiUZIwNpEkmBLM2TyKPvUNQTYbodMEPYSgYbC7WYb8PiXgV3/1V/mN3/gNul/9Ko4vOBWMkx53mTk+T+lelzl7mozKk1tc5PDwkCRJkFKSCkF2ZYWZmRm2t7fxPA/nkkM1X/2O3UoKSSfoMJrOkb4bfkfRryyLJI4xHkamAEy4Y0wFLrnjp8lPLmApEz9f5/bv/hb19fsYnkf5Yx/DymTQWqMcBwH8wmc+w9raGq1Wi9JwyFgQkCmV6DQaGO02XaVIZmdRts0zp0/z5ttvY8LRGhSCwPdZXl7GcRxWV1ep3r9/RKIfEmk4yvu0hEt+o07z/FFXTwhBrGMWc4t4hkcShkeE+eGIlRAhR/3n74aZySBUhAbCfp/tep1hGDJdrZKx7fc0kGkYfmi98f1C784duu++SxoEIARWuUz16adR3zbqevnyZS5evEiv18OyLNzvcQw2DcMjE6Jv08MqzyPu9WhduULl8cf/0e/nmxBSUn7iCYoXLhAPBkjb/r4ZHn2Ef/r4qGP6j4gfpdMXexQ+uisqBGhI7A8/XftACBOjv/pdWk2RjIhy50jt93eCEwKmpxNWVw18/+gaRyNBrZby2c8Gf2diGsfw8ss2ExMJq6smQrw3IUUQgGVpnnnm23WrgnZyjM3uWWqLU9jTF4kKT8Aj9Cq53Fl8/xXUYB3j5gGYCuGlJA8q0C0iWgMSb5F06pu61BjD3uTmq5LN+ixxaLLWu8Te68sMwiqeknhM8eRjJ5mxx7COX0ZNdEkLBUxrHWmOsIwR125VsdMDRrpKq2OjJKRaMpVfZ7b6AJUGBLFHPpNiyARtzR11x5M2WFNoo4p2HkebBXT0DmF2hihTIrEMYtskdG1Sw+B24xpx/asYuoOUKcQBaX+fIFS0RgWmo2XurwlK1gOKYy4qCZFyjqPN30FYWQZmkeHIQgA+Eb1qhuqbt5BJyEBOM10cYOgIM00wTrg07Dybj51BlyTb25d44/VLfOmvHbJZTWqUaSWzZIw72FaLnYMc1ZlxPPYYpXDPu81KeIqpPU2tHjLla5aKDi/8zGnmq2uozB2MYBfRbSGEB+4xwAZSkthBBFlScww/+zyb/VOU3S1SIUkqi/yfr/wi9coSveos9XiCrDni9Nw608UmKTmeWrgCpDj2w8JFpujYQWufRljmK3cXaSQ9ysUyjk7RmRzEoLsSy6mQKecZnr/E1OcuslM8iZrMQd4gY9a5Gd/Et1oorwWpQAvNMO1ioNmLNJ8qx8iwiiUNdJIHwyDrjRg0bYK+hx8nyFgjtYmuzlOYTUhzXYaxzWgg2H/TQ5oRtpUyiCxKmRH0Y4yFKoVFg+JwBIMOTSM4chA2E8aXE1pRDvo2jpPBFxGxDWnqUFjQTHkFZqIZ1jZi4jiiYEjC0GJ/w2Y0MMiKVyjnbSzHQwQhIvJ5884+t1shsTdB7I9xd93D6NhkS02a9MhXDFwr4eKkJgzAzQBCkmhN2TNpjHJ8cb3Oi1sj7vVD1vo+q32TnV6AmcRILXFcg4KjsbMuM8llGu0ELRJyowg0OJFGV1wKbpYwGjESIf3OEFzI5hOkACkT1GybyTMBGXsOdzGDU5HMjgv6dU0QxmTaIYv5PO2NK0Q727ye3OaweZ/H5gbkJl2yaZVcfZw//7MmCzWbME3xA5tMmiE/yLK71ePwvgtRlvh0gexjS4jpLAPdYSNyqHTGsN+9i9/qYMcd3FGCWS2RVqqQ+BwMh9gqoJBJmXhMU5ztk1sOMWdGzMWKw2GGa92EMFCkI/DTlMYoQaBIFRS7JvXFkO1mhzQSmLFCJ5rGmKZYsCnta+LdEU5F8Ev/XYVPnCvyP/0fV3ir3eGTF48xPT+FbVjUnrEpTvuYniKXc3AKMf1UUGwqxsMK8c6QpJHg5tp4to2rBFpEaCHI5AsMDvaJkhZh18BMDAZxgBzVMYtlNEeutX/tv0kwHqOyirCkiSc01kBghophHLNUzDL0NDgW0WceYzw3gUg17maL1rU1lHqD7WETzDxB7AGKRNt0bpo8aAp0LIgMi0GsEEoj0oQv3+nx4tf73H7jJvsP9tnc7JMreVhIZGxRMTMUR5qPHatRsiSJHNK7pxg2TezApRqO0dkoELUNOiOHmac/h1KKJ554guMzMxybnuaJC4/x+NRZVswZCiOF7g1xp6YwPI9Op0MQBAggtW3iYhHLsvA8j2c/+SwHxsF3dQwB4jRmqjhLSeXx9/ffI1xCSvz9fXInT75HWJUfoAyDictPYCiD/vo6zddfxy2WGTTqpHHEaGMDs1zGLpfRSYIzOUl+fp5+v887b73F5ptvcmNnh9W1NTqtFmPiyJypvbdHeW4Oz/OI+32EUugkwSqXOXnyJLVajTRNGR8fR92+jY6PolxMw+Cg1UIIgZfaJEQcTrlERChD8czpZ/hYuEDzlVfpXL9O//Ztwk4HZ2IChINp3uBRPRkvm+FwfZbr19/lt774Rbq7u+x1Otze3KQTxxw7eRIhJcpxvq8RJu+Hwf37NK9ceS9ORZomaRgyuH+f7LFj3zGmK4TAcZzvqUv6TfTu3CGs179L6ymUIu50yJ88+Y92L+8HoRTKdR9phPT9wI9Szf7PDR+N8v6A8KO0yI0genRPU2u0kiTWP+zFoI0iMm4gg4OHukuBSAYk1hhh+fkPHRXOZDQXzofMlkasjA159uKAi+cisOS3vhuGGKurqK0ttOfBB9ixX7liUijA4mJMqyUJgiO919JSwvJyTKXyiA5tbFKdylGbeH9HvVyuTLO9jPXW3yD8HgQ2ye0JOMyDjkm8cegr4nPnkHIX1/0ChrFB/aCNVeoytCvcefd5ms485d4Wjt8hKZSYnIhIJicJPvuTaGnjHP4Jg75gZ9em2wrpDFw29qdw1ID2sIRScNircm7hDqVsF0u08OMc5dwAw8ygrSlE2kSYi+jcT4ExhdYhafg1VHgbq/sGMm6TWEVSu/jeM3bbL3FneJ9+10UpaLUVaazJO03C3gzPlPu45pB7G2XOFr5MW5dRuWdQVg1hLJC6y9i5fRptG1MKmkmL1JC0zi6Rv7FOZiBxCwYi45KcOc/Xn/j3vLv0MQbmMrrxDCUmmC/7XL1qYFvgxavI8CrtpMahXmJn16Vxd4Nc+x73wgnmisd5ds7imQtTPH52npnFDs99psHxJZO08DhSxMhkgCw6CJkFXQYcMAv47SeJ02cRtTECMclO06bqbaJdBaHHX3xtgSAWKENhCM3MuKSa3cIzOrh2zPmZt3FshfzmqbxQgE2SRGzsjbF3P4MT1ukebOHaEk/nQDoQJRRVg/bhFvbMDMo0OHZKMMmrtFpF/n/23izGsuQ+8/tFnP3uS+bNPbMys7LW7lq6eqtuttjcKW5aOJA9EmdgD2b8YgiG3wzLAxgw/GBg7AcbIwOGbcAazEAWQUGkVkrcSfW+VtdeWZWVe+bNvPty9gg/3GJ1N6tJkW6OoBb6A/Ih77knIs65956IL/7///dljDptdrgTHCJEgukMiVKFkgOk0AwweNpw0SLAZRn0GBoHbU1TKB+hPFUhX7KYWFkiu7jA+MIhltvjlkqwTQMci7ChMIcaaUvqHZNcopk9bvHQszHLSxucfKjFKavGGbfE9KTN+JTF+WMlyvWz+FHCwFG4hksrbBEnCQsnHyY3yGMOUoYNSa/rIJtl+i2NjExU8y3E5g6lo1WyJY2oNdBjba41D2gmfUIt8PJtymNtbDy6m7OkrYCTCyW2707QJWVyYkjNLbNgLTDn1DD65/n3lxU3+4qsMjGlRxiV2T0YZ7VjcWRigKdTHFNzpAaBU6ZbP0YwjLFTiZsqMkFMYilM08a1JCIdoJTGlylhFBMpgattDtMeXq2HNjRWbQaWpsg6eXBsyl5Ip2ExoU1KtiBv+ownQz5XVVyckJxcGbCUnadqzHJlbZOrN4YIWcRWJcywTLojUTpEZjRO1qNEBbdnkk67GMIgGPTpDqsUi2c5mJ6GSNPqQuomuBMeOozRyiJIh+RiQfEsjJ8YkvUgh0VdWehdk9kZxfpQs75nYUeSfT8hTDWD9B7p14KenaA1FAoFzCQhTFL8NMY7EzFjZZBbimQ7QieK/T/u8ky2xOmnZ/lfXr9J10j43BfnMIqSMBEEuk1qgiFzeGqT/ds+rx1e5s3WDynZDTbW6ojJq7Rat/FMF1/1uT68SVpqUdAhrV2XQibD42eWqFuSlB79juBWdpcdv04cprjCQGpBJATRmKJYN0lSKFdLTByZIf31p8lnS1i398n98Dpmc8hAge30wWqihwkq45JoC9syeWU7j72f4gSCWI3qQ7UZc2s94K1+wOSkxURWUfAmCMKYzZ0OtaqiECXMa5OZMRvPE1iGjd6xUUHIgJSPLFWwpTXKYgE2OwusfOxT970v3fFxwtt3sMIEO00xkxQpDKJ+j+zi4v00162tLYw0JZydRVsWcRyTzWb52Ec/xtXm1Xv1oe9GqEKemHyC8uwR7EqFuNNhkAwxpmtMPfXMSGHX99FpSiabY+ri00jLQqeKw+efw7BH2RKolEGribAswnqdzOwspucx9tRTCMPg93//93nhW9/ClaONo0QpDodDZBxzdHYWC9gPAmZmZ2m3WhRcl8mJCSorK/dVbH3f5xOf+ATB7dtE7fbbqceOQ73VQgpJzihSm32UUlziX3z6X3AiLtG99NZ98iZMk7jXI9jbI7d4FCFCpNwBRmscrRT+9iqtNw32b0T8n1/9KokQlE0TS0rsXA5fKfr9PjPj45TOn8cuFh+4r/+x0XjxReRPkkYhSIMAs1B432Mabm6ONgjeY22m4pjiyZPvq/1/iPggrdn/seFDYvr3hA/Sl1xoMOPkAYIolCbMuuj3W08gBGnmKKldQ6QDtMwQlR4jLl18u97yZ0FrvH5A1Y0olzSuPaqDMqOUxDExb97E/cY3MDc3kfU69ptvIlst0qWlB69JwM6OZDiUeB4sL6ecPp1w8mRCpaKoVPR7iimFoeDixehn8d17n/kQ3koxVruwb0KoAY2yqqTZ44gkIT53Bs/7GiPBBYuBytK+E2LZEdlym8b+Moe5BZqTKwTnH2X+K4+TPPwwSIm2igzqG9xds0GadNQR3NIYk5kb7Dez9KMynqt45MQGxapLolz8pIBFh+pUDmEeAVJktE2UO4UyEpRuQ/h9EOFIsEi6aHsMq3+F1JlFmzkAar1X2El6REZA0DfotvWI0Io+X8wYKFVDdUPu7LRoqlUifZeNw236ao5q5TgSF8Pq4tghu52YQeqjDUjslPWHfoe53/kiyeOPMfzKV4g+9zm+c2WR/nCaBTdL3hwgSIiVw63bJl5zm5L3PGKYQrtH+/IBYWSTywWcmPPpBTUy/SEyH6KkwPE8pkoT2BO3cfQEnpFHWQsY0TpCxginB8PCyL5IeaQHv0KqJ0mTMq3EpjMQaGsdI5gi7dvkjZvcrc+gdJbxcsxMOSVjb+EHiqXjL6Hyd8jKBEeYoEM0JmkiSITD2o1pWg2TWGlCLPr7uyThEKu2RBQneIUeoT8gae2Rnwqw3R9ybfUys2PgckgNh1eju0SRR5I4DPUWQaxp90yaYYllw6PTnCK8bTPckgTNMnbmNNIsoce/DA//M5xaiWzxFfqpwUAeJyFPVhRxjSyZGQevZnDQNknNmLMXJykvToPQCKdDPFA4TpaJU8ucWJlkylaoYYfd5wVVo8Tk8hkSUjSavFdGh8/S9KdZTwuk3UOOWbOUrZRx2aS/f0Bw6ybxwILIYfLCEIwQEHj5gNcuBeRNk7AtiP0Qr9wl73qcWc6hJ/qYwuL7O5JSZoKzhWX6gUO/9Sj4p/jOziq2adEdDhgkAj8y6HUzhIFkM+xzYiJmoipo9wWX1jQ6s8TQ85GFhHopZjZMqRiCjKmJm1vkcg6m0qg5h/6BT2xpDEyajT3cckwgYOIjJQw9jWFJgoMmw8DnzloEImVt5wWOT25y+slDCkshlSVJZcbHzMTc7R5y+XCPO+t9jCRBhCHl/CEGGkjx/SFLiwHlUkRn32Nru8edtTbr1/u0Ww5mw2R9Z4fVjQ3i8Qk6osB04JAGKclQYdo+6WwJ+4RFoeyTCkn3wCPaFiRdQS6BbEmy2/Xot1NW2yFxokltg/Ftl7YdIgyN0ppUa7JSkvNGtjRePmWu7JEvZEnWI7q3IlQE5/+Vw5NPnec//4LLlbVD/vW/f52C67CwWEK7BulwSP/wCgfdv+TGtQ3ivRa+CokdTTZjoQh40e5zudEhDIfMdgMKwRCvkNBqJDz9hY9x4uljPHruCHPTBYpOlcPSEL/VIx0McYXAlgJLSAYW7EYaZeU59msfx/rCw1gdH++1u9ibDYzWAHMQQs+nHo2RkR6B0wCpGJLh1Z0aW8pmvjDPhG8ghyGmNUQi+NtOj2zVpmxkcDExzIBMlMH1Q3KJybOzeS6ecXh4pYiVWuzuZAiTDONezNPncuQMA6EUhmPTF8dJBzaVQh6rWMRwXQwpGa9OkA6HJGEEhkHxyCITj1xg0Dwk8X2kUkxMTdGtVukZBlJKjhw5wqc//Wlsy8ZPfHYHu5jvsGfrRT2aQZNW2OJm6yZr8S7/of83/FX6Gt8N3+Dl4Conzj3L0pmLVB42GT96Gzv/FtK+i38QMLjdRFqj9oRtE6YJKEUahow/+yy1j3wEaZr0+31+7/d+j6xhkBGCVKlRtFFK2nHMsWKRrOfRM02mpqYol0rsrK8TTk3d32Du9/ucOXOG5eVl7IkJGs89d9+uxXMcxotFwsEAeeoUcydP88XPfpHaWI3D559/IOImpCTudvGmp8FeQWsTKQ8Qwqd74y7t1TFkcJYfvf46d+t1srZNf2yMjOfhSoklBI1Oh49+5StkFxb+7vXLfwS0L116z3pLce+1zMzM++vAMOivrr6nJY7heeSXl99f+/8A8UFas/9jw4c1ph/iAcSuhUxTzDgZKbQCQkHk2Sjz/4fk7U+B8uYJvflf+DwzijHS5N0EWQqEUtitLtZ3v4vO5e5Xi2jbxlxfR73xBvH58w+098lPRnz1qy5BMBLNSRIIAsFHPxoSRfDiizbvLGkIQ5ibSyiVfj4v2PTIUZKtPXROIFSElh7c2xFXxSKGcRchItLUYmOjSCew6IxnKQU75Gt1sATJ9ALN8iyf/dUQnX+HcJSK2NjM0JeT9JK3X56YUByd+BY9u8leawzbHo21r6b42/p/xxef+luU9w1IFEIeIc6cROoQSCGto6UaKQjrCGWNVJK1kcXuvEDg/jowIvW/OXOWF7y73HDWiIcxY6bH42kVNYDdZp2dZkBiFDDsGpYZYLDJ1Zs/ILQNHpt6DDU8gVe4yrGZG+wdaAZRDq94jmLxIQASpu5fk9aahcxNlrw1wAc0qXaYYoU400U4GXQQ4/cSdJQShRHHLnawxk7i+XWyaUo09DCKFqCxvAhpVJAiAyoYRUibk1DcAm8AuoWu76NaT2HLOqER0moKVoOLDH3Fyzt1/umKwTC6wcMLe+w1a/jhJPmcixkp9gYR9fGXuDP2HHeHId9SihVL8IVsCkFKu+vSPMjRa2dwJ5tsN05iBT62GrJz0KRzbZ2Hn8ijEx9ncAUR7lHQA3q7GTwzw2FkMD9eYiIS/Cf20/xJ90XWWnfQA4XsWrQjj/lhmRdExCkjZZBPOZqziFQf0R1SWZ4nERPUr0qGdpmFh57BKd2m2M5QcgL24k1sETPwz+H7Zyif+2sW8cl492rTUg+0iTArJEqhDY3c2GbKHHB1Q5EELUoDB/PaHfJnzzJvzRL7kzSah/QKWZbKZUr9Rwia/w7MNj3DoJhLmX14wPqaRa66SbB5EjefBxkwVQlZqMHOwYBEpxh45JyAi1/ap5q7yObQZHvqLsteA3f4DNc2PTzlkI1nMGsWGTcCrbBz4PcCOn5E7PWxSwNcI2ZjWOB6v0NFauYmhnRbtzliLROqANtSbF7QdFY9BhvXGVu9QXLhsxjzWQzDp/RQlfWdPtc371IxYwwUc58akjMv4cQ1lLTQXoRODY7UMuzt1fnL4Dbfag75zVhy0ZdkTIueZ/CW0yI2GxiWRXHKotkasFiBpCWxkg5SpdjAuZwipMGffqeLj4t9tECkJtm8dBdd6fPMU1mqJ/s09nYZNy4yOXYMocE1rnGrECJzGZxsTKddJW6ESBWPRMZyNt2NlOmM5Fk7x8szkisHfQxt4e0UoJ3SAsKiomLD0ek8MhGoVGGZDpWwxMrUERLX5/Clwf3fb+WETdK+imPn+K9++yj/8isL/Nf/013+jz+7zP/wr55iKt+l2bqEaUuKTkLfNxhXNnEpJbQVK5bH05/2eP5PNWMHg1F6pwGJVkznCzS+dYvp+XHsnMvcdI3xxXleeDPg6NYee4eHJFqhhQatyUcag4QLR1Z45rGP86b/BoVrO+BYyEGA8GOIIoqGh9Zt+tY86c4s22ab1pEs09lx5oomZ+dPcmXuKhNv3sEa3CE1DCbvDvBDjWJARwgKsUl2GOMaBtN4TLcr9N8yGRgGruNxIWtRe/ZZbv3wh+wO8pRqQwrOFLaeooRkcT5PWVi0vv8jco+ep1SqIh2H8UcuvHui0ZqF2TmGOh75ghYKHH3HRqxWiv6dO7Q2N1lMU/qZDBu50W8pTEPWe+s8VH2IWMXUB3X++PYfM+aNMZkdldZEKuLfvPZv+J+f/U+Zy6yjIwcSgZAD3PHvY487pP0jGKZFt9XAcJzRn+uSmZ6+nwb6ve99jyiKGNg241Iiedu2O0xTDno9xsbGQAiSJME1TS5+5jPcMgwazSa2bfPUU0+xtLQEQGZykqnPf579b34TlaYIwJSSC1/4AjNf+tI7psqI1Pffsz5RWhbB/j52uUySnCVJzhI2Guy/+B3MTAavCPuNBrZlgZQYgwG7tRpCa4TW9Hyf7OLie87/fx+QP8ULVUURdrn8vtv3ajXsapWk13sXsU99n7FHHnnf7X+ID/Hz4sOI6S8RH6jdFyFIbWtkDwMoQxLm3FEKr9KYYYyMU7QhfnbarVYY/h2s7puIpIeyKvdSGN8fbD9EvFeysRCYt2+jm4c8UGxqmshWi+Shhx44zbLg9OkEy9KkKdRqis98JmRmRjE5qbAszf6+wXA46nNpKeETn4j+znrWfD5Pt9vj5TsT7P71KnfvmOw3shimJJfTiOGQ8JOfRBab7O/3+aM/OsOVKzW2t4ts70yw3pyiMK/Z1J+GUoWLF2NWVtJ3dyJtNt+6ifiJSHOgy7hGF22XOXHcJwkiYu2x73yJz308Yb5aQnsXUbmPEOfPkLhzGOFlEttDqB2EToEULSzS7HF+LFks1MgWB8AINjFUxLxX5gmzTqF1lCVRJicj1rsPEzVhnxiti1w48RKGoWi0xvjRjfO8ttHl1PmHcEtZlJ6B8DQ54ziZymPY2Xfs7mqNTFJkmhI09zmz+h8obNfxtutYh10UksnyNhvdHLYbItKE/mFEELnMFza48OwVSrUK2lK4mZBsPkLaiiSx0VYWI79N2ZpEmBmEChDJAHGgEb4JN06g+xb43wX/NazyJpbdQ6pbJDmL/FREX0l0ukcm7bAys8FcdYDv9yh6BxzMfZ2jS29g42Ph4kjBYWrR69sUNyvETZPtepn9ZoKIQ8r5AxzTR2pFZtLl5IJFfrKM034ZoRJyS9tkJit0uhamHlLwEpTpI0u3qfotzhkxaS8h2YkwYxc3raBNg9phBmcIc2WBIGJ89nGkmeHORpUbBxN0oxzp0OflV7PkSqssLt7BzUZUsh7CMMh4PUymmLeWqFZeQlj9UVoFoIazSKOIDg8w6nexxS5x28K4OUGbkCTTJuwPcHA5ky+QbBaZMyyePXKViwvrnF+4hGps4vckQloIYaDSmJnxgPwRQRqEeHkLkemiZI+VIwU63ZRWKyEO4KlnfBYmPQKWEcrDDfVMkmAAACAASURBVF3Ojdk8Ws4T7Exj4TLsmzx1VNPU29ztd4iMLoEMEVZElz6IkLM1j88ueCwXXI6OJ/zWsRxj5T36Q01vmMfOOUgi7gxv8u3gOq9NK3qDuzTaQwZDmw17h/+NN1AnOjxyLuGhiwO8wCDsa5r+XeIDRdZxsPIB3716lT9tvIJIElQuoZ3C9QTmw4RvNg1KVYltxURJhmzZo3sQ48cBGR+G/QSZaD55IUPeMLl6I+KwHTPct5HFCp3NHeanSnzyUw0mpwdkcwZzCzZTc3W8vsY258gUhqzttLi66SGEppKzqWRmSDBYW2+z3xFsJopGOyZ3Y1SHvHkjZrBl48QGaZriDzSZ5ZTZWpGsl8cupai0T2T4fGEiy5HUY/tPttGppriSEjYlOy8GLD55gkxhChU5SGecT51f5NGlLf6bf/sK335tmwvHBV4RNt5wUAOJYQgMQyIrDq7lEwQ+zbdClC/JeYKMK5kZL2BuLaMVhL2QykoNoQYk5ad4Y/V1MrkcaadD1B/gKI2jITUUxw9zVM0+Z+UGiws1dneayBTc1To6irGkScHKY7QH+JZC5rOU8KjWZikIl7JX5VfnP0X3hVfpxYfEhYjENbm2tk8uAKlAqxS3o4kCTZhoTheLVA0DknQk9Jck6HvqudlsliRTIFJVKk6NVCkKrkN5cgLpOGSzOepXLmMFEeF+nbA5ilAaP07bEYJ+2ONvOi/yZucqa9018laevJ1Ha039Bz9gsLY2kp1PU8a6kuVBgQsXfpXD9i5TDYk9iFEZhx/u/ohYxYRpSN7OY8jRvC2Bg/BVnp49hZYCmY68fKWZRcc3SVpH6TYbDPvdt6dl02TqV3/1fhro2toaf/VXf3U/9TYD9zX6ldbMz8xQOHkSARw9cYLiiROMXbjAkbk5lsbHWVlYYGx6+l1ppdm5OapPPYVdqZBbWmLuN3/zQSsRIejduvVAyiuMCFxueRmr8LYQYe/mTdLBACElruvSGwy4vLo6IqdpSprLgRD4Zohf9jl+9jglp3T/Xv19QicJ4f7+/QjpfShF9cknfymquZmFBZLhkKTTQcUxhudRefRRvKmpv/vkDyA+UGv2f2T4MJX37wkfxC/5qJ7UJLVNkALTj3AHAUaSYiQpdhAjlBod/wmI1Mfb+yrW4Doy9TGCdezeJVJ7AhntY3dfwwh3UFb1ARGkvwtmFP94XfwA5M4Outt+z2MiSYjPnn3v8yRMTipWVlKOHEl55wbkxITizJmYM2diHnkkZnEx/blElvL5PH/2ZyFXrzt0Zo5TGOzh9Fs0dlNUJoPzGx9DzcwQRQ5f+5qBbUscJyUMJTdvjnP37iRbWzMUizWeeSbi5MnkwU6E4PJVh6JxG8Xb99EkYG34DMH455k/PkFx8Qxjpx7j6IKglAajC5ZiFGkGJDaD6klkUkcGO8i0h7KqJJkVZHyISPqjlF7DJcmPyH3qTGD33gQVYQRbZN2Ug7pBfTDH5n6ZYStkNzI4OnWD2bFdvvfmp7m09gjtsEinn2Vr5yEKWjNXDjATjUwksWOh7qWDySTF6w0xwwQrTjj+9f8W3UvRuSpIEGisgyb5XMITZ/dpywi/b5EOhpyeusbF08+RPdnHSJcwRJVw6OOEMQUnxTo00MMsxsQuBbOAcqaR3S2M/X1EHKCbDuKgjDz8W0Suj5qY5qBwkv99/w1+OHyDa8Ff84fNl6k7IceM4/ird4nbgonMDR4+e5XxR16B6Q26WYNLDZtmlKL1OHmVY70pOd3OcbhT5ca+IiBBmiYyTmHKw3IVE+USmUyBnOljBvtIJIXlPbKFHAkCP8hRzoGTbyKMmNCsEKcnyG/bVM0ca/0mrjNOlTz5nkLIhII7i1tdJl9eodWv0OoIjKxAuCbS2qGSbTFUa8zUEkxhYg4XyEWLFJJZKpkmpi6TRBKZZhAyQqc26ZtT2K+9RGa/jrndY7AtoRdSLUs+8sUcp5/wWXmojn3Q5KAYstuDR3/lGo6rsOMBOfbJaUEuo1Cxh22ZjHlFcuaAoDakRUw3u41K6piiRxLZHJk1OFWrcH4uw9KJgKIjqGbyTNoJ8/k+Y3aWcs5hMnyEzH6VnOexcuISJU9xtd2gJ/YRQCMUCCOh4Gi+NG9jSY9yPmVhLCImIfQTbh9u8cP+NdaHb9EY3CRy9okRiFCwjWYyCqiX1ui6u1SXUs5PKWwpmM1qvGKC8BKUrwnCOn60wTBc42v7B7hWSjqUI29ZDbNlybrSNOMMzX4Bw9U4ZoWDlqadlFle9MlKxYm84NnzGcoZBZHJpS0bS+bJlk2qU30avYinn2mQKwUEEdh5m1RBHAqOHbcQvRW+9vw1Wn6M6STUWwl2bpfuMMA28gShQRAm5LMxBwcmf/JWxFt+QBSU6A5jGkFAqDSGFJzwYqzJCcgO0e4Aw5EsB3k+X6xx8+t10lBz8r8MmfynTfJjAfvPZ9l8tUn1oQpmJYNWYHgGeTnOx1caTFZt/vs/arG2phiL8lhCYiqBzkl8Q/HDK22G/ZD+nmLvQLDfUDy0nCW9WyPuZxBSoqKU2pkayhojLj1OdHuDS9d/QL7VY9w0MYXAMwWn8Pi4yHP0jEmv28SLNjj7EY87Lx7QD32UULiWR94yKJUiPFPR9RN0t4+otxlvaE51y8S9Htm+Yj4/T6XUI9YdpIrZ2gpxpIEVg0xHoumOFjxbqyHuCfWgRnRMKIUwTaxSicVnnmGxPIabxJSLRXJjY1j36gPjfp9wexszl8O0LFCK8PAQhMDK5zkYHPDSwavspC00miAJuNy4jGd4ZBsB/Vu33qXQKgwD4oTg2i22rryC3Y8wmn3sjUOupHeJnHuTnICsNVK2NY2AVLf49OJDIATKlChj5Out6LP23V0GvXDkX3rPumT6858n+45U0iNHjvAHf/AHJElCAPTTFFNrtBAEWvP0b/82fj7P6Y9/nJWLFwn29tj58z9n72/+hv6tWwT1OoM7d7BKJaxc7u053DDITE+TmZt7z5RTIQRxt0vc6Two4iMElQsX3kV2426XYG8PaZq4rks+k+GN69dJkgQpBEk+x1Zxi11zlxPnTuC7PpcOLlF2y5Tdnx6l1GlKGob3lYR/GXDGxkgGA6LDQ3SSoKIIYZqMP/PML81rVEhJZnqawokTFE+eJL+8jPUzCMQHHR/ENfs/FnxITP+e8EH/ksskxR3eIzQ/NvyUApkolBTon0jxdQ/+EqmGIJ1777VAgLf3R8h0iNARMm5gd19DSxfl1H6B0WjM6MEaWJQmVTHyzm0eMDrVGlUokLwP9TjD+MUsXA0jzze+EeN5GmVYNCeOszt3gYMjj3Aje56HP5JBCLhyJc/Wlo9tD0kSgxdfnAEEjhMRBJMsLZncumUwNZVSKDzIyDvhJKsbFQrWPqbwSbXFbvwIq52n+NRnFGamiDZH6UvOIHhQwOCe2rI2M0Sl08SlJzGiOkJFWIMbyLiNjJuY/hqxd+xtn1nDI8meQIYN7MM3ySYB2pvmm288jdQBRZosLH6L2bFN3li9QKs3w0A4JEhwbR4eP8rtDY/jiyGuC5FrYyYpShpoQ+B1h/fJs1zfwPrh18k4Q8zaPEmUIlFkMyllG9zZExw7dotzZ25xYmoLt79F4VgLCjYENl5P4/oDHDPBVCnCBadvkd/vozMCo9PG3L+DMCI0GfT6aYhMdHANUo/gyCP8j3deZqAihDCIQ0kYCdLGy5xpf5uHK4eMF7YoLa+jck3Wwja3hMC2UpYmI7Y6Lnf6WRqDLLpRZH5zgWRo0VMhvayLUamiXY+w6JEz85RTj9L0LJbYQIgWcaiYeERjWDauqQjDHLlsm1ibIDVJME7gT8DePmNZwc1+CyltTGVRHEpmXEmsQ+yJKuFul51be0SNLZKojVFIkK6NbQY41RfxdIF8uoxQ5r3IqIQkixzMoOUkcjCGDGqYIRjqLzB0g6hRo3PoI2IwhURUu2zfVahcSHxgomKJVVIU5jcIRIBLmYyV4iX7CGFhkVDO5yi4FbAt7gwOiKXALEYIT7DfNlEOuNLFMBTDjQLSAac0IOln8Fgh7DUwtEKTYpg2nb2jOGaJmVMv4uQiprMFso4isDYZJjGHPqxU4bcWTBzDwjAEc9UIjU17kEAr5XpTshYqxosS39e4QDmrabgJLS9loqxwXIEsFZmbsHBTm3ysGMtpummKZWo8R9FpSXp9iBPJ5W5KGgFSoNCU87BSW2Im/1GmMmeY8U5gxDWubM7SH8wxGDpMT3R4dMVgFo1tSgQmbmacS9sDml2BrEYobbDfSjl/IRwp5ToJ0vYQQhErwbHJOW5u1FnfgnwtIUpD0tRAD13MfAulNE4ux6G/xfau5E/ehHUnpplPGFYEDg5ebBHFEadmbZbGIubFAsuVkLLvMJd4/LNH5ln9wyaJr8n+luL/Ptjmj3/k80rT5tjcEdTtPjuvHpApV/D3SqShwDAtYn2HWkFxftnltVcM/mK1iSUF065NMmPz8naT6piD3rJQdZesV8XQk9y6PMZC9hSD+h5hp49KFdmT59BHvgRC4ux26H/zBzTMIZGp8QzJ4tDlmX4eDwNZShCuRbs9QEwETOZiwtYUJCnVsT1qk/tUigljxZh5o8XM/KPMlh5icXwJpTXtW7cI2y2igxZG2COI1qmOe6SG4LAeEsQafyjISpvPToxTsL1RhFSPnuOGZSEdZ6Q2apos/vN/Ti5XQIchTrX6djRUa8KDOmgILEk+m0ej76midnFqNW40rrIte7S7PbZubDFoD8iX8qx2VpndSbF4MJIXtVoM7t6lXkgxDBMMCYbBfnuLdkaNnsOmR8YazR9Kx0xkU56dP/H23CEFyjQwSh46/zEG67sjb89qlbnf+i1Kp069q095L1L6wgsvEIYhsda0k4RWHHPmySd56MwZHn/8cR5+6CH2v/Utulev4m9vI00T5fuk/T5urUZ/bY3c8vIv5GXpTk0R1utE7dHmtbpHEMd/5VceSPG1CgV6N27cJ6ZhFPHQygp31tdphCGbxSahF3L21FnOnT2HJS1MaXKzdZOHxx5+IHKqlaL1+us0XnqJ3vXr9G7dIvV93Hv+ou8HQggyMzPklpZGUePlZcrnz39oq/I+8EFfs3+Q8WGN6Yf4uWAF0f1603dBCqwwfreFjIowwr37ZOjHMAa3kKkPKgSyIEy0mcNp/S1pZhlt/HyeWoltYYbpu+tMlUZLSbCyjPfKS4g05Z2qRWIwIPrUp37Ry35f2Nq6v/54G1Kikfh9Qa8nKBY1zabEME6g1G02NyOESBFCkqY1oqgIRGQy8PLLNjMzwQP9nDsX02gs8eLqMUZZRgIp4ROfCMlk3j0AqTTvKbksBUaSkgDazBJnT5DpvDDaWECAViTOFEZ8gAwPUM44AKLRx/irBsrJIkk5XO/ziZkfoCdrVNQO/cNtdmWRnY1pFnt3OJGERFoxePjTaMfGNeGl1Rwf+0g46gawwgihTQRvu8oZl95EOBlII9y9V3FrC6OjbgFRmEYFQ5JbZxET1yjO7NLbc0htD3NgohqvEgXTeLmjeHYWhMJqDfDXI8TLKdGFY1iTPUyvjQ6riFYWLQPSxhVkSSKCAa80DugnIWbq0u1KELBsdKiogOdVylzfxzASlop9vATqvkRk84BBEElOzw5oNl3aMqEsM7h5m/7hIVU7hzSzDIcRhucxVTpKtTyFIMLLXEX5B5hmm4lzHk52gBYOQluMjYcksSYOLfTAp39Qo5QfYBdDktTkRGWMKCmgnTlK3QaeGmC4Wfo36ljZGlrnEKaFUgOCq2/hnnucNBchDB81nCQxA1SsUamBaSoMVYPUQYoOuiABBYcmMllCG7fpGm1EXiA6GkQCFjhel+C2Q6k0xJpMyBspK4UeV26N0Y083BmTiXyDYlXS6qQY5pA0sthP+piVMjc388wc28UsmAxlSrrTJ7fcQxzUkIZGKwMV2YT1GvZ4RBoahDEI00C0+zh1jTO1i2cmSJ0DrbmwsspZ02WvC89vRvixSdaxSENFPhOBliAUaaoIugVyvTK5ZIs4DEmlRIQKRxgU+pLAUBimwPNB56CczpPqlGF/lwF9olhimSmGAX4sCX2Nk9GEKZiWZj+TEsk8E1PLbMslssY0J9wq28Emg0GOSlBhf7jGZLVKo7PE8fkGzeoWMknQ6Rh/+kqdy7cSdrt95K6kVolwgxg7joiGgootsYI2O2YWX/lcSze5HlqE4xPcTlJc6eLKlNtb8NqVSY4eizl/ssyLX/d4NROSxApLGpi+plSSrB2JGbeLmDsJ+YkOn39SMjE+TrMwoJy3OVIr8cK/bhINFJlfz/EXjTtYRhZPdnAw+KHq88j5LPnXB1z/xjVO/9oEUdumdzfPnRemGDS6tFLNw4t9Ti9l+P7lNj/a7/LIx6aI+orsoSZoFclll0l7CQLo9Hs0t+sUK0u093fJnbjA7UtdisHLTD96Eem6TDYF460KURqTxCm2AYYNSioIUvAgsFIanSFHSzYImJzR1PIKf5BiK5BhiDQM8v3n6Zqfhuwo5VOlKZ1bq+Tn54l60zTCVQpRyEXlceZ0hnXDpOfkmW6moC3YTUeRUq1Hm7yWhTc7i12poMKQsNEgUyxiuB5oUEmCNCQqVWit6TcbhM06g9Xb5PJFCgsLGJbNoH3IrWiX51++RGO7gWVb1Ad1Os91MFYM7holpinzubGPUjDfXvSFBwcIy6JoF+knfUYVn3DcWWSzfZl4PEvReVvRtRfGfPnYT9S2AlorBne7dK9u3BfaMfN5nErlPSYbWFxc5Mtf/jLf+973GAwGZDIZfuM3foPf/d3fxb4X7exevz6KArZa9yOgwjRRUURYr2OPjbH63HPc9n2CIKBUKvH444+Te0cU9YFpzjCoPfssUbvNcGeHYH8fFUU0XnoJt1ajePr0/b6kZVF5/HGaL79MGkVoPdqY+pe/8ztkH3uM/+f6v6NUKD1AKgWCa81rnB1/d3ZW85VXGG5vY9g23OtjsL6OThKqjz/+U8f8i8BwXTKzs7+Utj7Eh/iHiA+J6Ye4D6H0Tw0Xip9gX0LF6PcwqjbiFlqYCBW+66iWFmbvMnHpsZ9zMIIg72KG8ShyCqSuReyOrGf8f/JPcL7zHYydHcQ9gaHgC19ATf50f9S/C1rD3bsGq6smpqk5dy6mXP7Z4kfZLCj13u8RgvuCRPPzKTdumEi5QqtljmTe09G9dl19//39/nun/QgxEnB64omYO3cMHEezvJw+EDQG0OK9eSlao4y325dJh6jyLDI6QOiY1K6N7Eu0wuq+Sjj+WUgS3D//c7BtEnUOK/M6Q2Fj+j66cUB/fJ7N9H9l5+bXOHX7KoljQNamVJngzMEaHf1d1lc+QRAb9walAIlUGpkq9DsGqktFVFTGMO5Ad4jevwHlGcTRp2DvCunUSRg66I0VtH2K8eNT+GPfRDe+g1QpnryOy210kAURoOoG4q9r9JOE6PI1zGsGxvpNjEcl2k/ByyCWzyMcgW5tcbnXwZM2h02JYYBEURUddGoQaE0uypCZDhE6AJkgTbCRpHpkI5F1EkzDBAUlM4uO97GcNiw+yZhlwcYGaXvA9Mky2Y9+lPL897HDBRCLGDuvAALdt5HlOiodwyBl+3mf/df3iLoepvEj0iM5pi4ssHdtjaqTZSsRzMoSekyQ7ATYpoFqRZh5B1MmhHYWnabEIei3Xqd1tEKnV6a00MWTJiLNYEoDgUYoG6XayMQCpwmJhdYmQpmkcZY07GFUBfQBI4HUwDQjbKkQBcmgnyFta4wWLHkt9voeXO3Qn04pn4oYnxO0tzSpPiCVkqEq0T1SptOtUDB9MvEW7X6Rtf8rw+mqRGif9t1xnMoYY+fq2P0MjmWigwhXDuncPMJwa5WZlRZ60ELSQE+uY2gwVYHFcofxXMq3b3lYjsQyUmwBhhGQKEV4aNPpFyg7Fm5UwvOHNDcijGqI7VtUcpJUJMwnRW73K4xnQ/xLHexqFXfOZeAPcT0TKSKE0JTLFp5I2N5W6FSQcVPmswZL+TKuCYkKebm/SomYcXOF7bUbpKrD5sEuh4MWnyldQO/PUohsmsl1/vpyyMYdh7Is0MnvEUaa3sFgREgOBeWSIJcxicIQfRBjrZToZYa81qiyPbzJ+eI8qYQeUPf6iKbN9asu1XicTV/jFDSuhlBqVCqYzLgYY2M0jC7Hi4Kc5zI/pTEyq6w8PIWUCs/RXPgvcgwO2nx17y613JCd3uj5FdJj3LN4IQz4nUfnmThWRFghWlmIbIF+vQcCpmuKCcOh7kqKHysS/kqOP/z9A/q7AU6xwFi1zMBLEXGMhSYcDIjSBIkkma/yhr7LsD0k/cFzOMY1ns6dpenGiFRjCE0kFLGhMW1AidEqJ1FEVc1B1mCp6CJ0SiXbQUmHjGPhulkIIpxiCUjQhy8R58dQaUpQr5MEPoPGIbKQhxuSTmQgNHQK4GYNCjJme9rgic4YdikkCAIQArtcxh0fxxm/t8kHoBSRZ2NYJr3bt+9FJA0M26a7tUWvfYiZzxOR0Gzs0zncJzc/j31smhevX6G918bNuDSCBn3dp1/p4+/7zK6USJq7/Nv6/8uXq5/hmDMStFNhiD02xvFKjVf2XyHWMZa0mLSrnFCz3LQi/MQfzQlC8utHf4OjhceAv2RkqWIBIcH+Hlvfr+Jvb5D++PoqFfa+8x1mv/jF+ymryWDA5s2b3Ll6lePHj3P8+PH7z/g4jnn55Zd5+umnAfB3djAcZ+RR+k4fTtMkardZCwJe39ykduoUUkp6vR6rq6v82q/9GhMTE+85V8LIqzVwBf2tDXR/OOoDGGxsMNzaYuozn7lPTrNzc3gTE7jdLtHdu2Tu/Q/gZt33jHTahk037L7rtTSKGG5uvh0BvwfDthlublI6d25EWP8Bodfr8dxzz3FwcICUksXFRR577DHMXyBC/SE+xC8bH377PsR9pJaBDOMHyanWDyj1aiMD7xn9TAGNsn9iF1WYCPVgJPBnQggS1yZx3+Nh7nmEn//8aGc6jTCiTWTaRCdFtPmL10QkCXz96x6Hh4JsFtIUbtwwuXAh5rHH4p963vT0iJz+JJSCWi3lx+U+R46k5HKaOBa4rqbbHZGfMIQTJ94WO3Jd9WBj70A+rzl79j3qUN+B2LWwh9EoRfYdEBridxBZoUIQJsr5CWEDIe9/VuatW4gkQds2WueIBk9y2HcpWofEdwQ7jU8RyyKn1RNsV3zsTMr4hIUhDJJUUa3f5Hb1MY4+1sWybiBEQCv0eenggC6TnLDmWCkdRQpJ8vgTWN/+NjquIoxDIITWHeifIM0X0WN5oqWzINxROhrg9WdxqibCyiAbIxVfVAcRD4necmhsBFiWhTZN/KkpkkNN5bLA/uxFxPQy2pCgaojsNit5eGnrLcQ9ewWJIkUgEXgY6ESAkiSpiUWKKRXzhsGuhqGOSKSFSgVLxhgXK8dI199AP1HF2Yvwbt5AiZR8tkjt4AD7L7+K/M82kF4Euk8y2cU8bCFSA32QQYsJVl8NOXith2nM4HghCEHzrk8UbDD1bEDyUo3Ud4gHh8QmyLMrWNdv42AQBT1KkxPcWs9gOqMU0NZ+n+/fTNnuj/GR32sSxBkCf4AmoZA3yaopDCy0DgFzJNMtNFrnAAutIR4Y6JLASsEwUwxTEAibdM5FXRLofkKStRCmZja3R6BsBt0ivV5IoTKgeiRDGsZcCmq8krnAVu8SRb/HVHca1ZshaLeZXs4yvGLQ3eqBmSf2a6TJHvpsG6/kkktd2qvLxF0Tb2YHJ7qCo+uIPoj9cVwjIp0JQE+RI2bQmabrrJF3bDodi1KpQ8WqkOYDdKSpN3yKYcLtvs36oUdxT2NmTNyaixu4/EBIai2TYMOiMNPDEBbT8RjDfgH3yX1wBf8fe28WJFd23vn9zjl3zT0rK2tfsG+NpfcmehXZJFtkS+JmUUOPpPDY43nxhP2ieRjHRDg8b/PgCIdjHKMYR1ihmJFsiiOLEilSTbLJ3hc0G2h0o7GjqoDa99zvfo4fEo0GCDSXIUVSNn5PiMyqmzczC/fc73z/7/93taSec4gSjX2szX99TfHVhmKHqiMiUDZIliiKQ5xpdvmKXyYo1Li8dJXHVY0/WVlj+4EqLw8f4NnuIOFrPeYWHLSV0Y0i9uzK02iExGsJDRMypqpM7+zR6WWkGRzMOZwfiJlpeiRejq3wGs1cj7KbQxuDFhAPGMb9Os35ecoljZQK4WgGOw4l20ZtCWxL4R/bwyPeJfbuqOI6bQpJAxkt41cryCRmZF+PxcGMxmyDYs5QDgSR1IRkdPUWOinSnsyzY9Ql1i1kmKexsoFdrSKSdaQHIlNMYvHU7zzA2Kfv559/XvD5p/8jr166xGSQ8mQxR+JFzOltLNElrI4TTZSJUSx0LpDoBJUa1t57gf+n8k2+Us2hm12kI+mFmkxqtA0VLa9LV6E1nLJ3fIjW4BDRdAkqDfyWxjMaMo3lOWRRgLJd8nlJa2GBxcYSa40r+JU8FZ3RPHcGP8roWqAl9HxBImMIEya2B6h6FeSEjckyhJRYvk8WBKTtNsp18aemcGo11k+dJNvaoDQ+jun00FlKHHTZWLyKd3PBJQSZgMbCPIfGvkJnsYPt2hgMzahJN9clE1m/UAozSvkcdLu82DvJlD2EnYBV8iiMB0hrlo+N7udaq00rbqEywz974L+jNDzOO+98B2U53PfwZylXh9EaguAPsO13EKKB1kPMffss7QuzCNu+Uax9IJnt3Xcf/ugo66+8QrSxwZWLFxlqtdDNJsH09A1lk23bXL169UZh+sG9hnQcdHLrOptkGSfPn6c6PY28XvQqpcjlcrzwwgv83u/93m1rnzaaVxZfYaExh7W8jbq8SLU4zD5nH1LIvlQ4TWm+/z7Vm9z7peMwePQo8eDgLccru2XiLL7tCRvadAAAIABJREFUdXppj13lXbc8lnY66Cy7g5i63xVPOx3UR3SXfxW0222++tWvYts2Sim01pw9e5alpSW++MUv/tzS47vc5T+Xu4XpXW6QuA52mAA/0jnV/dnAWxCCuPQA7vYrGOvDyswIB2OXrstDb/rxrEua388vGhlexd/6AZgUIxQ0Xyf1dxHXPvkzDYueOOHQaIgbRaZSUCjAD3/osGdP+pGdUyHgN38z5Bvf8DBG4LqGIBD4ft/19+af+8IXAr73PZdORzA7qygWYe/elKGhfjHa7cIjj3x0EfzTkroOMtNYUYqgb7xitU4iut+mmq1ilEdcepDMnUQly7e7KOsE7fd3+GWjgbnFpt7GCoe5cCKPLTKyQzHEC+QvnGKguhtVzvFBT9ZIQSQ8dvfe5ODeCCFcfrgxzyvLF/CKMcK6wPfWdvLW1mm+MvZZPGOhP/951De+il7vYdCIIMbs90kfOQxkyKyDdq/Lx7VBywLJzF7s/PuQU5AmiJUQ836Rrp1HlRQiiRFaYzWbmIEBepVJnMJTmI0Aky8g0gw9NMST+VW+znvEIiFFsZgMMW6vkqiMg2lfHkyjn9unjaCUWfREi0m7jlFVgrTE8d1H6aQZu8o+HD9Ab3aF8pk3sIqaSsFgWU3Sboj9tIeam6c37GDnZpBuTDokyUIXr1glWN/L2ptvYNkuyHUweTCGxOsxu77IoHiEoX1PUI8cjCV4/8rbXL12kc0woICi2rHobI1xbaGDN5yw3XSJMrgWdvjDz1wl3LyPEW8ET2oy02Nl4RqTNfB9SZJ1sTEkIkFnGVm6C7v7Nt3NhDVlSGKbIdujWJCIio9MwVFV8qU2UUcTdCQ6Cag7Mfge0krZXkooVsogdmByhpebi/z15t9gS4uCaWA3F/hYbS/KpBzpSnTSxZuYJGmnkGmC1RGufVdQLJeZGC5S3n+JankN22/hOk3UWIRYHYXMRg50EL2E2M5od4d5aGQCt+qTs5ex9AoDXg7bWIS5HO3eFtN7M9KLHj/8Xp513SQbTliuFJiOXPYmNfyepr0dE0ob1dPs8AcRYQs37GEu7cHUYHW2inLy5HcOUI2fo1VrMWWluOsWxvZQQuFpMGaLli6iLcGhoWHGclcJ2x0GKtuctE6xvAXr3Z1c7j3M8tJLeLYPQtKZ9RgfjSnudJjPwK02KCZFRsZj5q8YTNLlzMU6YVJlZN8QF+dnea89w1POMYqyDNpnYKxIacTQ/NoJ7IpEiIyd23ksaSjZEuUHlNvrrK3bmAl47DeGCa9Y6KRI1NtEiCu4+R6JKIF0EELS3E7RSAa0YUkJ1tIZtttjXB4co2lyqKzH3OZLBMsxj9THGH5gAMu3McbglIsYLECysbHI/mP7GIxjOlLw52++Rm0yx+hggQMVj1W5xez2CSr+SD8mRdoooRmyyixnPc4+M8yhv5xFxhm+b4MKSXIZlWMBW1mV7qBFpVJhdLLIlfV9dD5W4PTsBQKzhVEZu7XDPTqHiFKyqMH21ijvRG/TkDGJEyCLkiVbU19JsR0HN2fRzQIQGiUkVs7lyOBRSjt2IqTEHxuje/UqYbtBN+0hOinDBx6htPcAQimChQWU57EdtJGWxFiSoBkgff+GqY1Qqj+rmmV4ExPoNGVPcQ/vbb6HFJLMZEQqAgMlr0SWapKdA9BwyCLDJbnK44fHKT0rWXpuCalcfLXC3sEycXQEnWmcZkx35occ8MchMTS/+yL64EGqR45gjE8cH+9fy42hM/Od2wyHhGWRBQHdq1fpzs6StFpYuRzGtsF1kXGMf+0awUfErOQmJ2mcPo0/Okr7pgxNkySsOQ7amBvd5pvZ3t4mCAJ8/9bN8TeuvUyhG3K/NY0jS5gdoyy1Vji/dZ5Dtf4crLQswvX1H7eE3uCh4Yf4ztXv3DCGAkiyhLpfZ7x4a26oct2PLOaEELd1Un9VhKurNM6c4flXXyXodmFoCDk0hBAC13XZ3Nxkdnb2RlTPXe7yy+au+dFPich6yHitr/dUd77A/IMfpBaC1FGoVCN0P7tLS0lUcDF3kHZodwhjlZHxGiLrgrCJS/chjL5uhHT9Ip2FaG+MpPwLzsLKAvy1v+p/H9LuZ3JKB5VsAQbtjf3Uh3rpJZc7OMxjWRAEgp07s9ufpP+da93i6NEEzzNYluHYsYSnnor5UdWObcP+/Rn33ptw+HBCmgosC+JYoHV/jvTo0R/fDf1pyWyr735rSdT217Faf9XPAZAOCIkKZsDE/c/tZsdkoxEmJRx8BqSNEQLr7FlufjO75l/hYmuUtvGpT25QzC1RWFllX2GVqUdqdLqKKBKAoDYQ8/CnN7BGR+jGCX89/xaFggAnRcoeyGFMN6UVbrMnPw2Dg+iDFYznoN2M+Jn7SB8/iBIFICH1d/TP1xhEHKPfPM3We6f59lcP8MpL93L+7SmGRIncaIXE2omcfgh3dIyk1UAEAdmePeTvfRhba4Rlg+Ogx0bJdj6E8A4x7O7iP1y9CrJNVW1hdMhRx/CsmyKkwRiFTFJUTVNRRTZyRRIRY9sBl5bH2PZsHj88RCVrIDCMbb5NZTEgV7CwFEgRYu3bxB0QZGsauXsR6SZgFNIyZIlFGnURXGXx+3mk5YK2SWSLl/Nb/NBrcUlJ3u3lWdEhh2r7OTlzgr9e/z7n81vMFFqssYVHh1q0iJISy4mYnJyhPH2Fz34uZHKyTlLYxGifTLvoSODKMp5MicI8Ip+nIxbZ6Gk6SZnc4hyvvXGR7xR6nDUxs2nEe8JmZW6MHY4hv8MhX3TQ2wkdIEqLuEmedjMBq0et0MSVKbbdhWyVv9te4rvdmJ4qoaUEVcAWCbNb1/h9XWWikxDJEC+3TWEkJr/bR5g8yqvilpsUqhfJCiuEjQBHLqNTsEUOWQ8xUR4KMQKBMkO42eOM5EOKJU3BkRTZQDYsTFfQC7tst1OiSHHxrM21a+OoaZ/J6jg7OpC3c6yqGLUluCcbZTDNI9c9BD62Y+F6NqYzTGo/jajuJSsX8IuKujY0GvOcW80Y1AUKuRK2DdI4CFIyUeB4dRynGmP0Botrr7H7UJe9Bzc4aG3h51bZPtvhpWvr2K6Dsm1i20b3JDk7RediDh5ISFqGV/42YeZcxvqVHGeHdlIXJYZUifZERtlUGbEqaDtiZGeZysECo5sh447C7fZIM0PVtSgXFUZD1pPEVsb+MOUTj9UZ3OtjV32C5TZJs4luA42MxvkKJXeKt2YMMb1+vJgxrIWSyy3DGi3aU7Oci8/xTjCDlWZEFGmXBEd3VVC5PJbfv4lP2jGlvTXmrq3S7tXJaw9PhjCh2F7psrjQ5NDkAPWcR0DMfLCC5eWwsdhhBmhOF1hPtvAKCYe/mGfswAZD92xgPxJy/lCPB56Ae44H+Ll9PPn47/HGwgBLHYsz22e5JhKGRUCWJCyKmKsyZr+VR2p4d15htnuIkUEKuRLSdsjiCLaauMpDGoGTz1MYHKHsVnCETdHOU965G+U4WMUic8E8W2ED7UhiV3JpCuIDE0yIATo3F2HXh16yMCTZ3qZ44MANsx+rWKSwu3/M0oEDrK9sUFEVEp2wGW4SeREVp4LUkupwFS/vETkwNXkPU7v3cO/heZRXxRsuEK72SDuaLOmwEWxzYTlh7dIlnHyeXC6HEALpOIRLS/hjY7e6+wrB2gsvIJRCJwnB4mJf4tztIh0Hr14naTZR1zcxpZSsrKxg2TYyDEmqVVCKNE2ZmJhg5/VC1alUCNfWyOIYK5cjabXIul2U55EOD9MoFnHvIEmK45h7770X+6ZZligNaa7MYEkbjcE0O5gso+KX2Y62qdgfxrwIpSju3n3LMe90/1b1qtS8GivdFTpJp5+zXZrm0zs+jfqRDV3pOIQrKzfMlm4sqVmGU6lQ2rfvzov1L5He4iIbr7yCEIJTly8jgKTR6GehVipAv6sdBAF79uz51Z7sL4F/8Pfs/4C5a37082Ay3I3vYQVz9OfjBJlTJ6x/9iOkrP+wMUoRlnIfOvr8hK5jmt9Lmt97y2NJvIG7/Toy3cIIi7R4lKT84C/8XO32e/1i9Ecw0sXqXiAp327g8FFcj5m7DaUgTX9y59Wy4PDhn66odJy+fHffvh7Ly5I4FoyPZ7cVsj8LIgsQWQetCh/+XUpBpjKcxvdB/Yhzn8rhdC/QHP6XOO3TqHQbEGR2jWjo4zeOocfqmKqPCNL+m0wS3KDJH+z6Opv7fdZVHVvCTvM+9nZCFI9w9OiH7suiE5A9pdHOCm8tXMEud9HXbw6MsbF1C9xhZrJ1Yr/v7qx0BfXYUVJrN1p1gC6pkUgGEMKHTPcz8Z7/O058v8m3r32ZwcoqbhbREvv4V299mXsnVrl/NGXn8BamVCSnFMHbbyLjGFEqkU5NYybG4OZsWOVydPwR/mi2zHb8XdomgoXdHBw5gaq8QSkXEgWKpJGjM3eM4SMpj8iQuaDG2Xab6eGI39pzD0XXpxenMP8uMojRxiPG8F2/x4Kdcc9UTC6NmbYLjDslMhOjRQtjJMpLSbYtnPIGQo5c/5wsXrMS1jONK8dx0pCCyrEp2nx960Ve23iezDHYKEq5iKLT5e12DxHkGXZ8yCw2VybZ9Y83sPQIW0R4ESxymZyTp9ccwm0UaCbvMH6oyqo4THNzjFF3E3frHFcXfsj3qim5xMK6liNRBbSGCwMJU2uTfOZIlTjJk+l10qUZPKORVkJrvcCOsVWihsAdSmlrzcleTJqFFKxRMgSe1WEkb3AklDxF18lRnMwRvJdiuf0MyMyxqRxJCOctgvUWevccopdgAcoSYATBtiTHMMaaREQraJPHJOPIwjpoC4yFZBPRTTHaQ4iUuUsumbYRqeGeQ3nOORPknR62sun1MtzEwlE2PTo0ZECua7BzeXRcJ94qoHIeyuoyPpAjUAlJsU4vGybprFBtV8maXRIVYZVAiARhBBqXMatGrmyT0CCJTjBwsAWexGwLdDlk+eQEuWKbg8N11jspiUmJdcSWEGydSxgZhYWX60zEislMs5H0uDJaYyPaZjArsJoskfkxH99zLwcHDiJKOQyapc4Knu4Qe3lOz/VIwwwzaagrG2KFsWFXvcRuy6fxjs8iG4x/soI/1J+hJsowa2VyuWGy7Yh/+thu/rcfBHTZxrMFs90Ey4edj4JrQ9qVWMZwMUg5lBm2xj0CIbh51TTaoNOMkZECtVqLw19RXL6wRak3wuMP7aDTCvj2t87xwnuLfObxMVpuB8fJM6rqtCZzeJ5PIUv5+P4NlCxjH3GwvTzD0vBMCvcN3Y+0BMNjFVqt/5Jnd2Q8N/ccs81ZLDHOtUaLUnsdy4FtW/G+zjPS3EfmbTNw3xHC0SpaQr4XEK9vs311jUI3wkJiSh5kGpREpBn5vXvQcYx0HFa6K2zlNc6+CeIkIxkqYh2a4FzjHDv88RvS1FvWhUqlL//1PJzr8THGGKLNTXQU0Zmd5aEHHuDrf/M37B/Yj61sTsQn+s69tqA0UOp3orFhs8Vg533WGgnVezz8ep6Jz+wmCiLePnmSTPeIz2pSYzhz5gyjIyPsuz4Lqnyf1sWLDD7yyIffU5bhVKt0Z2cJlpb6eddKkQUB8eYm5WPHbvGhqNVqVCoVms0mLiCShJh+wXr8+PEP1wcpGXrqKbrz83RnZ/GnpvCGhyns2IG2LM7+6Z/ecb2rVqu3dUvTThujNR9IdrJKDrm4RWJDvVCnm/aoKIcsiih9RAf3Tuws72RneSfaaKS4swfEBww+/jhrL7xA0mohpMRojV0qMfj44z/16/190jh9GnXdxVdKidYaYdtEm5v44+NI20ZrfUvBf5e7/LK5W5j+BJytF1HRwi1yVZl18Na/QTjy5V/hmf0983PMFxhnkHD4t3+BJ3NnZNIEcecLqNDRHR//KGq1jM1NdVtx2u3Cnj2/mC5m/3iCU6dsgkCwe3fKzp3Zhx91GGK/+y5yextdr5McPsxPrFZ1grvxHaxwAdAgFKk3TVR7GqSF6C2RxhE4Hj8yJowhQybbhKO/CzoGrkf+ACLt4G5+FxWvYx6OsS4ukC2VoF3AmBR5b0at4pGLI96c28vJ+CAHl19hWF1Gtfo71X4+j3n6aezcaQwJgQhuWdiFSCFxwRhSk92Yic3y+xHmLCoOMKYNCBLHJxx8AImLEQJ17ixyfZPnzu3GUhbd7TFW3AoLnWkcI3jxyl46cpt3WjG/vfcN9J69BJurJDt3Yg3WqIz/SFEKoDWp6/LJBy9w+cpeLlywaGSS9WAX+YKg6Dbp5Sp4rkOcGPR2BjphtPoYo16IPXCC5PrX5Y/VMfMd4sIwSjb5i3ybUIIvLDyRYkzA4mBK0eQoUKDvKKQhFQgtQKbo4ZTG4gaJZZjPNSkah8wkKMfGrVYxSZcTnddpmCYVUUAYTcXvoLUi7zicFQFDqxpdGmXf7lU2Vg6TG3QJtj3evjxNr5fD90L277lEMbfG/l0tckMbvCtWyLltNrbaDFzZ4GQ7xgQuuplglSNc6WNCl4JT4H0Pnuk9jOWvILIlcpYmTC3ml+pMVmZItYCexM6HvB32HS9XjeIhJ2ReBtgqJjUOu4XCWB7ByBzFwVHWLziAC5aFbDTJyhNYUy2yTozck0PMBUipMKQIo0nCkHORoNFJ2NE5xMjIDMYuI8UWRkiQGhl3MFkVdAhoDBKEwlUZHQnnoovoSCOEoDJU5lG7TrK+jpGCDdnj4Fi/cyWMIcoSXO3j5CfJzC567W0i20dJi42whEDzmHJ4t9sh7nbIF3yirEOREX5ndw1dew6sd/BzCzjSMBNKjJcy7A9yNV4n8+GT9w7yl2+tknYFYZoS6k3qYw73H6hxb69Mu73Glgq5OKL5xliLI2YHURKRzi1SU4pDkz568TLS8/EO7uZT45/gz/78BN94+4dAykCkWXk/Zt6L+ez+GpNVh5JTwOgMJRStmSdwTy/ilpu4Xonexn7cpIGQIN2EirvO//ylY7xw+RKzzUXWRhzGxuBMmJEZTeZmWLpE6hcJA40VhbTTnfhOA67nMVu+hZ2PGCs1OXBgm3dObfLW/CbrLFJihJozxJf+0SG251f5v567TL5q8/Qnh0nvnyLJSRxjeHQ6IYoUFasHqSbppaQyYWe9iPB6hGmJf//2G3zz4n9BlPXfW506yVJCJXXoNQaxsoQ01YSO5LeQ5B64h6abYpIAY1vgKRitkt+7k+Sdq6S+hUozrPUWWd5FDpbZ84Uvs/Kd72CyjOXeMo5y4LpDerynv8lUsAq837nIg7Uaabt9W9Zm6dAhdJoiLAuTZTTOnMGkKeWjR2meOQNC8MwTT/D2uXOM9EbYFe3icv4yQ5NDhDqkYDxG1wRFFTI44NNd6NK6fJGh4+MUd1a4MjsDwuA48kYh6XkeyysrjI2PUygU+lmxN817Ns+do33xIlkY9h1mjemb+GQZ0rJQxSKd8+cpHTx407VdcOTIEZaWllhbWMAuFpmemuLBBx/EdX9kzEdKCtPTKN+nfeEC0eoqaE1p3z4efvhhXn/9dfL5/HXDwIwwDPnc5z5321JYkA6pMDduak3RRxd8ZCfAUTYuLmkQ9LuX+3/2saKfVJRCX847+swzRFtbJI0GdqXyka7Fv2yyOCbt9bCuF/RT9ToXFxZwbBshJfH2Nt7QEL1ej2MfkQV/l7v8MrhbmP44dIIVzPSdSm9GKFS8hYw30U7tV3Nu/x9GRstYvTm0VSLN77tRLH2AaDZxX3gBa/sMVu4yplAj2bcPbsrz0j+jAdJjj8X8xV/k8DxzoziNIhgcNOzYcWcZ78/KmTMWL7/s4vsGy4LZWUWlYvjCFwLctUX8v/3bvmTacVDz89inThF84QuYH7OwuRt/h4o3bp3z7S6yOv8i33n/t0g7w3xxzCYyFp5nGBvL+ECVLTAY57rZw3U5rzGGbtykuvqfkMq5bnKVIz1Sgf0tovKn8J6LsL3LtHoe//HNjyMxOFbGywOP4m102BOm7JzusFqrYfV6jCc7se1ZDg6McH5zlbztIjKJCgf60kuTMmKXkEmGthUISVo8jDb7iL0eRhUQ28t41/4K6cQgbMTyJpdWFJ00T0lFIIpcWN9FoeZDkhJlCiMsojTj9Wu7+fieGcLDR+hUK7jTk/2MGq0/bJNfj3eIKpvkg1kOHBgmy6q025Ky0thKEZhBQlPFp0F240/iepcgc4g2P4eQQwhrE9UdR/oJqvQys3tSmptdyrYLImN7Q1AdhMiq0ci2KXk5TC+HCLcQayAC0KEmPWyTrmXMryqWtUU7VXh5i+knHsItaqL1eRq6h1Gg0wRPxMgsJpMu0pV0yhL0IEJb5HMdrlrQWt3HiVM7yOUihDQEoceLrz/Opx+/gsivIJQkScFLO3j5HvGCS6NtcOlgeX3FCCpAFGIwLpHng1/GsJPl9R49a5LGWgt6M4gSaEvhllKW2jZxMcOSilRkuCLDtUKMUXSSGC1sAhFxaExg1RdJjxdYedsmjaHd9ehd0yjHZmjSIbWLtKYUVjPGpAV6XouvNzOyjU3cqMCryVUOxQ6fPCgxWY9LSzOsvN9j/ZLh2I4W0zmNbyXsdRQrHcWadJhbAUtYGGFI4xSn5jJXs3nk2KchShg918Re0YRr6xirv4GV2A5jO3eRdTrYYYLOUtpxl16rRtCRjPkw1dbEUtLOd5kc2c2O8QiR/R0m38GEPk5+DOO2ccM2flxHa4ld9gjmAyoFyZOHpglCQ5hqFpil7mq6j+5mM0s4f20ZP1+glxSQ7SanxCzH14apbwn25CYpqQIZCYP2IPr8Ns3ePH91+hxVp4CRKUrGlGVK0I1552qLQ/unEFqiA0V+t4/OSjTfGMIfe5ZNc5Kh0ReR1R6eWEEbweJaysbMHK0Fi2tXDjLw6AKurUlaIVkiCVo2vl2n60ScLKyQduYIlxKeqe3gUFGTBQG1h8aBkPPnK3zzm3OcP79E1Ye4ZuiKFZbmtrhnsMTggMPvf3mEv7vS42vfPMdTvQL3ffIgOtE86OXJRERm90jRKJkykXOYADLd4r/91gXe32jgSQ+wWOgucKF3gZ1qJwUPlGOTCBeRpTQTQ+HQbuYHesjMI9Wqrx4SgjTtwsE68yuzGBlRCGN85eDbPsf/+/8R5XmMPPMM2ydPYtb6s6FZOUe0fxSc/kVXCEGqU+qPPcb6yy8Tb23148W0xqlWGfnN30THMa2zZ9l66y28oSG8kZFbcjzlzAxf+tKXMMYgpeRa6xrPzz9PL+nB7DITXoX7vf1ovYFtbSLzDhtvLZGfLNFsNlFKEgQ5tO+jer2+u67jsLi4yP79+8nC8EaR2b5yhdbZsyjPwxsaQlpWP1JOCFSpBFpjV6tkYYj0PHSSIK9324QQjNbr7Dh8GLl/P7Ozs8zOzrJnz57bXF+3T5+mffEiyvcRQtC5dInOlSsc/vSnGRoa4uTJk7fExdxJBqgcn5pTpZW2b8hs04kBaPewGyEFd4jc1BT5qalbpLZ/H7gDA782BekHiOvZsh9wdM8eVra3abTbuFJipKTT6XDs2DEGf8QE6i53+WVytzD9MQgdIEx6h1AU+s6l8SbcLUx/cegUb+0bqLhv0CN0gtt8naD2abQ/1f+ZIMD/2tf6s4HWJNjLiKCH8/bbxI880u8wpl3i+lM/00tXKoYvf7nHa685bGwolIKDB1Mefjj+eZrHNwgCwSuvuBSLH/415XL9DuorL9s8u/A85uagbM8DY/C++12CO7gPQr+rqaJFUB9muq2vS86fL3BtMeKlsxIhx3nQm2JiaIM0VVybV/0urdFoe4As/+Gczfmt87y18hbF4Ao706t47gCHaodw1fUdbqeEHb1LenQX9ukLfO/cMRyVIgUkYUDkeCT1Ab7dO8rn95+j6EdEa2tsnbuH+uEmUl5ks9fmcrTKPc5+EGNoKYmTLr9T/xRWnJAIMJaCzJAUisizV8n/yb/GXrkAQqEHy0R/8CTS2yA/0ANzmECmnECw5W5QV4N9KVeWooTCdyTL7UF0cR09MczQ4cOsduq8eVqz11nG3r5EoQjVvTXk3rfwvAjprqNYYmq6yOl3HqCbDTIcnMJYFhvePtCjlJ13wICxiogsxjKTpIUHMR0HO4gQBrLcEWT4HnMHAvKLGXqtRxxoFudsnN01evEY+UbMxKBBpQFZAFmsMH5C8I7N6Ldn+Fb9X6DqK2T+DwhUmaD2MZqXHB6//xp2waMcejSCTeRWDG6KESFCakTegBIsDYxSaCwRNFo4w11eOz/CYN0jiSKMkUgHapWM107v4plHT6JtF0/4iGSBFBt/X5ddszFLTYOVgpISjAYUOr/O2O4Ia/rfYZSHnzkEWQ5rYgqruojJe1h2QIJNgEMqErI0pYrFxUQj7OtdSwNpJBnpGXZ0y2yIfRSKE9gfs7g032F1/SrNao98cZI3zs/hnVpn73jIhO3jCMGLW1CxbHw7h4oK2M4AVxrjBKcHiRdmaOsScTzKRPAuNDLmeynjQwV8K08pbZD1AnqvjjFeFVwp9iiUCpSqJTppl00ZohzD8cn9tGfeJux1QEpEFCKnd9JaXUUJgzvYoZtfIYcijdd49d1xrrUEzzy0xbHiFju6xykfyCOqi5AMgL2BbpTRooAoegy7DtubOZIOqHoJoSK0NhRdi3E5RGpLkp5mYv9Onhqp8/Vrf0Zut2FBRETtjMHQI84kA6sRR8MJ0rxNr9fGtvuKBIzhz7/2NYr5ArZlEXTWCKSgmCl82+daLwRpkzQzVE7S29iiefUi+cFhqgc0heFrJGEVf2wJ4aS89q2A9qakqwuc2ozpBfOc+AuL/feNEoplAmHQqUU7v8ayDKh5ZQoyRydo8Werp/mN5GF+57H/BjE0yde+9kfMz7e4fHkd3xHMLMQgNMmoITcE11pdBvKKVprnX44+xOLvTvGtr7/Cv/9XX+MzX76f8fsS7LSM0mXqtQyNHJ/xAAAgAElEQVS33EGgSQPD9y+vcHm7Q952yLL+7Y5v+TR1k3W5zrCZQlU7qJYiVjAR51myZqk1B0hSQ5K3Sa2YkcENlJVgSZ891YD3Vspc7FUxtuJT3oPkgv51Xbkug8ePU5qM+3JheestVpiGHKodQjoOw08/TdxsEjcaOJXKDfmuchwqx47Ru3btljnPD8jCkGhjA++6KdBUaYp/cs8/QacpC5e/fqMjpnUdba4hRIzRhu58C9DYdsbFi7uIhmxyV67ccMw1xqDTFCufJ79jBwDtCxduMe1R1zuqaadD1umg8nmSZhOTpngjI6A1weLiDVdid2SEN9bXWTh9Gs/zSJKEV199lU996lNMTfXX9LTbpX3xItZN6590HIzWbL39NqOPP86zzz57xzXwZlLX5kDtAO9tnqEVt5EINIZKucLOQ8ew8j/dZvXq6ipvvvQS21evUs7leOwzn6H+M0h/f12RloXzQadeSiyl+M2HH2Z+bY2Z+XmG77mHe++7725RepdfOXfNj34sCrtz5zlGoSPi8kO3zJn+WgxSmwyr/R5O4w2s7nnAoO3azyXN/WXhbL2Iipf7n6mQNwyN7N4FksIREArnjTeQjUZ/3hFBlg4hrBZC9hBxl6w2Qlx9Ep3b8TO/vufB3r0Zx44lHD2aMDmZ3XHu9GZ+2u/85Emb7W15m8GSUtC42uWh7A34EYkTQiDabdIDB+4o6ZXxOnb3wg0H5DiBd07ZuC68fW6cOKshlM2ZtYc5NvQDin6LNFO4VhfHtWjv+BfQMTivv861d1/g+6uvYBcrTJpVXAGJSVnurjBeGLux0yp0SDzxcZS9xAsn9uLIpD+XbFuYXI6B1gqPdr/F2OqrDJkzeINNom7AD5Iqr716itp8l1ynxnosGB5a5v6pFp+eLlLNtTFZHZk6GKXIHEW2skTp3/wbVLYOtgJLIqMOzkunyB4dpJIu8cqZ/bxf3iKMa2Sphy0U0skR2YZ99yi8UoWsVOWhL03g7tvDqffLvPSSh154l5Wzp8jSV4i3vke89Z+Qvfco1nuk7i5UZwvX1xQWTzH65ikKa6sUFpcpPr/CVn6K8rFJfCcgLj+EcB5E5w6CsjFac2nrEm9vv0sntoj1JnHa5JoMaOQFK1VolYaYa30SyxIksWA0cbDai8RLAmJB+7xN+/k8Z1eOsLVZY0BKQiuhlTpkysbxi0RJj9qoZmA5obvVomdlmAxKxRStDb0kYtfuSR6yNpnOLWH7Kc6Yx4nLu8i7NgW3hGspXEeSEtHKNji25yz5MUne28NGew4XjZaKsYUOZ7wAon7MBwhELsOalHxxaoqSdRhjDxEG26StMkUtyAlYCROq/gY6ExQqiqW4h04dVFThpY09dO01AqCwZDi+WeTTMk/YPI5oFUlzmotBj8TVjFpT1Jpl0l6eBdMmDEt0jM2FeJ3VJGIrEchsGlX/XdLCLpJcHe15nFq7zMVzDXKVJfbvaHCgvEkcGYKepLNlKCgPlZXZXEi52BqlGnpEwxCOS1SqGRBFjNHs16PsTWuo0VEQAsv3cSoV2kuLdNIWhV1bFIc8cnaOVrZIwz/N2MAar73rURtOmWvZzAQLlGpdvIIkDUJk+2Gk2YtMp7HMFFL6tJIFwpV7MbbCqds05xPCTkJBVyl7ZSq79/Lxp/4r/qb5ChvVl1l3A0KZUC4F7BhtsbVtU1wUjBbGEVLSbm9TGxih6BbQwImZWRphjzBLyaSDtvOkvoPjCKIo4cl9VZw8NJ0ea8kWW/EqbyyErC29zaF7p8jsELvS4N2LGa+9awh9m1Zss7Uekc9ldNoZ14I2w8ojtjShjFj3u/h2gaKVp+7WMLUSzuQYl71tnj38Zd45+Q7z86/RaXbYXltiMVwntTLEqmAgL4ikYKVrmNJjPNmcYrg2xT1f+MdcEud4+oEHeOWbr/OXf7nM8SdcSk6etNVAiiaWDyaR/PE7IYtBijF1wEXFGcWOoRcFhFZMWQzj+yVi0aIYxxxYDynGgsrwHlRBkqVdxkyHzDKknkEiyJI5pmttknCQXKNEuLpCPSvgjYzcKOKGc8O8t/EeCNBak2UZRvTdhJ+eevpGR095Hk6lcptjq44iOpcu3eg+3oxJU/zRUexS6dbfSVPa58/f9DsCrYcRhGC6eEMObePw7rs7iXp5ZJaRlMvIKCLpdNi7bx+VHTsYfPTRGx3axrvvIi2L5eVlXn7jDbbm59lutbCNwc/nsXz/RifOKZepP/kk5YMHyU9PUz58mFPz81ybnyeXy6GUwrZtLMvi/PnzHDlyBKUUzXPnyDqd27qYQgjSdvsWifCPRQi0bTPh1Bl2Byk7RaaL0wzX99yipvooisUir776Kn/9J39C88oVkjBke2uLEy++SDXLqO/b9w8+QsUfHqYzM9Ofhb4uFy/ZNvd/7nPsv/decj/F5/STSIOA5pkzdGZmyKII+/rs9K8jvxb37P8/5a750X8u0iLN7cXuXsKom4oGnZK5w5gfzer8VaNTcot/iozX0W4dpIu7/QpW9wLh0O/cPlP3a4YVzN7qEPsBxmB1L5IW70Gur/ftbW8855AGR4EMs+kSjP2jX9r5/iyEobij6y9AlmqEzR0780JrSO4cIWOscl9WdZ3FxX6nV2xuEiyNwNYKltkk9Tz+l/Tf8cWnXqVmnWUznGLfw8ex3j+H+8q3MLkcJ817lJIuLG0QHa1RIgOhiHXMam+V0Xw/69RID+2OktZ2o8eGSa//tzBrq+yZfZN9+izGU4jEoBa65Jcu0zi+QfRGSCmogjXIff5edu6+iPAT6oVJPJUjal5DqguEy5+iO7ADZ2KMwr/9KsbzkBsbEKcI2e2HsWJjPX8J80SFIx/7FidOPUXOWaXbrdGMQ2yrwqEDAc0soeQUqI5IorxHGMKpUw51+32qyfeo7z5HPt4EJclsRfOqIDc6R340IqkfxT5/gnH3AtvFMRqrE0RzBfKqybE3v0fvc/+M9o4/wEifXKMLUrAebPDV2b+i2VnHkjaZyfBtn3udg3ynsYBOQcgKkSlhJ+doLezmoPMAz33f4dndi2Q9H71Y5MpygNAZy5vj5PMdTGGSqeXfIK2/j9FrKFuzHcQMeTlG1iSj+XHeUKu0dMw2mkKhx5PC4r7VVQg1kXYJqwO0r+QYFDE9c4VYuCil2WqGKDdg0qqiCyXwJWXOMTX8JN3157nkxAzVNZ/fcHl1KqFTbEFOUquW+GzwBOOXShilIOczUflt0sJ5eu2YplWgZMqsNQ4yVL1KQXbRjWkWYofTjaMsBaP4vb1MVs7wicFh7vO2sY1CuT4m7GFmJWFdk+94VNI8ubFp5trv8WTlCHEaMbe5RLc7zZutc6Bsmjt2cC/XrwtCMNOa4Y3ZN/nifpuxesRa0GFS9SiUNDoVXHzTZXCXohPbNDyH3FTIhSxB6oRdaicL4TI/bM1xNDvI7uY09pgNUURx716C5WU2wnVOFtfo5t8jF4cUV0o8MTDCeD5PIbePRrrMM0dDvHybRluT2IpL8y0GJwy5+OMYk5BFot/MFIIs3kuwWkAIje+6BOSJjtRwuzGF1n4SfYXJwjLO1v9B4PyfBF2N2LDxmxm+pfFLmq88sIFXLlBYWmd9dohku8niD14gGhzHL1e498BOvnvpJG7OxkhQRuKnLpksUBj2sPIlmL5E0elSTCySombEXeadFx2+9nX47c95tJIub5+N8XxQVoJt22QetLoZo4OG3jVJVE/JB4oaRfJuQF3UcSMwuoecKoE2BEnAha0LzMzM4DpVfDNHI4owBkpdB5WBvAwFaZFEAnGsx/iBKQYeepofbLxJq5tyJpvnf/rXj7NwtsP/8M9/wK6pWf7o9wvU5nwcOyXp2qwsZkiRR5cKlNcC3CBDS8medo5QppQqFq5XY0RYTBVXsd2EvdOaDdWj4FQoEuBJCBsupmDTSGewEcShxWFxhXc3DqDpmwOtPPcc1fvuo7h3L77l89mxz/LHz/0xi+1FMDCWG+MPn/xDbPmTjWWU7yN/TLyIe4eulrIsHC+HyXQ/n7n/KGm2nyycQtaeZbwY887//b/i966hhOjLNz2P4U99ioPPPHPbMaXrMjMzw4svvojruni+T73ToZmmdIVgulDomwnt29c3TTpzhoGHHrpRHM/MzNw2U/oB586d688yav0L2zg3liIo5xGZT8HU0EqS/pTHjuOYV59/HqvbRV4/Z6UUhWKRl15+mckDB34tnHV/HpTvM/bZz9KdmyNcW0PlcpT27/+FRdl0r15l88SJfnSOUoSrq7TPn2fkk5+8Y/f/Lne5E3cL059AXH0c0FjdSwiTApLUGyMavP0i/qtEJG3y1/4tVvcCKAfCGbQ1QFo4hIrW+oVd4cCv+jQ/GqPBpHxginHLU9JGpq3+vx2n70h022KjMM7ttvK/Luzbl3LunE2hcHv5WZ3MYZp3vlkxuRzmusTrtuesAtodRcbbIC2iUGC3t7Eaq2AeJPugm58kmLllFo8/yqXm4zxxKIK4g/v665jru1atJMC2HdCajSsdhndnaBSOdNgOG/3CNAtIKh8DIBz6bQZHZ2ludFFoSmlIrbmJGjaEiUUp30NYVt/u+J05dh3yOZP0b6aUv4KXD0gjRWNjHpkVEVKAgKzwBiuvLzJ4v8XA9puocAXht/ry3FaGiA1YGdbMBvEXdlB4tsvjhxZ579UxlAdCKiamX0fnu8y3LCpS8omnR0AoZmcl+/d/k9LSi4jRHoP5y2AkSeSSaYGfEzQuK4qja+AIxHyKsYYodKbwtYOZBMsqkJOS+AdrxP80B9r0ZbtG89eLz7ERbjJgFdBCI3BZDTf53zevIs0BWlmXVtgibyW4FiyyzLHGE1y8skQ0+3k2lofJqYA9tdcZZA7VSOj4FfyoxK4pn+OjnyADwiSlPjXEA6UFTsSzTDsFxoKMy7pJmnkcSywGsgjH6yE9CVL+v+y9aYxl13mu96y15zOfU6fmrqoeqwd2N3vgII6SSE2U5VFWIEcJ4Jvc3CSGb4wE/hUg+XNh4AIWYBiJrR8xcAcn14Ms25IYyZJFmhRNiUOzSaqbPdbQXfN05mHPa+XHaTe7yaYl03RI6/IF6kedvffZ++y9sdb6vu/93peNywnuuI/VdvH6DlciH28iJZfx2JcZQ7gt6vo15pYKKDQZq0cpd4joWh9vcgl7f5sv7GqzHg/h6D5Tr30U2fTYIkuzOUYpkzDSWWP3nmlWl5ewgyzKK5Iv9XGHj/O95ypc3xnlqttjw6ohbB/tV4nnP8XRz5xFJAFmZooYRRDmUBGkrkQ1HEYnJtjEZJezayDcIl3uGx/lcrDOUjbkcrxCxRyMB1EasdHb4HrrOjMVi13DfaI4i6u6tKOEpungIahOa1rCYJUe0vBYUyEbskshNLnSuEJqQsHMsuZv8qer3+KezhHunrwfKQ28fbv4euMlojjE83yqTgmB5tvb1/nC+D5Khs3SVpux01PYbpmhVKJUihleJ/HHENJE6xAdW6jIQSUunXqBnYbNM1tf4+Rdj5GRWaTUzFZ3E7PK+sY8zfkAq/AKpbLL2rUudpyS8xKkoUn6Bp31BCUUh4eXMBcatBcyYJjUOvN0s4LeEweplLM0231s20TplI7uoZuKL37yCfL7zlMjIFUO/Ww60KAPTe55vMvX/mybCwuST2ZjVmNNz48oaUERjS6C6IPWgkwiOdQrk4YpU5Usz/c3cRMfhYPh2Fj1PsqPEaMWljHwM1XhCJWyJk4jhloOoJFKkUQQuwp3ymH5vpg9x7Zw9u1Qf72OFBJtuKymP8K4GPM/Hx3l9WaLf/W/1vnYwTyfP7SPpJFn/z1VlvuvkFtqYTGwzwIgazPVKPDo4hhMhcRphihNObGnjGk7WO3X8cVRyraJIbKYMmG7tYAU8yAlZl8hXUWKolgaGYgB2TbN118nOzNDrDXf+stvsdfcy/7Mm7Yb3/vWdxn+7OcYK1XQQGJbxK71tvlMSEnh0CEar79+k5oLkIYhmZmZtwUSXrOH0w+wp/aw+vJLyGyGKOcO2Ce+T3bvXgzPo//ii9x35AhLq6u0222klBweGmLP0J1bknJ79nD2j//4pgJulMsRJgluHLPT7TIhBNWTJ8ncoOXGb6k+RVH0NvVcAMdxaLcHc3p23z46c3O3UXlhQC223+G6fhy0Ie/cgvX3YGFhgf7WFs4dqtTtKKJ25co/+8AUBlY5uX37yL3FLucfCxXH1M+cue05Go6DVoraiy8y8rGPvafn+xA/vfgwMP1xEJKo8jGi0oPIpIs2PPQHzSZGa9ztb2CEm3CL6I9MWhj9q6TZgx/8wFRItFm4Efy/ZVMakGQGPR7xyZOY3/jGzYBKyAams4iMG0QzR7F3niKqPPo2waT3G+PjivHxlJ0deZOxqzX0+4JPflIRXz+O9eqrcItnm+j1CB9++M4+NjcQVJ/A2fkOZrDKSAW6r23TjcewRJU4lVjGIBudwYd6A6tQYXY2wTx/eVDpugFXWKRokBLV7jFnH2FvdAmtQgpGCZH2ibOHSPLHBgdIi4c+d5A//VMPQ6bMiu9hZCEOY0peh7ylQFho0yHbCGlLGwNFikGamUMlwyAVqtlE5nKIOAXLIpFbFHcbmOoyGClEKSCR9TaEBlob0FfotI3Y3qJS2k/xwA4fu2cc+k+y9ppgfXWSTWMNs7DDsfsuMRztJ+HzlMsvEQQrJIs2nlkDJdBILK+PVmLQw5oABoi4jogitGFBYN1e7XYc5MbGjYcEWsK17jK9uEekYiKZYiHRWtFI2mxHdY7khlGrR9FyCZIAKylhOUUurPWY751ENFKQJt3EY37ll3nA+zp3Oa/yo/zHOJQ3GRu3UYkka3oYgWRypIJBn8mDp+hvX+fM0igXl/Zz3+EzXGlKbOlzeOwCngiAlPHRNiurBg8dfolXLhzniOswMgZKpXTbEXH1JbZ8RU7ugCnpt7v8u3NbzJQepl6WPJ4LUFGZERHi9+ZRrSrKVEg0jtOl2Roiji0mnYBdJ2fRmRLKqRLICXrzf8v5jT1IM8d4YDAe3Hj/k4Ta2jqLV1rsm7ZIgcTMo7WPIKUYxLhCkLNGuR6sIgSoVAEQEXHQGmHn1csU+ynVUo0flr/GXLFLPW6SqpQndleQ7S6zYoUw7ZIVCiMN2FEGomiA3GFmPEWRZfeEz8acZqPnsxT12GVPkrWzSCRbuYiV9hLl7BhTIzP8n63/RFP1EdgEOuaFxjqHc2WKOuLV7Ys86uZJZYQWksZOlcrINipKkDKiu72L4ijIVII20DKlsZ4l6ZYZ724xdiThB8mfIzbBqY3z5y+0yHYkh/Mldk/YXE/7hIdiXC0QOsEw9cDZS4JIJTubCjIOwwf7dM7nQGtUHHNx2McIlvkXv/woT/7tORYW14iDhHze4+cePMX40hLq9EVi38C0NFaqiHIDkZs4ElRmt1hu76IZ2Rw8rHnx6T5NoJ1GWCYYY4L6axaTJZddkx55t0C81cc1bZQUGF52sEgFRD/EXQ8YulAjlyQ0QoEVT3Ms32Vuq4NUECUSCeQSg9mpHEvaIjd7GmEuY8gmxWKRWr1G+AObYl3xxmaXdlfzS5VRXrjU5X987Tz/4p77+aw8xRvedYKtFdKsgdCSQEUUpMd/c+SLhOvbhMkCpdkp7r0rYv37PgBDjoWILrPU6WLgI3opxmSMXXVRYYxINLEyEaU8h/fcYoUmBL3r17m4s4NW6qYlh5QSoRQlafLiiy/y859+AgHYQYSRpAT5t68p8gcOIG2b9qVLJL0ehuNQOHyYwqFDoDUyVWitSa+tENUbxIaBNzLKrocfpXb5ArLXJ6wUKZw8iTs2RrC9TbC9je267B4dhfFxzBtqt/7SEurEidtElgD05CTrScKYYQxUfLUmtm0auRz9NKU+Osr09DRaqYGHZ5KglSKzaxf5AwcoFArEd2D8+L7P7ht9rHahQHZm5raeWp2mqCShfPLkO859/yRI0ztWb8XfbfsQ74j+8vIdPxdSEtZqg77jd6KNfYgPcQs+DEx/Ukgb9UGj7t6ADNYQSWdA1dW3DJ7CxIh2SDMH3vngDxCiwr24te/dpjCLikjtMZQzkNtXk5PEp05hvfYauH0s7xxEJsnUHnR1FDNYwtj8C/yxL3zg+mo/97mAl16ymZ83iWOoVBSf/nTEyIgiHr0PXSxi/ehHCN9HZbNEDz+MujF5vyOkTTjys0RJD6/aYu4P5unqMjPlLkFss9HO48cGR0fqGG3NE/+VN6D7RtFAxEV0kWaNe4XDM1EbV9igoWVWeM18ADtc58iuz9LP7n9bQqZQ0HzpSz5nzljYywm5kmIi0yTveaAF0tCYbozXsYhThVIa5ICZvN1fp+RUKfkKN6qDUsSdFgYJSdKgsaqx9mQZuRKCSsEUIFLwJSJJELvBeH6b0z9b4pV+A5E/iBVfpzTrc33ke3gq4XBhjPNJjUtzl/lc7gTT05dZXXWQxQxp3QBr8H6o1MQwElSakh0yBtQyMwP0ET8EY2UBXTFQmTFQLgQB6V13DW6CEESeTavWwrxhXdQhIK9d4jRCaYVGU9cNmqlHblGQVRFCrJEWW7x0/nOM5wv0wyFyvR0MIRjOpVyMf5aDJ77FwewylfJpSEwcw8RPTEbzPaZKETDC0N57WVzMsRgfY9fwi3hmiJIGUgrmOsc4Yp/FkCmOEYFWzBbm2X//JV5ufhqSgJzVpnz6ec6mNRav5RCWhc6VSdMMYRhSrz/Px7M/R2w2MZSPmXp4G59GZ1zCoA86xbYDYkPT6bsknRAZgi6V2extczXYZEMlXO6vsCcPJaNApKqk2qVX32G9vsB/fG6ZofJZSkWX//YTe9AqQGjBrqKgGQkQkpww2dEJUmoEEukrsl1BxSvT7bW5bNapNfpUu5r2qIllWiw116iZPfKpBqFYEbBLwG4rpVfWLG41KMYlrvSrJOYGDx6JePJ1G9c06ak6VmKRMzP0hmwybYel6Ay5mRcY31mmohRJatBWFXx/myvtLT6SzdAMUqxykVzRp7HWYr12HMuJKecug2WzE7zBWPgZ7GQva6t96jtgGSZrrXk6Xo+Gr9mTyfLHX62Rq7eYshM6ATxf22CjZfLJyjR+d5tcLNGOZOCtDRIByiRc0Tj3gOOkTJ+I0Imk3SzQkFv06gFVb4THPnuUj/uHyWkHW1o0z7yG346xM4qkFaGFhUwEphBEOYHWZe7eP8SInGV+Y4mHpq8zMq7ZnJdkGialyKbfB9eW7H88R3a0REO6LH13jeG2wUv1LtKCiX0VDCuh12/xM93TpKNtDpomT15cYWxSMhOOknoGW72I1IzZvyvDcN5G+DbjaxVWvrWA1jAdNmHyLrorm4SvwItbDbxYMqOylLF4YsSlLi2+eWWeP5n7Cv/7f/ernE2f4poREhua/fYUnxt+DNd0EJamkIkZvnsvltXCzkeoSA96CfsKZ6dEf6lB1LHxJlz8oRhdFpRGErZaezg58xGy9pvic8HmJpvPPEN9fZ3txUVeXFmhqzXSMNg1PMrHH3yQ1i1VRS0FRpIi4wRlvX05lp2ZQU6OsNhaxBAG1eIejDjF7QeQpHTm5sgoQRxH9JsN2gsLZKpVRg7fhZ3Nsx122L50gfrZs8StFp2rV5G2fTMAFZY1OIdtD5R1c7nbzm+aJhueRz+TwU0SEkD1+0y12yRaY5kmWinaly4RdzqUjh9HhSGtCxfoLS1xz6lT/PVTT5G75XuTJKFcLjM1NXXzs6H77sMdHaUzP49OEpyREUpHj95G/9RK0V9dxV9ZwXBd8gcPvq3K+o/B3r17sUsldK02YPvcgrznUZiYeM/O9dMIFcfv3EuqFFqpDwPTD/ET4V0FpkmS8Pu///tsb28jpeTXfu3XGB0dvW2fH/zgB3zzm99ESsnRo0f5lV/5lffkgj/E2yGTBggTZVUwgpW3VAtTRNohKd77vl3fbdApQoVo6YC4fZBKs/sIALt9BpG0QJgk3h6i8iO37Rfdfz/x0aNkfvQVUr2XdHz8TeEgaSHiBtK//pMJIGmNTFKkUmilseIUgUZJSd+0OX/Z4do1E6lSDu+NOHA4RdvvLp9jGPDAAxEPPBDdcXty8CDJW/3VlMK4ehXrypWB3+eBA4N93jIBaDMLZpZfPPk0T82ZLDWKTJfaHBqtcaBaYza/RuHnP0I6NCA4JbP7yVz+Q0QmAAyOOymuV+MHvQKH9j3OEAcwpUF5+DGkPYIy7uyn6nmaRx6JcEa7ZP5wG1NpsAU4NxYUaUplcoROEKDTgfn55nqZoeFFNhZXGOtXCfM+KopJtE99PiVKesSZEp0DPbwRKOz4aKUR11P4jkJXDfBtxHqM24z4hYnTPNk4Szts80p7A1MY7M1VmfRKg1uI4HvzX+O/Hh1m3z7BlXCEdL1GlHGxdABILMtBx4LqkRAtbHhjlZ2rJYqbVxD7BUIITGsN7Y3DxhT+L/zCm8/NsRmt7kbVXiZjuMQ6YZM289Eq9aBGLe1ghBZ3NWv0rBx+kEUpE7MnGN72yZW7LE8dpDPShvwaSmpUNMJHpj7Pv5yMCaiz0S6iVcRktkF+36DfN7UMvJFxrnQTXCMgl8+RKgNDCrRnIoyEzf4E47llhEopuQ46iikOx3zxvm8jzAhhdPn6RkA2SqHTILWrIFJ0UKHktDhgT5NGLSIpiGWWNDVoBTkOWxXSzjWkUKSpASIElcNPPLz8GEu9OnOtNbJOjknzBXYVj9OONeAzbLRp1yTPLlyjr22O5a/RchMaQYfffuqbfOm+T7DmNWl1ezheib1RjTFTsyrAwEBIjd2LSC2XKE3Itu5lVV3EFCNoHWH1Y7pT85jdPnOFhMkSOBGgYDsjEI6mb2ieCwTKMAgTH1cIlKV44rEW7qJF1lWE6TKd1jR5o0r3dJF7qq/ik8MW4KsU0zEYNttsaYdERLRsySSN/FwAACAASURBVNRIgaF9JcwXArYXDVJ/gWsXNFsU8bKKwG1w7EsGS9stWrEgsPq00hVUpcD51QWeez2mPOwit2ziXEASabShEYZmvp1ydCmmIXOU9jRJE4FjSNAay4YL5y1GHVjQdb7WD1ka6yE0TE8Y3BVI/lgo3lj/NvujKfaaM6RS0Vm6zu7tkKGoStqzcawUP00QAkRPMDK2j4JrMnd+gvF8hdFaiTOvlnHdy9zVCtjqJPRCE9v0OJrXWDVBctJl9elzlCoRZbPM+GiBpW6bC+ebnN47wqeyj5BlMF7nCgV+7uFHOHf1h0TxFkOeRzZvUi1LDKGJkeQiwZFaDvYLhIBDskL7lSXuT/M0Isi1HRwTpCER0sCOYNgQfOHAAeyT+/nN3/89Ri2Tz//Cw4jExOk5nF18hWKxyN7xCuMzg7EqTg4wdqLBwnd7hN2UxnLIVgeMjkO2EhH0wFUm+bxB/9Uyo+WHcYbenGv7y8sEGxuUT57k6rlzPH3hAp5t4xkGUZKwcv0af1Hf4Ve/+KXbx24BZpRwubfMt659i1jFfGbmMxwaOsQP137IuZ1zCCHQWvPC6vN8vvxR3PwY3dUVkjBAOjlMBFIItGnS39nGcD387R125i7DcBkzkyHpdIgaDYRpkpmcvBkkdOfnyc/OYtyhFzSXyzExMUGz2aRnGPjr62ilMIByEDDUat2s6Ob3779JOzYch6TbZVhrPvGJT/DSSy/R7XYxDIPp6Wk++tG3q+ZnZ2bIzszccZ5RcczmU08RdzrE7Tbh9jarTz5J8cgRxj79aay3BNTvBrZt88gTT/Cdf//v8YRAGgapUoRhyCdPnqR07Ng/+hw/zcjs2kXr3Lk7bjPz+TsKeX2ID3EnvCtV3u9///t0Oh1+8zd/k0qlwje+8Q0eeOCBm9vDMOTLX/4yv/Vbv8WnPvUp/uiP/oiDBw9SeIuK3Fvxz10d631T+BISq3seZQ9hRNugojeDPp2Q5E4QVR5+fyuIWmM3f4BTexqrcxarcx6RdEndqduuS9sVkvxR4sJJ4uIp0syeO4s22TaWuIQuD8FbsptIG3QyOPbvgUhSvI6PFSY4/RCvF2AojTIMVKT4iz/zWLhuIf2EpKeZu2KwswpHdvVIbROE+Kd95krhPvkk9vnzCKUQYYi5sICxvEwyO3tHiq8V9TmUvMHpPducnt7g1NQm0+U2WTch+tjHbt5ru38Go38N2Q7AsACTIZ3j1NgwhV2foZCtMpwZwRMmrh8Ryz4y2Rjwj99KZQ8Cct/8D8iFdeRGgogbiH53IFIlQX/yFKONB2i2d2jaKWliMNyBj7iK1M6joxhhR7TWI8R3BOWtTYaSGoUoJvRMEs/CsYCZGH3AGiQfqgJI0drFPfYQpzIF8obJVhJzpDDGkPPmQkXqlLrMc3i0ynBZUR2BMF/Grxu4bOFZPl7OY/xYAaln6Cx+keU/XMUshxhuhNUJEWFKGiRIR2D+95+nM357oidjeKy1V4h1wlqwxcXeAo2wyYa/CcCuTU0htHCclGymj5vrcsQZpTl3EsOzWZ55BqPYQQsbZXj0TZfW1DU+UhqlaFkMlRKqRh1zpAjT0yjTRMZ1ZLzEq1cNMiVBoiymxlZIUgNTmkihkZagmmliGXnCKM/EaYvc0d2DcUJYCB2zFATUoxiZCrAsUj2NTnOUzQwVWSFvgExNvKSP6qb0OiWKrQDDzpOGEc2NIaSZBZkhkwdrX4FzW6+TUxGy+33ieBWRLbK2Ok1Mh5zO0PFXONdOaUxsURp5kWJo4KSClurxJ+I1CuOKgmPSzcT4cpuhxGPGGKeVRgRC4QYJtrTYfn2YS2GLDW994M+oQ9LAZCvKMlPcRAnFoeIgV2e5ULAF0hIstiRnpWS8ZLIpPCpTBirfwzIU5zdthJ9jZhH2ridMb1cpR6uMj5UQxYCqK7jabmKLEFIfS0A3zOK6Mb88M4sX7aO9PMpXv/oC6fwyW9tNGk0fki6HZoYh3GGhNWAUdDptlDmwFjmzsUAQpbRXfdxQEEtFIRIYYpBMMtF0+n1Ojxzi7FKTbMnHzCQEoebqFUFrRzG0P+T/DmM6CYjIxNQGW8S8Yvdxk5CNFqyFda43llgPV1FJhwely+iwplOXjN/dpxcK4lQxWtxFxs0SBrCxtAfWQuJ2TC5b5tJ3F6jtaIaKBfJeFnfMxco66LqFb6zS6qUMu+OoIIMUNkNulgP5MjPBEU5M7KFYHcFwHGKVckld51qujRA+laLJvkIZA41lW0yZZUaVS3ZXEXc4A8RIxhlxD6JWN6ktrGFqkJgIYaGTATNDpynLtFmVde49ugfLMPlP33mRzXadoRGXRCas9Va4WFti+NQuRmyL2JesvRiik4CNSy1qKzGyJ1FmjjDJE+HS75hIfz8qGqW7vExvcXFAYdQaf2MDb2ICp1LhT559lsD3IU1R/T6JEFimQaPV5t6pKY6dPHVbden3rv47/sOV/4dG2KARNHh6+WleXH8RP/HJ2TksOejJ3SurNP06w5kR4pU1hGFgxekgWDQt4jBgQDwVNK8vEkkQmcF43V9dJen10DeqVzerjUph5vNUTp264zR06NAhnn76aTrr65hCkCpFPYq459QpdmWz9K5dwxkZwcxkMG9pRZGmSer7TJ8+zbFjxzh+/DinTp1i//79GP/AylntzBniVov+8jLRzg7CMBA3AuWo0SA7PX3HwPofgnw+TzaXY+/Ro+ysraGCgGqhwCc//nEOPPHEbb2+b0WURlysX+Ra6xqe6eFZH7B2r/8fIG2bpNcjqtdvVuS11gO/4vvvf0+SB+81PlTlff/wnqvynj9/nkcffRSAY8eO8ZWvfOW27Y7j8OUvf/lm0/uHD/+fFsquktrDyKRDVDyFEawgoxpax8SVj+OP/eL7rshrN57F6s2hDRduqGeavcugQqLqJ95+wE9yveIdMnAqRhs/RghJa9xugGBAL5VKoQ0DoRRGFPPC+TydvkFBDqiRCMjmNMsbFvOLJvv2BQSF945GdCeYly9jbGygb5nstedh7Oxgnj9Pcvfdbzsmuv9+6PWw5ueRSg16zPJ5gp//+dsCWdOfJz14FF1Yx1hbR6QJDFUQ5TwFu4m2xm7smSBaf02huUWUz4DWpNYQYfVn0KYHQuD+1V+Bn6KOTMNOiLHZg7gDeMSf/yVUbhpr71E+ce0Uycr1gay/45CuvoG5awO/do32koP7eh1SE43AHNWIVOJeTQmqGiYl2vIQR0LYFui+gRYKcaiL6GxDJkPWG6NorGLK2xc9WkhSq0w/OEHJ+z65XIZjpyWcPgTsRegtksZeQmbpOcfxv/4HaEfiuD0Ce4ygOooRBGgEolxivCIRSRdtDiZauxdgRTG/OPFJntp8nsutOXbpgCmvhl0w6Dp5rFcTarIFlomyLI5mDnAvu1jNRDS8yzgjBlaSJep2SWMfg4CZsuZvKi1+KX8EkaaoXI6okMX2I0TSRsY1tHOdfHmcft/AKBi0oipefpV+S5CSwXM0biZHVx5j6NB+3I8miK0lkAYyriN0yr2OwbkG5I0KKiijxaDSnGrNvaUqwfwmTQOccSinIdLwaVcdrPOX6Pf3oYVL0urjpwEzv1ym136ZWrhO27jO9HaDeBWm4mcxqztc6B6nrYrsdJc5ues6S0PPMOKm7PESaj2Tc/mQtk5YSVqMOXuw3Rp1s8UbymNfZpMZwyMkodNziOvb7DSm0KZGGDeSWypFWzaqWyVMTOrdlLnNlN0lgWPBTh96EQSuICMccjKLHO1wfLpPnEquNAxU4rDrkkHBsZgZtdnsdHFdTfWKYsvvUZ4MOV1xeL3pk6gQnfZIVJUvHMgwWVxjY+Eg3/jWs5yqlmi3EvqRc6P6ElMUMWHT5/zK35KteET1mGvrO/QDjWdapPkEtIFTEMS9iFYKFUCiB/6RWjGdCznmF7h2VnNOhfiZgJ0w5a4DmnlPYfuSfuSyZUbIFPxEExiKMReSJEWYgrafUpqMGUpdREtgOIpIxmyfzzJ2TJEQUjJzBKnL+twsod/HFRIPk14/YY83ykKyTLQtOVqtsuantD0XOxfSOt9hZvYEjuEQBBvoJMa2MqR2m62lNeLJXWBb2FGXV+KLvJF0sbUkPLgH540NlmXKnuxRRu0GvZU2Rt7CrXoMElEmaboLyzKpGkUqhkvdGNh6hVFEP00pSQlSIHSEbges+5us7PU4WJomvNrjD558lgfummFsZoTX212+/389zdGxLI/EDienhjC9SeqtPtKz0L0eMk1RpknakhALWnEd2zCQrou0LKJmk+bFi5iZDJnJSQB6YUg+n6df36CQU9SShDiRjJTKrNUa9BYXyR8YtNic2X6NZzdfoHiD4QFQcAq8tv0aSimOjxy/+bmDiWUYLHWuM6oUQkr63Q6ZXH7QAwogBFqlxGFEL+6Rq5YH42CS4I6MEG5tkfo+Khowd6xCgcwttNq3YnJykt/+t/+WP/w3/4aV5qBV4xNHjpC9EYAYloXq9/FXVgZCS7dWPW9JOlv/iIpZuLFBGobErRbyFus0aZpEzSaNV19l5A5V2HeDiakpvvgbv/ET73+1cZVnVp4BwJQmZ7fPsruwm0/NfAr5AXdCeK8xdO+9WMUivcVFVBxjZrMMPfAA7rsUsfoQ/3niXQWmzWbzZvVT3vCwSpIE85bK1d8FpUtLS2xtbXHgwD+PPsd/rghGfhan9j1MfwVlDZE6EyTZw0Tlj7zflwYqxOxdfbtolOFi+YtEqf/2KtxPgCSzdxDcvsViRqiIJH/8HY4aQCYpQmkwBDK5tS9XYKSKxSULx9bIUKHMNwOdbEZx4arDgd3dgZXLPyHMK1fQd+ih0Z6HOTd3x8C0Vpe8HH8WvxBTTOvc+5GU/L63TApaD6rqhokaH0eND6ihTscHlUDavrmr7DyD0C0EGbTMYqQVrNDFWXuVuHA3iUqQm5uk2SnM7gVU1UGURwGN6PkQm6TOFCAIjxwiOTl4LqJex56fR68fIp9ZJTN2HkN00eZAFCbxPHSsIGthNxL0jEbYNnpewyUJHY0YksinutiPP0+091OUJr+AtXUZkQZoYSJ0ihaSOHeMjBkxVvoOhjGHlD3AIUmmaPYP8vzSJFEq2V8qstsR+L0elq1uWNMAQpB6byocD+jxg8BUpAozStBSYiJ5dPh+ZPNPGclLEmMaYQaMXtxiUwqWV/N4TpWKyGBkPdIJeOLkPH/QUHiJgYj7eK5FD4u7prsQdFndDtFTTxC4FmYYYwYxWghkso22XsOv1TmQ7/Cdy8eolDXr5hCOrynZHdLEoGjvsNr+KKKwC6c3gnh1iYmhFQCUPQKkFN2UB/sOP9zaxHIH1NBeEjKTqTCzJLFwUe4w0XpKq92jVOwxvz3Nn1y5G7n+Aq6/Sd8r8MX/rYoUiyAXWEyvklurEi0ocAxAMpqZo2AskbE1G7l55ujzxZGEiXCwYG0YCb0kZm7TY3tZsCa6TO5KeamxQSvY4gvTnyHXifETxU73DXbmOrTiCkPGEJ7OkuoEUykaVhYjsrjWzvC5Ykq56xAu++gQXNMiv/sgK9kpfn5IcGikwZJYwZUaz5KcqlZwpibZXOySFpogTcYKOR6YPIRovczQCmxNJuzN2+zJJ2wFgk4Qs6cAHykfBhVw5uI3ca0irvCRxSp5Bu+OUiZzqzYnyhWK1+qEbzTIuTEHlM+OVaRSHGanvYG11yW42CZXtklFSrujydomBoqhksvz/U3uO9hjybPILBtsdxXDRwLaVcm5TSiFLkMjMY9MajKGIo7gSl3w8jXBmJXFFeAOhcxomM7kiGyN1gqVSALf5cIzRcIl2Hf8XsJMjGmneJgYEhLACkEYkiHtYihNnOSZVgVsp4Jp7yDsLsqIEcLBHRtDd7oQBGiVYroSb5di+MhlEiOksNNlXP8QvzmLLDzEZqdNcTNkOdxiJHcUd3wJ0wpwhjKotEyS7gUGwUjc2eTQsYDtpI0hoNXRrCzYbHagpmKSrGLR82npCLHZQBoG7ckQe6TA37y2TPjyPGOzY4zuHWXbt3lpA7YSh4+fOE1TX6CZ65NVMYaCLBInSgaen1pjeh7K91GWhVksQpqStNu0Ll2idNddeLbgMwfXGSv0AUVH9JnbyfPKXJmRcom400UrjdSab2z9DXnn7Wwyy7CYa83dFpgGJHjCJkojDNdDxRG9bmvgEWo7GIaJVil2Lkfb74D5ZmAkLQudpjijoxiOgzs+PqgCSoldKr3t/Lci67r83IMP3qyyNs+du+mtbWQypFGE4XlEOzt44+ODntUwJP/W1pR3CZWmg0rpW4JbISWkKVGj8Z6c5x8KP/F5evlpstabyWNLWqx0VjizcYb7xu97X67r/URhdvanQr34Q7x/+LGB6VNPPcXTTz9922dXr1697X+t7yzMvb6+zu/+7u/yG7/xG7cFre+EiZ+C5vL39Tfs+peQDuhlmHmQH5BG82AL2hmw72B7EkFxyIPMu7hvY78Ey38GvRWwMqDiQWA1/l9QLP0YKfRuD2QXDAlhDP3+mxVFpch4LoYENNied1vmN+MpSjlByWvB+neZcIagfPy9VwIuWWDPgWgN/tclSO8C3IFh+FvetTfegO98B3I5sHLQScd48iX4/BS8TUPJnwLeojKYaug3obAfbA9UCGIb7MFixHFnILUGAVsSQMGBnoShYVhdhqYD+RDyAcQZEALbmYKhGchnoXgLlWdiAl59FcK/BKtO0igQSY3UIBwDqxQR1seABNPJY41ZMH8FfhTBpgm2xUA+18B6vYZ3ai/FfSd4yPyfeOX6M2RVD8wsuCN045f5xO4tyqUMkGUw7FWYr0v+dv0afTGLYRu80HyBa/E1Hr77buLvb2OZDlreMm6lKXJ0FITJ2NShgUBSoz1IjNx4P9T2K1RkDWHmsVJNfr2BExpM7Evp1jUFu4xt2BDHSKAw1OGL95d5bqVFGNgUHMmesT5uRpOkNiJKcV2HbKkIdCBdgUqMuvwGO5c3CDuC3ZVtHjo4zwuXJmi3slQnZki2R/j4+Iv0L1+jObpJfdhmQltkV6e4fNlj97EaxZyJQQbiYR6tFjjl5jnLMIE9zLHKbsalAWfPwcHHQWyRxj0M5WD1S4ids4SZdTp7Z8lmQqq5l/jypuZ/Mce5Z+gQ47kMyWvr6KyHqRNAYCBoqg6FVoap0QITRgsvsAkR5DPgSSgrzf1TIXPbCddEnfV6RHe8h3SrLDrrWFHC+g8XiFoBds0jjZrkhke5v3uKs9kzzGVdYiMFERMbkqlwjIfq23QMEIZNZexn8HccMonF8U/U6Ph7mFJlDPEiiSrR8stMl5pkZobJOruZLg4DJyAVYD2DSBWPTjhcbXXpxk1ms4LidoH9eY+vL1/nLxd7/GihCYUG9wUVjqUVEpWitcYQw7SbHS6dXeXi7lU6To+itHgwNjkQNrlQd3hodAb3pMOfb56jtGMjsia5TETaFBhC0isbSEvzDa/NpjKZPDVEuxvhpy5936Kr6pzabXJgIiGIDPwYDCGZHY8p2AbPvuRQbVfYO9tCmBpVKDBz0sG5lpAogwRB1gvxbY9QBRjZDIYKcA2HgiFItca0bHZSn6KwCaWiF/fQXhbXqkOwzc/8qyx/+d0N8hlJ1M4R9hStxjbtJGbfbA732CX8xKHtW9jkIEnJTS1y7QWNczUh6PqEUhE7fcZmH8HMZHCyb84dse/TW5rnrv8yYfOMSzKXoxYHGFbE3hMxL5+xcSKT+XJE4EgsZZOkKUEzoVVrU5gqMrS3StJN2JrborZaY+rnHkbZ0AwSXmld5NJoj9G2JLYFIlS0jC5VJTCkxLAspNZI20YIgYxjrEwGaVnEa2vkT5/mf3isS7cdUVPQkRohDcYmusyIeabu/kUsy6Q0Oowo5DBWXLJGlpztkzETWqFLmFpkoyyJSijdEjT2tGA8cBgvTTA2Nkrt3HkoFon8PuvXrqDjBMN1KQwXKUyOIy2LzA27scyhQ9TOnQOtqR4/jnUj2RYHAQcee+zvpapqrQnHxhBCoOIYX8qb1Fm7WsV0XdIwRGQyOGmKbdu4ExPsfvjhdxbE+Qcg2rOHWq9HEIa3fV8SRQzt3k3c6xG9/jpoTWH3bkoHDyJv0IXb7TbPPfccOzs72LbN6dOnmX2HwOkfun579tqzjFRGsIy3z/07YuenYk37044Pn9EHDz82Wnz88cd5/PHHb/vs937v92g2m8BACElr/bbAs1ar8du//dv8+q//+k1Z8B+HtbW1n/CyP5iYmJj4AP2G/vt9ATchkh5epwvG2xMYIunQ32mjf8ybKOImoNBm+fZeWesRpLeB2Z9DGxni3BHou9D/+5+DSFIy7f7AiFxrbD98MzDVmmqlw/nLNhkRkwZvHtfrC44fbNNffZlIXqU0NEqz/kME/y/+8GdR7nszyImkR859GWNjDezBAkDYKcJdI+ntJipVCFZXb96LNIW/+IsMtg3t9u3f9dWvDtRzb4Wp9+PUn76N8iySAFflSNMK+D4kDYwwBGmSWA6iowaGhQAqIK5vIubWcJ9/niS4Edgvx5DbIj28F12cpj9xF0ok0GsP/m7FA/dTee53EP0UQQqpIrVMtOlipiFKBCT9DJliRFjwMa8FULHggIHuCOhHcDki+dQwvbMxYWGN/dZ+onLEudo5+n6fglrmkV2Sg0VNv58wqPlAlC6yVAsYc4d4fW2MG4YALHQWsMd3scfMYOyY2AUfrU1IElLTxJ0ah9xefnj1dZ5cfJJpUeLRofsZzw+qzsbyD6hcaeKmbRLbxPJ7JIYAVzI01aO30EHd6H91mh3Kpw/ymeMnqZl/xInCLI5hIRFEOmW+dZ0h5bGzs0XGvIBhbEPqEftzxP2v4nePY1lltE7YP/wio/ZFOhdzjHYs0tIsV86dwY413qakVGvywv5l+mGT0ajLC6rIgeE2u70Mk55GiBZYu5id/tcEi+dZ+bNnuNrQZK9uU955iZGjJ9CyQr+9RGvjKs/uPM9INU+h2B387m7M/h9Jnn35HN6IYjoNeaPRYbVgM41PDIRKk41sdBxjOsOMmhs0e4JySaM0FLTGQZJxBdVSnyvxFr3QgHrCnjFNut2nc3ae2f0BlqnY2nG4/FdZeu0m7vgkY7l/TZSsstpdJaNqHHOWKb9U46W2YNzJcWDPQ5g6g+PYhNsW9Y5FzvUpaoelpWEc1aZEjGsozFIRO6nQ6yviUFEqLxBpEE6Ek21yTPqI5RT9IxtKAX9lN/nKapeSUcExDLpK80Jhm1Y74YH0IFEcsdLa5FJlA2OkxUQhJY0lS0nEVSvhcd/lcGmZ8zqm/5zFwZkjlKp1vNo2lkyYPOFz934FmQ6OI3i2GbEauszXItpphp2oi1YRHgbjwz16sYFpGIhUoVNNFBlM5ww8JyHSMalKEZbN7uMnuG/2BL2579OrbbK4tY1IBP6OwWLjHHeNHqbkrJMWLfrRKDJy6QYtmkM97JYmCSLCbETaXiftNcmcHmFsssz9B9d4+tstSFOCSBIrk2l7nGNmhyTOE8uYWKX4SUx7HYLzIeNXlqjHwwTFHDEpl/2QglI4rkt7dZXIM7CEiX/pKpnJHWIdUD41jV9fwG5INrVGacHRQzZnr9j4SpOkCWmqKHoZru1sgAUqiFBdqHt14hMx0U7E17/xPXKjNr969Ame2lmgUvToBeHAnkhCzlcEA3MpPNse+K/CoLWh30d4Hk6pRLK1xc6FZ3hwv8VfnZfUejGObaESRZjAp07Y/G3nVYoijxH5sOOzx6uyK/s9hm6QYzSw0clRbxfo6/DmWgtAaUVb1flS+Qh+FONMTxMta66//F0aK0uY2Sx2uUyz22bkox/FyGSoX7iA+jurk2oVYRi0Gg1oNjFzOSr33cdWowE/puqoJidpvPIKhuMQBAFCKXSSYJfLWDMzqJ0dgo0NTMDbuxd7zx7W/85W6x8JPTNDeOEC3Xb7ZkCskwSZybBx4QIIQXKjmru5sID58suMPfYYtUaDr33ta7iue7Ov9eLFixw7doyHHnrotnO8m/XbtfVr9Pq9O26LVfwBWg9+iDvhg7Vm/88Lf19C4F2JH0VRxNmzZ7nnnnt4+eWXiaKI+++//7Z9fud3focvfelL75iZuhP+ufehfthL+w6QNkawglD+7b2jOkVZJZLCO3uVyWANd+vr2O2zWN3zWL0LaCOLst+kp2ozR+pNo5xxkD8hO11KjL+j8wpxgx6ZgtKklsXIaMqVOYduamJLQEDfF4wOp3zs8Cto2UCbKa7nEUQDD0qzd4U4f/d7IjJl159DeCBrDUQYIktHkJnxgQiS46Bn78FMFIkzEGHa2JC88YbFnfQfOh3J7GzCrZ7syh5Cm3lkuI5MB7YfaXY3Sf4xrFAxWB4ZGMEFtGmRuEWkzr5Jb9UpqR7D/uu/BtNCd9sD2WHLhkiiU4/o9L0khw7d+X5ojR10ceM3oDQDw2PIXgiOOfCwCyXCMHBsjbgriygqxGstWLEBAxzQcRaVr6ILoyT5IwNBKGA4M8zRoaOcHDnJqYlNbHOLRrCFKU0sY/D+bfsNhAiI0gxb3QmUHixaTGnSEj5HD36cxhaYSQvTbZMfXaI4vkVWLLC49n3+j/mnuBb6rPvb0O+y3F1hdiPGu/BtEtUiSVKMJKG01iG1JallkC2aTOUeIkjBdl0OPP5Jqvc/iCssxlWGbdVCa02iNRER0/Yoh61pnFGFk92CG0qmFF9n84UFYv8K/dYiQecacbiN1CnjC1vEfsqcjrHbg+qCEuDUarxRTgkklB2BQY7N0THmg4jh/DSuOYu80qXzapv5b7+ATxltupRGF2D8Eqn9I/xoidVXNtjYWKPbb2MIhyBrYvUTjFgTZy12RAiZCIXB2CoUhsv0zAwVQ+DYZf4/9t4rSLLsPvP7nXOuT59ZWd50V/sebzAYAxBmAAIkH34DzAAAIABJREFUANGAS6yCKy5Frd70sFrts/goRaw2pA1FKMSNUOyGFkFQAS5FgiSWBDHAwM1gMK7HtJ+qduVNVvq87pyjh+zpMT0DzoIDQiTmi6iXvFn3nnvzZp77P9/3/z6dCfo9n6Re5mi9hZdatDIgxrI8RyheGRUYxE2oeoxUhdQoFsMGxwfrnDzewZESR4UcOd7mv/j4Kl9/7QhdM4VxNAUaLDQCSnN/zGI34ORKhzBzqcVFaocfxAwUmfbII4fq8XNkQU63t00l3iNXLYTUNIICle6AfNjBHmQ49hKO2SIZBVQn2kT7A57+luUbT2ue+a7l0vOGZ+iTNucwSKQS7G1mGKWw1S6fOJnz6tRlVic2uVCLmapmDBxDWM6p1KBSgs1CzPFYoUWNflZh0WuzO0yYPlrhwTslH5pvUwosoROgsxI6GzLhJbySaKxO2MkSHAGTUZmjM9C/yci7RpLkmqDnUx657A81cStCSsPDp+f4zYc+jpIKrzGN714i8g2vdSOuLzocs7uUWaVhIkLPEKgN4sEOP9x5DVEN2Q7azNgJ3FwQyR5y1sNdklRth9lywLFZQxhZokLKo81pZO8opShFCAibIa70eerCeTrtLsUdF5VDMvQQaYrvl4h0gbBUou2PeHqhww/7L/PN/rOs9K7w0LxG5gl60KewVCaaqWMTjXQl0YNTfOscFEcB3UIf7RkmChVaOz20NEyYkE27R+pnKCTSl6i7FXpgePaFC5RrRQ5P1hhEkpZNiCMXrRT9ECbLU1TmFsja7TFzZy35aITyPLJuF29iguYRQWOiQzJTxI8kGE21GrC4VKMSwc5okvzYMiemxpFTd82+xOXWWUaDhHSUk6WGYpgTuTn/5MTv0Ypb9NIeuc2puhUec04zuLbGoHsAU5McbKwhigXCybGhlAoC/HqdcGqK6l13UTx2DG9igmhpiclHH6V2770UlpYoHz9O5fTp9xy54tdqOOUyWbtNsruLtZZgaopwfn7sWl4o4FWrzP7Kr6CHQw7OnGGwuko+GODVan+rqBAnDIkWFkh2d0l2d8dzQ7OJcl3yTofyqVO3mFTpOOPFAqX41rPPjl97E8vqeR5ra2ucOnUKz/NIWi32nnqKzksvsfvSSyStFsH09C3G9cdBW83lg8vvyJiW3BKnGqd+4nP+AD99fPDM/rPDjzM/+okK0/n5eZ599lm+9rWvceXKFX73d3+XKIr4kz/5E6SUJEnCV77yFTY3N3nyySd58sknb9mO/zj8fb9BftxNLtIWbv8cIu9hnerP3Izo7xp5eAg1WkVmHbAGYWKsUyKZ/MK7SmBFPiDc/o8I6Y7lktIHIXEGF9DB4i3zmZ94TJ6D1GYcVC4FFgtYBCCV4PADgsxxGQ7BV4Z7T8Z8/OE+Kn0Z7fRBQBAExPGYUhV6hPGaWPfH9+u8DmNgd1fS6wnC0L7FZNfrPIcQYKanEbKEknWwObZSxczNoAuz46IaMK5Dtyu4ePH2wjTP4do1ZxzN6UC1am/VicabIC/dTVa6i6zyALpwlDwMSUMPoQ1GuaRegnF6IF2UKY4LU5tj3Cr9F87T3lsjjTyUUKj+YNyDKSW2VGL0O7/zrkV60I9RucDpPT1mWh0XEZWQ3T7Kc1GhwqSPoqIIe98dyOdT+ldzthnSlpC7ArdQR7oeOm6S3f8I+m0GHqN8xJ+tfpmn11c439rgxe0e+6OU5WqRQdYnt5pBWmKzu4S14tZYrbU8dMeniE7fQRwt0PS/TlDxkMUGAyPojTb5hNrjVdGkLTwKMsRLNc3v/ohyzSfyRlzK27zGAV2R02xp3HrArLdEIO+hOj/HRKWCd88DCD9AYilplxnVwAhLIF2O+PPMuBMo5RIu9hBSgJboYhftbPDDb0zwyupp9ns1au4BrswQGoL1hEGnwkZJ4g/ym1dCMDIxPanZK0p66RAnFDiTRYwKMa/ucOzZTewgpPW9l6nu7+OmMeVPbuHNJHhJwmDYx6lq6nckHFwPWbMDrBfgxZrehI/wUtblOtecffA8dpwuve6IqnY5MTmJXzpNx5/jutGYtsWUBhwqbyOsxrEKV0i22of44ctfYrh3gpWkhIiKnGzCb94NrWGJu6q7ZHEExiUsJMxP5DRsyKPHr5BGVykd6bJ49zM8clePLw5PcGRVML/bxcVBCUVx4dg4CkoootIAU2/TsoZGcgC+RCuNFJp+FlP2Qe306HVz4u4OSUdSmPOZO3zA174+5MKaxZEG6UpaqeTJgaYRgvU8HCckGWbUi32qCwlXbEI/SxBlRb+eMWlyRGhJAN8KBIaNruWOQgXPq9AzFXxnRDMM6CdNHp9ZI7cZwjgIbeilLh0p8VXKRi6QwqHm+OzkhpU04aML4ViiLRzqusJcrwh9gXQ0288XmHu5yqOTv8CXfush3MAADlYLBtdWsD1NuDLDvQKOLVucDmC3UM4W2u4Sj/bp+BPoRDK7H2H8AsPpIrXjKSLUTGR7WJuRX58k2y5jui7JrmTQLhIJjVsoo3JDYTFif+sc3vYB52WMvz+O4N5LNcZo5vMmXlSmpVvs6m2+417mpdEl1vtrrDh7vOqvczoqUXHCMWtX9WnevYCcDukXCjzz4oCr+2vIkaRWLZHbnGjX5yOFZdqiw6bfRRo1jmHJLc6kQ3Q4wixn2POWl57d4PChBrXFafRMA1EJKUuPOx75LK5ySXZ2MEmCThKU7+OEIU4UjfsseyMqxU22nZygUqRcDYhChRCgHMHOwqdwy1WOR4fpnfsGovMkE9dzdvIOPTPCaE2UOPza0UeYr36ROyfu4s7GndxTu5OJM5tkNzbHfZW9Hu1XXmFw/TrBxAROoYDfaODX6zhRRNpqUTx2DOk4uKUSbrGIuOkJonz/LSZC7xVepULxyBFq999P3u+P9+M4mDzHJAn1hx6id/48vQsXwFpsnpPs7jK4coXCoUN/q+JUhSG1e+6hds89uOUyXr2OTlMKi4u3FZHScUj7fV7a3MR7l/N0HIeJQoGdJ55ACEFULJLkOXowYLC6SuHIkb9RhlwLalxqXyIz2VuMjvpZn8eXHqfkvfvD9wf42eODwvRnh/fdlff17NK341fflO335S9/+SfZ9T88WIO/95c4o+tY6SFsDu3vM2p8ChO+c2bXP0iogHj6N5HJDjLdwXgTGH/6x/6L230BxO2TilUF3M6PxkXt3wZCkBTDcQ7gMMGzlty7WaBYSylOePgBgfmwMzYMsi6JyZGjHRC3F8VWKIR5bxLq1VXJ974XMBwKrB3ngT78cMqpU/nNfbkIm46LtpnjaPv6dbDY11dnpcBJc7LQZ3ra3FaUtlqCs2ddpLS024pvflNRLFp+/ddHt9hTmecILTDK3pJTG9dh2BibcQj9SYLd76DiFawpIHDIvBrPDoaUdi5TNAmtuMdm1OHkPSdoutVxBWzMO8bZvH5MleVYJcmL998sTiNsrQT33YU5uI7NBPmx/xaV/DnELpeSbXYXEhbOKHTBciAM1/IOJ5JTqFKT9N57bzvO11a/RmZDmjjMZzG+GTHaaPN0lnDvkSrb7Rxxucfd60/glCVZocC+mmBUHhtWOGHIbPWHBKmFm5LndnKAkg6Z0fxjLvC/8TAvp1fJWi47nRZe/SRnwicZuF0cJDtVGMiYe20VBo8AAhHH6GYTMz2JF2dIbXBLJcyBoRIfIslc1nsxhWDI4vEmqd7nbHuVgTpgTjb4xlc+T3fvGvlem013nlfWHuZjd36HxeY1kjhGuJNI+uShg9vPQEKuE3YwjHKFZ0JerKU4rSt81Naon91GH3qI1D1M0j5PPBoQJiuY84LWco1isQitFlk/xql7HP5Mlb98NUEpByfVlOM2O16bAxlTwqXiBAgs8WKRS2t9ZtTdRPkeM8mINLlB+FjGzqbDbj9gut5isO2T2ALfPv95fHfApKuYO9qEYI50c5bpo9/mX/7iK7z6o5xUOEgkixVLPRn3zk2UNV+arzN1zzLaEyhxwN5onovPXSUvBNhuFyEVebeNKpdxjMTvG65cO8T8sQt4A8sgH0ABlEwZpJJ2SxIZh+GNFFkzBI09RvshF9sZKz1BOZJgfaynyXoCx5PsPt+ntlwBmTI5E7E4E7PZsQyMYKrRoGeGWJ2iypJRbJhdD1ja8fFyh4KwqKqg14wIwimEicCuodOMgzilWFSIzOLnBm+QUfNyNqRHSSheME32ky7xdYPe0nzrmmamIjixJGg2PIyjmSiHhLrEZ9L7aD5YZe4XPknufAyRvYxSV+lfucKNbzZJenfhFVp4skX3Yk5hqos1LtKL8KSg1BxRvNzlTPYQ/dEqrmPxtgZkNYFfErgqJ9vNsaEFBJ7y0UYisXRtjys7A+6b3aFTP6B/NuTIbJPP7AdsYtnfDZnWIYEM6MtdgqxESsJm2uXGYBM3Byk8rOdyrdXhDwqv8S+ie3CVRA8GOIUCRz98J/pgkXt+5yIzTwd0OgkmN4Suz+R9daKVNsdKC5y1O+MFktyifIXnW6yO8Rcc7vt0g1Mc5//5V6/gOnt84bd/geKxGpWrQ6KgiDxcI5icZO+ZZ0i2t/GqVYTjoNOU9OpVWFxke0XiHhnSQRNUq6ggRJqMjjuJiYpUZYnNv/orosYNBr09dvc6zGc+szJgGIaUikVUcReWYxAFAidg/8Vn0Ulyqxf09aIp3t4mmp1Fvm0CMFmGHo2QP4WYDieKmP3c5+ivrJDs7uIUi5SPHyft9Riurb01NsbzMHlO++WXqT/44N/62F6txsRNhd7Ok0+SD95ZSgsg3mVh9PX2s/bLLyPfLCUChFLoJBk7Jx89+mPHIoXk14/+Ot++8W3WB+sYY6j4FX758C8zW3h/2noGN25gkoRocRH1EywmfIAP8PcNPxFj+tPC3/eVi3daffHaP8QZXhkbpQg1ZgeFgzu4SFa664280Z8TWKeA8SffE9vp9l5G2Oz2DUIgrCYv3fk+DQrCYTzuN319IhMCpEBmhjxw4abU18nAHa5jRX4bY4pNSWsfGTO7b4McreOMVsAY2sMKf/qnEUEAvj/+UwouX3aYn9cUixYrxtJgpIc0BQQ37xOTkBdOgHpjMs0DDykhCCyXLyucm3X08897WCs4fTojisaxolkm2NmRHD+SEXRHeHGKk+e4SYbKNfnNfFasxRskBMMUnHnwTmDcJjo4xOVBl1E+whcO3vXr7DgJSij2hlss+gIn3sSWPLLTD7yjMsBJsnGUjRCY6Bgy6yLTDTADBIasNsng9O/humXU4EWSwQrnRhu4VpMVFMFehpc6dOIa+xKif/E/wtvs6Hc767z89FeZXrnGqc45ZE8jwxzPEahOm/lhgr4wJL+eYVOF7CSIfoIbDXm0cQRZGkuwCtf+TyRv3IPdpIsV43smQPNtDo0/+kGf8o0t/iLa4nriUFeSQFmkkLTzAn9ClU8VC4jSAfnJQ8Qfehx15RpyMEAEIVZLru2WiTMXaw1bowJ7Zo410+bPsq+wnr/GbtrlK98d0c5GHG40iPcG5H0fx5Gsbh3lcGkNs1KgOD3LQKZI02byYIdSv4OTDlGnDc1lgzhUZbc2R6KKLJwfMR0dpVI+zrnzP+D6/gWKx/vUDmXIa5pRBKrZo5c5JMuQHRohZnYo6CU8JlgsLzAVhLxkN4l1yqFCk8gNxk7GnoN/ZIZ5tUsxrON4knrDJWnf4MRUBVv/L6k2jtOcmeHcjRPsHHjEUuPeqREhpGlI5EoOWk0+/OAqs15G9eosM6ZCrZYi1bj4sTanNP0orh9iVYryLyAK+6TDXUzVg9UuVghGpkNh9hhimJLPQTsJkbsVXHuddL+PyQRtkdPrOPhbFtl1yG2IV9UIDMrNeeHFASOp8SIPPMlwJUT0fbajlHauqE/N4FmHgtfDr4/jPGo2olbwqAZFtkhxfZeTrxVpbimMAt8L0JlluuVx/Ud9ttsZw/0+JvfYVgMeWhwQhg5qlIOUJITEMqOJZG9Y4GmTMzqbwIbFky6jnsdinLF9LebD5RmO1GvM2ir2uTuYPHIf1aNH8ep1ovlFjJkhGR5h46+3GNzIAJc8KVHwekQTN7Cvk+7GYNKUfJTjFTM2n4k4ECMGIqZvYw4OMtLaiKnQ4ltN4/AMly/tcW3YYm+UEusE5XjEXs7QOJTcDH8YYDJNdlEw2C4id328VGOzhK6fshPGTFVqPNG4Dr6LSRKMMYxESt9q+mlKozhiWRaw1lK96whxe4rvfuMK5RRqJxaplhVTMyUePXEPnajFa8kaXc9wPd4lcFycQOEfBVUUHDvs8atzgt85Nk1xpsNDv/IoKlrmj3//L9lZ2+HX7v0EaqdN1u1ijcFojVMokPd6WGPQwyFOFKEHAxKmOLqcsK9bqCzBdRV9p87F8qeITcaH29PIYYzNNfv9H6AziXQUDiAch5HWjIZDStHjOMUxs3Dwwgu3MYPWWpK9PQTgVt5qLmi1pnL69N+KpfxxEFLiNxoUFhcJp6eRrkv7pZeweX5bQSikJB8Ob0XkvF8wec5off1Wbuat19OU4vIyu0ky7od923iSJOGTn/wkwwsXbm0LgoA4SQBuscCFxcW/cQyOdDhWO8Z9zfu4b/I+7mreRcV/B6PH/0z0VlZ47d/+W/afeorWmTO0nn6arN//wPH2fcQHjOnPDu87Y/oB3juc4WVQtxcqVkjc/jmy8u1MzwcYw6giMmvdXrxb+zfnlP5nwEkzXje/eTuU0WDMTempxkqB8O7BG66QeZ1b7xM6IQ+Xsc5bv2xCDwm2/wSRj91bXZNycLlBKfpHWN7a21MoWJ57zuXzn0/QhWPk8TrO4AIGH2nqQDqWMLuVW9dBe298hU+dymk2Dc8+67KyoigWDSdOaKLIAilCZDiOz/q6g9eJkcKMi/GbkNrg92OSUog3aBHsPYOwHawM0NG9WH8StOWp0TnKqsCFOTgW5ahE48uEifw6w96QqilgHpkk2vgPjKa+iHXfGoVghRgrggVAStr8AjR+GZHtgijSq0zA2hbCyfEostnbwPMDCDRxzbLzUIGkb7hkjtC5+yS/Mz//1g/NWgZ/8VWcUZfFSoeYKUTaR6wOsbOQaEt64DCrDtOcGNFNfW70M1ydczhfoKR3GOU9rFPCKh/SN9jf0A3pZl3GAsw3sFtxoVhm1+5RNiFnuo2bObIQRT2SiYSzSwWOTx5B3bhA9evfJB0+AJVpRLDObukE0vWRCHYHBVQxwpExf7jyQxZOn6ZY+yG5VqT9Krm7zaousXzfMp3Lmni3RZr5tMIPs/S/zJD96+9xR5wi9lZAQV4R+L+mUE7MKBhx5d4SMwz5/tVFesMOUeUU33/tCZS/waH/qg/S0JWWGUeRGodB39C8o4ucrVAoJzh5jea9U2Spx85axlo8zWf7n2Wtv0KsX5/kBSR9jk83EGGZmi0wvN5CehFzC/chvYih3mMYn8ZZmKZ+bIapaMjq4Dpu2Kc7UpgcioHEUCTJQpqHhgwuuqQHCTpxwE2wOscrzeHW6iR+jhO8SGbreLMdgqaLLgmc+UWuP9Wm1dvn6jP/CXHqLsLLOaKbsZu1adRy/EaELQPlnEHgQF9grUQbRactcRoJ6aCDCC3764JCxTDqQX/X4nvwwEGDJ5Z9olKFggoxoY9mk/96eoZvb7Uwjs/AxMx6ATv9Ae6GhwxSXMeSC8tiLFlfl/hW4I8GaD9gsA/0u0TVCuGojVUOw1whAIWkqCSj+ARufAGxZVCRg8VS6yhWdgtErsufPdHhtx9cZLQhsGkPp7CKLfl4bypiRuvrCCkJmk3i7W2E65ILF+nm6FhgjRlLXq1FmIxUegTOPslIo12BVIJ6IyEpZJwZZXyu5vKD9DJ7JsWNi4RBSBa3Obu3x1xWYs9I8h8d4URQ5vrzW9B0yTzYLYwojkBmBj+WjCqKF+f6tEWKb320gpbuEGfZ2GV3qPg3uwkb9SFfOvZx1r93iLTnkHY6uDhUttr4y7PslXJ+2F9FNVwWl6dRTsTzndcwaErlEGTKZ3KHT09ZksxlKfOZTzTJ7BmKH/s8Dwb/mFe/s8r/8D//7/zmww/zcKmECgLcUonR9eu4tRrK90l2dm4VgXErZjv7Z3j2POd6L9Bu3k3m16l7JT47/wmy7zyLVYr2nqKTKwoVizViHDuV5VCQnDvrMns4wUtT2i+/TPuVVxBS4pZKhPPzSMfBiSKcKMLkOW+GyfNxn+RPkWGz1r4rI/l3heLyMoOrV8neZIqkkwQniiidOMEn5uf56le/ihACz/MwxjAYDHjooYcIw5C242Dfdu0ArDG39vdeIYRAvU9EQz4ccvXLXx7LxN/0AL//zDO4tRqTbzNu+gAf4B8SPmBM30e80+qL2/nRu/RQqpsP/IdwRgmFVp+oO8QbjJBvZq5+jmG8Cbzui7fnlOoBSeMTtxWBPymk1jiZfsfrLaxFaIt6XZoqBNYtYVWAk2o8r0Oc5uSFk6T1X7htH8HOnyJNMl6cEAqkx8a6pSSuspe/lfEVAowR3HHHeKLU0SHy6CiQImQVHZ7GBBM3L47FyptS5DdH2USWY8c0vm/JMkEY5jjOWVx3BaXWUWodaTLuP+ognbexmUKg4gSd71Dc/iOEHSLQCD1Ajc5ipY92GlzurtKSMbmw7B2aIuz2Ody6CLlAlEt4n3gAO1UHBCq+Tl48/ZbDGCUJ0mu43jmUXMXlMkJ20XKZ9voum08/xWBlhf6lswzPXmLDzbGyM06ICVwOvAlWqpPEdz+MLpS4b/Kt5lny2jW8c+e44G6yFHRvGhv5IANEOkJT5ohbRgkHqSoUHJgon6bgCIq9V4hal/DPfhd5fp20ehdB+oNbi0u+8ullfRyTckY0UVhmTJvdRPDJ01/k3NWnx3EwNz8TzyY4ExmxFhxtzDMrC7jnLkLggZui4wo6GfGt73l46YDB3gjR7SHaHZ4brHDJdMgzl3p9Ap0PuHEjwHMFfa2Zsv+EYMKjuOQQzM5y8qOKhVP7pDMjGte+T5BaMseBf6RRgWGrCBtoWnrIgciYKvVQvZOUN/cgHjD32BpGAyODyaDnQ2lK4DUyvMmcYkkjXIFsfYpcS5STMBFWOT43SzfzqMoaa/tXSLojep0B+yKm4O3h+QHFrQGu6yOEoByVEdZAquntFkh6PkPdxDXzXB+CcftoQqKwQGo0A7FDceFVCr6hPvcwvj9J2raE0yOK87N40WNoJ0SGlxEypXPtGKP9gNodCcP1mDzOuDBR4vmJKYyOUL2cfLvFMN1iZ9RjlINNNEk5wZWCQaZYxOFKy+fZZMhqHrM3tASOw2TT5cWLCf0sp3UFsq4h0S7+zAnuLy5ytDpNqhMOp03+2X01mlkf41e4kcWkShNJxcS+T+WqxeJRSn1O7YQUthQbgwxjBFmWMYpCNA731TTq9DwT6TbCOkg7QeQoyk7K0506O8kEVzd2GcUGzZipmup7KOFC4mG2NXcXaiihkFJgdUzk7FF77FMIb7y4l3W7jNbX8er18WJXv0+WKurN1zCZASHHvYnWYIygZwJ2L/mMUgm1hDs/2WL6UMz0Us6hWUgn65xvp5SmCuMkpVSx41SJdEJ6SPP4HZMcnnQQwqG1kqITiwkM+0qwWRyxX7V0avDE8Q777oj1/jqdtENPDxhkI7TRKBQuDlNJk+0Dh+xiwPLkMaTrsjncHH//HIWz2+VsaY96UME4An9oKLgBp8MFzqobJGQ8uBLwpSOghoojuozeT1CeQwmfec+luHUn9x0/yS/eey9/+PWv85WXXuJEvc7k9DSjjQ1smo7nhSxDSIk1Bul5+I0GZiujcqPAce8YdwZHePD04xSDEv3VVTCGTq/Hue/vUpnMiMopjqsxSrC+OcmFlyvc/+lP0/7ud0k7HXSvh8lz9GhEureHPzGBuBnb4lYqmCzD5jkmy/AbDSYeeeR9iWp5O17YfoEnbjzBM1vPcKF1AYNhujBuy5GuS39lBfm2vNHXC+Vobu49HSPr92mfOUPv0iXSvT3cev22fcK4GCwsLSEch3wwQLguxeVl6g89hFQK3/c5ffo0eZ6T5zmVSoXHH3+cYzeZW6s1o40NpOO8hTHVwyETjzzyn12cvl/YfuIJhmtrtzHB0vNINjeZePTRn8m4/qHhA8b0Z4cPGNOfIaxbRZjk9g1mSB4u4Qxjiq0+SAFSIgF/GKMyTb/5t5eD/H2GdUqMJn6RoPWdce+mFVjlk9Q+8r7FsgDkrotH+g4DsGgpcXI9/nzeBONPYt0JWFpk2H5nm32Rd1Hp3m2y5SCUZPEOnuiR2tJYdwsYKygWzVvea90qaf0RUmtx4gwnyxFY8sAlC7x3XbxYWtI8/bSgWDyLEAOsfaO4b9a28b0dct6QVYlWC+e11xBZjtv/OqpZQU9PgafGclxVwOk/hwmOMeFVaZvd8Zhdh50PzdG4e5eukTww9QD29bBxIVHpPkKPsOqNjDzHvYCtP4fc8RGmB+Q49oB45xV2L9ZRURXhuASr21hjCa4W+e6hacpOAEhs3sNOBBghaIbN287duXKFRtRkwpQwdgOwCBEjZYcsi5mLCriMsCLAYrHCxTWrVFUVc7CLaNYQAjzxEs6ZSbKl03jiHEaGSCSHCg3W+i3mdZfFpIt/4PJbssaw9wP6pToCi8NYsuz7MW4/o4zm3gubeGYLUa4iXBdhYnQqEIM+2y9u8PKzDa74p8mtIh5p3NPfR93jYvGwNkDKO3BcF50LjNUIlaPUBtYGGCM4fLgDuDRn+nhNS3cY4pcNqmF4OstIpKYoHdwh7E83CZyMZw7B3esOlYU+IJDGjIvPDFYrknukoLScQQkEGp3UYVQEGZM7gsJkERG3Odlc4FV3h8JOiYNsyK6TIJWPPkgJszY3BtvMVaeZjCwSw+CgRZLN4loFsUMt32RvMAnxXdSLGhFaVrrrbB0ofvGzPyLTgivr08StIo9keaniAAAgAElEQVQsVQkXDmHwyUUGQYwVGf0LPV77g5ys9zzWghM5zHziOJOfnmTrzFmWwgeorL1IP2+x645IJDjWkieKYeJTriq6UjDnWV5II9aSDkZpfEBjOd8y4E+wf1Sy+uoeRzOJowXx5CQ2Enzm1HHKacj9ZoG9dp/Xzuxy9M4Bn5iaxe1HfHPjKjmWg6TGx+2QOVEg3jtAWRccy0PVAutxxoa1NBsT3LF4iJ2tdX60X+LL3dOcljucLuzhCRdn/wghDTyvQ8F3KBCQo6mYAlU3JMlyUBklF6we3y/GGggk/ROCjcv/K9dLj3BP8x7mmk3y0dh0x2iNjCKMKrFvT5HfWMGPoFDPyfHoDjxwYHukGHmauz7WJwJCaXGUg6wo0kO7LC6E/NlLC9hJQWfSZ2JthQVHYoQhdMZtCDYdUigpOvsx8TDHzTWVos/WhCAe9YlERC8fjM2G8oTMZljGxYgxBsdIGnkFr1alf3WP/nBIqVRiJprheu86rnRJpcHb6GAP1wDB1LHTdFdWiIzLb/kfZ2HHEIzOMleMCbM3fqeHa12Cok/au4FbuAeduLC/z7/89KfZGwz4n/7qrwief57//sEHibJsXDgOh2PjvDDErdXoXriACkOk6+IHBcxui+1vfIPpz36WXhDw7//dv6M9GLC5scH0qsdjRxeIvJznOpbvnX+Vzzz+OGZzE5NlSM8jXFqie+4cwnGwxjDa2sJvNglmZ5n6+MdJDw7Iej28eh33p9BXCvCD9R9wrnWO0AmJnAiL5dmtZ0nyhA/PfJhweppwZoZ4awt1sxfWZBlCKar33POejjFcX2fvqadQvo9QirzXY3DtGs2PfpRgauq29wulKJ84QfnEiXfcXxAEPPLII++4rXT8OOn+PsP1dUyxiMkyTJ5Tu/de3B/z4PzTxnBjA/W23ldrLTbL0MPhWMXwU1h0+AAf4P8P+KAw/SkjKT9IuPcNrPMm6anNsU4FEy5R2m6D8zb5h1S4aYaMU0zw893sbqLDDMMlZLo3jpfxJ997X661yHgDme1hvAmEHiKzA7Q/hwnftHIrBWng4Y8SrHzD/EhYSAo+UW9006v3bbsXAnL9rocXegTW3Pb6oUOal3YtLkNM7CNvuut2h4qHfzEG3mHCEYI89MjD93Y/VKuWw4d7bG/3CYI3vub9vstHHllDKhf0MqCg38d99dVxXqorwBtCFqGu30AfPjRugAWwOXJ0g6WJ45xZv0LRHT/8OORk1lAL6hTdt0mshQWbAWOTKZXmhPlZlHgNW7qKTY6BCcBpsb26QqBnSezjoHNMb4Qq+VRSwVJc4EYhoYiE/i55MkuC4mNzH7vt3G2pBGnK570HuGivEstNrDW4psuMX+Rk1UP3AeHjiC65jXCyPqI3SW4VWIm1BUAgy3ukqw/Q//X/jmj7/0bomOLSLzG98gdM2CKtS9uoaHx9Ai7xhfISf9i+Qrgwy9zFG+hQMRIJH/InCcMSbpJhlYN1XIRw8SbnMD96ila8yDN7hxCV11kBydrlB5Dht/nQKbjS6dMIGywfrnLuvKLiV1FqHWs9RiOHU6d2kf6QTpLTyEZoC0IqtJsRS01fWVwLEo3BwzECISDwNL2PVTi8NyAympHI6biK7WmPzIE09igEA7Tx6CchaThLpRRg1VjaqZQDjkvFERxOirykHDbp4yhJwW1SyJpEoxUckeLYV5Askgx9pMwwtoqjXBw3RAeKo84aq8mH6XfvJ1fn6emMhz/2Q6qz68x5C1xZe5CtTpFBNsXH5z+GsDAsh9hckHa7XP79H+AEBq8YY8iItebCn+4z6R+DYogRihW1B7aL4+R0STChZVZXiEzEoF+DYo1VtYE4cpao7bJnNQ5gcEmVII47cDzBOVYm2wuxq4b7F45xZHqexAnYOBiyv9snl9A9V+HsDY/7Hx7wkSNL+KMim9sNxNGA5u4LmAtdcnIcmSMY/+4c8yWLd85gAg8hO+CWeVZ3SCoBznaBDSFJtaFo+vyG12RpuIi8r8B/WH8FiWTAiFXVZ3lPUbGSiShCKoXyHZySonXfCD+QeLmhG3f4oz/+V6zsXWSUDXB6KYd1jV8qfgSzu0//kkdxpky+m2FXoHrUp3bIZfPlBRbnQ+xMHybbBCIlmbLE1YyJcp047zNRGLLQ7PLijRqFwR6NaxqjA+TEG0Y1+RB0NyHwfDalRhuF0tDYyths+ojQIx52mIwmcaTDysEKmcnwnQDlKE6auygW66AkQnTo9/uUSiUWy4skOmFrsEViUrI0ZkjKocI8rhtSP30HSbtD2tvhxE4Ft7BH2dkie5OdgVCSwWaKU3vj991kGQjBRLHIv/7iF3l1Z4ff+/a3OVWt8luLi3iFAsYYpOMwunGD4pEj2DwnWlgYS15vmup0L13i97/2NT7/kY9wtFrl1UuX+O4LL/Dk5essz8xwYzCgNjXFHY88gt7fvyXHdYKA8unTjNbW0MMhab/LxKOPUjk9VqR4tRperfae5oefBKlOOds6S+S8tQUldEJe3X+VB6YewJEOE489xuDqVQZXr2KNIVpcpHzy5Dsynm+G1ZrupUts/PmfI6TEq9Xwm02EUqgwpPXcc8x+7nPv6zkJIZh49FHSToeg10N3uxSXl28rCv+uEc3OMrx+/dY48tGIdH9/nN3qOGz8xV9QvftuCks/RwaaH+DnBh9Ied9H3CYLyDoIQHtzqGwTqQdgc7Q/R9z8JUASdYfv6l6KEOQ/54UpMJZJOYWxdPc9xuyIvE+4/VXc/lnUcJVo6yv47WcBgTO8gDN8bSyTvZl7alyFdtWtCBbtKJJigHUUbpK9s8zXWIKpJr3hOzvxWuni9s/elq3qOFAsaM5feZBuzyHNJK5nefyxIcuNEbnrgJSIXOMPk7FBUZpjpHhLT+jfhGPHrgFX2NurkKaKKMr4xCeucuTYATK3mHQWhIdz4QJCG1ASHfeQ9hLWSKTrIazBvp5zZzJ0tIw/cZzJwhRbwy0G2QAtfe52U47X77y950i4ZJUPIYwh7PYJ7Rlc+RpOrJCmAdUXMXLc17j36ggpLcY2ELmhcPA8btgBNMuiwVxR0BqtIU3K1Nwn+cxd/5SCd3uvsanXcc+cwfE85uUui17KDHBUW6ZqEcJ3MX4FnXkoM8Id9BCxQMYRavsC9nqEbVRvSrczbM8nO/oYydKvkjR/iVL3CbJhi8FmD5ObW+dscZlzIXIfpX/9ArnSBNbns9UKnywcQUVFBCAGQ2wUYG0Na6cRWvKNp4vs2SaZG7xBzo/K7Eev4t1xlpEesjHYIJH7zDVDlrPPIrOcMOxx+p41thv/ie/dWOGlnQ3swXW8LMNdGWGNR+9wTkdaFGC0ZTuIcKt1ZgtNlvbbePIGYsFBzCZkdUFcMHSsg6slU9ZDT2fsbM7ih5CHHkGySCAcQqXw9DTYKja/g3x7B699gEp8jvinmRVNtA1IrcPRwhWssPhSQVJglJ3EUkYpgwinkNLFkYbD83s8+NgRTPUFpu77j5TqO4h4hqvXPsSNrktuNYlOuKt5NwBJOmKjv83q//H72M4arr9Hkg5J8xFaGTphn+0bO/yoXOAgHeDv9FDKJY1H44c8BCNHU88D7DCG/Q5DneMewM7EEIvGyRRWC/Kq5MXZFqOkSBhI7lssM30kYjqfpWimGPZj9jugS0W65TpEJXqZx9NPr6MGC0jb4EY2IjGaqaMB2av7qNEA30/QsUAZkEtV0kJEbtu4EwmXMpeJj36EQlRBuldRXUvZsVixz4zb5nx9DVlICOUE517aot/tUO2CSAwNHL5wuo7rFchHOb2JGP9IESkkAsvL53f5ztb3GIiYIFcYV7HhdNlvrXHSXcJvztO9miGVxi+EJK0C/a2THHQVJkmpPlRh+ohmtDBAVD2sM3bhXSwvst1fY7gXM/hGRmOji8wzCnuK2tBnqubiFAy91QSTgjDTDH0HbTWO8ggSWJt3OKgLBnGfhlvhcG2ZSEXEBzGHmOFDa2UO7cJ0S+N3h1SzCkeXjuLflF42wgazhRnKJqR7fILpyWU84YwVAXbsuO1VqyzesCT7mvLCHgKL4GZOMy6YEH/uML0bS2PmbjBgtLZGdnBA2moxNz3N5x54gNXLl/m/Ll7EL5U4NjNDL+9zPtpnyx8wdegklck31D394ZAnvvtdDoB/+s//OV61Sr1cJooi/vryZY5+9KMcPXKEvc1NvvDYY4TWgn6jOJaOw1/55/mj6CW+VbrC0/I1elmPOyfeHyNAqzXZTTOntxeSu6Ndzu6dxXdul7eO8hFHqkeI3Gjcz1mrUTx8mOLyMsHU1N9owGS1Zutb36J3+TLJzg4IQdbpkHU6eI0GQgjywWDsTPtTkNeqIGDm5EmyILhNPvuzQDg7y/4PfjCOXtOaZGsLoRQmz6nccQd+vU5/dRUnihCu+4Fb70+ID6S8Pzt8IOX9O4ZMdihe+zfIeAOBwagio+bnGU39BgjnjeLKmDHr9i6wP2dZp+8n/N2/GPexqQi3/wrI12NhLpKV70WYGH//r98SOWMch6T4tq+EtWil8IYJ2lXwemFoLdp1GDc+vgukT144ijt4DfsmF12hYyoTy/z2b8S0exnGQq1ibhK1Am+UkgUuYX80vj+EGBd2vRFp6JO9R9YUqjz66HUeeaR125as3EInASqziCwfF6XDAbrXx6k1kJ6DcMY5r0ZbkGCUy6BxHIRgsbTIYukNx0Lv4ClE/yy8SbIrdJ+k9jEQAn+Q4DqXEGowjgASXbAS2bkf6t9D95dxIosehERqhajURVX2Ed0hvhhQRDLVqXGsPk8uTjK4678B511WtYOA+FOfIvz2/4vQBpEfppBcIG0EDKsJjljGCTRSC7guMA6g55HJHgQG6bWQBz301BTWNMDKsaXxrYvXBeGgk9vdJyUJd5SPc/9azsLMDACu+yqINigXE0nkqA9ojD0NpGylChG5HG+0WY8d+rmPsJaqd51o7aO4gx6mcgNhBalOWZ6r86VfGMuNw/AZ/v0r59CJoeiNH9h6psTFWcHRqkO9lSOuaNTREY62DKoRrqowVS7jXd9htNshtAFbOxmlewSq5FPFsK9yjhci5qsVdp/7CN3qy/hzZVxhMeEKangHvoqw1sPmsyCL6HCevNhHJgYp3rhe2rpsOIuYNEWJaTorAZOHJhDCIh0DwmKtpD1oE0STeH7Kbprxx2emWUnWOOEWubuc40tJbnJG+ZBO0uXpved4rX+V7SuXWdzboiEHzOUKKzIuixHnSMgkaKtY7W6gzQb3Naeob8RkM2XSlsaPDY4WDLMBZVlkOFNEyR7CGTLfh/WaZuv+IcoRpEjcbU17mDLTW8AZLKGBGzKn0iywdq1NVp4EeZNB9zyeWbnImXNXyaqGRyePUZMRm90R3xx0qT26w6mdOrVRl8Ipy/4IhvSxWQoClBvR//gpHCGZCCdwjx5CTu7Bzhp5GnGt4LKvc9x0yH5/i/vvLbD5mmSm51OY8rinOE2pBG4wwj26RKd7Bc+AEIaOKPPi2vdwpIMwFq1zlHIJnBCb5mxHI+ZNBd2N6bYCRo4LWNzyAWa6RHB0ieuNgOnGOkK5aDKMNTTCBgXjUUxC9CXwM8h8j9RNKLQzDlUO015R1KIyeXKAW1G4U8ep7l5GpwkpmlZNEXuaytqAcuwyYw3z19oU5qp0gjJ3XbJoZRGuR4KlqAOmnDKB1v8fe28WJNl13nf+zjl3zT2zsrL26qV6B9BYiB0iBBAUN9EyZYZkh+SxhhGasJ4UYceEX8YTo4nxg581D/aDHTG2hpZFOSyZ4g4CpEiA2IFudKP3rq59z8o9867nzEMWGt3oBgExSGEo9T8iIyoy8+Y992bWufc733+5ieIoY830oXv4zIkazy09R8bJILEIBgPOX/gxjxVW6I32sQs2jWtlRo6GJKEEozA6xS8KnH2/j7wyT7y7S9RokPb7aIZxKWkY0rtwgS/MzPD5o0f5D2+/zZ9feJuHf/MoE76FMD02nXeYC1o8Zp/g9Ntv0263ubi5SSef5z//yZ/wuc99jqknn2T8ySd5o9XinmyWw5UKl32f/sIC3p7MI7OXAf/VzrO8GV0iY2yKhSpCCJ5deJZu1OX37/n9D7ke/HS0zp+nc/Eiek8zaxeLVB9//Dot2FVDjXg/7rPQWSBIAhzpcKB4AIHAvY3J40dF58oVkk7npqJQWBZpEBDu7ODVasMnjfmATxhSXQfr64Tb2zjlMpnp6V9auquVybD/K19h+c/+jN7iImkco4DcoUPkDhygv7pKsLlJ79o1cnNz2Pk81See+Fjpx3dwBz8v3ClMf97QEYUr/wcgwcoNNTFAduPP0FaGpHID9VBKEtsauvC9fwI1EOQ/XjrJLytE3EDFuxgrj4ibCB0NI1yEGLrj6gikgxWsE+rwtvEuADJO8HoBwhiMGhaMRkli1yaxLaLsh1+Io/KvDimj/QuINMIohzh3N0KdRBlDqfg+qq8QKK2R/RBz429CCIwS2EFE7Nq3aF5vB2NKpOkoUnaBG1esI1I9S5grgDF47V1ktwsY7PIoQj6INC+hIwft2IAmtmLCkU+CdfuiOCo/jraK2N2zCD1AqxxR+VfQ/n6E1sg0Qdq7gIUxBWBn+I+hM5D6CKtL6VCG7RcgO7lJKsrIQYyIYlA+nuegu3nEuZD0izPwIVQrffAgwf4vIBd6mI5gKbtFWAiwjaTc6pGNbKKwS8nOYKx7EV4CW98njSPCOISuJi128eUmWMfRlcp7H+7PQP0KwpKYJB3SMId7JaGIMQaqVQhDcF3i4C6ks4kkRBCTjN1HKk9gDV5DinWsWhF7togvV1BNMEYRJAGDQZ3T+Qd4sHCSysQshmH8TC/uoY1GUubiTpl+3CFjv3tDkrLiVDhMlfknQ7xsRFknZEshA5Uj7uWIsz5vvw0nmk0qdoFDTonVpMPiGZg41mZkSvKkqJKJ8+h2joo7y9HxP2BTP4vPy+TzPWyvjunOYJIJoniS1JVY2SwVt4Qlbr6sqCQiKedJ8wXymWN0di6xs3uJ2sz9OHaGWNj0Bn3iQUBlZoY3Nt8gZ+dYi7bpxl3aos/p3XM8kDuOcmxydo7/cuVrSKnwtMRthWjdJRwMuDoA5cWcLg/wI4WtJXY25ZNjHX6wucNgn6DdypNpSLo5G09JiA07GYXKloauto6HdkNioRhvZGmZmFSAZVImC7C5DsfVe1q31KS8Xj9FrT+JKnkYoB+FvHr1Iuu7O/RVzF/Wz7C64LJ9doMgiklNytEJm32llPC4T6moGNeCzppHf81Qe/ogow/u50en5HX3U6NzyPQqopLDhDFJFBInMddWA2wMlqO579g44w2L0NKYxGFbWRytRERKYEcDDrbfxnLhjDhEN20RGwna4GoLqRQCiWssrgwWqDaGkU5OoYDn+uhkyBxxpieIpiukoWa7XcIupQx0TMEpUPWrRNurTEYn2bfdZc1JSbRmylfce7IMLUhDQ28tQSiBP3sMu3ycidkRGvV3kDrG7dTJttfJjlRoyS7VfgEhBKPXuvyT6gPs+is0ojZ2bFMQBabyUxw5fJiLKys05+dhMMBNEg7s20dFCPL9Pl848knO6AUavQZXf/JN/snDi6i+AGlgu08y3qK5MIll+Sg/IRl4TD/xb9ldtjBhSG95mcHyMtJ1cXI5hOMQrK+DUqhsluzMDP90f5m/ar7KC9+6iLQUn3p8gpLtcKUSELRaeH2BrxSmWMSxLFzX5Tvf+Q6/93u/h2VZRFtbRAWLt/QujaQ1lFCMFDh/5RVyjS5j+QlORZfxtYX0PVRuyBbJOBle3niZ3zn+O7fQbD8qOlev0j53DuV51zulOorYfP55pn791xFKUfbKJDrhzZ03rxepURrx6tornCydIKt+tn3D0Bla2vaQLn0DhGUR7e7i1Woo37/JofZGpEHA5vPPk/b7SMehc/kyjVOnGHvqKexC4bbbfBCM1nTn5+kvLmK0xq3VKJ448aFU5J83cvv2cfxf/SuW/+IvSDodnGJxGCW0sUGwuYm0bYRS112ZN3/wA6a++MVf2mL8Du7gXdyh8v4ckc/nieb/fK9D976iRbpYg2uE1V+76enIHWobhR66H6I1Qmv6hQzpHRrvzwQZ72L3LoJ0kUkLmbwXOSNMgnbHQToIHZLk7rp9YWoMmfZgWACKIYU2dSy0FCSORbTnhvuhVBAhSP0Z4vy9xPl7iAufIPVnUHF6Pcvz1l0bpOZ9xadGqXls6yqW/xrSvUKajgA/PTYnSQ6i1BJS7iJEhBAJaTpFGH4aeNdl2Ma6eAHb8bEyOUTqYNIpRNxET02g3SJSe9iNb+JtfQO7dRptF9HuzUYU2q2R5O8mLtxHkjuBsUvD70Nr7DBAWcsMC9MMQgwQdMDY4K6jRYpKH8bWLeLIht0mIo6Qtk3ZUsjUgBeTFO9FV6skJ07cerDvh8xgTV9lvWxYM3XKDNBCMcgEDHJt2gtzuPUMihhjXqcftkg6PYwRCA1BAepdjTlxADl6BGMNb3Dykw+SLPw50vEY1HvIvS66ZMCu+jXiQFF5+mn8K1f26MASk+YQ/nFMOEF0zzOI8hqi0EOPTODXijx35gBO1CZj7xJ1swQmYb48SVz0efgLZxFCXO/OylRzX/E4EsHpnRadKEXKEJAYM4IeHENnbbypBarlSfoyRxLOsCkNmxR5sxHhRHXuL/Y4XvLQoU9BeIwrhb8iGMkWUflHiCY+TTp6FDGn0d7D5K2n8JMvYe8+hY7vZ6M7wqntNc6vn2Vh+zKRK6AT4GGzGWwhpUSECb1igXJhlzlrFt/PkZudwkmnMBiSJETLIgpJYWycnTJ0ozaxJflJ8y26vSaHFgxH1m2s1QaFnYiZNMObnTOMtVJa75yjtbRIVE6oNhIik3ApN0AaMZRGC0PumIbEoqUcatkCE0dGEdUTBEmfq+kGFyZCjvTL2MrGYHhgVFItNtmOQ5SGQrGEsifxdJVPjR1hemmEiijTMH1a3RZJL+DhZpErqshzZ8+w3Njh8uY6q4NN1tI11vPrUIZ+fUDS3fufF4KtuiLwqswYBf1ZRDKGkxth/JFDWLmU/maDtXdslrYuYVsuyh/DDk6DUHQxfHHfLO+0m6yuRCSBhbAtlJej2IJUGWoij8ZhvFZDJbt4wTLejCSwsqjwKqNpSD2qEGKwUkNEjBSKYh9G4yxjokgahjjFIo4/XNjL1CaQGY+r5R6xIwiC/ZC9Sj7Tx1EWlnRI1ovE3Qw73/OZ7uSZHeSp9qtkipAZE2Smi5hYk6ZV+qsJcbNJPj+C8nz6cR8rNnRqHoGJOClmcbRgEA/I+gVqmwm1/XN85uCvcWTsCEf2HWF8fJy33nqLMAyJDh+m1W7TCAIu7+5yeHYWSwjM4jonDjxM86117pp8HjuKh3lVlsRYkrQDfqVP4+xJov4xyo/8T1QPHGf5Bz9AOg5xu42VzaIyGbQQnE9Tzq6usq41Ogio1mq8Fl9EmJhjh8qMjJX5/g8X2NnuMTPiszzYZV9cJi6X6eVyLC4ucujQIXZ3d1FKMTYxxr/5v/9Ptg5tsaTXOXdxiTcq51lx6vTzkq18zMvpRZbiDUZqM8Mi5Qbfg27U5Z7qPYxmbjWD+yjYfeWVW+i2QoghyyGbxSmVMMZwavsU24NtEpOA0XQ316HVo1CP2X8tRofRkLr7N0wU2H7xRTqXLhFubRF3u4Q7O1ieh7As2Cu+Kg8+eFPM0U3b/+hH6DBEOg5CymERKQT95eWPnJ2az+dpt9ts/fjH9K5dA4YU46hepzs/T+7AgV9YJiyA1prd115j7VvfovHWWwil8MfHSfZyc9/dd+/ateHfxqBcF3eP6qyjCJXL4ZRKv7Ax/l3DHSrvx4efRuW9U5j+HJHP54mv/L8oPbjt6yLtE9xAHQVACsKMixYSoTWJbdEbyZP4H49N+d8JCHtvccDGSBsVrAwp1AAYUv/AcBFASOLiQ7ctDq0wHrrxvv81OXQujfcWDT7yxCbEUGu693laCpwgubXzqQ2xZ2Ml+qbXbPs0UjZAW2g3QMTLuNEP0UkZrcZ+SrSQRZIcJ0mOkiQHiOOHSZK7uNFgyVQqqH6A1+kDAtIEsNAHnsBU7kUF11BxFylKWGI/VprD7cyjBaSZPRMpYz5wDEYI7CBFWZvvngyMGIHERSQJ2lki3niQVO7Hqh3CHy3htztkPI9MpQKVCmZkBFMpkmTuRgwGxPfff9t93QwHKRssdd8kwMHRIS4hQmna7Zh+r056aoHiaJHU2mWp38O4ILRNgmS1Okp9usQlx2POz5Bkj6AG8+SiK3T0CI7ZQokecbdHnFrUk8eJxRSlkyfJ7N9PcugQamUF2Wwi4hjtOpiT92EKOez2j67HIGlLUp1K+eGF4yRZh3rxbtZyx1gZaD71O69RGBlqmCWCo9Q4aNXY541jN1rkLy9w6dxryBWNjqqkuf2oFA6PnSMyLr43jfBdnBxMZhXHp1fx2j0+7YxxIC+xSHCyPbprinCrRdzWmChhY2kClc3glDwwNlYUo7o1ZJKiYmjEEW9de5l4aweRGmSqibodnuu/hTcxQZM+HRGS3b+PysDnYJDFDzcJthvYaYnc1DgmContMYTyyFRHyE9OsR5ssmpaLIkmVXeE6lvrEMRgKTKuy11+jqS1wdVcm5yO6TaW0bqLcGLUgR7OhsOqGyEQWK4meyAmN2sY9FxKXoGGlkwXJG+1dxmUc3R1HyktxrcNBTvHfe4cI1PzZJ2ASt7gh5NkJ2rcMz3Ck7XjFNUkd03/Fveu+VTP7nConeXedIJ+dpSg2+XFc+foJQkDZ8CW3EIJRcu0mDwySXupSSzaZKSma3p0xIC21EzcI/BnDfc8dD+V4zW6rTWUn9DbPkHVzLFtWmzsLOIVRzFxj0D3+VStxKFCnmurEeeXAnpxSKsXstUZkA0NI1JW3ckAACAASURBVCpLAR/ftalVi8jeKpmxUcJKQpjCfv8hemFIRcTsmhF2/ZgtOrSskG0/4nPdwwQkbJdbdPxNnCTCsTXOrCYMOyTjAtuRdNMB395yyaoDuKrCZtelWN/Hta87hLvB9QUVnWj6mwKt9tN4a4ckHUc6laFuLggItrYYKY0zOzpHbnyKE+4BPl14mHGnxrSssj8ZJ61rxOYA4gxJo0U2DDH9Pms7O7S7XZCSvhAMNjZQjoMAemHIbK2GtG3C7W3eOvsGB46dJY0F17OrbYHJC0zWsP/kCaa+/K/Jzs7SfvNNwmjo1p602+gwJEoS3r50iWYQEIQhWimWm026cUzfb5OoYcetWC3w0OcfoteLeP575+l2utSsMmEmw8jMDK+//jrnzp3j1KlTnDp1ih+v/ZhWe43ZQ2PYwmL5yg5mGuqqwWFvH5l8GX9qilOtdxjJjqLkzQVSnMZ8/sDnKbo/m5P/uxmpvM/tVSiFEILM1BTNsMmZnTMcLB7Et3yilXXGdIGD7jSx0sy4E6h6B52m+Ldxz/0gdBcWaL/zDkmvh3QcrEwG5ThEjQbK98kdPMjEpz+NPz5+2+3TIKBx+vQtOst3danexASW79922xuRz+fZuniR7sWL1x2F3z0HJk1JwxB/T57x84ZOEq78u39H4403MGlKsheX011cpPqrv0rn4sXrHdv+6upwTHFMdv/+6+ZYQimElNdp33fw4bhTmH58uKMx/VuEdiegfwnkrVRDLT9gcpSSKO8T5T988ryDD4dRPrF/EGuwCMpFO6PIuA4YUmdy2D1NekTFhz/QTEmmGvNBtd4Hy1z+BmOUxLbE6wdoqdCWBIbd2MR3saIUaYbdFSGaCNEGXDAJ1tYLiKSHkZJs+h+IzKMEtS/dEktz0/5MYY9C+wG49wGiuR7W7u6ww1cug1LIwVVU2AB7Dm2WMMTD+zmjyDSWwT6KMhIMGCmIPZvEdRBRA7vzJjIdkLrjxM5xVDSLci4PjwPQcpy44BB7/4Bw7Dcxykf1LuOFP0CWiqhed29wCYgQkw4nMvMRbjLeRRg+w27vNJ5zja7Oo1Zj9JKknsnzzeYRRndWOfZCwJGjGtfLEjh5wjShcSBHp5rBIWYlCpBJC3/ja0Mq+MgkUndJskdJxz6F12hidiMqlQrWM88g9iZcUyiQfPYeRP0VRNQGv0XqrCFiQAcgbVJbkVqK44c7/O//4i2e/WGVy9sDDo9X+PQnfkJkbwDDG4+DpojUCROVKUy/h/PWm4wrxZHCYc6uvonX72O1O4i7DiNEj7n8AUZ0n91kgIkDcvRQ61meTHNgbCIDPgIdR0haCGWwZUpsj2Bknq2frOKOZMlEM5jIIzEajMFKUhqNZWj1hh0NQAnFarzFi+232LT7HD3+EEkSsHjlCkedk8TOQTpijay9hJQ+YbOLd9fTuDf8ZiMDjUHACi0Aan0HIUpQcoEeQjRJYhdhCQY7GySldexKQBw5ECc0hGL7qR1G24pQCkaPBsgsDFoevhlQwuORg/dypXWRvFNkECsOjRxltCUp5zskUYiV2aS+0yKTDZFuhlGrxthcmUzWpTVQ5N0SZf8etqdT7FwO2xjOrCzy2tZZEkfz9Mn9vNi/hDk0z0xFYTkuB/wql9YbSNElNoLdNKE8MDyiCmR3bba/myf7RJ/5e5aZaFkIZdNeOUbQnCIIAyorBXSosd0ed93/Se7RHVyTpbHS4O5OwkLV8Ncr19gy4MiYRQK8Vp8giRgrZMltNdlXSdh/dwktCkT9HOTrPPGoT7W1yvJ2g+hallTn2U46uJUa/y1c4FDXZjIVWA3DFbmJl/eYW4hQYxkidxxbgmCBT2TKNPtHOdXVhDt1Cr2DJO1nyYz2CDY7CMvB6CxxpGmfv4yVy6Fsh3QwQEfRUAuoFM7ICJNf+AK5t96ideYM2u6jltbo7+6ysbWFrxRaSjqLizSNoV0qMTc5yeqlSyRBQKdUore6StrvYxWLOKUSjXb7+u8r7naRQu7pFG/NcLZ8sLPu9QIg7navv+yOjRHu7LCwuYl0HLJC0NvLLC1NTbGhNWMDm1YhwvU8MjPTCGVx8oEZpvMBz/9wlf/n8o94dHaW9e9+l6YxNFot0jSl1WpxYfMCn/7d46xd2mXjapPWbp/+CxGqKFh6epV75g6R8fIUnAL1oM5E7r0CSWtN1asyk5+5Zf57N9tU/ZQ5c7CxQf3ll0m6XYQQ2JUKxRMnsAsFdBTd4vQrhWTE5LCT0vWi6N2LpXJdevPzlO666yNTSjsXL5KZnibp9UgHA6Rto3wfB8geOMDsl7/8UzuVOoo+WHsqBGl4m7i+D0D32rXbnitpWQSbm7fZ4ueDzR/8gHB7G2tPzyukxMoP8267ly5RfeIJGm+8QdrvD49VazL79l1/P4AOQ9xq9Rc2xju4g78t3ClMf84YjP0GXv15zPvn5LRHVP3CxzKmv4+IRj4FzRexeldIvRlAYaRE2+NgICo/RpI/+YHbJ46FFSVwm+LUfAR950+D0BqvPUAaTeI4yChFxSm9YhbtDm+K3oupMUi1CcYBrWDwExARZs8ZUcgEEWrc7W8STPzjn31MGLTvYUaqN+mdRbINooIx73MeFgorDvB6XeJsEcTwVLm9ENU7h9V9CaMyIBQy2gRxhjD3WfymQpkNUDFxxSHMjBFFT4IaTkVpZg7dfgMzKVBLCyh/A+QAIWKicIIr6hu8OHIPwfk/YdQb5YnJJ8i7P83wQVJQv8HSf/+PzCyFrDpT7AS7rF+IGOTO8/375ih3BEcK+7Ecj3wO+tmE2LkK6Q6RpRgfbeLlv0Vqj6KjMWAcpI2YX8S+9gJx8ivk3Sw0m4ivfY3+l7+MKZWwuudxd380jIqyCojdVbKv/Gdksw9JRDq1n/TRLyGUixEhpXzMb3/+MoOxe9Bun0R/hh+v/pjF+mlE7zIj/gPM+HnGkjW4EjOIY7r1NsecEd6JYKm7gd/dJTNdYWR2hAOZCaxggXLssLsegROj/ITutqA1rxi5exo9vku62UXlNf1dh15SxJNDh0/lKsJ3JNm5lFSU2QuRJPYckm6XjJ1BC0Mj7rA62OT7rVfJWBna7WHGrWMUohvwgneOz9uPEDJJmE4idAUTxhRT+92vfQ+GmcIsL66fI+fkcHcDivlRdsI6SnbJC4t6vEYUJNxjJMF0CwILrwRhS9PfsfC28jw2Bc+7XTSSwa6D0Da+yoJreGZUMZovM+Y9RDcaakpb81d4s7ZM+WIdYVpUHMk4UNNVJh/MoozBM4KRksNg8HmScJH85KvI2oC3l1O+1n0dO++gUCzmr2FKDab6JZzAITdZxM4FjNt1plHEnYRe16K/MkIfyHgC1YmJT9X4yWrIQyefxI6H88s7165x6vJlbNtGCkF4bYPs65vkRgb4niBKbOyxUX5730FOOL/KK/PznLp6ChPHnC/UefKzVQ4cH6cW11FRn51omzFnFru2i8nvgLYZzVc4ankcnGjzyrUJzi5NoFKPa1MNnLUO7oYHJYGTgY5pkk8TyjrDxc4Gl03CyeIU1TiCnSLuwi5eGDKI5hG6hU4UdjlL3AzANJAqi5HOMOcyGbA12CJKIsSlJbwTRziiy1z+1re4dOYM8eIiY1rjeh71wQDLdUFrgnCovXeBeqPBVKWC6HZppik6m0UJQToYkLTbCCnxR9+jtgopuff+R6iv/hVlL0ErSbpXV4VRypHxPJ1r9+OfAGigvBdw03W0LgEP4E9O0r5yBVtKjGVRMQYTRYhKBdv3GUkybGU2cEtlhLIAQ3dhARzJP7/nUf7LW2d4cXERRymklMOFLMtipDrC+e3zvP3KJp94pMbkkTLz0RpoTSqhYyVYueEc99l9n+XZpaHZkWd5BEmAb/n8ywf+5U2zXjoYsPPSS0SNxjA2zfcpnThB9sCBm97X39jg6r//90P3171zFNXr1F95hZHHHkO57vVtSm6JnDMshJJ+76bC0xcOFbm3IBfHQ1rp+3wAfvjDH/LNb36TdrtNNpvlk5/8JL/5m79JGgRIy6Jw9Cjh9vZwzIBXq30k+qyVzX6g/lNIiftTInRarRZCCAp7OlQhxHVN998m2ufO3bYgtnM5dl9/ncN/8Af4ExPErRbZuTn6Cws3vd8Yg7BtsjO3Lk7cwR38suEOlffniHw+T6cXkbjTOK1XEWlvmOGoI6LiAwymv/JxD/HvD4Qg9fdd13aG1WeIKk8RF+4jLt53iz7y/TBKYsUJ4n0UVZFqwoyL2cue/VmoIF5ngDRmT38oMJbEWAoVpySujUh72J3XIL6KMSnSNmDvkmQ2UZ1ToG6+CKd6Fpk0h/E36mfruqskHR4rw27x8GAFMtpEmBgj3u/sKxD4pN4B9E0Uqhhv59tg7cPWVVRaRJo8xDs4u/+d2C2QCEGiI2j3idRjGPuGGwchSLJHkGkLS15CBQOEGCVJ9vP6YIV2wZCv+dTtCbpxl7d33uZw6fBtIwzexUi9j/zRD9mxIpZ7K+zsCHbChFpgSN1RZh98hlVvHz23ReqCUxAUrSl6Yh11IKDiwriXA8tDOk3sTIutUzFbz55mtx7Q2Vygt7mC54SoTAW1XSc5cgRv57ug9mhWrS0y3/4q0m0hPI2w9iF3MthX5xGHHkaRJxUdtJUjLj0y/B6E5GCmzOPpRT5RnmOfu5+c4yNIERcu0uxqlGXhSJuDbY/SwKKRF3jSJT+WkBERWVI6S7uYFKTbRkhNf3kEy4POqiQzVqA3SGjvFtjdOEz+SA0hfdJEsxX1GdhZiqMVhD7B9VUaARfWzrDcXeO/bj/Lq52zvBPMs6J3iHSEbyxaTsxqa4nF5jWupmtsJHXm4zVAULPK2EJhl0pYlo0dxlhxgopjXL9IUwSs9dZwI0OumSCVxLd7jFoZ8s0m92qLE8Ylmm6zFSR0Q4HwDbV8hqfTEeQ1l0wrQ6skSBRo4ZKxXX7r5CHKVsx8pFhrHwGGN6FvR1fp6QHXaDKa72JZFjteytTxWQrlEkopuh2F6z6F8NdR/k9IB236dPnLnRcpFiKCZh6ZJHTsJSKTkpiQUmxw+5qSbuJmwSlmMG3DgUhxsJYyaJeo1DV5O0Mun0HW27DZQDc7bK8tsJ35Np/41AoHTixTKq8gTid0eylClSlmJul3Wmzv9NmmgFXIcKA2jm1ZVA4u8Q9/o0jhYJFiZGPlA2adDeo9RdkZQZVX0aFBJCkbcUDiTFC0K0x7mnOXc/T9PkJJphoBudjC8rsUSgG5XIJdC5naF9Osa1qpTe7CgNH5CP/0DiZMyY5WGLOaIGyEgPxcmeKxKoW5EcJ+l0Yk2UobLHWWkUJhKxsZazqe4bm//msuXVunHcesd7ucW1wkIwRWr4dwHFLfpx/HSCFoVKskQpB1HPL5POeaTVzHwcrliDsdhFL0ej0evPdeKoUCJk2xSyX8KGLrpQ2KM+vYsUAFMDAJ07OKTPQrOJP/iMzIVQqF/wslOnSWu9jOLrZzFpk5xFo9xul2UUqRGR3FLRax2m3sXo/MzCyPjhyjW3bo6j5Bp41YbtJ4K+aFpTW6e507w1C7mC0WqezpA5txk34zIDCCCVsPY7hMSmJS5rL7qY7NIKRECMGXD3+Zo+Wj2EbxiHWE3/WeoegWsfL5YWGVpqx/97voOEba9tAkB+gtLmKXyxjX5ezZs1y8eJGN730PP0mwslnY08saY0jDEGFZzHz5y1h7cWFCCIpukXO755BGEtfrGCnoE/Koc4LKngYfYyieOHFT4fr1r3+dP/3TP0UphVIKrTVnz55lc3OTY9XqkEIsBFYuh1ut4larw0Jr374P7QKKvUiVYGPjJlffNAzJzM7eNutzcXGRb3zjG7z55pucOXOGixcvMj09jeW6dK9efa8TvAcdx2Smp39hVN6dl17CpLfPRFeOw8hDDyGEQHkemclJdBwT7eyQDAaYOMbyfWpPPvmx56/+suEOlffjwx2N6d8S3v2Ra2+SoPp5Em+aJHOE/vT/TDzy1Mc9vL+fuFHbKcRHzkGFYddUphqZ6qEzL4Io45C67120/qYTm9Aatx/d1lVXaIMIL+DVv4lMOwgTIMNr6GQHxrcAjdVavaEwTUh1FaNHEDoiyRy8btDzN4VWEiccdhH0DSvUiQgR4esIcbPjotAGY0+TelNo+733y/4l7MiAzA3rGGEQCJxggNF1Un9873uwhoZgwQJx7uTN+lShMGoMP8mhq49gMgfpZmqkI/sZ5AyeabNjjaOlPbypi5rMleY+8NjcF16kZpdZ7i4TJAH1usSSLpaT5f6xWTZLBTwnz2aSZzVwqJUSelKTG9UM7CWOVp/AMdGegZZCx202f7CMbA+wRBclJCJ1aO/uUna3EYFDct9J7M7r13Wk/umvIsXQaVNQQTgxwusjGgrcHroyBXKU/vinQL638ODu/ghpwuFNic6DAKOhcX6DKIzQZkgXbdYX+cl0E2O7CGXR9Q+gvXM0wzWy9RBpR0grobecRQfuMJpIuvjjY8i8RWfzadyJe0mTKtcuv8PXN89yeneVS606p9sRsa3Yl5t+73eRxLy0/Ror4RaWVGg0fRNST9uktqSQH2Gtv85ad40+IUfsGWxpcy1ZZyOsM2oVqU3sx0n1sNx9N35JSA5lZ5muHqLnGdzlBneN3s09NU2h06XWC/GxKNUUxw+kHM8pJlY8jqSjnHA9HFdh2wlTozb3eiWO1+DBmTGevns/BX+oD39h53GCeHiTv9HfYLu/hd5tstXvUCvEZGdT4pyh3k/Ite9ip+XT7Soqo3M4+bcRpkDQanK6vc21ZgMlU5TUpOttmsUuQikGQlPVirFiiAk1Vl6RdW3umRmn0JS4SuLs2NjFLJnSsKsnegHZUJE0m2Q+/RLl8RY6TBFSIbYDRsoJg14BW2QpFHIMeiGhABPFiJEiRhj2TXnU9p1FnfFwT2vkYkRwIWGwmJIvd5BhncyID6kBEXMpyBFHKcZWhIMmq41J6mkbg2Gqk1CtxNjZiBTIlgWOB/vLKU7PcO35hNb2gEzdILwMnuUxHQnys4reSpeoERBs9Ej7MdubTVa3dwjHRug26yRSM0gGw7lBWFxrtFnZbZAtFsnYPkprlJSsDAaM2DZ6YgKdzRK32whjCLJZ+lIyWyhQzeVI05TNwQA7k0FaFp1mk6lcjkcefZQ0CFCed13PWp05QfdijiTdwnM1Y04FO/4yIvdbFA7Pkc//G4TwKEzlGDRCBtsaEytEukB7d5JIa1S1OqScOg5WsYixbR565hlmP/kUEw3FsWSMqS2b//g/XmSlN0AIgWtZZBxn+LAsctXqTYVUL+3RW24jCx7V/aPsuAM8J8NJ/xBJrzcsKo3hs/s/y0xSYvpMg/G2jQkj+gsL9JeWyOzbR395+brL7Y2Qts3S5ct8+7XXWF1dpdNuc+qv/5qlZpN9lQpONouVzyN9Hyefx6/VGH3iiZs+o+SWOFQ8RE+EDDY3KJLlSf9eJuxh8ZhGEdmZGTLTN84VCX/8x3+M/76OoOM4LCws8NSnPkW6tXXTeI0xGK2pPvroR6IEe7XadQffdDBAKEX24EHK999/S/ez2Wzyl3/5lziOc/0BcOHCBQ7dfTcyCIgajevjScMQy/MYefTRX5j50WBtjWAvq/RGpEFA6f77yR88eNPz/vg4uUOHyExPUzh6lOJdd/1C8l3/ruNOYfrx4Y7G9OOAtEj2Oh938EsKIQhz/nv6lQ+i96QBmdX/hN19B2ESEneC/uQ/Q2duXakd6lPfDRFKGGqdhhdeYQa47RdJnfeKS2NlEDrBrLmIqRsjZEKMyZImh/bGptD2DZEmf0MYpejnfXz9OpZ9ASFDUlOgbx7FXd1Ptt3BiBRQCB1gZAntH72pKAUQqQF8EO8eI6AjjOmj1P53T8DeTjWqP4+//lWMyg473LmTIBR+p4cRCUgLk8vREi1UYlEzh6lHb5CPdyiZFraJCaJ5xNQTQ8rsbSDSoYmVFJLZ/CwNp0UYGQSQ8VwMw4D4gpMnNS7F6TqO7FLMOhydtpDiTZLNScReI7m7FpKZ7jC41gclIBnecEmpaDRjqlzBCAvpryGzXUzsobqNPQOudx8SYwsYA7ETED3yCAIHIdzrZ+j09mkuz3+HIBmQs10eyg04Lo7TnN8i8StYdoomJo1PEU6/xoNZQRjbXPVPEKcuF1YfJydep9ge4GtFsD4HTgPhtgGJsgYIP8QZ/13MmSH9duf8PN93mniiRsYY8v446doOb4iXKNh57qvcBUClNMbiYIONZAchJD4eoY6ohIqnlgacuHKOn+QaVI1kPq9Z6s/TNF0adogRcI4VHlqr84/GP0POzqItidm7KVNxwphfYXT/pwl+4z5e+cZ/4uzKOqIz1Hi5Xodfr2TIJQ6yGONOe3Sq4wx2Q7LFHjNPDrAThRYK7RxC6xLNTpaL9TYO0zw280X+Yv4vcKRDPagjUwh0xLSq8cqZhP2fCUAb2nqHen+ZMf8gvUBh+1uQZoaLSqUC7bV5ipkszUYTL9ellxikVGhACIltKQQJAgi6CaMjGR6a3Me1pctEfQtdtNhJXWSzC0GC1RkgR4v44zFutke7JwFDOugjwjxaKsZmN4m2p1FCYpUNIyZiIGISSxMnkmrF0H/DRQ8EmZyH3jWkDcNGkqN+UTJ9OCG3L8KyRgjTSSatHhfDZTKJRUdYdHYHBNsBA3eAZZdwnHUSIzDCkGAYzxlIDWO5hMdP5tjcyOCsOZiWRa1YQ4qYcLeDHqSYSIMrEZZkodNAmRQzWqCR7FLYjVBGMgi6ZF2bJZ3gZjP0kx5Ft4j0PIQxuJ7HepoylaYIIZCOg0kSjJQoKZmYniZaWeGe8XHun5vj0uYmqdYcfvxx/H4fd3QUp1LBGx9n/TvfuW6CM3rX4xjzGEm7TW+9x+QXvoAzOsruy/+NensDk/oUxn1K93qM3JehvxphZXqkIyd58ZuvksYxtm1jjCEMQ6ZnZrC7XbxajYnPfAZjDOO9Hv+20WCp3+flhQWWGw12ul3iJMF+1zl2DyPeCGkc0xY7XHpjHZkXnDxwgMncBH0iegurqJVtThQf4jKXyF+6NKQ370H5PjqOqb/yyrBgvk3nLNWa519+mdqDD+5Nv5psJkM8GPDK4iKfnJsbahs9D50kGNum2+3ieR7WDQV0QWV5jCM8dPc0vfl50l6PRPSHrs1TU5QfeOCm/a6urtLtdindxi02SRIW+33uOnaMzqVL6CQZHk82y9hTT91UuH8YCkeOUDhy5KYs29vh1VdfJZO5Ndomk8nwyiuv8Mwzz9BfWaE7Pw9ak5ubI3f4MPIX6Mg78bnP0d7LkH23W6ujCCuXo/bkk7fdRto2buVnv+bfwR38/xV3CtM7uIMPw0/Tm2hN4cofDc2VpDfUXoYbFK/8Ea1Df3RLcWqkAHsDO/cKQjUBgU7GSLpPIQcXSa+HlOu9hwXCQvRT+sFX8DNfxepcQss5tB4BBCINib05pHEgSdFK/vQxfwDszItgXSTGBzJAgi++S7jvadrbgkxzHtJw2CXNzCETg7bed7G2pkFsAjeu1pvhQxTe61gbg905g4i20O4EBpCtN7F6FwkrX8LgcKNBiURiMDgiQ06HHIovEojs8GYoDfDXv0pQ+xLard1yXOnMDNbGxvWauFpWLK2FOEKwI+X1vcRpymNHtzhYdsBMId0YLXKAxqoukG7sHxpC5Tbx53rInYj+fBmTOiCGzOwoTGGiT7Hyv2LlL0GaINw2otDDNDwww/NlhBqOR/YwngdqqKF7d4wvrL7A+d3zFLRNRhcwoc0Puyu0o4ATXgVVU6TdGIdFWstnGNgxqeejfIu7/GtcNPuIcemYh7l0dYkjKkXoEBNV6K1qgn6fKHHRlTyj028z+iuPsfH9C1yMlhAqBcfFGxlBWxYWAuotzoyeHxam2vA/1p9jpwzj7Qna/QapiSni8c8XO0z6A6xMytOVAYMw4fy6zXcq8/jaQUWCJGezkY9Y7q7y51vf458d/G0AkiBg58xpwt0G2lZYM9PMTyRcvr9Arv4A7mIdM5kQqjxfS0L+F7kPu1tl5ESbwoEZzPgojnOWJPgVaC8hTAJC8Ub7bV5e6XNlzWXD2kCszPOVu75ClEasdddInYhZtZ/sWI6vX9nmL55TPHR3xGgx4er2Kd5ZjTg28yWElZJaQ8MqPzPJXUnIhbOv4zoOYdhBexnKic+G7FPsWeT8LGYAtpfgWja/deAwRXcdeUCwdC6gb2m8bZ8gATuBjJMddvW6a2StUZpWG9tWQ1plTqDbAtePiEnJlduINMbENlIllPfV2dnMEaR9dM8mk/PRTUOymyItiVKSZGCxdHYfA6vBoWfGcH2HMWMxUAGXm2s8+6OQK6cXcVwHlSjeUE0qo5p8WSHtlIxjmMgJujuS0rEB/m7C3fsEW1GNpGuxvb3N7L5ZeksruKMZ7GKKTg2mYLFWE2TiAoWNBlHO5ozXYr23QWwSKGTppjlKxuB7KUVZIWN7SM/DiiLcbBYchyiKcPN5tlstBmHIJ++7j0y1SrC0hFupkCuVeHCv+EmDAHdmhnBnh/7iIjqO6S0sUD44h2U5GClIbQu7WES6LmkUsfm97yHYxc8OY2TibsrSt/vs+2KRwiEPIULcc/DgQw+xtrZGo9FAKcWxY8colUo3UTGFENi5HKW770aeO8fcQw8B0A4CXrt8mWuWxY4xNBqNoYZYSkbsEnlbEhDTfjnhH849w3hkc/6Hz7G82SBThEg+xxvP/ohctconHn8c+wbKqVCKcHub/OHDBOvrt9BRV7e3uZEsKqTEGx8nnZ9nu9Mh3etSG2M4vbhISynUV7+KUor9+/fz1FNP0bt8ma0f/ICk2x0WRrUahaNH8aencYrF2+oks9ks8gMKRWMMuVyO4t13kz92jLjZRNj2bWNhenGPNzffpBk2yTk5Hhx7VjU4BwAAIABJREFUkLxza9flwzqs7Xb7tuMRQHtPc5qdmflb1Wta2SxH/vAPWfvmN+kvLYEQFI8cYeILX7jFbfgO7uDvOu5QeX+OuEML+PuHfO9V0tXvgrqhW7dHVVWDq0SVX73p/ULWcXN/NcwpxQYshOyjnPMk/QKIHWz7PJZ1BWWtIOU2xvgYrYgLjxI7D6BNGRl2EGkACLR3N8q6b6jVCxPsKCaVEqM+Om1ZiAGe9zzDgvRGOChrjcB6iqA0R5ybI8nUiHI+sedgRcl1beqwSWqhpUYmLd7NjgWJindJ3QlSKxg+E22jwlWQPmnmwHXKtdAhIo1R1gRCD4Y6bSFxlEMjaGALiYgv0rDKQyMeHVPLjlP2a6hgiSR/9y3HpqtV7IsXaXZ3iEVKLmPTaPVJQ8Oz02McKY/iiAyeA8+cXEUKB6EddPkswmoBCmREqiaxvAV00mV7IU+oHbxqAu0cZpDBxOA5muIfrmP8AkZVkEkfQYBIEuRqH2MshCi/Z6rVjQif+qfozAwYiH2HIA15bvk5MsbGDT1EGiEEuFKyPGhyr7+PZv00JnkbnawhtEc76RFXCxjbRmULOCKmpUYwBpzSGMXOCMIdobW+QtCD1BRwq0WsEZvWhTYjJzqk5h6usIku+tiF4pBWJgRGCnQUo6olHhi5lwvBMi+23qIZt/BzRfKlKoVSjYPnNjjSFViBRTqw6dUVPhZ3P9BjPpOQH/PoKpfQGEbzE3hIFgdrrA822epuErx0euhGLSSpkkSdDudP/wgzW0MXMoiVHiYoYFKXoFfA3TlJtXMUvVQmuP8fYKwKQkiMqAyzitMB79TPc62zw0hO8k7nMMapoKTi5bWX+MfFX+Ou3iitQQOlhx30aqnE1bUtLq1qlt8scvWtHFbpOP/iX/9vdKIEY96mt7hO8P+x96ZPkl3nnd5zzrlr7kvt1VW97xu2JnYSAEmJIkWRojSLpBjNaDwT4bAVsv8D64MVMeEIR4zCH2x/GDusCFtjSxptNkGJCyRSAAGCWBqN3reqrr0qKyv3u5/jD1noRqOrQYCSCGrUT0R/6Ky85968N/Pe8573fX+/1WVq+RXWvAGiNooRFTorIaPrLoUgw/MEmdEMBmACwy8+8jPMVJoIkeFVbNzIYulcDZmCr/J4+Ch/WIZqeT3qs5qum6KNQQhQBciWJJkxjI9U8G0fC5swiXFPTaEma/h1wY20z8xGTKoMyUqKUO+JuYDo2aSBRdLJ0OoG7dV5WktL6GaDt1/uE1jPknUVY2KMUXuUgeiylq4ymXM5ULU5UHYwQlI608ezBe0bM0R9D2lFBMuGJE3JG0h6GreUAYbaQ+NYI4pzpgXuHoKSy/zaHAvhAsoIcBRkmjTdYqXUo2SVWfO3GMiIMXucfq/HkXqdfdUq7mCA8jwmH32Up8+coeb7SNel/thjSGcoyJVGETqKsMtlkmbzdo+lsiySxSWizSZ+fQQJWGmKFoIsy0BKejduIKwirn8NUFiWwghN3Moo7nUBRZj+GoPrN6mNjjIxMcH4+Die52GMwalU7ulnrJw4gU4SwtXVYc9jocCZr32Nr/3Wb/ELv/ALnDx5kizLiOOYtfYGG711EqkJsoiXLr3Jgc0mq80urj3sn8WycIMAORjQFoLxD9iymCSh+uijwz5Jy0JrTdJqkYUhy80mXdfFe1/Q51QqxM0m/U6HQ/U6Enjrxg1W83nqR4/iOA6WZdFsNlm5cAHx3e8OVXCFwKQp0cYGSbdL6ejR+/pn5nI5XnnlFeI4vqes1rIsfuM3fmNoKyQlVi5HOhgQLC1Blg17X4Hl/jJ/eOUP6cQdEp2wFW7x9vrb1P06Ve/+4kY7MTc3R7/fv30sSatF7/p1BouLqM1NxpXCm5j4WNnavwuU41A5cYLRp59m9KmnKB89+hM/hr8v0iCg9fbbdK9dI9rcxK5W7ytY9ZPkwZz9k+NBj+lPiAdf8n98FNf/H5Jwh2suBDLtEI596a6XXffbYGmMEMOe0qEUIpmdEbt1/OAvtuM5C1AIYVDWMpncTZJ/GIRAe9NDUafSSTL/FE5WHabrpBj+EwI7Tkgde8de1p1Q6jqWNc/dmc736JGmxwAHY6lhllSIoeWNa2PkMHiJfYco72PrAkb520ElGJUn9fcjouuIpIvEQ4Y3EISkuUN329wIhdB9hH0Q7YwgsgG630A3G8heQNDusdTcQJQ9oiyi6BQ5XDs8LPNLO6SF43f1aAIgJenhwxTDjJXlS0gDuYPjfP+hWcZzI3xh8iCfmZ7m8ck6ttXAKI0uzWO8ACmbCNFHCIOwYrZ6U8wtnaQ5XySkTF97yFoTs1pA54tM/qtHsWbfxVhjQ9sdqzws651OYC1Cr9gIy4VMIfoh6cMniff+OmhB6tpkjsVSb4krW1coRRoh1DBmFwO0FrSDLidKhyGOcd01hExAFXB7GZPvrDN2ZYvyYoe45rBWnKWf9Hny8OepHjxBf3WVa0tv8kpxkwvjLW6NDYiNZtIvEjXaOCN7aa+3WTQN9FaHeGuLtNsli2NkPk95zwEOTT3EN6++iOgFyDSlqvKU8Sm1UvZdWaWvYmadAiWnQKhCRisGtStg3hhkzmG8HCK0ixsJGukyrbhPwS7SWVrkbHiFnPSoy9JQBEwp5hpXkbaNLucxQqDWmpgsj0lsEHAgLpLt3k9y+AmUWkTKFjD0KDbOCN9aP0+sChjH5dLWBAYBcYqaWyNaWGEfo3gbfYLmJj0Z4zk2M7Pj7LVHeVwd4Nf/q/+aX/q1X6NarbJ6aY3BtW/jlRao7nkTt7DKkXKLvlmjL8tUnCq1ayEHsxIn0zLlTDDV8zhtTTLt+xQmHIyuQFpAHXyYzpqFGWj8qoNT30fW62G0xiqOkh9f48BjZfqDhDATaCnIj2lK3WkcaUiSASJzmDx1gl0nDlClw0jxJkcKKa23FyHN6K8adKaxpUXezRNueKRhhBQpmAR7LKS1kbF6XvH1H7iEaz12HzmJZdk0O022un2OzUa88LUKZz6nqRzpUTkWkCsI0sCh+2adYr5A3vNIelUG6+vklcRIi7CRYRVyw/LHdIZbwqfbH3BjeZGNcAEtBYnUQ4Efy6CEQmUGW/vIVkAn3iJt9ZiszvDkmTPkJiep7t/P2MwMZSnJVSqMv/AChX378MbHKR44gJGScG0NIQQbb71F49YtMiXxiyXcaFgiGm33DtqFYbWF7vUYNDfpX71K2m4TbTTJwgSv1sGyXLTWpJGmdiwhCL6C8B4j2twk6XZvBw1Ga3SSMPLMMztmt4r79zP6zDOMP/cco089RX52dvu2JBkfH+fJJ5/k5LMniQ/EeNqQhRFZoom2At5dXmVfoYRfKNyeyBulcHo9+rkcMzMzdwV7wrapnDiBU6vReOUVNl5+md716/Rv3kT2+8xv97beud0q/F27yFUqnDpyBGt0lIu+T+3gwQ88HxRbf/3XjFcqd7K0QiAsi6TbRXkehQ8o/r6f48eP89JLLxGGIY7jEIYhURTxm7/5m0xuCwplccz6d75D5+JFoo0Nejdu0J+fJ7drF//v/ItDoaztihu5vVg515nj1Mipj6WiWy6Xeeedd3Ach6TbpXvtGkJKMuDJ48dxsoz+3ByFAwd+4uq8HwedZcNFp49oy/NJEayusv7tb5MFASZNSdptupcu4dTr2IX7W9z9JHgwZ//keNBj+oAH/H2hcmDS7f7BuzE7vKZUG5BoS6LvWg11se2LmH4JEQ7uBFfGIFKDHreQ4TJ25y2EjtDOCEn5DHYEZoeHpxECO4iJCx9Vpc9jWDp8L0MJ/fv01whB6t49GYtyLs5gDO0My2pFGmF130VSRWUKkUbIWBHnTqCdHVa7BSSujRWmDNIpess9bKeMtF2Szg3UokAkGccePUbdq9+ePAyt9O7jZ+e6OD/7Cxx94XO8tvoajaDBL4kaT9sHyTn5ocBVcA6hX0JFTbB7CCuEvAtIhGhjMpfL369hxxaSmEJhAcuOUW7KepRx6ikXp9jHWNt9P8YMx82qBLIJXy4zN70bfWGVmWKZ3KNPE+v/Eowk8RwSf3geXeUObYK0Ad2HdBFME2lyCOliYeNW9pF03qVQmca60WX84oC4VCZzNPFGkyO//w5zz1eZfPZzjFR3IRDc6M/zvfISOe1AB2IZc7E8YEsHPBePUnu6xMnVZXrhW2zqPI2wBkiyfp+OTPmcf4CVF19kq/EOnh8xa3p0REjHd8jNZ3hFHxMarO3v7kxN0LMN2XyOwkRAxxhsLXhqvMfiSogWDsrYHDPrrISSkvT4QXKVGW8aa/ua2n6ObLNLMjuCnp4mkIYrc6+zmjY5JMdZmLA5NrGXmVdfxa22qR1vsRj06Cc9PMsnSiNcyyVMFVqD2urhXF1FZIZ1a56s9CgzI/sYr0yzHK4RHBxn9O1VaK0gcxb6r/6KhVu3KHz5y7TefAvUGcZP/U8gU6Qd4SrB82MuP3Mw5kprkqszIapj0KFhMnGIR0tcKUyQNgeMl8ZBKLLSJCiH2kmQliJc75GEArtSwWiNylUJtvbgevMc2V/EH59G2iHhpuRG/POUxr8Nokjl1H4c38VufxuZX0eqBt1NxUYYkgsSHJUnEw5hV9Fbt/GUZORYG0QXp6ZJ+xnFesrmrRzKclBCcOviRR565hm6lS5FU6SnJwj6N3Hz3WGJt9HEA5u4dZr87phgaUASDMs3p/cfJF8pgYDBwgLhqkZYVWx/lTP1gN9rXKVU8GmEKY6UpFoRC43QAs/xsIKQgRdQojp0Oh4v80xYw7Lt28IuW2GTG52bxEuvErmXOLzrNI+MPUK0uUnn3DlULse5c+ewO1coTHQYbL2Js6dAqfQIiKMgJUmvR7ptUZJ0u+Qnp+gvL6GzDCklQXMWfTnP5KkAQ4KwcnS7/5o0fQKA0WeeoXvlCv35edAaZ2SEysmTt9VrPwyj9VCcx7LuEqt5c/1Nxks1dj1ygqxeI+x2Wb25wdmLS1wNujw+cUcN1kg5rIiJY8z7/DvTIKD26KO3LU+C1VX8sTFMlqFyOYRSFM6fp1erUXifjc4gCHjuK19h5vBh2u02/P7v33vcWQZRxCCK8D4gsiOM+ZEen9PT0/zu7/4u3/jGN7h69Sq7du3iy1/+MoX3BSaNl18mC4I759F1MVnG/Hf+gs6uzo5lu4NkQCNoMJa7t4XjfoyNjfGZz3yG73//+2xcvQpZhpOmPP/YY1S3bWPSIKB/6xaFPXs+8rg/KeKtLZo//CHxdtmxXalQP3MGu/TjCR/+fWKMofnDH95V4i2UQvk+W6+/jvelL/1UB/8P+GR4EJg+4AF/G3b/Kiy9BNYHemJ0SFI+c8/bjXEQIt5hoAwhApLxh1CtW8juOkJnGNsnHTmCYxZRa382FPgRAjm4gd2/jMl/5e4y4vcQQwXSj0qWzWDMTr0smiwbAz664l/qOqS2jR3FCG1Q3W8iqGCcAobhREQrCxVcQjuloRrr7d3FZPn9xDkPLWP652+hHJ9UZ3TDHpksMF6dJu1ChfJdDzVjlYfeqdvjOO0fosJbgCDzZonLj5Gzczw/8zwA5dXmUHU5yRDRS0jzA0j7SG8AbEI/QesypuCTRnnaSxH12jU6K8eo79vEdgxZVkAVLHR2GH86JnNslPCADJW1kCQ0kz5p5uC4JdToCXqfPsKf9gyHzC+zrzJy+3q9x3hunLydh85NZHwTIx0QMTqL2eUYciYiNBrhPoTU57DfmkeU8viOQ5LFWOUKjcjis68s8UfPtPnfLvzvBLcWubl1lilj49YCitMtpJ0hlGBTL5Lae6nU/j3Op9o8+67k1sQqm8E6r3x/Bidf4/H6w9gvvk5SKXFYtrimI1IyHC2YGKSUtcDYHrPapY5DX4fYPviZTxpL9hQlW4HLbjdCGPCKgiC0mbUFz8iLNAsZjazAQlbgplnnIMOs0q78NJezpdvn5i25Rrh7DM+MMzF2Bu+tea7e+DrZ+BFKizlubX4XPZmHWoVO3KGTdBi181zfmMJe3kK2Bsg4Y2Cl7EpLdC9coHD4ME6hwC5Rh1uS1twquVIF27IwxhBeu87NP/kTwihi4pGbw2ulFTq1EVIjZQpZQMu8w0r+GfL5AcqkBKJAKh1sYKXVZWPewhib0iGwC1A5Wmew2MEf30WSPARA3Goxd/Md3gwqvPzqCI893OeYGcMMniCxPsPUFyw8TyPleyXxDaRYR6oNhDRcPgfu0Tzx5QTWUjobRVAWiTLUdod4oy5xK0OV+xgs0sxiz7MJ+Ws28bY/6NytOYJigOgF9DeavFY5TBRf5rHTLbpyhPzSLGkkyO33KB4wXH5xCjVa5eRDjyB1RtDvEdRGWb9+lpHjb5AbE0RBxH97usvZtR7zDYOS4FvQzSSpgYiAwI3ZNTLD8eLRYQUEAvsyDBYXyc3MsHrzIivNeZTlYJU80tUt3nLeohk2OXXTRuVyXLx4kYxbePuW2coMZNBcC0kOv8rBPQk6PcHIqVPUjh4nDUOWvvlNtGXhTUwQb24iXBekJGiUyeIv0Wu1KB8/TpoevnOfMQZ3dBRvfBy7UvnQibUxhjfW3+By8zJ6foXKYo8Zd5KaV8Op1Rh56iks3yfqtsm9egWkxC5W8Ip5RuyEk8ZwPUgRZBjuLA6GhQLezAxSiKFqbC5H/cyZ26XEq3/5l1i+f4/K61NHjnC52SQYGSGKIorFIp/73OfYv3+oau553o79l8YYkm1l4Xv+JgTWR7Ap8TyPr371qzv+LQtDos3N2+JU7yGkJG43kbUY7tNqmemdbVY+jKNHj3Lo0CHe+r3fQyrFaLVKvVql1W4DYPk+4erqT11gmg4GrH3nO0jXvX2usiBg9VvfYuqLX/yps4tJ2u2hovQOmdF0MCDpdHbsJ37AP24eBKYPeMDfhtJeovrP4G7+5TBAFBYi7ZK5Ewymfv2etyfJMRzn+8AHHsAiIE2Po9QGWXUPWXUPMk2x4gxLp6h+iOQwqW6hVX+oVmsUqn+BrPjYvWJHZgdhog9FEYafw/NeZFjO6yBEgDE2UfT5j3tWQAoS30UkLbw0vtNT+d7hObuQ8TwqaJFtWw2gI4zyictD1chIwtrqwt2ZCGGRerPI+Br9lTblfSNgMkQWEo79/PY4Cf7qHyJ0OBQr8taw5LtYm2cZ1P/N0D5Ia0Q2zGgiBkjzCsgcpj0LRiFkAPllRKQx+RQTp5QmuhRGV9iq94gHCp06KBK0qhHqXWg3RMoeSbIXx3sVSZFEZySZxlYJzeYsi6vPILHYNEv8YHCWfZWj95w6IQQ/O/s831r5FsIofASDzOBI+MrIMXL6Eo1WgYI3zdbqDXIyIrVA6AGOtCio/VQKgtWl83gr68SjJQZbbTbzKU7W58SeFjpV6FRhEoPrafKPvIsxz4OxGD9co9YvE6Uhn/pantbZr2HCiM7GJdz4Co/v3suFwbuAwZIKS9gkMkCpHNN5sLspFatA5vSJ2gHlMZ999SmS9iZbQYjl2GgVcMjVfLlYJsMi72csdQSOWGQpe5G3eoeoygKPyX2cPPk872S3WA5W2WgtU+wb9ppxsrPfI8sC7FqFhd4cCgfTO8ze5AZOdYBtS/aUpvnzqyukvTxuZwOkIEPjYnFcziKUJFhYwNk/jl67TNjoUypNY9kuelj4i+/nyZotol4Hp7iJsntc6HR5qxHTSzQFy3B6qkdxv4/64YCBWwLMUM3baKy1NrKX0LnZBQTtS5uUDtUYeWyKyrECjXfqCGeoHH25e53Gfh9O7ycVgu8tJPzNguCfHX4K37LQccz6pSr54tfRmUeh2MMpdkCADvO0mwMcR2EdcSkdhOV3xjG9ArLfR/pzgEflqEWY3ZnlZz3Np87YfPvVCFUuk8QJWa9PutmmMlKkUC0yt1qn2SuzZ7bJU2MOVlHRamsa8wcZr89y8HgVb/wtMt3EDQXe+gyTT5fp9rqofAWntIIXOzz7iMdrPxiwIUEgcZ2AVTskk8NaBz11jfNbDWbWZhnJ8kSNIjqKSHs9NgaLWMKCTGOttrErebx941xvX+dAdxzLKBqbDUqzc8RNG7uVghHormFld4/S6AXycpbKgUNIpdBxhDYaIwWW7+NPT0JyCSun6S/7RO02/sQExUOHbp+r7pUrtC9cIItjhDGofJ7amTP44zv7Yn/r1reY78xTaITkr2+SujYXB9c56jmMDjzWvvUtpr70JUrXmgysoXI4ooelljGTCvsG1KUgy9awTRWDjc4yelNTPPvLv8z0dlnwB1lvLtAVLSo6T17eedYopThZr3P4X/yLHbdzXZeZmRlWV1ex398DKCXW9DS5bSXiuxYE45iRHZRjjda3S57f6xW9H1kUDcXfdsBXHvlY4V5YxNrsgTbookd4cAI3536sbOn7UUoxNTGx4351mu4o5PRJ0zp3buhL+/7ybSEQStG5eJHqww9/gke3Ax/4rtzDx1g8f8A/Hh4Epg94wI9DFuJ03oY4QTsj9Gb+G5zOK8gsICo/SVJ9etj3+QHS9ARSrmNZVxguAQ9FQqLo02TZDLnc/4kxheHkK8qG7XJmAz2YAQxWViMRMUYmwx4pPYfQD2PU3T9lYczt0tB7MAY7jLeFi0ArQeS7aGuWweDXse13kLJDlk0SxQc517jIjfYNBIJ9lX2cqJ9AyY8W9IpswFBZ+AMltkKQ5R4hs8to1Rj6WOaPkBQfGgaOgBApBWceT4WkOk/f7MHgoP1ZksQBX2GEi7bLxJVPYeyh+IbdeXsonOT1sCsXAQPaQuUWkQzo8VtDoaX3RJvU5TuWQADtKUwoySo20luHzEXHBlQBo/rkaw0K1YzG/G6km9FaKlLIg9aaC+0GNwYFntxVZdIPiE0fJWGrvZfFlTNItYnKJrFRtOIO2ujbfVMAURZhjGFKhPyrfY9zZWONjXjAtDfFyfxQIVerdSY+N0t7S3A1mWWPWUFulzA3dQ5HKBxnncJEyHTlOjFDYSVpKUaPDQhDha221zIyQTFnKFRdlJpDyOqwDLxgYVNAWW06KiWJYwwhhcJVfO8U/8zdy3d7azSymMxoKlN1Ds3nCKWA4iqEXWyZI6uXWT6lEEbwhZER6mWb1Au4crXEnqhPpgdAhO2UWKLFIA054qUEoWJvYYqg7HNm9BhPqEd5ffl1RHeenFvEK69S2lgDpdC9DllhDdepEcVTXL90EN0voA/WiVOXJH6NtLlOIiKkkEwIjy/w6PC8GwNb17G66/Q7PTzPxzZdTJrCtv2QYdgL7lgO/Y0Z5uov8tpKSsGBnCXQCF5ezNgje7B+A9EpI3eNInwX0QtQa23s4wfJsiNY9gWsfJ/O1VX8SZ/Csa9gTe+je+UKG701LhQkC7JFsPIKSijqXp09pT28vPwyz098mtVvfAOjNWHxMYqTlwnCNq7eRLozENZR6vrt75JWDtGRIklwDPvqVSqf2qTkSXQsSJohmdbDXnENew6UOb5c5rwxFBwXv6exp6vsOzC5ramtaPdsXn1rhKeefJpwNcU3RWYKGRxLyO15A5O4ECl00sWpfR/cPsX8ERIJjjQMIhCWxT8/XeV/fnOL0I1peTGZNggtmarYeAZMrcGVnuJz7c8jVJve/DyFI4dITTYMTAGUREYJIkqwlU1DdxjJigxEm/pqhulLQEGqESHwA1h+ts2ZxyqsbjRwXIdaPo/2nWE5ZK7J6AuXgZikO2Dk5AYzT71AM3yC91bVgpUVts6excrl7hJuaXzve0x96Uv3BDK9uMeN9g3ydh57fgHjDrfxlMfNzWvUqjmMMfQXFthrRnhLr+ApiVJrGGwwhv4jeY4vOGwtdOn3m6Qijxob45lf+RVmdwhK22Gbf/fDf0ebN4AIC8V0WuPn1MNYQg17mH9EX99nP/tZvv71r7O6uopSiizLKJVK/OK//bd0v/c9ovV1siDYvncqxj/7Wbx6/a4xuleu0L54ER1FIARWocDIk0/eVyDpg+f0/QgpOb7qc2lzDuX4CCkRgwj12iUe+fl/8pGfRTuR372bzqVL93iAmiShdPjwfbb65Eja7R29VKVlEW9tfQJH9OHY5fJ9/VWV62I/yJY+YAceBKYPeMDHRCRd/LU/GP7HHUPFTazgJnHlSZLtbN+HEccvkCRnsKwrGOOQpod4r1Q2ip7Dcb6HlcXbQkYZOtiLCEa350cZSpdJZWM4mIyJfBcn2lbHNUNLmqDgv8/z9G68XohMs+3xQWaaXHdAUMyhLZ8kGfrvZjrjj6/9MVvRFr41nHS9vvY617au8dUDX/1IEwJtVzEyAiO5bQT6HtImKZ4mrNzbGyPiTYprf4Ipb5KFGbbaIsc8W9kjJKaOcKuoh75CsMNDWoULoNQwKNXvm+yYAsrM4zjfI46fJ7EVbpAhnPf8ZLffhsA4fTAS4QYgXCAE45AGgijwKdQ2yDJJY243vXSMvY+0+Q+XzhLIGM+q8McXJjkpjjFagsV2gq2GiwRCBGgMKRpLWreD0sagwUtLL9EMmiBgnwj5vB3xUH33sNTYGIyUBH4fYW0SumNcbmfo6SNk7llSM/ycdjmg8Mg8ufJNHJny9JPf5kzocLVY5MbL49gVg0GhAgeTDVuky1MwVtBIEWAVZog2NhDvCbugkVaMUCFjDy8hWyFxdJVa+RhfccfIBmV0KlFIshNFLl3cJMjy1Ep5hBJM/MwGXr5C20T01SJjXhsTzWBjGGxsIrVFZFK+GS/xqnbwvAK9LOGZyRPI0hg9kfDa+g/51MSnGO0IDlUPsqqv4hSamMwaPsG0wcSGQmGVpc6AbihJVwsUpkuUHJ8TIyd4oXiYcO4WvusjRYtwfR0kqKSBISLLKuQnSohBgXAQ0dUNUmKKsoAjbYzRVPbuo7u6xBuVjLxzx6fXINErgnMRHN0XsHG+gnV1CT1SQjgOg711Hi/vg8wj4TEEEVgZ62dHGH/uJFYeqg8/zF9e/r9hGm7YAAAgAElEQVS5cGsez/Kwthdn1oN1+mkfW9m0zp7d/tnYpKHN1s0zwCPYzf+AP53H8gXVao5WK8SWGRtpGWN8sCyu1GMuhSsE8YBd2uNn/QJWpwdSIUuKrcUaxYdP8ZAx/Oqv/AorX/9zvsk7dHSPnBGEmQ+iw2eKe4iiCN+fJmp3EFae0p530aGFkNDb3CDsdFBOilNtsvFGg8GePsXKJmExoT9osvu5PP9GHOPstUv8f4QccHyqMzkGqkesDQVlcWQ6RrUFdqlEvLVF0mwhRIYcRGAM8d4xjGVhrbXJpnIUjhxDnl3AxBHEApTAYA0rR8YNmdT0lgRnew10cIMoSVjqdzlVLlJMA6p730RnDhiFTmIQNr2ll0mSLazRX0IoRfvixR37SIVt07l06Z5s1VxnDrWtTC6DFGwFWmMtNTG9AVsFhVIWWRCQL5U4Xj/O9fa7RFGIagt8ZXGoPoY9rZl+Zjc6CcjkkwiZI7t2jeTAAewPCIj8zuu/QzfqYu+dIXf2FsZWrMgtvq3f4WfVw2RBwPjnP7wCxnEcvvrVr9JsNllfX6dard5W/y1Xq7TOnRvaujgOpaNHKXxAibi/uMjWO+9g+f4dgagsY/2ll5j6+Z/fMQCVtk1u9276c3N3BTJZHA+Vl+MyD088wlxnniiLcCyPw7UjjC4mcH/NpR9J6ehRknabweIiWS5HFoYgBLXHH/+pK4uF4XnKkuSe140xyPsEgJ8kQkpKJ0+y9cYbKN+/3f+cBQG1xx77qRduesAnw4PA9AEP+Ji4zb8aih29l+kSEmMVcTpvkBaOY9SPLgEypkiSPHrP62l6hDTdTy48jyRCx3shc3DMq8N5sADxnhCRMWR2jdT3SD2D1MPiww+ziZFJito2qL+NEBghcAYRYenOxOtc49xdQSkMV/ubUZPzm+c5NXrqR35OlE+UGyfXiwD7TkmvSdD2JHF+Z8EQr/FNjHTI7z1E5+JFshSk5VLiLGuDx6k/8eT9Dc+FQLpr7CiEZGws6yZx/Dz9eglnpYkxYwiVA21ACrTXRQgbZAiWGpYD2zZGx0hTRKV1Bq2EQa8CxuP4s3X+bPVdtCNwzTjGGIzVJ9WatX6CY0cII9DGRhrFlgkIs4i95eGMqp/0+U/X/hO+5Q97SzG0B/Bu6w0eG3sCz3aHY0pFpuoYMUmsP831+A/Yb42x+eQjjP71a+iKTfmJFWx7jbQdIx92UIkhZw04Ptnmv/+5df5iw7DecXDKDnGakSA4MzWLFJfR2qGvBJeTAYN2H0dZTHl54paktLtBYXYXnZcXsNR1kkEeS+/BSgKS2EFYDr0oQB2Y4eTUcYwxpFlKf6sFzmUKtgBpk3UnyDbz6OUNqn6OrSjlz/s9NmLJ/qyEVxmjYBfoWOCGHVaiNVbjJnOdeap9wYRfpyVeQ2c22o+RsSHDUKSPFQfszsdc6o2wUjVcXX+LE/UT5J08syfOsHGriWX5sKuAtBOkfofKzAW8qqZ6+BZCz/LWX9RYu7KCcm1E1qFjAnKZxy5ngpFHHmWzPEV3vopTaiGUHgp1tTXKHRrZVkoFovoEW5UuhBGV0VFOVQ/iKZ80jNhcmmehNUda8pnYd4S6fvZ2EHqpeQlX3T25tKRFJ+7QjtrDBYN7vvOKjfCzTPdewrZHObrbYzFYZBBLUsvQjUL+j+D36eyep9SHUjFkDfhh5vFbe09SDgY07ArX7WNUy2W++MIL5PJ5XDfHL9oTLJvLLCZtSsrlsLMbEdhYtQF+PcVc3EX3xjqFmS7CKtBdWyUJApRtg7RQvk2a26T9dkr+eZvSgQKD/oDmoI2a3ceXP2vDrRwVb4IsyoibGp2kCCVpDjSDuE+pOgVKETUa+GFGYoHJe8j1Nt2oQ7CvgKTAwYNnCESdXW+8TNgf2jYZJcimBNoTZKkh2zBcCnMYs7l9n4Dvrazwz58tYLKULDLEjQbCtvFGR9ERZJ1XWDtbZOz551noLYAxjKsalrhzHaRlkfR699xqclYObfT2bUchAHupiQhTMltheR4mGyr6Rs0m9YkJCkzT31hDCAsrUwx+sEH5xAjSVijbwsTb9seeR/vCBUYef/z2/q5vXWe1v0rZLWPKFtH+MZy5DbwEbolVwixg5gtfuCeQvB+1Wo1arXbXa061ytgOZbvvp3vx4r29okKgjaF3/TqlI0d23K768MMIpejfvIlJEoRlkZ+dJQ1D0laLEv49z5xkuyf0x0UIwciTTw5FsMIQ0e2Sm539qbVpKR05wsbf/M09CyRZEFB68slP6Kg+nOK+fdjFIu3z59FhiOX71J94Au996tAPeMD7+en89T3gAT+tGIOMV2GH4NMIG6t/kaT0yN9yJzZpegQrTbf9PSHzdg2FfISLkSmYFKFjotEvDjcRAn2/QO19WHG6o4ovDDOn7+dG+8ZdQel7+JbPcuNNHlNtjHRJiyc/NBiPR54H9X28TguV2RhhkbnTDOqH0fa9tyCRdpBpC2MNLRLKJ04QNRoEG1t0F7rIUkDr7Fmi9XUqp0/fM4lI84dxkh+A/sDYOibzZ1nsbjK/+SZj/jhWfQS3N407vhfRPIeRfVCKVOeRWR5TLAMpqpAjbAjQhny5TxLnKZoRph7OoYsDGjdb5K1p0vQwWbCKbl6nO32NA2M1pspVmlHEYFBjbvMk5+JbjOXHeXb6Wcgy3nz7z/Ham8iRMYzrYsUpWlhsOHuY71zhcOXE0JohTVAypD/xFYQQNMQAz7QZP36EbHSMyc0XSVRAXOpjnfaRFYUQGtsLsFyYcjM+LTxqRwPeuOLhqQqP7tmN6Egi5dJUBc5tLOB6LrZtIdMO37heZ+q4z8+dqSBlDxGV6b8+IGu/Taauki8dQkQeG+ttbm3uYv/JWYwBKRVh1Md0cnTV0wC4/g36u1aIz/0AyxYoYdOQmkwVKCuPTAy9KL3RPbTjPhkdDvmz9HSEZ7k0TAPXuKCgO+gzqEaULxtGijF78iA9C6/T5VBeslwp4OHx7ua7fHXfV+magMrJk7TfeRm3eIPR47coTF5FpBn1A9PIrMZm1OPS+Hmm0kMkt9YxaYIUgsAN8Z44hRobwZEe0pkB5WAIEIToOEVs2zRN7G8y2ikRt2YwXoaIFR42g2aDa2++zDVvEyksVCNjbusa78wm/NMTv0rRLVJwCiz2FvGsuzM1SigyM+xBfX/J+YVonrl0hZlwDHvka0yWr+JE7zL78FFWNzTRWpmcdQPbn2PEy+NZASKS5O0Uo3r8x955/odP/3eMi+fp7HmLpWCJP135U6rNKqd3N7BvLTDj1Zmx65hM0725RbzVJtaPs16qEK2tUhovkyiJ0pIoCm6LshgMcdogyTK0dGj6dWbsNQpll45bZdfIbnZXN3CXlohbvaG6rBAIJTFkyLjE5JGHKOTKNF5/HYxmYu8BbnWWWNVbtEWA3Eq41A44PHqG1e4qy60WS+Vx3lm8zP6JHgf2OhhhkfcdgkizuT6LKQwX5OzNTaytLZwoYuOQ4MhnjpG02ggphxk9Y1jprdKKVvnzq3/I9fb/hWsU46aMIxSPOoc54Owa3lbSdEdF1N2l3bcXHZKpKu71VWQ/RtsSX/oIIQGNPzFB0u8TtVq0L8wjdIwxCakSWGWXeCskbAZ4NRezrU0gpCQbDO7a383OzdsZWoB0ukY6UUW2e3STPqNf+NeMVj5aUPq3IQuCHctNlesSNZv33U4IQfX0aSonT6LjeNhLqRSbr79OovWO2bWd9vPjYBeLjBw+TLy8/Hcy3t8X/uQkxSNH6F2+jFBquGCpNeWTJ3E/UE7904Q3Oor33HOf9GE84B8IDwLTBzzgY3EfOxJgqEDy8RUCdyLxHexOcjuIzHJ70VYFK1gitVZI3d0k5U8NVXo/BubDfE0/ELCKDyoWARjNofA8o/SwAgkmw+m8SVR9mrR48s62eqh2a6RAW4q49jRxVUMWgXBghwmFED1s+3WUXMSyLpOIo2Byw8lirszWwgaWk0M5FkYIBouLRI0GE5///HDSkoW4zb9ChYvIfgNZnEeXZsH1Qcf0RZ7/eHWBbpSxWy+QsEpT+ZweO00mn8fZAyJaRKcDMn+MyP5N/PQPUGoVpTbxRzKyMEbSxlg23r5/iimfptVbJo4lLhUGy8uEK8s8dKKLa3W4tNLG7cZMHxplvbDJaK7DV/hlxvPjyMVFvL/8Bp3kdTwJXL9JWq2gp2fBdtiwdnOBkINWGaFDjFchKX4K7Q3L6vaX93OldYVV1UWNSfYfG2Gs1KRqb7LPzxNlEcodZhQMgC2ZcicoOBaf27PBrW9Kbn7z1rCnVz7O2sh5SqfaJLmMxcDm3c29NOPdrPfe4vNbKxQKNxg7bLG8OUbrtYic26fTucDWRo1MPsRIcRQ3MhgMvbBHplPe/4jR8Tiq0KAV7oEsQmYxl+NzeDJAK5eeSdCpzVzmclhBYlISkzLrjdMmwvXyrAUNviB3sakG9EZ8Dkw2MEFAEIKyBaXdBn8k4IkFxR8EFeIs5nrnOrd6tyi5Pr/85QbplQLFyRW8SoW8M4HUEoPFD9YS9PgWbu4MzmSJKLSQuQr+2DibJUnVtSmIKlXnMFm2gVIKTA6dDUAY/NilbNfIDt5k4/WHQEi8Wh2tNetvvMGc38JRDuViQCmXwMN9Wmvf4DvlGl858E+oe3XGc+OsD9ZxLReMwV/vU95IeHiXDx5kSUJfJfxu+w9oZh0sYZGmEX+2sJf/Mf8oRbvO1cYcrSgiLUWcbS6TZRGlyAzvJZ5DgkNmNGEErf4I3269RDtu4ygHKSTduMNLzqu8MDmFt5JiUk378iZCGCrHShgrpj9/i8HcHMI+id918O0AYYaBZRZFOJUK69EYS2mOXLmLjmClM4UtE9b7Oexsg/z880xu/R5X2yH5oj0MCIMMdctm4twY2fgS4WiAlsskxRY63iRfNCRBhJ/YqLERnsv2Ezk1fuePf4eH0odw63VmRw5yvb3C0sWQzzw6Qihz3LoRUa0fJgbcxUWsdhvs4T435zT9mXNofafPcaW/SiJi1nqC6+4mbt+jM6qwNpvM+lP8Vfg2fR0wa09QSu0d+xGVVHx+9+d58eaLqJkiqtlFXV1G4jLql4lbLXK7dmG2g66k0cAggQLa6rKZy+j3u0xQwlppYpWe4Xb5eJbdo3S6r7Tvdob2zkEIdK2ISBSjhZ0Fmu6HuU8w+KNQnofeodxUx/FHUmAVUt5VRls6coT+zZu3BZTes9zRWUbl5Mn7DfOfLdWTJykdPEj/1i2ElORmZ3f0z33AA/6h8iAwfcADPg5Cou0RZNa7N5DTEWnhXpXVHwejJEHBx+1Ht21fjF2hW55AOz/+zzZ1bZwwvjdragzpBzKP+yr7eH3tdTx1Z5IwldzCTRtUKoeGpcxCYqSNu/Uymb8Howq4/RArzkAYjBEYKQgLHsZSYPmQhdjttxFhAyvuIsiQhUuo6evg+BhdRNhtHPlD0uQIWo+xeWkVtf25jTXsq5KWRdrrMVhcJD8zjb/2RwiTgvII3Cewgz52OE86eQRTOsofX58nyyIeFV9EqhIagzaa8413eWTsUdrmv0D6LSBF6zpkim53L5XKbyFEC4PCyikcZ4Kw9QLlqTfo909QsqfxVB4dR4QrK+SKgmLBJklGkKqLkzp0FkrU956k7gcMBlWIBxS/+e8RhS6FZJlBGpNsGeIlGxmmZKUi0rZJZg6RVr945zK9b6L41NRTNKMmK/0VXOXSjiT52OVYyUFKiS9thCXJDCgjUMrFcfI0LuVI+wmt6yOkySi6ZxP3Vri+USW7WOblg11sS4AjSeUq6xs3eLk2wc8eZ1tEacDEcwF2WYFU5JcEG2dXCDbLbG2sYU+MkPV7KAM674EVEOdtCs4Icr1HIb9Iv1sg0SWE2EPLrOFmo0QpdCyLftJiyhrBEw4IQdEq0E4jfL/A2fYcs2+mHP2MC6lm5tENElfQyVKUFHR7VaYFVO11vntlnJ6Vp+wUGCtsMVU+z7xucuJTL1DKgdqYQrQjcFyE7RGHJSQDbtivUyudID91GhAs0yVRAYfUBp73Db58cIo/ulok1hvkbIdAS3Rf8oXcGGE/Ty4fobyQqKmpnjpN3G7TkgHaZMyODfDGEvQeifRgwmzglF8kTH+G3aXdGGMY8UdY7i0x/m6Taujg50eZVSMknQ7B8jL/S+01BiKioHKYNCVfqCNsxf965U95bmRYHq6EIiUl1AFhlFIRksy6e/KqBbQ3v0sjGdsuIR8ihKbgSC4WBnz18RNsvbtBFiV49TyQkWVt9EAjfZ9gYYF2+RTqwGtkVoTUHkbEGC/hwvkp2n2fZlQjifeweiXkytYNgmhAcXmJ/a7g8fgoB/df43qnh9GS+rt57PU6E906Sa7LrfbrdNMBYn8RtZkw39uilHMo75pGqFEyDdcWFkiTlIbTYLe3m/zoOPuEoq9T6O7j6NQscf4CnfFxRBxjt1qY7Yl8FEW44gjGZMTNZbzRCVKd0k26lIs2L5+XuNv9536+SFNv0OtdpB1FLIYr7PdnmTn0ML9oGXaqGZkpzvAvj/9LzjXO0f7UNJW4Sm4rJt7cROXzxK0W8dYW0rbRaYo3Okoz87iW9lAiQRYM55sNcmaCp7IqzvZtW8cxpePH775fV/cxVZhiK9zCVnf6OAfpgNMjp+/JxN+P7o0bdC9dIgsCpGWRm52lcvr0Rw5SC4cOsfUB70oAjKF48OBHGuP92MUi5VOnaJ87R7y1RbgtvmQXCtilErnpaZzqDn7YPwY6yxjMz5O023gTE3gTEz+VPpvK8yi9Ty36AQ/4zwn127/927/9SR/Ee3S73U/6EP5WFIvFf/Cf4R8qMljAbb6E0/khqn8VIzyM83fzsPogmTOG03tnmBHxc4RhCGmftHCcLP/xH7z3wyhJ6jmkjk3iOSQ590P7Rz8SQmAQWHG63bMqEFpjpCIqesP+zDgmv9ljb5Jnjy4xoj2aIiAmYyo4T84pcKhy6O4HtlAIHaEYx44zjBLbZcgCgcGOUhLPRg1u4K//CXZviVzzTexgGSe9hpV1UJsRxtfg2gijoQPS3iLLZmheXkOYhMyfxdh3rqvcttAo1wbYg+sYLHrXrzNYWGDQzJMmGXrQoVOZ4OW1dXbxNEXG0NuZbyEEgzRgIjeKJW0yq4gxee6IIblI2SFNZ/9/9t4sSK7sPvP7nXPX3DOrMmsHUEBhBxqN3rvZLTabTTWpIaUQbSpojWSFY2asUWjmxX70Ep4Hv9kOKxxhh2IiZokZO2xpKFEiRUoUpxd2k81Gr9jRAApb7WtW5XrXc44fslDoQgFsNNkSxVF9L4hEVt7l3Js3z3f+3//70LqPJDmJ779AGCpAAxbGjGIwfHjlbaxEUSwEjBRWqXbqHA1jKmEX2VnHKRQh45Kmh8le+rfYi1Nge5TxeacxiycihCuQiY/p66eVdHjOPkJ1cMN9U5kt94AUksN9h9lT2IMjHQazD/HosEPWmkKoDkiDtCOkEAhtYeIi0aogrLdRnS7dGwXUmkQmLYztMhOts0qIbdmEJRuhulgmwgiBSnI8tzfsOZgW1ok7UU9KpktYGRcnH3FrpcM3pt7CH+ijQYBredi+h4g1g7am4J5Bqzyub2DlKp7bwhWHORPaWLqAVDaD+4+ihOZ04xInigfZnRlmTbVJjGI6WeFSfIsXnadJmkNU9tYp7Z7Bkg6tQLN0Jkvrsk84ayHdJhfjQWwnw68cnKWSW6E/u0TJX8NmieKNacTCInSWoLEAnUUiZ5TJdoikn3V7P7OyxYfBLdZUm4NDE+wv/xiw8ewsJwfGqPgRBo+j/UM8PN+Hryvo1NCaarJyOsbJ9bHrhc/Tnp3hev0aa8ea7H2qg6pY3DaX1Urj9BXYVa6yK/88Nxo3SHTC3rUM/asay/fZX95Pxs7ieBk6rubV9CyO6yEsC7dcwd3I0my1JxnzCuQ35PdSStK0ydXuGkZI7I8uPAkouVmezQ0xa++6a/ItsKw5OnHM42PjNC6vEi51SZoxlm/Q7EInDsn6OkZrvNouWisjvFG/xWv1W5xajbm0PEYmrhK2G5hqmbVantPLZ7EtG3t+jV3OALa0Obu0wvHpZznQ2Ef5/SIVc5yW4zIt15jNrrPS16Aa+ciMjejzWBUhHVtTzgpkUiYdKjO5togwAtXqUFhIsLJZ3FoNx0BqJCc/9znyJ07w4dWrZNttrDAEKdFa47ouBw4cIGyMIJnDKcYkokMjCFidH+fMchejFKovg8wvMhtOUXMF/a7AG8hy4MDnSe2e0dHR/qP3fOTa0mYkP8K+/gPomSU6N27g5PMIy9oke8naGk6lgopDLqpbOPgIsiDyWHjEOY85t80uVUF63n0dbp8cepJzy+dY6i4RqhCtNcf7j/PPH/nnSCF7UTPXr9O+ehUdx9jF4hbC2bp6lfUzZ5C2jbTtXo5ovU68ukruPtE0d8Mtl8GYnntvGKKTBOE4VJ97bptZ04PCr1bBtml9+CFONktu797e8RhD+/p1Cvv3IyyLuNEgWFwEYz5x3Isdhlz70z8lmJ8n7XRoX79OMDVFds+e+/sZ7OAXGjtz9p8fCj/hWbBTMd3BLzzs9iW8+g8wdk/aJHWAv/p94vRxktJ2g6GfFcbtpzv8D3HW3wJh0DJP0v80Krf/U98XsJ2M6gineQYrXsQIl6T4KNqrPfD20oyLcm2csJfFl/q91wgBqaa43OqRVstipDBKNsgzoEr8gFvsL+5hOD+yfRVZWD0iE6fb5cJCIIzGCgO8+ssg83idyyB7WamYAJEmGKeIPTkCxacQxsZgMMEKiVwByyXN7EN7WzPrjNZI18UKbmGsDN1bt0jbbeRGRSTujBO3NR9eGyYez1PwhlF3RdcYo4l0SiFRJPecy0QYU0Opu8fYRYgmAI8OPEqUmeSD5geIsMOezjL9icaTWUDjRavYc2dQ4SiUFVbzFmzI1QaNwzOhz9tuF+O2iRqLGDXEk/lj1OIMKk6wbQvl2Chn+wSplq1Ry/aOLQoHEC5kzb9D0gGhMImLCcvQ8Qg7GsuxCCOLuF1EGI1I13DcQUQKcUbjBr37TaBBdbCFi02GxalnGdrzJn6/oj0tUV27dw7C46YXM3nwLZbmC/zxxW/ymUOfZc2LOSHzjDgV0uU/I60eRAiJyBzEHesjnJmiGCU8ow5zSlwlNzaIcG2qzgBapQRC8V4wyTvRJF0d0kzaPF57BK+bw87W6HZS0vWzqNhn/QeGtXqMyCYgBe1Fl3zS5Au/7qFNBq0gSnIMuYq+Dy9vVNYzd1QPSnHCTPKOPUg7OMqH7cucWj9DlEYYDCvpOY4W9jOQG9kYmzKHq1UOV4cARTt/jLnvvU3rfQWmRGO6Tmepzdv/5x8w8Y//MbU3SqTDHeL4rlgny8IOcjTeeIduPeIzdo7WQD9z6+ewKyO0kw7XG9e5uHqR2fYsXWKiQofCnvHeBhKFtdZGaIFckcRRF7OngHAlEknNG+Jkbpa3uik105NZG2NIEPzT0UfRqUNj+hq2kHjV2gZxEGg9iG3Ns3Z+iZV35oibMVJCZ8bg9HfIjI3RnZvbHL+/7n5AU5cwrQlsxyaUCeeZYmz3LppjBW41riOFJExDRk2ejNsz+fKkwwUxx5PdcUxQ56y6SLMo8DyLOJeQKsWNYpe9KwKVtbClQBjJSqfJoG9IdvWhl2/Qmpui0OkjUVni9XWgV7krj4xQPHiQIvAi8N53v0scRWDblMtlDh8+3HMKVQ6dleeJkhyN9VnO1S9TKfSRSZcIPA3VOs56zOHTDiOugwCyXpdi+jrhxCOsBAGNqEHJ+8lSVSefxy2XSVutXsajlNjFIlY+j0kSVlUTY/SW3GfbshEvPk3HRAwe+hJeYXs/620U3SL/4jP/gpXuCqvRKsO5YYpu7++TZpPFV1/FKIXleXRnZ1k/d47Bz38ep1DAGNOLTrnLjVY6ziZZ+7g80tsoHTtG4dAh4vV1pG3fNybmkyC4eZPC/q2/sWKj77r54YdES0tEq6u9BTOlcMtlas8/f9+4ko/CGMP0yy9v/m5AL8JGJwmrP/4xA88//zMf/w52sIMHww4x3cEvNozGbby9SUo3/9vO4TQ/ICmcAHnvfLSfabd2nrj6BRgZIXxQwwRjEKqNEfY9zZMeBCJtk1n4D/Q0lS4Yjb34J0SlJ0lLD266ZCxJnNsu7co2Or1J0cYquhCSSrZCRZf4z71xlAKZrN/juLqkxT1YCdyzNVUInM4NQGKlFkJ1MJaPEBEIC5IAIfYj0hpadTBOFiwwahyLZ3GO1QknJ7mblqkgoHDwIEadxUTzxGtr2wwxDDb5xIF2F+P1qpwfhSUtsvcwedr8vCn3jnMbuqTp+OarR49/ntFlwaCn6UunkDLcNKwRro+I1jHtYazcNcyeCly+BTkPrVIe1jmOpgVu2m3aapii/SRlWSJVCWkSoYoVUtfZJh+/G1qP0Q3/KZH5Ms7i9/Cc17GzUyDLkA2xMoo0DunM9mFSG0QvikaogAm7wkIyTyvfGyNlDIk2HCsNIoXARAN0Jqs45TXyg4r16YRwvoOVk0xzgdG9hvx1zbqK+cvZH/Suj9b8H/t/jaxq4IQh+C6WsPCqVdz+fnKdJpnqb/JkMc+t+jWSboMD2XEcYfP/3PgG36+fQpPQl+3y+dFRfufIM8zUF9GpIW4PoWyXxsUQ3ZGUcobAUmAkQd4mf8vgrXRgtHdt8/EoeOvY7QCsPsglIBQYAcJBqha/lfkv+dftkHfXztBJOigUOTvHSnCT/+3d6/zPz/02jmUDkjTdt5FHLHA7uzHXVinXbJKuw8RTFq3lRVYuXmTqm9+kuu8QaXiWKN/EMb2fXZ2mYJUovOuQ5lKcJEWEXcoLZymFt+jW6qzicG3NcHHtGkorUqOYocnF6VWet47hNiMK64rqcsqycMgOKuL5FcRoDhsluXUAACAASURBVH+fx7BfJFf5Ap+1X2EyCQg09LkuvzFygpMrFeYWM3RYIWf5xPU6TqlMfv8E3WiMw06WtQ9nKIxnqJ/ugJMBRgiXl7EKBfITEyStFjOtWZbiZfJuAf/gQTJDQxitKUuBa/n8xq4X+MOzf0jGzjBaGCWsX9m4WwV+qUJztUVMynvyJi0rxSiXwHNoBm0qPoTCsDgh6bcl/Z0ci90m3T5J94kDYFtkw4DlVDG8sXB0O+po+eJFPvMRw5X9+/ez7/d+j1vf/CZ2JoNQarNaaLTGGxig9uyz5K5f58Jbc2jXZtf4MWaj05Sm2gxfghW/5/JbdDs8PKSwG2s4yXU6uzwCdZwSz/3E76fRmtLEBFYQQaIQtgW2TZjGNK9NEh4YxNysIwOFAZRrETyyGz/rQ6qx7uNifjeq2SrV7FbX0+Uf/QhhWZtmcZbXc/te+dGPGP7Sl9BRhI4irEwGYwzR8vJmNqadzxPMzlL4BPJRadufyHlVK0Xnxg2i1VW8/n5ye/duqVSmUXTPyqXleay+9Rb+4OAW4qyiiOU33mDoC1/42H2HG9XduyE2HKF1ktw3Z3UHO9jBp4sdYrqDX2iItIFQ3c2+wy3vmQQZL6H90Z/DkW2F3bqI23wXobqAQLk1ouoXP7F5kVt/tUfktkTV5PEab6PyRzBWBhmnuGGMVBqhNdoSRFm/54D7McTGTtUmKd0CKbFTRVD5DNnFP8FYH5kg6RQtLOzOZZxgpteH69ZQmfE7x6kB0+4tEigJm1VLQU82KxF6CIi4YzDVkwNbsUtl4gDRygrRykpPoqU1KoooHTuGWyqRpCexG2cxSm8hppKYjt6H62bYK4eZUXUO28Ok9Pp2E50wkBnAFRahd++JRxQ9ju9/H+ids9YKIZYQIqH3CO1lWnrVKtnBMqLVJm3ncXIKaceAxs5lMdpHx7uwWwuY/RX40QIojXRshBB4SI50XGZ3P0kkHDphFxUEZPpKWN69zS2E6oIxd91HAiV2oSr/hJB/gud9B99/GTs4R6bmsfRejaQ+ik7WkI4F0kWnMcMDg0zIhCtjAqEjMk6WscJesrqFERKv3iRIJFADZTD+QUojU6ykS3QDjZQWUkA1F7DahTB16JqAqWiKEd3l6uppQpEipUW/38fByiHsjI+3EUmxf+BOf7YB/mHt93gp/BzG+ia1bIGsUwbOsvsLIVPfcUmbEAY51pfB2DGWK8lZgtSBejiAyFjUr6wxNFrFxcLBobMyiDRXejdk2wWRAVtBmsN0HNysBUJg2x55KTZdThuRxhVzvDL1AV/c+8TGfTBMkuSwwhbd9yLSWJEGHj3/GUWxNkjQbrP+3ns8/i//JbnXE7rWnzAXdlGOpDAyRv/1YXKZEqI7hNYpdnALLEkkXEYO3WK83KUy2+Ha94t0IgtfW6SOIGw3+TC8wGPOfqqrmtA1DFkDXGu6jIxWyc61aVQqzI9McLr+Jo/0/za/a8+Rp0PSknR+0OTs0gyuf4AnpMu5ahNTyZM0GqwtTLNr7AgTiwdQ1gpGdnBHm3SnVxG2jXAE3elpqk8/ze6vfY3pW68ytA62528Svdv/rkfrVDNVHhl4hNVgFSkkaSFP2myBlFj5PI52+JP1d1BOA2m5eH6WXK6IEynWwjWGrTxTwwn58SEcSsTrgqSbI74xg9WJGFcuQ+kRojgls1HxCqKIWjbL7rt6D6Xrkq3VWHr99d5ry0JmMhQmJvAGBpj6xjewPI/PvvQ7/Dg9g/va+zy+5jLf0ohU4ETgR20e3p1gCRfjasJJG2csZWLoX9FpngDuX9F0CwXSpXrve3f7OWUMPhK9dx+jMuTMvjw5fEyaIj2X4sEJoFcNve3y+0mRNJukrda2iqcQgqTVImm3sXyftNOhcekS0fIyTrGIvWGw1J2ZYe3MGfITE5+aE+5HETcaLL36KkZrLM8jmJ2lceECgy+8sOl4bHtebzHn7nNrt3ty4buOS0hJvLb2QJVe1e3et4fWaI1O0x1iuoMd/C1hp8f0U8SOXv1vH8IkOK3zverh3dBxL1f0rmrqp4kHueZW5xp+/TWwvN5xShehI+zOxZ6TrXjAvlGj8dbeuPe5YkA6SPrxuyFCG9wowVIKO1HYYYKl9cdW3ZxuhFTqnn+jhSAq9aH8XchoAZG2AIOyK8h0HYkBAZbOIlUDGa+h/aEecZKCOJvBaZ/HyBx2uNYzR8JGiC6QQ4pxkCkmX6HHZF2UGsEYH+PY+IcO4tZq6A3Xz+ozz5Ad3Vh0kB7GzqFn390kvRYxkanS0kdQUczxR1+k4xk6QQNPC7QwDGWHOFCaQLk2ScbdPO+VYIVL9UsEwQzVcB0TOtwML3Ct9T5T7de5sjLFjbUcjeQMsT5HwXkIgUt2ZAi3cw4ZLqLjHIYSdmEUI4cwOot2q6T+YUQhQR/uQ841EWsBdEK0SGgdPUQr93BvvOMYf3iY/N67EuR1glP/Edn5/xu3cRq7cwm7ewVtVzDO9kmxUgeJoi/CjItuHUWkNcJ6FyxB0olJQo2TtalMDND3xB4W0zV2y5S+3Ch4A3SjNX65fzfewho6cvCry0RqFByBX16hrRQzcZ3lMMvKgoVRAs9RdGKX2KTsE7so+FPoahEpXCwh6aZd6uEqg6VDpPkjpDrl1MIpfjj7Q84un2Wxu8hwbpih8quU/QKOlQElsZc1maVb1PpnKWSnSJYdVtZD4gIYzyJ1LJpxnpnGLlJVIpNbxtmdx8eiYGUZLOzFnb0Auh+SPkjyEBUhyYCOiCpf4X+c+Q+0k/YWEqCES8UPiVSb58Ye/ujoIue/wtI7UwT1DuIjcR1GG7xshubiPKO/+qsUDz3J0L5+9h/cw+7+w1Sagua789hhmbCZw7XaCFIsfxbsLjb9mOp18qWIR49HvH/Wpy3h2mBKNXBoE3JkpYBtYMjp56n8Q6RCsZxGpOUhgsDhSr6NlJLxviMsObtZMQN03gtor7i0lUNfrkpeZhlruLj5PH6uwKPWBC88+TU6165jUgNksHNlvGq1F5flOOR272b0y19GSEkjaTIXLGBb2yfu2mhc6TLdnOaD5Q8oOkWy5X7C5WXQmuWkTiG2mLYbrFQlBe2iVIwWvViqqBPSGjPIUYfBfBatIvybHl+afprd9iC7rUEGJ1vsL1QoDw/TjWN81+XE/v08sncv2ZGRLVEurWvX6Ny8iT80BFojHAeZy9G8eJHGuXOkrRbhwgKtH7/DUWsMP5RU8xVOJAn73H58aTPW18RxLKQtAEMaOwwczzOSzyNElzQ9ee+HK5D3c7SuXun1l248awwGnSTs+tKvUBifYH7lJm0Rkh0aJrdnD8KyaCdtnh97nor/0/kmpO027Rs37uneqqOI/N69zH772yy/+SbRygppo0Fcr6OSBLdUQkiJV6shHedvJJZk8ZVXev4GG9VcafcWUbszM5uGScK26U5Pb4kHM8agNrIx7yXZ1XFMZmzsY4mp9DziW7dItN72nrAsSkeP/p0zQYrqdVbfeovGuXO0JydRUYRXq/2dO86/y9iZs//8sNNjuoP/ZGHsItou9XrG7n4gW1m0O3DvD/4tYnnxZW605yk5GY4UhnBkr+IpVYDdufIJnXzvF1cjQac4QYIREieMQRukMQhjkMqgXI3XCYkK95ethnmPwlqybS9CacJS78ddewOEQ1/dfM9b+jbYhY0s1Q4KiaWLiLSDjNZIMv1EvkHIIsobRsYr6MxBrO5pjPDA+BjfxqQGXej1IhmTJU0PABmE0Si7N+HPDAyQGbj3NU0Lxwj2/tdY114jl8ug5G4cUSDTaROWPPxajaepoYc1KgzIpT2pcug5m3mqqU75zo3vsNCYJN98B5WsccrOcyRXxRYpCznolg/z45s3WO6+z75SP8P5Aq713/HS2H/PQHYAZ+QwTj7EStd61e3bl00YjOWTFB4iCR/G979F+tV9kBiIEjqzMUvv7EYnHYRlkRkdpf+JJ7Ze5e4NMsvfxW2+i5EZMCnGLpEUHiKz/B26w1/HOHf6uVKdcr1xnSAN2O8dYKD9LvnRMtnBAq3ZddIgxqtkMYd+Gz+9xmjzHCP2Mj8K+mgbQVEt8dSux8hVn6N57d8hnJil6UPkx5Zxck20Fgz5GYJVh4vLHmY3WDcNdqpBG8oIBgoLlE9qfHOV0ORYag2DsgmjFWb9Q1SM5s8m/4xG3MCzepPLuc4c/9/lf8M/ejQla/cjUhtnMYNdfx9j+wjHI1fOk3VLzK+GnJ4SeDlJohyUsRCkFEyNzNhBnhg6gmuy5FJACFRpEGttHUR+IxLJgInQbpnm3qdJLv3v96xMXVjKc7BcAAJ6Cyc+cfw0dtpPfmiA9RtXNk2NjLEAgZAWwnWxs71qexR9CdV4h+71P8PyXEy0myiuYkxKWl/Gq2mQCRiJle0jtAQmlWRdxclfafG/fOiCkPQrn9S4PG0fYld2cCMTE/a6o4x4gobvkEpB2bNoJS3Or55nND/KwExMZGWwCTHmjjzddTNMrHoUq4cQwqEdt3mdD5ltXEHYNkOywhP+kc14E+8j38Ej/Ud4e/HtbePVSTrMtmfRRpOxM9QyNU4tnmIkN8LowT2o5TVq8wnFbIkk1yDx85yp1hmt2+zXa+zuyzM/kON0lOUh5xALN9pk5uHEJZfInWeOddoVh8BeJht4jPv7eOkj3xcVBHi1rX3hrY/0UObGxwFYP3+ecGmJ7NhYjzBaFtJ1mfnr71N86in8wihJMk8ws8Zhr5/QW6ATKLRjEMIhX/Q5XhuhZxo1vW0cPgrXcRj97OdYPvMB8Xovysktl6g9/Rlsx0X3l/n6P/hvObVwimtr14h0RNEu8tmxz7K78GDmQ/eCUyph3afiJ1yXxuXLNC5cIDs6Suvq1Y1MWYt4ZQU7l6P/8cexfZ9gZuZTd4NNmk3Sdvue1dx0o5rr5PPkxsdJg4DWhx9uxtHY+TxDX/gCy2+8AUAaBMSrq8hMBr+/HyHlAxku2dkshT17aF64sIXgqiCgePw4qttF+v7fGROkcHWVpVdewcpkNivFrclJonqdwZ1+2B38gmOHmO7gFx5h9ZfJLn4TI3qyRHQCJiasfnk7WdUxTvsiIl5B+yOkuUN3yMOnjEQnfOvat2jOn8J3fGKd8mb9Bl8ePMqubF9PdhvOwoMSUyHRTj9Sde8ZVaOyB3E6PSJqqRShzEa/p0AYhduNSDIQaQP3yTNNsz5RmOB1Y8ztQq6ByHdI8veOG7DilS19vMpqoWQLLIlS7yLaCbnVeezgOugEI12UVUBlT2AnyyT2LrRbRObHkaKMTkrAxr42pMhp5uMNLAD6dx8gJUO4uIhOUhAJ5WoNZ/9+bovApJDITI74Hp9/Y/YN1tYv0N96tzfOloNSHX64cIMXhx9ibzzLny9FdOKQguuz0G0xUakhRcB3b/wpv3P0d4n6P4+VrGK11sDEIGzQEcrfQ1R6plfBNxAE/wVSLiHEOlrWcMYqjAwmqCDA8v0tRhy9sYjJrH4fggWiwMNyBZbrIVQbq3sNlZ3AXX+bqPYSALeat3h56mVSk2IJi7d0yoQr+NV8iiVCymM+yt1DVH0JY2VJ9EO4jfcp9z3Clz+6X5NC9CpxEVTYh+7AwoeG8tgthgY9wkaNITlAM3q/F58yrolbCctLTX7/8YewdnnMy37K7RVyUYuRwk0mm8e45h4gibqsrk9SD+tknTvycEtYCAlvTN/ii3v7sVt9yM4HGOsj94EQiNhj3/EBLk7P0g5LYAtAYxIPlfNoVl7CE4PYzhWM6YDKEI39D7jh/4vVPQ+qi0Gh3Brrh/4nkJKT1ZO8MvMKmY/0HXejLmthk/NLh/nj8zWeHn6EamY3INDuLH0HMyxfLJC0OxvS7J7MO2w2qD330b5Dwcp7bVTwbO+VO4WJeoZN2higCUYiMBR35VE5yXqYEEvJ0N6Y7gWNRnMlE2BrwTvpLUbSfuyNKBiTppRqw/QV+ng3+pBWomnGTRzpcHb5LCfmPcbsPkzWww7vyCKFEOg47kkWB/v4oyt/hFX1sBYkAsGCWuM73R/za5lnkXFK6fhxAObac3yw/AFKKc6unWVPcQ95N0+QBix1lxgvjuNavWMbK4wxkh9hrj3H53e9SLlq823/L1D9/dhLdXqC7gbPPLyEJQ3CstgtNf/Z4H6qjV9h4dotRBzQzcxxRc/SMgHWisEtFuk2m5xbPoc9PkbNLqOiiNzevVtIhlEKFYbbzH3CuTls39/2nvQ82pcv4z/9NHb5GZj7j2BCqsKn6mrccg7dzTPyTBEpBBCj9U9eCNVC4hYKjP7S8xjVy7wWlgXGoDae6VJInhl+hmeGn/mJ2/okkLZNbv9+2leubDnHNAgoHTnC4iuvbBJDt1wmDYKelNj3Mcag45g4TfEfwEjok0KnKcbcPx/cfCQTtXTkCIWDB0mbTYRlbVbDM2NjzH3rW4QrK2AMaI30PIa++MVt1/t+GH3+eRphSHdqCh3HWL6PcF1aG9V0Ydvk9uyhcvLkT5Xv+mli/fTpzcWu27Bcd9MA6m+iqr2DHfxtYUfK+yliRxbwc4KVJckfAzQY0P4oUfVLGHfrw1mGi2QXvoGM5pAmxO5ex2mdJ83s68lsfwoUCgVa68u9F3dJcl+dfpXlYJmsWkUKgSMtbGlxqbXIydIo0iSo7ATaG37g/Sl3AKd1dmufadohzR8lzR3EDWOENtjR7QryRwio7FWH4qx/X2IKkGQ84owL2qBti05fnjh//yqr076w/T8FoLu4nQsYK4vbPruRTiOROiDN7EVli7TG/xFh/xNE5ROEuRGswMFKe8cptMFYklZfHnO/lWqd4K79EG/tDZz1D3A7KbIyjDc0hletkR0exq1WsUyX1FMg7n+djTG8Nv0yue4lZFLflGXGKqGZBgzIENeXLLRbrNLbTqJThnNFXNvQiStUvEEquVGS/HG09DbGsEBc+SzB4NfQuX137TOHMf2wkYIoLAvL8+7Zx2U3z7J25gwrH1xnfTpgfToiWE/I1TwsuqjMboRJSQvHCNOQb05+E9/2caSDLW1cy2VVaYLcUQYHP09cfLQnJd9YVLA7V7DDW9vNwoTG5ccwdIQPLl/n5XiK82GdsyuGK9ESJTHAs4/8Evsrw3z/5hWWuwGRyXLcr+G1XIqLEU7BIS4VaGUrdIsF5sVulsI8h/sOc239GqnZ3jsmhEuobnJyYBd2u4LsTG7pTVZ6GCka2I6DNy4531E4EQhb06rtJzyyiy9P/BoWEyTJSSL1GKJ1BNJBVP45MAmJN0RUfY60/AROdxKhUx7e82v8cPaHrIfrdNIOy51l1uN1Ck4BS1g40mNyfYo+v48+vw+r+Jd4wTDZSplwrUPcDdCpwvY84lyGiX/2z7bI6xrnzm1ObK1CARpNVBwjbRvLqaOVZuhEkcJAROpeJ0oiFm2YXFe8ehMsaaOEYVAViEsearnOXnekl0W88fvz4dRpFna5VAd2Md9dwGAQCNTaOv2JT5qxGYqzeMLZ0hfqVatc3guttI1tObiVPtJ2B8KISEU4mSzHPveruMUiHyx9wCvTr6C0wrM9yl6Zuc4cE6UJXtz9IkvB0iYpvXNNBcWFAOf0Nbz5derXPiQz38AuFFhgnV851MW1JKHS5J0cB8tHOTnwBGr5DeL6fuL1Bo1OnWm9gitshGCToMgw5mapy4HMHgoHDlA5cWLrvqWkffXqNlLRvHIFlMLO57e6skpJHATkx8cRwsYq7iZZg6St8Uoxbq5E7dEcpYnbxKdLu/3fbH6X7wUjBc7GQoSQ8s7Ya0OU+xTiwH4CMoODSMfpSXTjGMtxKB0/TvHQIZbffHOTKKN1j5h5HiZNe/eUEISLi5vVcrf0k92HPwmk49CZnNw0rbobpRMntlwzISXWXdLd1ffeo33lSo+UbkiCpe8Tr69Te+aZB+qLLRaLpLkcxUOHKB45Qry6uunwLh0HaVlEq6uoTofM6M/Xt2Lt9Oktkubb6EV4aTLDDz6n+PuMnTn7zw87Ut4d/KcPyycpP3X/943BX/3eloqLsTK9vs3V7xEO/cYn3qXduQyT3yG3MoMREuWPEfV/vtfvaAy3mrfwLA/lDWMHNzd7Q7UxXG4vcTxX3iDUDw7jVgmGfxO3cQqZrPbiYvqfROV68iplWzjxPRxkRc+JV2qzPc7lHtCOTdD3YJlzqb8buzu5rffV7k6SZsaxgxsbJHqjp0q4WNEMWD529+odKbOUtAfKyCTFjhK0JX9ypdRoMot/2jMAkg5CZrCSENl4j7j0GJabRcg6dv41pKwjPRslSsTxZ1Bq37bNKaNQ0VIvQsXozUq6lAJHSLppQtG4uOZOrVUgsKWFMWCLHOvROjKcw6u/gkxbYGcwVj8qO/Ez5+qunztPZ7qF4zpIq9cHHLUVc++32PVEBoxB271J8vnV80ghidKIVtIia2fJOlk8y+PK+iRPDj+9bftCdTBiu9xPyhUEhmZJcW6oi7Uoyane2KSdEj8ot9ibtri0WueX95wgbbusX3SxvSm6OuKDdsDjr2n8kwXscZ9UuRT8BrbsZ19pHzeaN9BGI7f1WkvQ4wjRAcBIF6FTIMXofjAZtBlEmFvsGSjx9a+O8fbcKo1gP0cyJ3io+tBWYiQtwmIWoTXe8g8x+RLIO4tXxs5jt06Tyx/m+bHneW36NW40boCA/kw/ZbtMLVtjsjHJgfIBfjz/YybKVaS7xnTxA1ZLeexfGqXcHaesJWb3FOz6VYwJcJz3EaKF1lWkByY1CBKMZVM4dgzTaBGsLpPp1ww/FuD6Lib/OjWRwc/lqIeLvPxeQsaFVEkquX76ygNkIodTYy2Or6xRXI17VS8hmBp3UEGXxoWLFIcLnF07R5iGuAVBaTLkuYnPs2t4F8HMDEmziY5jyo89xvAXvsCbt761KWW2PI/iwYObFa22nadx6RIr58/w19b7VA8dQ/T1evg92+VAZT+BChjKDaHN9n49WW/jTy6hy8NkCmVyYY6SP8vYSocjTxmK5WUWWnkqssxTQ08xUe4Z/wgd4ORXcfv6WJ05i7sh7UdIjFI4uTx2qUj7oVFGHvoH9/0OZXfvpn3z5pZeSzuXI2k2t0lJpevieB6NDz+EDVMef/deLOcgY19eoTBwCiFjhIjQOken8/sY03fffUPvuRpnvF6rhYFweYmkXqfVbRG7NuUTJz5V0nc3CgcObPZsfhR+rUbn5k2EbWMXCqSdDkmnQ9pu4/X19SSxxSKZ4WFW33oLr6/vgaNjPg7StskfPEjr8uV7VnMfRD7bvHABf8MN2mi9SfrTTofV996j9swnqz7rKCKYnd2WhWp5Hp3paconT/5czZDuNyZGqe1Kmx3s4BcMO8R0B38vIONFUJ1eL+RHISRWvNpz9rUezIofwO5M4tVfg/7RTUdUK14ks/hNgqGv90iOCrDDWwjVQagAVACWj2MUraRDUPut+xgZ/WQYp0hU/eV7vhflfJwg6iVgYG4bxqItC0yPuH6cM+8nRVz+DFa0iEjXwMqCUQjVJXVHwS4gVZue8+4GhEDokLUkYnX+ZfRQkdHCnRVo7djEzsc8mozCW/oO7tobIFyUW0N7u0mN5o/m3uXc1W+T2h5fPDrLUeshRjJDGJHiOOfwvNdIkieI48dIkkc3j82WNnkr0yPx0kWYXgXBlS6JEexyfITOULcMpL0FhqLr49oapYaItWZPtoa/9G2wc1ucor36D9B28ad2iDZa01xQuI7G0AfpVC/ixBKE7ZSgbWMXOiT9LwKwFq5xee0y6+F673yMIefkOFE9gblPn3KamcBtvIvZFq9kMI7PqYVp+gZLiCGBThRIgWUndIJH+f6kYqHjkrVO0pycQTgGhIMlDIHtYFyH7vkmmVGLjG5SXGrw9dIJLJ1wvHCYxTfeINfZUDwUMoSHhgk9OFB+njDqQ1oziNw4Yu00WoxgTGFjXPK0VsdYuj6OwuehgX3k9x+4ZzVh82ykRKYLcC+HUyvDD6/+ezQZTg6cZDVaRaHI2Bkcy+m5J1seU60pCk6BRtzg/foN3l+sk3c8HN+mayfkfZuvT+xHp1N43lmMcQEby5pj93Onmf+RBcIHJFFawyo8RKE0QfnhryJL/xqT+QuMpUm8Mo6V0m9GmWqsMFaQ2GIP/V6NkY5PdSVEdCyWshHD2d3kJyaQjkPaWUIiuR7PsL6csq9/H6lOSXVKN+MT1NtoO8IbGMAfHqZ48OCmPNeSFtzFKYUQqDRh5fvfY2F1gJl8SGivs/zGD8lPDFF7xEOIXuWhFXmE6gX6/X5acWtLtdi7sUxka4Zzw0DKI0MhU62AVEhqsw57D+U50AdZXqA/M7L5Oen4CCvBzmaxinlMs4WwJcZopOMiooTg8O6Pda0tP/wwaadDOD8PUmK0pnD8OK3z5zHG3DEk2nB/zY2PkzabPefabhc9P8+ur34V7Y/TaP4Wtn0B8EnTY9w9nVoNVnl/6X26aZc+r4/HBh8j62RJMi6J59B65z3ClSUSrYnW6j2n5dM/IHr+GMMjBzhUOoBIe4T4b1o6OvLlL3P5D/4AuUHo/KEh0hs3kLZNdvdu/FoNb2CgV630PBoXL27rf/9ZUD5+HCuToX3lSk9SnclQeeQRChMTH/tZrTU6DLGy2S1VaABroy/2kyJptTD3MEKC3r2RdjqfSjbrTwtvaIhwYWHbc06n6bas1x3s4BcNO8R0B38vIFSE6FG1e0PHPVL1gHCa72Ksu1aMhY1IGshwCsfK0d85jxIShIWxiwgVoKwyba+f4X3/Fdof/KnP534wUtKuFMjXW1hK9eSwUmKEQNkWqf8prPIagxXcxO5OYqRPUjxJMPQ1rOAGdmcSY3kkxUdwGu9ghzMbIsI7SI3iZnOGG6JLaJe5EHybolvk1yd+fUuf4f33r8gsfBNn/ce9LZsEO7iJiZf4X+cNC1ELXzocqDWJWf7TLwAAIABJREFUVMIPl97muaHjjFRWABfwsaxruK6NZS0Qhl/Z3PTJsRd58+JZCm4VK5wB4RBrzcH8MLuzh6jLcR4ru6ws/EdCp8nx2hBpOkoQj7DPk+xuvLKR0ZrdsgBgrBxu4z3Cu4ipjmOSZrNXnSneP2ZCRxGKPNgWwqyifR8ZRT2XVBI6QQW/8gza703m59pzrAarW8Yz0QlnV87y7Oiz9x5Wt9KrcIezW5QFOsmQDO6h05jfnLhLp7dir3UOW+ZZ6mqSZByV+qgoQrouRpcQ1goG6M8N4ZMwPDNJlWmcqA/R+b9Qs/+KmbOPsGtNsmSaWH0lZDfCfusS5ecf5/HBx+nGKTe6NiPJIcr+HuzuGdBtMLB4q83ycgVR9hACwpVLtK5OMvTSS/d06bxzsrf7r7ciUorJ5gx+6SHmkjkGMgOkOiXrZumEHVKdYkubWMVoNI0Q3l+oU/R6lZ7ExDTidaZbLf4wuslzuy4zXjxM2etdB8uaxR2NqT0cMv/WKNKRGDVPrAP8k79Nt5hj4fQYnZUxWskcaaXDa9kmbyzYREnvlqqHy4w0MwxOtolJiHSK3WqSZtq0r1+neOgQ/bLEklpj1bRxot7PvC1tlFZUxw9ybdzhseoTeMLFHxjYUv052n+UN2be2PZdnD39Nk+3CljZLBAihMDJSTznPVT38GYFTcqAbOZP+aXRr/CNq39Bxs5gyQjQJGGX/myVvJvHsq4jpU0tM8B8Z571Zogky1hhEGFa3FaWAnjDQwRv5bBc2H/oSa5f+0uKDd0jbrU+ugeGics+uwpj97/m9GSgteee65HTxUWsbBZvYICFl19m4XvfI200ELZNfv9+aseOESiFd1fkzPr582T37EGIPGl6b5XOpfolXpt+jZyTQwrJWrjGpfolvrr/q9SyNeJWk7WpG2AMratX6cZt5ruLCA2szHHm4GmuNCJO9D2En8lTmJggc+Qgp+ZPMd3uGSyN5kd5evjpTcOwnwVupcLE7/4uM3/+50SLiyAlTqXC4Isv4uS3utoLy0IFwc+8z7tRmJh4ICJ6N6SUG/fkdqgwJPdTbNPOZu+/gCvlA/et/k2h79FHWXz5ZdJ2u5c7u9E/XXnssZ/7se1gBz8rdojpDv5eQHmDGHHv291YPsa+Pym4F0TaAusevURWBjuYQkYLPNV/gL9evkx+o0pp7CxJsspQ/1PUcp8+Kb0N49jEOR87STFS9ibh9Nrzogc0EboNEa/irr+JldRB2KT+HqxoHpHWwcqBUTjt80Slp0lLj6CydySySfExnM5VtDeAFdwC0asOL7ZusiZrFAVMe3vJW3lSnfLdG9/lawe/9rHHZLfOI9N1jJ2FJAQkSJfrrQUuNGYZzR1DYlH02xhtk7EspvUPGeEEt9mIlCFp6mFZM0i5iNa963G4egJrz5c5PfM9GnYNL11jn1fgi5UXMPmDpM5uHs/YHPAe43J0iyvREj6GF8QtjvpDOK1JpGphgpvEhRNgbUwShEDqzpbzqL//Pu1r1zBKbUrlqs89t20iCCBdC8e/iCim0NbIKAQ7RekqgbuX/JHfIS30+opiFROqkJyTQ2mFlLLn0IxgPVznQGm7lO82oupL6Ma7ON2roOON/thfx6hZ8mv/hjU0lDxAAYo0PUqqU4Zzw4RpuHmvAWhTQegER6xSlJqCM0OtPYudGwTbRWvDrXdC9MybDPpPU1Al1m80ULtq7K0dZbSzh7cX3ubC0nuY7iSOSpjwx3my9hTlXI1Aw+LZs9iVO+NleR5GKervvUftM5+573kqt4qVrG3rC29Fa0RuFQfI2lkcy9nMMjXGEKsYW9pIISm7Za41ruGJowhxCRNnaDZSPFNhUJSRbUUWzZnls5ysnaTk5bGsBcCjdMhgD+yhfSPAytgU9lh0uyXm/vKvSVLB+2sJthjh0pUZkrRE9oRC0yVKez2m9sVZQtHfy45FsCsqEjYXcdOUpNPhSf8wf9x5hcQkOBs/87GKqfgVKl6FVtyiW3ap5LdX8A9XDjPdmuZ64zpZO4s2mk5nnV1zhiG7J30e0SUkgky1gZEO0dIS9kasUcXP4dsOw6UpfvPI53h3+d+yGq7gWpJdYx7Dev9GK2CDmfYCYRrgGhe/nGO2GeLZiwxkcigFabdLuHiDzuIgQuZIOx0cYP/QMT4YuUXf3oOYQpFu0qVgeXx29LP3veYfhZ3Lkd/Xe1atnDqFarUYeuGFzffDlRWC+Xm4hwO46nZJW637LiSlOuXNuTcpuHcUE7a0sYTFK9Ov8PVDX6dz8ybSdWmcPw9SshAtY9m9xQFrpk5RG+I9/VwJbnKycJK1y5f43s2/orO3H2dD0XC9cZ2p1hRfP/j1bb28Pw2yo6Mc/P3f33y99PrrJM3mtr/TaYrzNyg3/mnQ9/jjLL3++hZDIKMUdi5H5eT943vuBzuXw61UUEGwpQJrlMKvVn/u5E86DkMvvUR3drYnOfY8CocObTNE2sEOfhGxQ0x38PcDlk+aP4q79iZCNUB4KH8UoWOiyjMPniV6G/eR4Aodoa0cTlrnYKEX43Bq7SaNJMSVFgezVZ4eOHT/yu2nhCjno6IEO0oRArQliTPu/U2E7gERr5BZ/BOQ2Y1+S4O3/F2k6pKUH9/4IwtjF/Aab6Fy+7fIV41TJup/Abf+BjJYQKRNUiOZ1xm05bLgjtG1epM7KSTLwTLNuEnR/cmLBHZwHWP5KG8XVrQIske2T7Xr9Fsxs/FNfHeI9UQgMwGhMQzI9m1fjN6xGWfj3yy2fYk4vrNQcGDP1zg08ASsv4tjYly9h8SfACdPDSiXyqxb6xxQB1grOBRWv4ulMiAstF1A6BBjFPWVN7nuTjCaKTPsl9DyzkLG/F/9FavvvIMwBqTErVSQvs/SK68w8pWvbJPueZl3KOyRtKdcrMIIOm8AgzEJUh3GG7xjdhGkAcV0jd8qSuqtaRpRyGVdoiEqHM2OU+InLE4ISVJ+kqT8ZG98tGb1nXcIpqcZjY+wvnoKtxATnhwi9Q9gjEekOjw78iyWtLjVvIX0vE2CGqgK4/YBhBojE/3/7L1pjF3neef5e9+z3XP3W/vKpVgskuImkhK1UIsly05syfEy8Qw6iTvoNLpngsZggMFgvjWQL40AQQPdGGAGDQyQXiZJp52ZxHGc2I4XrZZlStRCcS0WlyqyNtZy93v2950Pt1hksYoUSUu2o9QP4AfWuffs95z3eZ/n+f9PYdi9oNqvnfpciFfRWI6Bm1xAu4/hujn0ckxxuJup6bOccuoUvTPtSSVLMptM8edXz/K7o1+iPLcNI3Xb5JDWGPESyeRFjIf7SNxtG/62w9LTpOf+Ai3t1V5ikbRwcmMIbwaAnnQPF6sX6Un3sBguotFYhkUQBxSdIs9veZ4PFz8E3UUYHIHmNeJkAYTAC7Lk3RYlUjSNiMvVizzcswuIufHatTImpX1tOxMhGjTG30HHMTPeAkqVUMYyrSTExqB7RhMM5zi3GCLiACcwqThNcirD46k9uEYOb3a2HUytCNS81PcoV/V1hJvGFCaD+UEGVwJRIQRZa2N/ZyEEn9/6eRZaC7x95kf4lyc5kvTgX9J49jROVxeW47Av7ueSNUdGS5RSxEoRJDFfGDkI2Eg5SV/hJC8VbvbR+z0tZv7+NFgui16FIPExpYUOFfauNHGSZXypjNMVY1QWqF+cxq+N4Je3Iox2EXrx4EGeG36Jx82E96+/j5d4bMtvY7Q4ukGf8nrild5JM5tFSElramrdgN50XZoXL5J+AF/Iq/WrxCpel8kUQlD2y3ixh7RtwnIZnSR4iUeiFVIYEMWIOEEGEVJBPakTq5jZcAFxfQFr+83nlCUtwiTk/evvc7S//XtVSvHNC9/klauv0Iga9Kf7+frY11eX3w/FffuY+9GP1gZ7WqOThPzu3fe9vk+SvhdeIPF9yu++iwpDEAKnu5vt3/hGe2LuAeh+6ikWXnuNsFpFrJR926USXXeZ8PpFIqQkMzxMZnj4l70rm2zysbIZmG7y6UZrjOY4VuMMVu04IiojMBE6RAYzeN1fJs4d+Oj13EacHsVsnNtgiSDO7MKpvQPAzmw3O7Pdq/1LIvEIpMF6DdKPGSGIUzZx6sFn0p3yT1aC0psDM5nUECpERJU1fpnaSGPV3ycsPb1mHXFmF7G7A6NzCunNUG9d41L0NrXUGP5tpdAajR/7HxmYrmKmSdytGCvCUkXDJkpiMB2aVoYTSzEvlK5DbCG0vGWAGdwifqQAB+nPYdXeRiYNtEwT5o+g+v87Aq0xKw38aoXlsz8h9lqUC0Ws/gGy/QOkAx8zvN62gAESdwtec5L369cRScAZS/LWsqDHsvj1ff8bJm0V0KXjx9eIVISVCiqKSA8P05qeXjfYMM2LdD26lSS8Smu6vtIDqLEKJgNPrRVcKYRXORCPo4w0OacP7WgOaZ85s48JSgzpPDKKV71b70bl5MlVEZCiO8oOM8ulykWSNwMax6bIpyN+Y9tjZG2D54ef5/Xp1zk7VKcyMY5tOeywhjhs7yRsBOQ6DIQhCRsxjcWI+oxP6BloZSANf812w6Ulrhmz5KJqW5DplnvQMBw+nH+bIX/tvSmSFlbtA4SOSZQgtfQDlEzj93519frcQFtFWv2/hVX5KUa0iBYmce5hjOxeBprfYclfwpQm+7v2c2rxFEOpIZbry1jCYrg4zO8f+H1yTo5QhVyqXqKgba63UnhJV/uu0goZD5DSLXaKIrXEw/I0wgQtQWsH1kwQaLz5FtK2qVXrGPQQxSmUniYxBE7VptlTYDBrkKorLFmjX3bx2fRhTGGikgDl+yShj70T0oVpnHLIk0UTtesRTHnzHkl0Qleqi4Jzt6yXouAvcmi+gc48BFpyvVQiqtfx5+dxBwcZo5fd7gAno1nMnl76Ch08PrCNrO0AGsOYXicGlOpM03NshMV3rnB1XtOZTVApE/tYDpFa6fUmzeuXDjDyTg8LdFNTTbqNBgUji5XJ0BgfJz82Rk4Inh56eoN9v8MRRRELb7xBcMNSRIj2vw16CY2VUk4dhojbSsLNdPquZfd3sj5pNptMTE3wg9kfsHfbGMrzQEqSJFmxmwERxWjbbItPa41CobRi2V/GVIIwjNG3tGPYhs215jWO0g48/83xf8N3Ln2HWMVooTlfPs+719/lXz/+r/nM8Gfu+VwB2B0ddD35JJX33ydutRCAmc/TfezY3cvkf0kMvvQS/Z//PP7CAmY6jV26P7G5sF5n+Z13SIIAt7+fzLZt9H3+84TlMmG1il0qfaLCVJtsskmbzcB0k08vWuMsfg/Tn0L60xhRpf1nKQnzT4IwsYJJwsTbuCz3LoTFJxBxDcIyqAChErQ08bq/AGaGxCwhbzGwv3XWPXa3fzzHdyuJ31bpNVy0dXdlyHtFRsvrrEMEGqSNDOdJbglMEQYi8dkQaZKkR0jSI4hiwGSljrvB+bal/RGD5TaxO4pTfQttuCTuVhKnF8O/ytOdJv+toVFuO6jzY4sT0/3s7ZnBkR1ACzBJki0odSNT5aMqaVKL32qXJguBiGu4i98hKB4jzu6jMTvH/DvHMdxUWwTG9ym/+w7hyCi5/Vvglvy3FjbvhgITgSM1WeWhjQJL1iA/XDjDi0mD5ruvIHREu9/1xukz2uqocUywvESrM4VG0+V2rWSBIoR06Ht6C3ErojFVpTVVAymon58gPfpou7xMK9K1ExQzwyzUZtt+oAgS4dIdX8HPjlFwCig/xL9DYCqSFkbrEgqL1uQlLGlgeAFCw7DsoL+3QDN8k84em4GRUYRYBv4ffP8Fnh16lmeH+wmOdKDnponKNn49Q37PMezpv8Obv0b9eoQ0JUpDpqAoX9NE0oYbiRkhiBoNmjvT2NevYCzHaFsSD6TAltjSZClR7OsJqF8LVjM6Zv1UW+gLC7vooI0MQiucxe/h960vEddmhrDrhZu3qZzHsb7Ll3d7/PWFaaZrOQzhsL9rP9lcll3uLkaLo3S4N39fw9lhetO9VMszmIaJSnTbtkUnfD73FFH9CqncebQCgYkM0iSpOnG8DxArasSgVAda5IEmKcOhETUwRR6lCvhKE1oapQ0MYdCRyiMKMU8mezFX2hOC5WXMQp5cZ43cdo3QFpmtOb7cI3kte5bp6ihS5EhUQofbwYsjL3InpLxMKvUqavYUPfsDVGxTn9tJ4cABFl99FS0lUa2GXSphTvbx4uOSrieeX/OME6KBUt2IDTKY2S1F0kMdvPrTYZxchr6+WRLVFjKyjIiFRi9T8wbv1V7GtzUSSaIVPUaRz7qH0S2/vf37DBIW33yzrb57SwYwKJfxrl2juH//ms/WwhpnxTSL4+dx80Ue6XuUvJUj8X26n14fDGul8GZniSoVujtL6zK3ly9fZmpqCsd2qLVq/HDyVfqCgG2tFplMe39EkoAhUTkXbUowJClS2Ibd7qWXEm2tr3iRK+Jt0/Vp/mrirzCliWXcfG5Xggr//r1/f9+BKbTLe9ODg8TN5qpNy68y0rZJP4CVS/3CBaqXLuEFAcIw8OfmqJ07R98LL7QD0vsMcjfZZJMHZzMw3eRTi/QmMbwptJnBiJZgZRAnVIThTbYtPISJVT9FVLxPhUEhCbq/AJ0u4eW30GZ2pWxwxfuy41lS83/V7jEUbQN1kTQJC4/e7Dv8ONAau/wqVmOcdt8fKLOI3/1FtPXzzu7qtijULRkrbWQQUb39t1uJm0SlsY9co2M47CrtYrw8Tsq8eR782Ge0OHpPQh5xbi9WaxwZLbctf2QK5QxhZw/wUvaL/Nn5P2/7dkqb8UUoe/v4tcF/RhS9DJhonQcShGgR+I9jL78Pt2bUhEAbWezq28SZPSycPYXpumvEcsxUitqlCeyHH1rt+QIoBxVCLER6O1HSoJY6TGQVscJF5q/9JURHEI1rWNEiWmdJnP7VcyukZH7+Mq/1zFMfNwn0ZXZ0fcCezgwH82mkOoJSPbRmGyy/O4/hmkhZJ6j4NC/9If0vHEbYDyOSFqPFUYwoZr41T6ITpJD0mi6Heg+vqCJvnNWxl1/HapxBCwMdR1jzs5i5HSgrBytKz040h2nnsWo2lytLCCEYzhdx3ZeJoouY5iUiGbPUH5HZ0mDYnSTwn6Suf4/kzP+OYbUHt9IQOGmFm5csz+RJd7YtcOJWi9Ijj5BdOIGYa6IdAxKNdc0jHM3Q6Dboy+VwSkXSQxbezAymlSBVC4WDihK69qyUNguJDBcRcWNd1vRWTPMkjvMmWqcxDMn/8NAgZa/MdPUQRWuUfTv2MTMzs+57Qgh+Y8dv8OHkzxhfOkvFr9Cd6uTJwkHyVgav9hDNMEWSO8tk7SqJ6sGy8hyvXmG6dppEJ3SkOjja/fsUdqZZfPNNtua3MduawzAMhnPDTC5OMN9nEauYrkwXkZGQGxwmv1ggabVACJTnYRd9+p/JkN3atbp/Koz4Su9uqsPdXKscpjPVSXe6+47nQYgarvt9tM4St0yg/TwrDJ0lDh6FZ5+ldupUW/xGSlIDz5DZ4zL7g1eIGtBxqIf8SJowPIwQHqZ5hfXDDA1k6OvuYKIac31mK93ZaaTQXG/0U/UlS81pnCTBxW0HvAIqqsFP/FMcEzvXldcGCwv4i4tYuRzuwMC6UvjY89qZtNsCK7tYpHnpEioMVysYLlYmeP3q6zilPNNDKYpTi1ya/Baf2/0Sj37ha+t6wKNajeuvvIIKQ4RloU4HHJDw/vYqaTdPq9VicmoS6UjGjPYzMpPJsGiadFgWPXFMni6WzBayVMC5MEtcyhIkIbs72iWzfakuzjgh3OZz2opaHOk9AsB/PP0fSUiwxdoqGcuwuFq/StWvUkg92Dvh47KG+VUk8X3K779PV38/YkWN2Uil0HHM8okTdN2n1cwmm2zy87EZmG7yqcVqnoUVK5d2ymLlpS5MZLhMkt4BwkIkjQffiFMizh9c92fl9OAN/DZW9ThGVEZJh6jjeZT78Rpz25XjWM2JthDQCkJHpK7/Nd7A79x/7yyACnAWf4jZPI8Ml1b7OZU72LYUCX7aDqhWPx+i7S5Uass9rf7pwaexDZtzy+cIkgDHcNjbuZfHN/DW3BAh8Xq/itk40/ZPBeLcw8TZh/ickDzSd5RvT3yb5XCZoz1HeWLgCaSUNJt7MYxxTPMKWjtE0SEIFUL9FC3Xl+aJJEDXrhJEIWnDardNCtqTDEoTGRJvcZlUbjdW4xzaSLX7x4TE0DFL9iCR1YFQIVbjHD4mke0gDJNUVwFvvkwh30A4Li2/SMWHcVWHnkcI4+/zxLbTxLHNZL2MazmMdU8ggudZOiEwMxZCLCPlMgYjaFOxdPwdhj9/BSE8hMixszDKzsxWAhViSQtb+4RGqt0ntkHflV35EKd6msRKg5QImcayW4hwDmW4K/YqGmm0mFpocLrnKr6SCMCSJp/ZWmSs8yrvzteohw0saZLohIvlK4wVXUzzC1SDp+ly3kEKn1RWU561aci9OP2d7cGvYVA8eBCno4Nt5T7OORdI6faAXBsG1kQDs5Rnf6ZIlDtA5+MFGhcv0hp/D2FI3GKG0q5eLPeWbDQaoQI0dwpMQ2z7Z2h963KTkttNMXUFz7t7f54Ukoe3PMaThX3MePNMVCYoiSyJVqAUZ5Yg3TyKLW1ilfDd2R+zZHkc7t2JQZa6V+TbF3/M10a/RmbbNpqXL7OnuJOrzRMMmAHR9p2c65ijYDp0OB0c236M54dHqZ8/j4pjwuVlwnKZ/qcE2S0bBB4aerIxWXn3vkAVRajFP8XzjyO1hYwslJXFS2JOVirUrZfpyjxF/9GjZLdupXToEAtvvcWHf/h3baVSs8ncmxdJD+9h+z87gmH5WNZ5tF47zBCiSRg+z6N9nVyqXaIVCaar7dL6MAkRVxfwL54mmi2DEBiuS2bbNizbZjpZRKX3Yq6Ys6so4vqrrxKWy20l6ChC2DY9zzyzxs4jabU2tP8QQuAOD5N4XrvdwjQ5MflTnFSKhT0dREnAwu72ev5MH+fx9O+sW8f1115rH/9K0CtNk6EkRX4x4cKowcXxi3Q6nYwYI2TkzQDPcRyupVLs3bOHzNWrpCqTzMfLVJ4ZI7cYssfspUPmiVstBvvGmB8eZLJ5jYzVXkcrbjGUHWJ3qX1dl71lDDbWEEhUgmX+8nw3f5WpX7y4oSepMAz8+flfwh5tssk/bjYD000+vdySFNKGi1DR+s8kTeL0R2f6HmjzZpaw8/lPZN03MFvtgGgNQiKTJoZ3ZY1K7r3izv8VQvnE2Yewau8hlIfpXyQWCm0WaQz+c2RSaWehMYkzuwgLj92zP6oQgsf7H+do31HCJMQ27HsSLbn9GOPcPuLcvnWLSqkSv7vvdzf4kiRJdpMkNwfoggprPFZvQQvAsNCmQZCyMcO4nWk0DcKURRIohGkSFo+hhYXVPEunaXNZRyzYw1y12ufe8K+hhUnaEGQsh0ZXFseu0ds5T9iIiI1OcqlZwqzGfuRFLjameHJknDBuX1dbamYamoydoU8dRycHAAchvJVeWYkQEFYj4rhAyr2ICodIbBNRb9CcGG/3TXV24pRyGEoTZm4J3JKEVMPHXvoAoS2MOEQbBrGRJTfYRfnyNQxzGeX0AJqyX2ciXMbqymHJm4P9icopWkkJP86SWsl8m0YNKStcbv4xe90y74qQa9EjbMPgIXcIfzBDMnsdajVSfX3kRkcpHTrEzHe+Q1eulx3ica5df4Mg8REYZEyLX/d7EYVH0FYRAeRGR8mNDJOerm5YjaCFjTLvnCkyjCsIEaF1its9ZKQsAx9tjaGlxMu69Is+uu1OGvUFUJq6CEiTw6j5+OfPc7k1RVNOE7lwxYrYuhI8pc00b829xZce/RLF3Qv0XvsbdisftsbIksf/wtdR0W+v2WZmyxZq4+PorVuxSyVSQzMg50HfEpxIgV0srgsO16A0RnWedPBHpPMXoFRGxRWCqxavXLD5GXl6U2lsLE7571OIHX537HnCSoW5v/1bjNVsWg7DhNbMIjPf+Q5DX/kKnvdrpFKvAi2E0GjtEgRPotQglgr5ojzC28vvsZxTmJbN1rBA+fg7zBQ0Zj5P0miQhCH18+fJ795NpALSjz+0mjFdeust4mbzZnmuaaK1ZuH119siYiufMzOZO4rg2Lkc/V/8Iv7cHBevneL8NjD7iri2XHPpq0GVK/UrjBRuPlODxUWSVgszk0Frvep5argu2VSKl4ZfxJlwWGgsbLjtWCk6Dh+m4/BhBpMEcYs4XbCwQFSvY3d2YhcKfIG2sNLppdNA29ZnODu8eozPDD3Dy9Mvr9uGRpO386TNTcXWjdBhuOa8r1l2By/TTTbZ5JNjMzDd5FNLnN2NsfT3YGSI3RGs+sm2gqtOUE5H2w7D7vnYs5i/MFTczuptMODQwkGG1+87MJXeNCKqrJa2RvkjyGgJGS4gkoDmlt9Zo7z78yCFXFPO+8tAW8W2ku5GOslGGpEdxMrnUWFI7KzMqmfT6GqEtCzc3t52T2TxMaLCUdAhM/r7zHsLODeCbRXQUgmPd2xDCEHP/h6CD08QemlcVxMZPWQyeWRJ0Wn69JoFttidXI0qoDRCQ6QUGpdaGIA9QhSVsK2T3AiqBT5CNIE6Se8WxGSF+uV5qh+exTQEhqGZOO+QvPV/Mvr7v4+0Vq6hUmSX68g4wVDdaFpoUaY5fZWwFpEp7MZPW9QW5iGfRtomV0QD8Ug/iPqa02WbkouVZYaz7SBQyCWkXAZM5uoR/+70X2IHLWzSvK1cMv5Ffq/7q5Q69qK1ZuDFF1cH2SpJMEyTvswg4fAzTDQ/JBX7jFpDyMJThKXb/COlQ5zZhdU8v3aiJvGIswdAmqgoQmuNcYvolGW9i+P8CNM8A7gkSe9KsH8jQL13/WxlmbQKGaRSuPksqYbPlaWTGPWQ4MRZZMpmwfQAieVFVM8X02ogAAAgAElEQVSeRT/evieEaFv5SDlHacs30cNFlr069dCjw8qSd/6een07cXxTEdQuleh6rH0ecmNjLP/0+6Q7p1Bxui2cE0W4g4NIMyIM92y4z0Ip3GoLkj+iOTlJNbDIDQzQKGRZKI3z9hVB0/N5t5Vib6qPNA5iZJCfLp9g54kqYiXTpJOEqFJZVURdPnGCoa98BaW20WptRcoFIFnp7TapjY9T/fBDEIIDIouajsmNjrL0zttYThdKLGI4DnLFM1NFEWGtRvfRI3QOt30pVRThX7++zrpDCEHseQQLC6RW7F6MVIpUfz/BwsKa7JiKIlIDA5jpNNmREZxCSKNpUbzDJFuikjX/j1sthJSoOKZ+7lzbw9c00UmCimM6jx1jdHSUK1eukLmtHFYpRW/vTZXd24Mjp7sbp3tt2fVwbpjh3MYqrF/c/kX+y5n/wpX6lVVLo1jFaDS/t/f3NvzOJpDZto36xMSGy37VbHE22eQfA5uB6SafWhJ3G8oewAjn0Fa79M9sjgOaJLWFOD1KWPzVkH5/IKS5Plt6AxWQOAP3vUrTn1qbdRICZXeh7C5IWmjj09drFHQ8R+r637QtgKQFuh3we92/DkLQ+dhjzP/4xwghkJaFShLiVovOxx9fO5gUAoTDF7a/yGvTr3G5eplYxWSsEsdcm4PF9oDSSuZJjfQQeQlBCwqlMUzXpdWax4qmiYxecjpP33RCy6uCAjOlUUaC6GqrC98U/kwwjKsIQoyCwM2fRGuL5dL/ysw3/4hUpogX2dTLfSjbQiUxl/7qLxn9l/8StCZdaWKEbdEVDBeZCMJajLdUxjAkCE3nSDeZLZ14QY7igYO8PVcDcaltjLt66BFztW1k3bMrf9Er2UYTgeY/nSyjdZHclgLWZAuDPAmKP7v+bf6nzt+k+5ln1vQNWoUCodfk7723KasaruVSNh0mwlk+U1Ss6fpKPOzq2xjBHEQVZBijrBIYGcLCo3hiB3M//D6Ly9cwMenK91J8+GHyw1NY1gcrwZIDGBjGHEKExHE7kFOqBNyH4IsQKMMAwyDIaIwlibpwFenYtB1HBU1CDCkRYUJYqeCsCKtYhoXrfpPKQswbL7+N50XoYY3uE3Slszw18O01gemtpLq76X7+K/hTAjd/AiFT2L1bcfIGSdJHFD2y4ffsVkBz7g0W37uEKQyEKZi/3MLMOYyPuRSLTSxt4KWynI9KPHZgPwLBZG2SbTXZLp+NY7yZmXbv8kpW0p+fZ/ndd+k4fBgQKHXTDzQsl6m8//6avkVp29QvXqR17Rr5dJqeJEdZtrBMc7VsNzAU+wcOY8j2b07F8R0zWkJK4mbbN1iFIdXTp4nrdVqzswjairPSsnD7++k8erNUe7Q0uloqeztZK8v2wlrhOqe7Gw20Ll1CJ8lqn6qQEiklyydOsO3FF+ns7KRWq2GvLFdKEQQBT3yM/Yu2afNvn/23/NE7f8S55XNEKqLD7eDXt/06/2Lfv/jYtvNJkgQBlZMnCZeWQErSw8Pkd+1a1zP8cWKXSrj9/cTBTbFCrTXK9+l4/B7bSzbZZJOPjc3AdJNPL0Lg97yI2TyH2TwPMk1YeJQof+iOPqT/0Iiy+7BqJ9aqCusEbeZQqfv3N0usEpaK0MYGjwZpP1jP6r2gFSKugrDR5oMHv37sc3LhJMvBMl1uF/u79n+koJJKDeANfgOr9i4yKqPMHFH+kVWxHLtQYODFF6mPjxMuL5MdHib1yCPgOkxUJvBjn+2F7asDWkMaPDf8HM8OPUusYmxp4s7+OeiwLcClAsDASiWIzgOYSaodALtdNINllOrEv9QgnTi0DIiEost2iSY9zHQ3qS3PUD19FqtoYhjToGMiTzL4fB6wAE3l/b+kUu3HCG+5LyQIaeFNT6PiGCdKkEqBXMlSOlsxmh8SNX1SmSEifwavdYl0dgeJ7EYaMdrzyZsDTIkAW08hhIfGIomHCfw+4qjC1pxPpCQChRCC+UbItTrs6XTRhkE05iCum0jfZM7wkc8dIdWxNjNUPHCA7/7w/6YmW7iiPVEilKKQ6+KDcII9/iMUU0VE0sKd/W+AaE/UpPogbpGkhgh6vogKQ77/rf+D82qaiKRd+ltLc+xHV9j33BQ+NmY2i+wbxrSvAM5Kdm8boAiCLz/wvRg7NlGpyHz9Oo7l0NABRXLEzIDWlNKdRJUyZjGPF3kc7T/Kws9+xLtvXCS2NLZhwgxQgsozLV6fPo4O3uFK7Qpaa7bktnC49/Cq+JaVzWI99NsI8TVM8xRC+HjerjVB4Tq8gMUPX8eyzHb7NIAjib2Y5EwJa3sdoRVaDhMYFvWwTt7OE+uY/O4DNCYmiOv1duBwy8SCmcvRmJggv2vXOuGc6tmzbTuW2zBdl8TzMNNpnop28LY1yaysEguFlUj22mMczj5E9fRphG2TGR6+o22JVopUTw9JGDL3ve+htUaaJtktW4iaTcxMht4XXsC83QpGmnx5x5f5r+P/FSfVXqaUoh7V+cbub2DKtc9F03VJ9fRQ/fDDNYq1Kopw+/pQQUC0tMRXvvIVjh8/zpUrV0iShO7ubo4dO0Z+A9uZalDltenXWPQWQUNfpo/PDH8G1/zoCZKR4gj/4YX/wLmlc1SDKrs7dt+T4JHWGm9mhuD6daxCgfTWrcj78Lz+OEh8n9nvfQ8hZXvCL0monTuHNztL73PP3bef7P3Q9eST2IuLNE6cQCcJVj5P8amn1vQpb7LJJr8YNgPTTT7dCEmcfYg4+9Ave08+EaLCYYSKMBunEDpEC4myutuKwQ/wIk8yO9GVNzdYEBBnPxlTdbP+AXbtPUTioYVAWZ0Enb+Gtu7Rz3SFueYc3770bUxhYhs2041p3r/+Pl8d/Sqdbuddv6uNNGHpqTsuN2yb4r52P+vAwACvn3mdVy6/0la8RfLGzBvsKu3iueHnVr8jhcQ22hMgXu/XcJZfafebGhlggSi3H0EWknZ5oCVNevO7KM2aXLnSw87Dc+BDl+tiGeCkE2rvHaX42AHsUjfNiTqScaxshoGH0zgliRA+UbQf3byGljZT0Rxl1Rb3KsgMw2YPWim0UhhRgpISdNy+V4w8SWoXOn4Dy3ZJ/AAvjlkop0g5PgaSWqPMwR1Pc+7CLEIcAkA0fNwz0xjVMwzlDnHenKD/SYHTbVAP8rx9TWNTxhxvoqsxWiUoW6O39BNk0lR1i9VieqWwvJAsNsFwnvRCi8j3EYbE6ezCHRxECc17C+/x3PBz2OWftCdLxM1BtDbTmP4UkTfNmx8c52w8iWumV11Dg0adH7a+z8iMg1Pa2vbmnBMU9u7BducQQqF1Bt//Elr/fGXrY527uOjaLIQ1bGnjCpsdqptJuYyQBif9i7SuXqIj1UHOk3hvzhJ3Rhg3Xs0u6JpGntT8RW6BLZnjqz6/p5ZOcbF6ka+PfX2NMrTWLlF0byrjjauTIPJoUyCSGIHCQqGFQVfN4X3fJJSDaJ1DEBAmIQBFp0hp92Guv/IK/vXra8pjkyCg48ABjFSK+sQEpYNrxeF0FN0xyHCHhoiWljDSaR6PtpOgCImRNY/uXYeZ/d732lnaJKF68iRWqUS4vLxGbVdFEW5/P2Ymw+LbxzkdXGZKL5AEim6jyD4xROvMGeKVvub87t24/TfF3L6w/QsMZgf5wfwPmA1nybt5/tWOf8VD3Ru/Q0qHDrF84sSqwJIwDNz+ftz+fhLfJ/Y8UqbJk08+yZNP3r1CpxW1+Ivxv8A27NVret27zjfHv8k/2fVPVp8nH8Xuznt/Vie+z/yPf0zSaiEdB3XpEpWTJ+l59tlfqE1K5eTJm0HpCoZtEy0v401Pkx4a+sS2LaSk++GHiXruMomzySab/EIw/uAP/uAPftk7cYN6vf7RH/oVJpfL/YM/hk3uj1+Fa564Q0S5AyTpnUT5w22VYPmACoxCkjiDmK1xhGqBTtplwe4wYcdnHijYvRtmcxxn+Y12+bB0QNoIFWE1zhLl9t9zhlZrzbcmvkVGQpqIBANDWhjC4FLtEvu79n/0Su4RI2XwJ+//Ca7pYkmrbU1j2FxvXceSFr2Z3vVfkiZJZpQof4iw9ARChaACTG8SK6ghogoiqUHHS7gLJrbfSXkhR7pYIWVJiDpJZr5K41o3Ua2GNzuLlc3Td0xTGLMxXYlSOaJoL5CHbMirr56nbkaIlQ7apvZYTKr05wboffoZzKAdIEilEVqvBKdpavMRQVJi0R+gJbeiMYniiFa9ijs6Sq6zl/50P1P1KZrNCum3LmBLi729++ktDCBVlukPW1xOO9RVip2lXq79dAqrRdt9RBpo5SAXKviuZLBrO5eql9CJYltd4rRCpID3KmfIZYu4fb3Yg4NYhUJ7f4UkbabZUdyBU35z43tEWAjl8Tfn3kHeWu2pNcH16yhDMzLYJJfuaQ+GhSCqhVgde9G6iO//BlrfHJQ/6O9cCEGXLCDKdQIdYUqTh3I7OVZ8hDdbJykNbWNP51625rei3j7NxNwCHaU61i2BtjAE15oBr6g0OwoHVvuyTWniJz5aawazD9Yn701dJVpOsLPnIQxJfNCJRmJg+mUWsgkX5E604aB0yGhxEC+OeGHr58inCpQefpjZt95gvj5HNapiWg7dBw+TGRpCK4VdLOL29a3ZZlSvEywuruup1EqRGx1tq6HesOaJYowwIb9rN1JKTNdtl8maJtI0iWo1crt3t/tb/baPcnp4eLU89/9764+5HM+1S6zRLLYWOTlzgq1xBzJsTwjNv/wy1dOnCebnScIQp6uLvmwfv/nwb/JE5xM8O/Qs3Zk7W+xIyyJcXCTV34/b24vb3491QzU4DCkdOrSh6utGvDHzBvWwvlquDO0JrmhFuO9Br/PdWHjtNVQQIG27/fsyTZCS1tQUubGxTzRTeSuVDz7YcFvSskiCgMyWe1N9f1B+Fd7lm/xi2bzmvzxyuTtP+m5mTDfZ5NOANFF2x8eyKuX00Br4BtKfRiYNktTQxyZ4dDtW7b31pbtCtpWAm+PE2Y1FW26n3Jxme/MtukSEQBNjsmD1cc3eQS2sUQ2qFJyPR8ji+PTxNQb2N3BNlzPLZzjQfeDOXxYCMPA7P0f20h8i4jJa59Aih7ZHMYN5rEwOR1v0pPYTLx2GpXaJpbewQHPyAk6njZ2tEFVh8q+X6Ht+DLd77Tm8YPp4/Xmc6y1kOkYaESK2SBohi89tBSByLFItn8ixMMMImShA43Z2MT95icS+WeaotUY6Du5Au295MDfIb+3+LWZ+9hOC3g4yZtvnNdGa/kw/vU43zGty+izNU/PsrGWYyNRJYaF1O7tVlT59EybLB5eRQjLYkMzYLQZzw0ig2+1kMShj+TGxbaFXPBybUZPR4ugt53MjNBpJYCTIG0E3bbEatEbGKebrEQNdCnS7DDVuttBJhJYFlOq6w3rvn9K+/YwsX2asMofGoN5MOFW9yLat+yl03Qw0RBCRk0V+dqnCMyMJKTtBA3EseW/BJsgUSFtrS2Adw2GqPsWjfffpw7yCtWMENf4uYXmEqHUe0wyRQpLEVYQRsHOhn6meMjNM051x6cmd4amhMTrtBeJ4gJcX3uQ/P3yRJAgwhUEoJhmzEv5HNYgKQ3Kjo+u2mdu1i8bERNue5Zbrp3yf4oEDdD/5JP7CAks/+xnSceh64gkW33gDnSTr1iVtG+KYwZdeQkURwjBW+xGn6lPMJcuk5c37WC1XMAyTk0zzWMuiPj6OtG2ChQXSAwPUx8eJKhW6n7pz9cTtCCnJ7d5N9eTJNeW8SRCQHh5e5516NxZaC+vKhaF9nWea6310f16SICBcXl6z37AiINVqES4t4XR9fL+FuyIEtzTPr6Jv+f1usskmn342A9NNNvmk+Yf4YhUS5Q7zSYvli6S5Yb+vNlykPw33GJhmFr6DozyiW4Lc3mgGhcl50UGi1w9qH5SqX11TOnkrN0odPwqr9g5JdheJMEEZ2Ek3aAsRhxT7MyxPaLTdfjyLpIVsXkZfPcfQQxH5sTm0dACF0BXK7yvczx1ZXbcQAZfKDvbnjmCe/xHmtRpEGqNDUPiSpHP7t8hmzxOYz5GEjyCjpK04rNvWMWLHVrTySK5cWQ0GrHyerqeeWitCojSphRqOsNsiNBqMOCAyTWqXL5K0WoiHD7L83gLPLgxg9da4kG0REGNpzZZWlseaQ1RWMp6DRgdBErHoLdCT7uXZzqP8ydW/xpUOlh8SZlIESUCX28W2/DYAYmcQ05tc8Vi9iUiaxLkDdAxdZfnDD1ZFadp+xgIv8WnMPIYabmI6DbQykVaA1prA/+I9XcN7Qnukln/E0LZZZt7R1CdnQVzFFJI+OYTXmYC5IuazvZ/07DJKu7x3PoVra6TQeL7BYmmZLfktd7zvHhSnqxPZV+b6j5exrK2Ybp1YzVKeNwnTXciDsG/J58svFXi05wWEaE9QCfEWSy2fPz33pxS7B/BmZwGBLQUXo1m+Vfkxv73/d9f1l0K7PLP3c59j+e23CZeXgfb91fnEE1jZdl93qrubwZdeWv2OiqINBXCkabYnG2BdVvLc8jkKxV7CpSWEYaCTBB3HGKbJgq6iwhB5o8dUa6JqFbujA292Fm9ujtnJSRamp3EHB8kMD99VgCc/NoYwjLYyr+chbZvsjh0U999fpYYpTUK1/hmitf7Yrz2wqlS9EUJKkpUs9N1IVMKl6iWqYZWtua10p++cXb4b7sAAzcuX113HxPPI79z5QOvcZJNN/uGxGZhussknhAxjHC9oe18KiC2TMO38wwtSP0G0dBFsEDQmPsq+twGO9KYpSo1xm8hRLGy64xmmnAGKzloRCxkuYFXewkgaKOEQ5Q6SZHbc0/a2FLbw/uT7G4qR3Oj/+yiMcB6hUwhloUVEaM0hdDtIVXZC8blnWXzrLfCv43jjRM2IfH+N3tEAWanQTA+TmDnAIdMzTezVMV0JmETRGCruxHJeRhzoIjnQjSBhT98HpEwfQ1SxojGc8DiJPYOnv7RyUgRx2iGxDDqOHCG/fwQVvonrKrB3kSRrgwyn5WNYJqG3Yq4iQCPQS8vEK96OQkik24UQHk9dz/O87EXZkqXmEl7igXWrsq/EEJpm1FZTLdkFfmf4y7y6dJz5qIwUkj0dezjad3Q10xaWnsQIphGJ3y4H1xqRNIgyu1FON4eHjvKj8ix6drFtvWPZJHFEqlBgZ2kfyxcMrPQydqZCHOaxR/8pt3uZ3g9aa3QUYdhzpNw3MZsXMOKLzJw3CZol3L72PZ2qXqNWXsD9QOMdaVs6yZEB1MmL7GoN0lIB5bCGUglOpNm+/xh9PevvTy/2fu4ydSvnoCyPermKKPtIS5DvySBtiesnPLQ9zbbhTpS6TBwfWDnODK/M/mccw0GYJu7gAFG11i65NLOcK3ikBgaonj2LXSyS6utbmx0NAtzBfkr7BdmBClL6RNESSVJio/NvZrPEzea6Us/E98nf0h96K1JIUgP9xLXaqo0N0A5O3TTCvy3QXFkeVatc/eY3GTh4kKjRwJuZoX7mDL2f/ezNCY4NyO3YQW7Hjnaf6QOqyD7U+RCvTb+2znO0ETV4fsvH74ltptNr7JNu56OypXPNOb575btESYQlLd6Zf4e+TB8vbX9pw8zv3Sjs24c/P09cr2OkUmitSVotMtu2rbPN2WSTTT69bAamm2zyCSDDmFTTbyuerqiemlGMrCv8/KbR+Q2i7EPY1eNrVYUBEPcsWGWEswgjxXB2iMna5BoVXhU3eGT4IPKWPkTpTeIufBdtpEFIpG7hLP+QOFxc74+5Aft79/M9+T2UVmvW2wgba8SP7ojSWGEvUhu0i3QFWoRE5nWQIcg8bm8/g196Cf3e/0USDmPaCY5xGaSFAlx/lkYmC0KiKRFFTxCxE61TgMGezuO8MVchsyIgNVC4TMoI8CKDA+YRZGU7GAmmXMDSF0n0CF7eBSkIk5D3Fv+UjPsaUWJgKpcR4wO63J143lcBG7TGiBJKY7uZfuNVLPfmPZ20WlhCYmSz1M6dQ614XJqZDEm9sTrYFVFCsO3mgLOhA7LCXlPNV7ILfLX7s9RLGeLMrf6kPlbjFCKuExSPYURljOAaGknU8SzKHcCyXubI0GWQ/bzZ0cnFmTNc9xeQ2w12B2muRLOM2kOEzRLeYoruY8f4eYLS6vnzNC5cQAVLOO5JMkM99A+WSXSG1nwZJ9UijrcDBtuyvcyUr2FV0wgvRLs2Qkiav36Y/aciitNN/MgjKaYZeelrlLaP8reX/pbZ5uxqOa8Xe3SlutjXue+B9xkgrHeQ3ZKlFtYQQmBlTcyUASjihsDK2oBAymDN9xphGdtcuZbSWBXKkZFi4FSFhcarSMtCxzHSceh5/nmkZbHwyiuE1TK2e5pW0qSWyTDwue2k0j8mScbx/S9y+3UoHDjAwssvryk51UmC4Thktm7d8LgOdB1gojJBfs8egsVFokoFI5NBuQ7bc9uhcvN4hJRYhQIqjmlNTZHZvn1VldZ0XVQUsfzuu3Tdg33Iz2NtsrtjN9fq15ioTrQnvjR4icfD3Q9/Iv2lQkqyu3dTO3VqjR9sEgS4w8PrPGJvJVEJ373yXSxp3VSGNiyWvWVevfYqn93y2fvaF2kY9H32szQnJ2ldu4YwDLJHj+JuChJtssk/KjYD0002+QRwvGA1IF1FCIwkQUYxytr86QHE+YPIpInZOIPQMaBRRpag50v3LOCUWF1YOmRrfiuu6XK1fo1QhdiGzdb8PtLdh9Z83qn8ZNUKZhUjg9U4SZg/uNbHdQNMafL1sa/zw6kfMt+aR2lFzs7x+a2fv6fBY6rpoa1eCKZXS1CFNrCSbmIuEuXbWSlTVXF7LbSZRycxaklzI2YTKkKqEGU4CDONlfYIw5sZzV0dPUy1ikxWPbK2Q9Gt0owlPUYPnWIYLQPAROsUlnMO5W/HbgWE2RTfufz/MtbzE7TOYkpAw9nyFHuwKdmvEYYv3DyWjg469+ylfP7c6t/iIMDKFdqekZaFYVm4AwO0rl1DKYVdKpGJDap5i9azN9VD3+Uaz+tR5K39u0qRWJLYvZnVMZsT2Ms/AmGBsDCb42irE6/3yyAtpLxMMf8/Ax7gcGwkIBI+jeQAO6x9pIwUwcICx6+P44UhD5f20/nEE6Q6767cfDeq585RO30aI5XCyc4ipUvjao1qfYHMQI4bleRSllGqi5RhsTvfx/l6jF8po60CiU54qGcfT/7TpzfcxksjL3GhcoHz5fOg4UjvEXaVdq2ZHHkQvAWD+qUGwVIDI6WI6glGKsbttdFJhs5D7euh9VqxorHSdn54eZastfa31He+Rl6kMW9YwlgWWmsWX38dadskvo+TW8QwIiCDTjRzP55k6MVRpJzGMC6RJGuzw/OyxqvWOIsT4ziBZp+1nd0Hn6Hr2LF1Iko36En3sKu0i3Plc2S7u0n19CD6ukgmpjhkjhDmrhE3GugkIbNlC0JK/Lk5hJQ4t90LwjDw5+Z+jrN877yw9QUOeYc4s3QGKST7u/ffcyXGg1DYtQtpmtTPn2+XITsOubExCnv33vV7l6qXVjOlt2IbNpO1yXUTd/eCMAyyIyNkR0bu+zg22WSTTwebo+NNNvm40bpdvnt7YApoITDDmHAzMF0lLD1JWDiC4c+hDbddwnsf5c7K3YqWaYRW9KR76Em3Z9hFEhBlHyK8ZV0i8RBxHYyNvFI1hjdJkt31kdtMW2l+Y8dvEKmIRCWrSqkfhVAKGSuS9BZkXEYkjRV/WI2MNVFhH8q5UZp4S5mrYWLkO4nK5bbAC4BWqDAkv3uQOF4bEGvdw5dG93Cp4nN6cZasZTJcSNMT7EUE4S1Bxop7pRCYScLl+jSmeQ6JtabA2pEOl2vTdPd1EYaAEGgpEEBx5xi5rdtozs6gE4UYHWPi5R+uKXt0ursxMhl0HJMZGWH4kf+eOXGawF/CWXkNVbXH38Wn+Ebh86A0WkDk2LRKGbiRhVIB9vKP114/M4NI6tjlNwg7nyOX+3eABNr9kEHsc7Zymu3dp0mSQZKkG7qfpq/7EDNJxAsPPb1GBfVuaKWoX7yId/Uq0O6Ly+zYQWN8fDW7JIQHSAwbmssGmf5oxc3GQIiVnj0d0ZvdRj7TiTe2myRlMlIYWSdudCtCCMZKY4yVxtYvVAoRV0iURePKNP7SEkmrhem6WMUiubExKkmdN2ffZMlbwpTt7Y1eFcz94EfETQ8rrVFBhDAVKrJJfBj759txOq4DAUmy/ZYNehzt+Tr/xfxj4iTGXPE9NiKFUW1xZHSteJAQgmBpCa0UTkcHUi7R9twFIQVh1SeqBVj5NKZ5Zk1genL+A77/2n8iFRvY/b0opfipWoTlczyl726/8tzwc+ws7uTk4kkSlXBwx0HG9m+ndf4CfiZP4/x5zEIBp6MDFcfErRYyk2HhzTepmiZks+R3725nftUn3XF/k063k6eH1k5Q6CSheeUKrZkZpGmS27ULp+PugncqjmlcvkxUreL29eEODm6ofHujDPl+qIZ37rWPVdy20vqkfK832WSTTy2bo+NNNvm4EeLOFYEalPHpelmLOMEKI7QQxI6FfpBSNumQpDcuyfvoHRD4PV8mtfh3/P/svWmQXNd5pvmcu2XeXCtr37DvAAEQ4gLulAhJpKzdUtjqli23HeHpabnHHneMo2PC4eiIcff8muixO7x0R3fMTHR7lW1REmnTpEiJlLgTAEFiXwpAofYlqyrXu58zP25VFgqVhYUgKVHOJwKBqMy7nLtk5vnu933vqwVzgAChE9hb8NtWluYqxFIothqlbtlm5+oytpsa6qI1i9I0gtwBtGAWzZuKxaZS/YT5ZasZaXbE5caLaKk9JJOnCBYcVKih5TrID/ahWTl8Z901h5Iiirawue0Km9s6sawiuj4KngJslm9QjzBc9pkcrgyTtUCq1dfQ9etIv46KIoSu49MjVoAAACAASURBVKUS2BUXpQt0yyK3YSNCKuq1KkG9FpddLvX1RRFmJkN6yxbaDxwgs3kzn5ebOTx1mEulS4QqpNvu5oH+B/ATOdaSkDKrp1d4li6fHBPDuUSk96NpCyi1pMBcoxQcwwtD7MVfO12fxba/i+N8FTdyWfAWbuhzC+BOT3Plb/4mLgm1bezeXvyFBSrnzhG6LmZD6MeExSOo04N0p8j0mNRmfIRhAxFK6ARmH3a+wMbBO2+47+uRmP4HkjP/gLuwwPgxl0grMDs3QBTEgkDpzZu5cuowPx4skmvrbvT+HR85wqm/fYk7Uz2x0I3jgLSJSlXsXshusbCy88ydUOS2dYFuI0QFpQzC8A6UPMC/f+Df80fH/oih8hBKKXplngd7H2Awu9pzUoYhKgiaHoNSENQDzFxiReAUyYhXzzxH0hcIM77uQtPIaGmOhUPsfvcduu69fvn9YHZw1XgSB+IqCnXoEPXRUZzxcYxUCm92loVXXkFf7L10Z2epj47S/fGPY7W1Ndv8h4IMAqaef56wXm/0X9aff57sjh2rfGKXcGdnmfnxj0FKtESC+vAwum3Tc+gQeiLRdJ1bYUN2A4enDjdVKE9b6Q9ErKlFixY/+7QC0xYtPgBC08AIwlWZPwGxAurPCFbVjYPSxeyw5fj4doLAvjkj+PcLZeZw+r6GCOYQkYMy21Gr+lYBPUlkdqBFzqprozSDKPnBeuVJTVuOCQVIqxNpLfbpSRm/v4TQ8NseIFF8AaWnkbIfTfjY7WcJerZhZPoIwz4c51M0exLieYewrFcwjAsEwV50fRRpFxG1O0APAJ+galMZT6On5tC6OshbeY4V2+jLTRBEcQZQyQivWCRwHObGh5m79HSsOHrHHTjZJJbjoy1lOJMmUapAdscOvJkZonodhMAqFEgNDhL5fiOTqms6B/sOcrDvxn29jVMSVUGs8bOlQjQxi1IiFk5xHKzkOSxdX3wcIYEISCCEj2keB38bln7je3XhwgVGv/1t/GIRzbKQvk/l/Hnsdeuwcjn8mZlGYBpFAxjGaSCJjARe/1109Y+j3rhCaSxHRIrAHEBVaoSuz8h3v0vHvfeSWkPE53pYM98nNfk3KCPD5CnQEzZRaZx2a4o5/X6UAufKFY5udpDDVWhb7tfzzg+B5lPWPfKpFHoyiV8soifTBG4CKfuoTW3GKXcxfSrFwGfuBjyk7ALic5ZP5vnd+36XUIaEMsQSJuNPPdV0rEYyCYs9okoWEPoES1MQoQsSbUmEcAjDZYXpolukPDdFqokPqEvA7MwVurj5++dahKaRXr+e9Pr11CcmqF28iNnW1vBE1UwTGYbMvfkmO//tv33P+7ldFo4dI/L9q7LyAiOdpnL2LOlNm7ByK0t9lZQUX3llhbCRnkyiwpDi66/T/eijtz2mrlQXvele5py5FZ+hWlDjkcFHbnv7LVq0+KfJewpMwzDkT/7kT5iZmUHTNL75zW/S09PEVB74gz/4A0zT5Dd+4zdua6AtWnyU8FMJtIpEjyKUEHG1JOCkk++fKq9U6GGEEiAN/Za2qwUhprvo+WkacbB8i+MyXB8jCBv+kgBKF1iOR2Tq8Zg+ZJTZjrpB3O91HMKe/DsQWlxGqyJE5FArPMqbU0e5VL6ERNKb6uW+vvuaqu++ZzRBaBroQbSy1FvG1+Ha8u8wvR1ptmMuvIkljiEScwTte1GJBFGUxvc/DqxVRqzh+w/j+w8CPrXavyCV+isSiSrU8yxcTOIUB9D1BdzpWYonj7H54Qd53c9TcdtIJSpIaeJOTxMEPn2pFLWRvY1+NCEE+T17cK8pS9eAZG8vZj6/qmxQ03WS7yEAa5yP1FbMyonVPcKANAqE0S4ix8GbWUApMPtKFICcKVFKsFQ+ChYyukI22kNav74YmVKK6cOH4zLPqyb6WiKBOz5OsqsLRZwR1AwDKbuRURVNG0VPgd1vErGF7Gd/BbO8nukXX6R69Cj1y5dBCISuMf3Ky7Tt2s2mX/kVtFuoOLBnn0EZGbxqSOBGmAkNFSl04ZEQU3j0Enkec/48hhKE1SrmorF5WHfQszbztQp5YYOUoGmxtUoYoehm4WIKb/oSoeOgJW3a774bM706kDc0o5GJTW/aRHVoaEVWLvI8Uhs3opkm9cuXCRPrMbUZhAiJfMisz2PYIVHUQRgul9JrQlss445Fwq5FvI+lojM/+lGcKc1kCEol1KKVip5IoCWTt9WDfLu4k5Noxurpmm7bVM6do+Puu1e87kxPI30f/Zp1hK7jzswgg2CVLcutEPk+SMnnNn2Ol0Zf4nL5MqEMyVgZHhl8hF3tN2fz1aJFixbX8p4C05dffplUKsXv//7v88477/AXf/EX/PZv//aq5d59912mpqYYHFxd1tOixc80QuDmUmhBiOGHSF17T8HfWlh1F8MLEah4wq2Bm07elKiSVXUXs7nxOBOOh+mFsSrrLYzP8MLmfbSawHR9vMz7GNC9jyizQL3/lzArx9D9WaSexssd4NuXXmDBWyBhxBPq4fIww+VhvrbjazfdQ3o1UknemHiD8wvn8SKPnJXjnp572JzfhFXzMIIwLusVgtBatBJqth2rEznQTWR2A4sZXQWaFpFMPonj/BJxOLgWGnHwmqRe/5fUhWLh8MtYxBPVeuBRd+PM5vyrr/PEw0/w7LBiIH+RDmsKP6iQlF2khj9N4MSTcz2ZpDo0RG737qY9ax0HDzL9wgtEi8qpMgyRvk/Hffc11E7fCzLRS5ToRQuKoC2fLxFW8bseJagmmJ/JkumtIaMEKB10yec3wV+ftVFCYinJ/EQZVc/wwLxgbPh75K4j9hJWKoSO03w8UURYq5HdsgVhGPjz82imiVfvRUv003doPZ6XX+zPNCmdfAuvWIzLKpNJ5mSFiqojS7Mk3p1i5FtlHvnF/+XmevMW+0rR08goLlJf8qRUGCREEU/1glJoSiCEhgrDxupmNkt1YQ5hJlC+jG1OiLNtmq6jNI3axYux12cU4U5NMfmP/0jPoUPXLWst7N+PZhhUL15Eeh7CNMls2kTb/v2LgbhO7fJlXGcPRmKC3CZF+8fW4ftbCYK9XH0vdyQ7aO9dT/38BTRr5ecjFZn0bXx/AiB/fj62KnFdjFQKq62NlG1TX7zu8qoSZCd0eGnkJSbqE6BikaVHBh4hm8i+L2NphlKqeXeIECuu6RKyXl/uy169sfghynsITINqleIbbxDMzwOgp1Lcf+edfGLPJ4hU1CrfbdGixW3zngLTEydO8MgjcanG3r17+dM//dNVywRBwN/93d/xla98hTfeeOP2RtmixUcUaRrvu9CR4fmNoPDq6Ypddanl002DxSW0IMQMghV9oErTEEpiOR5+6uYDMNG8UzOefK5h2v5Tg54kaLuPpenm2bkzFN3iCvEZQzMIZcgbk2/w6OCtl749e/lZxmvjJPQEtmETyIDnrjzHJ9d/kq1tW/EXRbKUJtZ8ILAUaJhmXBq6Eg1Nq+HJM7w5XmTWnSUtFA8loUOLUMIkyN5BlN66Yq3IdSnPTC6rpi4iRJxR6wlT/MruX+Vi6SKTF05QGK7SbrdztfSLpwKKzgzJ6gztmS6CcpnIcXDGx5G+T2pggN7PfIbaxYt4xSJGKkV2504M+/YfVrjdn8daeBWjfhFkgDTb8Ls+jrQHKb/1Fs7E51HyR2R6hwj9JGaqTF518sv9PVwQNheOj7OnM0Hb+FcgF1f6lE+fRk+lyGzatHqHmgZKkWhvp3blyoqsqSDOlKbWrye/ezfe3Bze9DRGNovd1xf3bi6qSCkpcUZHqV64gLAsirJMRdbRhI6+uJ/SiZN8/77v8/jGx298IjStEZwnMgZCF/E/oSEICVVcWiwMg/WJPi57Yxi55eApt2sXs6NDDHbuQp+vE9Xr8f2mFPm77iKqVOKgdHEbxmLP8NyRI/Qeur4VSH7PHnK7d6PCMBbrWvy+EaJO771TaAdLSF8itTsJwgfw/Obl1EIIHt/9Rf62+F8IiyWshE2oJJ7v8ETPJ8jt3Nl0vZtFBgHTP/pRXMJs27hjY3Fg2t19VdmxJLlYEeZHPt869y2ARhBWdIv81bm/4ue3/jyFZOEDEfwxCwWCUmm1j6vjkG6iYJvs7W18d1yLnkxe1wZmLZb6XIVhLNv2KMXsK6/Q/dhjP9GMcosWLX52eE8z5oWFBXKLPQ2apsUTmjDEuKps5Mknn+TTn/409vswEWnRosUyphusofgLpucT2GsLW5heLFK0CiHi8tJbQOoaehitDqqkIrI+Ik/OlcLwAty5KQbMDuZZmRkzNIPx2vgtb3benWe4MrzKSiNjZnhj4g22tm2Nsx1684DUL5WYP3oUf34eQ5Tpv+tNrPV70VMrszKz9YC/PPPnaGobaeUx4BzhlJRsbNvC+uw6EsUXCL0x/PblwFquIUADgBBI10UvFNhW2MbgYIaZyy833g5kyEvuMa6E0+hSYR+ZITFZ4uB8L8boLHoqRXrjRpzRUYxMhp5Dh5oHD0uT5vdSQSB0/MLD+IXVtiqh6yJ0k5nTh5g5fQg0n74Df4/dMYpOxA4h2NCbpDZ7JxVvuZJnqSSyWWBqZjJYuRxWGOLNzRHVaoirsk2Jri6yO+Ly00R7+5pKqSqKUFFE5HkIIahIB+0qIScVSfQALpcvUwtqpM1mytExVb/KWHWMLmMzm7wzaEaKwvok81dcdNsmqpepq0FUWKdjf8CnNns841QpcQmbrYQywhE+Tzz+L8k9dwI/KeN+Simx2triPtrFzLYKApJ9fWhRGYBg3mkIYF0PIcSK8ySEg23/JfG0Q0dPauhcwjDHcZxfAAxqQY0XR15kqj4FxNnIRwce5X/61P/OGxdeZOrKOXLC5r6dn6J93eam2fpbofjmm4TVKkY6jZFOU+/rw52ZwZ+eRuVyqDBEhiEDX/4yAMemjxHJqNFTqVAMLQwxUZ/g3Pw5drfvZkf7Du7vu/+2x3Y1hQMHmHzuOTTTbAT5keeR6O5u6vNppFKkBgdxxsdXlFSHjkPhwIH3NLbKhQux4vw16+q2Ten4cZIf//gtb7NFixYtruWGgekLL7zAD37wgxWvnT9/fsXf1z6Zm5iY4OLFi/zCL/wCJ0+evOnB9Pf33/SyP638LBxDi1vjQ7/manrtCb1lQGdh7XVn5iFYXfoFgIBCX9fNjyMIYXI2ztwsjUcpQEFf19qlZD8t+AFMz4Gl05fupM1LEgrJBXOeUCznBy3dWnWNb3TNR0dH6Sp0NcqCr6bqV+ns6WwuuqMUQXGI4bf+npyRI9N5El1VSJTHkccnyO48gLbuzsa5ffrKMbradiJEJ5vLb2FpeRJCMO1PsSu7E1NvA38cOtNgxUq1sqcH98gR9MWgQRMatmWjC43A9+lZvwmjsxAHzn19yKEhUIqj9XP8Q/k1RsNpDCVIp/Jsm55FT6T4oX+UL3ffhYYgGhujcOAAummiDQ/T/8hVQihBAHPl+H8A04RCHt6nqgJj2zbmT51aIfriXPgX+BPD5DefJnSyeBN70MM22vIr141qdfotGwwDcksWNQHwJvWHpwmePUPuQA9ucZD69CzS97E/8zCVHV3MGkV2d+++oZCS09uL2rCBqRPvoGkCYzEwVQISySR05snmsug5nf7C6ntMKslTZ59iaH4IgSCyesksnOQr6QrrdmbIZiTFEYN6+8fJ1SI6PzZEZrBAumcTv9XXx9D8CGdmF0gah7h34F5yiRw8AcPPPsvc6dPYXV2409PMHj+O8jzS69eT6bBIJSchiJWGw0DQn3oE0XFg1fiaoaTEK5XQE69jpjpYPe1wKBRmccPdfPvotzGSBt12d+N4n516ll+/69fZtuHXb7gvd2GB6bfeQjNNeu+9d1VVwNVEvk/ZcUhflenLPfEEC2fOMH/mDFJKevfuZdvXvkayEH+nukWX7o7lQPDdqXcpqzJtmTZMzaSro4uxYIxT7ik+teVTN3V+bpa+gQGm33wTt1hE6Dr5zZvp2Lu3EaiuWv7LX2bm7bcpnT9P5PuY6TSd+/eTv0VbmCXCkycxu9b4fRDiZ2Lu87NwDC1ujdY1/+njhrOBQ4cOceiasp0//uM/ZmFhAYiFkJRSK7KlR48eZXZ2lt/93d+lXq9TLpf57ne/yxe/+MXr7mt8/NYzEz9N9Pf3f+SPocWt8ZO45slKHa1JmZaQCs+2CP3m/XAAuheQqHlwbaZOxeI7/vh1smlNECoiUfHQojiQiwwdP51AfUhm9O8ZpUiVao2AOq/luVIbxtaTdNYNzjANgBu67Ovct+Ia38w1r5fqFBeKpIzVE2M3dJmamFrlnam5UySLz+JcOo0VVEmrYQKVp6r6CcrtmOlpypdOo/sBUdcO/Mjn8kwJiwSwgKhN4Yg42PSlz4XJC/Sl+0CGBBeeJ2i7v7Ev2dXFwtmzJNNZCtk2PM9DBiFWe4Ha9Azh/HyjR9jav59XXvhz3qi8y2Q0jSkEejKJ67q8HQ5xx0I3tcjhQjjJoGxDScnUmTNkNm+mdPIkbI1LiYWUpEp11GJv89J1YKZI/QYl6NcifZ/yuXP4CwuY6TS5nTvRbRvZ3k6pVEKY5lWZHYk9c4VsepD6VIXS0Juo/HaUVWiMy3QDNF1nYWY2zgqNgZPRSeSeRAiHtp4euj/dy/zJUUzbIrXxYV5JjzMZHCc5lCSQAd/jezy27jE2t60urWyMu7sb1d6ORBAFYfw5VBKh6USOT+lj6yiVStTmaow7q++xH4/+mHML50joSw88BKXsIf5bUOTX0+tRe7uwH7kfWzNIJJ5B19sAjQAolUp0ajke7qniOG1Ui1WqVHFnZpg+fRojnaZar8fenXffzdzRo6i0hYiGqDuLCs1KYaYMyuefxCmDTDQXPVyicv485VOnCF2Xrj1vYaQMMps3IwwLYWgNoScp3+KHly6xsLCwKrgPZMD33v7eKl/Paxn5zneYP3Ikvu5KcfLP/5yeT36S7oebrxfW6yzMz68OXru6SDgO3fv2oW3eTLFWQyz2mpZLZebdeYQQBDJgeHYYS7cICZGabMyLXi29yjbr5hSfbwVtxw6WRusDEzf4no0KBewHHmj0ddeA2nv8vSp7Hs7cXNNMuZZIfOTnPq352z89Wtf8J8f1Hgi8p8fU+/fv5/XXX+fOO+/kyJEj7LlGNOKzn/0sn/3sZwE4efIkL7744g2D0hYtWtwcftLCrjor1HBRCsWNrWgiy0B6YawWrF2d5QT/OiXAa6EMHTd3fVXTn0a0MIrdQxbnWO3JPN12N9PONBkthYFGOajSYXdwV89d191WMzbnN/Pj0R+vej2UIQOZgVVBKTIgOfMU6El8V6BpCoHCFCWksvAqXSAiNLNCojaC7OxDyjxhuBfLWPQKvWZfS5UstaDGialjjC4ssCm3ie2F7eTvuANhWViTs4Seh2YYJHt6sPv7UQKMIMQPI5ShY2azTOzM01Xdy7nxCradQRgGzsQEEkUxWiCPybxWY1C2xX2Vnhcf1mKD5Xh1nEpxlAIp+rODWEvehyJ2lbUcDz+dREQSLZJIQ1vTD9cvlZj6wQ8QgGZZ+MUi1aEhOh94ALu/n55Dhyi++SbBwgIoRUf2NPltGfRUCsOYw5sYQZu6hJfcQXL9HhIRhK5D550HGmNSAtLRm0TUWert1ZMGnXdtRIg63x8aYq7oN0q1lxRpXxh5gYHswFWB40qy27c39jHx6lNQqaLpJqK7QPnB7QS9bbTriaa+qkopLpQurNq2EAJPpDiV3MfWwnI/sa5P07jBV2wnjWGcxvfjiUH57Fn0a4IzzTRJr1+Pe/kYme35xV7aCKWgc98ASjfRZl5nbmELQblMorOTzObNK5Rj62NjzL/zDoZtY2YyaGaChRPjDD95FiORRlgGuW2d9D+xF4XBZG2yaSBnaibTznTT87lE8fBh5o8cwUivLH+efPZZMlu3NrXi0ZPJFZl1AK9YpHb5MkpKVBQx9+ablE+epOfQITTL4s6uO3n60tNkzAy1oEak4vvbCz02FjY2thPKkIpfuSl/3A+C6qVLlE6dInIchKaR7Oqi/eDBVcd7K+R27qR68eKqPvHQcWhfQzjsg0JJSVAuI3S9oTLdokWLnw3eU2D6wAMP8O677/J7v/d7mKbJN7/5TQC+853vsHv3brYv/fi2aNHifUdaBl46geX4CBnbKESGhpdK3LhnTwjcbBLTDTD8AAREhhEHpbeQsfqoI5RCCAXmFYzUYYRWZn9Bp1zt4MpkOx2qnY/13s3Wtq3vSczE0Aw+tfFTPHf5OQASeoJ6WCdv5Xls/WOrl6+eohFaahqa9IhDUwNLm8eXnXilHqJwA0Yuj1P7eaTWSyH5N3hhHARWtTy2XM4Cd6a6GC4PM146y8n0Q0hZZLQyytvTb/OVbV8ht20bqa44EL22b0wJgRGEBIuWP7WwRjKdxc4sW8AIXceUOnVbI1nz6ZBxUKCkxFjsa9NyWb5z4TtM1ie529yMo0pcqYywtbCV/sziE1Mh0MOIZLm+2LMMKEFo6XhN7JWKb7wR99otvq4ZBhgGxbfeYuDzn8fM5ej95Cdjz1RnikypiNTTlM+cQbouHTsKzA2V0EpDzL3t0711B4Vdu8it37BiP5o5gows1DW/kkqluFw+hqXdueo6amicKp7iQPfaZa7Z7dvJbNtG12cf5+nhZ5hz5zDNBIEKyGkGn9302abrRSoikEFT5VNTN5lz51aNpjlXPZEBCMOmPYfJ7m6YN6lOVSFStG1up/fuTeiWTn22wuTh84TtCs00cScnqZw+Tfdjj2FkMkjXpXT8+IogZvLHHsHcLMIwQJdolk7p3DRh7RV6v/DvMLSja56zpcB/LWZfe21VUApx/+PU97/Ppm98Y9V7QtPIbN1K+cwZ9GQSGYbUhofj+zqXw0gk4ix8EDB3+DCdDzzAYHaQPe17OFk8iaEZCARu6NKd6qYnvZw91oT2/tpM3QK14WHmjhzBsO3G+ffn55n+wQ/offzx99z7aqRSdBw8yPzhw8goamwnu3UrmY0b36/h35DK0BDlEyeIXBcW/Vzb77uvJb7UosXPCO8pMF3yLr2WL33pS6te27Nnz6qMaosWLW6PMGERWmYcmArWzC41RQgC2yKw398ys592pJJ4kYelWQhDR5gjGJkXQKVAxRO4XHqOPZt8Bvn6bVv7rM+u5xu7v8Gp4ilKfokN2Q1syG1oOjHUglnQ4zEke3pwLhVJJuJAVRBnZaTvk9y8GUkCKeI+t0cHHuXJC0+S1JNcsraxxz2CH/qsy29CRiHjC2eYs7cjF706bcPGjVxeHnuZx9Z9It5+s+NUrBDJShtplDbOhrYSl0qTWHqCRMFmYcyjN9FB2groLafBABWGJPr6CB2HoS0aRadIxsygUOiaga7pnF+4QIfdSUK3QClMLyRMGCuqAPQwwqp5+JllBdHIcQjL5WVV0KuQnoc3M9NQUNUtC7M+htKS+AsLRHUHzTKxDOjd10nk1Jj19tC9ZSeZbVtXbQ8RK0830zb1ZYhBXGY6UZug6BTxpY8pTOpRnZ3tO68bmAghSKXz/MLurzFTn2GqPkUhWWAgM7DmOoZmNC0NB/Aib9W6YTiIYQxz7c+8EHWCYF/j70R3N/7ZsyvUhmUYUjp5Eks3yPcnAA2v5DJ7apzufYNMvz2ClmprWI7oiQRKKca+9z3MfD4OTE+exMzlYtVYTWP27TrZ9Sks00WFAZDETCkWzghyBy32de7jmcvPrBIMqwU1Huh/YM3zAiBdt+nrQtcJa7VVr0euy8Lx4/jFImGlgj83R+T7qCgiUSiQ2rCBicokw3PDdNldFKaWheEeHnyYvZ17OT57nJn6DO3JdvKJ5YblSEb0pntXKHx/mJRPn16V1RS6TlCp4E5OYt/AR7g+Okrl/HlUFGG1t5Pfvbuh4ptetw67vx93YgIZhth9fSvElT5onIkJFt5+G922MTLL98nMSy/R/7nP3VZGuEWLFj8dvL8+Fi1atPjwuI6q608MqdCkRGni1oLl9xERLGDUzoAwCTO7UbrNW5NvcbJ4Ei/yMDSDjbmNfGHDBEibFQaBykQmymjhGFLevv+ypVvc2b06s3YtMtGPqF9E6TaJQoGwPEg4P4muR0j0WGinvx/TNgjSO2Exi9ud6ubrO7/OG5NvMO/NM2x/igdti1495PT8EOdTd+GanSv2ZWomI9UREILI0NGjJsrKQHiVsvKdPUnenD7BhnwboQwYq5YIjXnMdoN19S4+3r0LoeYJazVSGzaQ7Oykbd8+fjT1Dw0BqEkqbKOLgAhTMxitjLClbQtaGCE1Vo9hMWvryghtsfRZSbmmDQZCIK/xdFRaGlSAPzeHdo1StGFb6Gaa0F3Do9TbiMqcAlJAiGm+hq6PIIRHZzrN2ekc5+anmHfnWfAWQIClWQxkBviz03/GV7d9lULyOkJki3SluuhK3Zzo2L7Ofbw2+RppYzk7GMqQjUYPu6o2olLEySTx00l8/wF0fQJNq6GUDUiEqBEE+1FqWTk4u20b1QsXYh/Txc9s7coVVBiS2nkXovY2SktgJC2q42US+Vmk56Da9q8Ymz83R+X8edrvuisOHFIpQsehfOYMiQ3rmIkWGB7XKVhpBvsshJfGqbTjV6By7hwbHnywkY20jfhzWQ/q7OrYxeb82n27AGY+jzc7u0oISPp+40HFEpHjMPGP/xjb2Og6ia4uQtdFlUoU9u/HEQF/O/R3uNIlCiMUii6tjX/mHiKbjN0I2pJtPDz4MHf13MX3Ln6PBW8BQxgEMqDT7uTxDTdh9/MBEdZqTe1g9GQSZ2LiuoFp8fBhapcuNfpu6yMj1C9fpufxxzEXM9KarpP6CXnTl06davpQSmga5TNnKOzb12StFi1afJRoBaYtWrS4fZTCqnsYfohQCiUE0tBw0/aHWiJszb6AWT+P0hKAH/5ZZwAAIABJREFUwiod5qUgy7F6DduwGyWBw+VhTtaPsze7Pw7MVKyMGlk60shgMITv397kS0rJ/zj1P3hr6i3qUZ2clePxDY/zmU2fWbXcn42+zfiV7+GEIYVEhs/2H2B7zxNok68Q6R0UOjcjEmmC9E78tvtWrJ+xMhxav1KgzgUu+z+kLkeaFnRKFYtVeekkdqW++DAh9usUUuGlry7tlvTkrhBNmpybm6bDTtGRymBpOl/YtpV27Zv4C7Fiq9nWtiIDG0wsl56WcJlSZXpEDk0IgjBARIrANDCk5FqOzZ3kneJx5s2QpGmzs7CTu3vubjoxhTgrlLzGOiPM7MAqvR4HLEpdFfxG+KoTEFTdOoVIruzZlgpPHkBXU2jaHPCPGMY0cXlsigM9Nt85/10ssZ+yX8bSLaSSKBTVoEp3qpuXRl/iS1tXVxHdCn6phL+wgNXWhpXPs69rH5GKeHf2XZzQQRMaj4pt3GEMUi5PITRBpp4ikbCY6c4Cv4BhnMYwhlHKJAj2I2Xvin1opknvpz/N3JEjeLOx+JMKQ/J79iASSXxtH0btLJp0MS1F6fIcQWYnurEys+lOTsYZ1MVrmejpoX75MpWgyg/nL5E0KmiaSTEIGS93sM/rwRAGMqpiLVrsLGUjTxRPALCnY89NBfe9TzzBxf/6XzFSKfz5ebxiEaUUVj5Pzyc/uWLZubffRhjGiiDWSCYJazX8+XmeKf8YP/JJWSmCRafjoqjzB8f+kN+77/dWbCtlpvjajq8xWZtk1pmlO9VNd2q1fcuHibZG1lAGAeaizV8z/HJ5RVAKcZm80nXmjxyh+2p17Z8QcrF3/Vo00yQolT7k0bRo0eKDoBWYtmjR4rax6h6mH8aZ0sUUpBZJklXnQxNHMionMJyLqKsmzKEwOHvlBVJt964oybR0i6JboZoPsa1rswseSl3jJfIe+E/H/hPHZ4+TMlOktTSRivjrs39NPajzle1faSz3B2//ASeKJ8jpA3SpCepBhf/nwrP88w2Psmfv/0aY2o6QDkrPwg167a5mZ24bFyZPkLUyRIbeyGArpei0F7OomsDJpTC8AD2MUItl3kvLhjLk6UvfYi44SsrMMphto+y7PDS4hYP9GxGihutOYRWaZ7QKiQIVv9IIVkcoMaWqpEOdezs2UW9LgVQY5fqK9d6cOcrhuXdJ6UlSVgoQvDv7LlW3zMc2bqR04gRGJtPYbuQ4ZHfubJSWNtAsvPbHsOtPUS5OIRJpNFwi0pSjPUjfRwwO4mRsLNdHkwolIEhahLYFzpdJJv8GKKFUGqVyKJVlzp3lzq4O3p05h1Q5IhWRNtL0pHuYcWbY0raFGWcGqeR76lGOfJ+ZH/0If1EFVUmJVSjQ9cgjHOg+wP6u/dSDOuXZcdaVJT4BAvACn4VwnmTN4srUDCdyNZ7Y9BlS5t4V29f185jmO2haHSlTBPrH6Hrwwcb740891bAkUmYbQdtBROTECvztvTC9Wowo8ry493cxMEp0dBC5LkdHXsYum0TpBJoTYufaQMDZYITdxgaMVKrhAwtxNvKhgYcW/6qSTD6Jpk3j+/cShs17dzPr1zP41a9y/g//kKBSQeg6mhXfxyPf+habfu3XGgrAwdxcU4uVRHs7Y6NnqNXKJOzF7yylMHzJxK4cs6WLlNwS+eTq74bedC+96d5Vr3/QSN9vZH6XSK1fT/XixdVlrUKQvk4vaG1oqGlZrhACv1h8v4Z8W2iJRNOybRmG1w26W7Ro8dGhFZi2aNHi9lAKYzEoXcGiqI0WRkhjtTro+41ZO9Po01yiFvp4SiPlXCHM7Frx3lytk0owg22su2ZLkiDYxe0wW5/lnZl3yFgrs0rZRJbnR57ni1u/iKEZTFQneGf2HXJWjgiYtNajqRDNlPznuTL/92JpmtJXl+ZdD6vqsjXKszHZx7gzRSpMxFY+po4buXy2/yqBHSEIkxbN3G1fG3+NOadCNpVAKUHKtEiZFocnR9jXPYBtqMUy0eY80P8AT55/krS1XHpai1xIpOns3BD3sWoQmXpsOSQEkYw4tnCStJ4gMjRAxCqcl0c4XDrGoHkfphfh1moke3rQEwnye/eSXr++6Rii9Bairf8zqvxt3NFzBNYOfLqJXA8zn6ftjjuQuo5rNfs51ND1K8BOpFyeEFeDkP5cioQZQbSRelDHjVzm3Xmy1u2rhM6+/DJRvb5C0Ceq15l9+WV6HnsMgSBjZfBLFSLNRgB+FOK4FVDg4jBIG88cfpa/nJvkVw/+q0aAbJpHsKzDKJUGNDTNJZn8Pp53P2EY329WVxfe9PSKgEfpNmG9TvvOnTjZLNWhodijdHoapRSR65Levn1FxtzvTGM4HYgN3QTdWYwX30EvO0hNo+aXCdI+W7/xq42g8WoM48dks//vomh4gkTiVcKwn0rl37GklHw1frFIat26eMya1lAIrl2+zNxbb9F58CBhvU714sW471QIzFyO1OBg4ziLW/IUDZPeikJISZDQmNiWwc2aRF6deW++aWD6YVO5eJHK6dOE9XqsqN3bS/s996AZBm179xJWqzjj42iGgQxDNMui66GHVqgmfxTJ7dwZC11dUzWhwpDcVQ83WrRo8dHlo/0t1aJFi584QqlFkZgmJbtCoEUfTmAq1GoP1qRuxP2JTd4bmlvHI+uyCFFFqSRCxMs4ziHg9gQ93pl9Z8336kGdmfoMfZk+Xhl/BUtbmdmQwkAKqHolqn61EdwGMuCdmXcYqYygCY3d7bvZ2rZ1lXiR7gXxgwJd4/PrHudw8RjnyhchDOhKdXL/lodpS7Td1HFcLF/E0tNImUMIl6WGXFPTeHd6jIP965FhJ0b5LYT0CHJ3wlUZ6+5UN1/a+iVenXiVOXcOXehszG/koYGHVozbzdgkqi5GGFLxSnihi2HnCReDxeqFC4SOgzI0ysmI/kwnke9j9/TQfs89Nz4QPUnynn+OtnWe4Nw5zDCkbcMG7IGBG6qUKpUiVrJdZlshw/n5KikjweXKZTQ0DM2gFtYo+2WKTpENuQ3vKVsaOg5+sbjKwkXoOpWzZwnKZVQYEhqCjoEeyMWTdNevxcLOiz6eaKAbFsWh05zdepZdnbuIe2WPLQalVx9jGss6QhjeAWgU7ryTieeeQ4VhI5iJHIfUwADJri6SXV3Urlyh/O67cRBomhiZDN7cHFZHB56KS7vDKEDTNKKtA5i6Bl9+lHB0CsZmcXMGG5/4TTKpdlZTJZv9/1aMU6kcuj5LOv2fqdX+11VrlE+ebFrmbWQyzB05QmHfPiaefRYWM9BC1/Hn5wkqFfK7dxO5LnsOPMxfy1fwrCy2beM4y/3Hlm7Rnf7JlulCbAUzf/RorLq7eI+409NMv/givZ/8JELT6HrwQcJaDWdiAt22sfv6mmaJryazdSuVCxdW+boqKUl03VwP9AdNamCAtn37KJ86ReR5CEBPp+l6+OGmfbUtWrT46NEKTFu0aHFbKCGaB6UASiE/JBGkyGhD92cawkAAlmawIZFiRGRX9FpKJcmabSTU13GcaQxjCCkzhOEO4PaVHdustkYf57VoQmuoq2asDKFslquMS+iWemK9yONvzsXWMEtiQj8c+SEXSxd5fONKoRXTC2BRFEsTGvd2fox7Oz8GShHpOl7i5m0sQhmi6zphuBvDPIomfJQysfSIil8hHM3QNv4biMiNs59Cx2t/DGfglxrb6En38OWtX77+joTAy9p4UhH5gsBONsSXpO8RVCpx75yE5OL10S2L+ugobQcO3HQmyCoU6Dx48KaPH8B1Pwf8n1x9X2wpZCgkNI5OKNoTBea9eRQKpRRdqS5OzJ7gl3b90prbvB6R4yClXOVA6kxMUBsbw+rowEinkVHA2OglOja3ESQ11DUiVvNeGQBbJLg4dIRdnbvQtCJCeCjVrGTTRdPmkbIDPZmk74knKJ88Gfed6jq5XbtIb9oEQH18HOl5FA4sl9Yqpbh89gjfH/17ahlBsLBA0lG0iRTtbw0RbOwi7G1DG+yBwR5sFZGzmz8gSSa/v4bIVRLTPNV0HRVFTV8HQErm330XTddJr1tHuVpFBgHCMJC+T310lI5776V9YCdbRrZwpXIFm+XPST2oc6DrwJqqyB8mzVR3NcPAX1jAm50l0RmX6RvpNNmtTdSm18DMZskuBqe6bSOEQAYBCEHhrlv3cv6gyG3fTmbLFoKFhdjaJ5+/4cOlFi1afHT4ychmtmjR4mcHIeLMlrxmIqkUkaEjzQ/n+Zffdh/IaxRWVcSneu4gk91J1a/ihi5Vv4omND63+XMASNmN799PGO7l/QhKAQ50HyBtrvZVDGXIQGagUQ74yOAjTbNqoQxZn11P0oizAG9MvEEgg0ZQCrHwyqXyJcYqYyvWFU0NTgAhEGsp2q7Bkg2GUhaBf5Ag2IGUBcpOPxu1r5Ae/R5oCZSZByMHeppk8TnM4ku3tJ8GmsBOZuhOdROpONAI6w5CCJRSZLUU7cZyL5kMAiKnuaru9XCmp5l55RVmXnkFZ2JibaVfQMoNwM8hRImlzKkQNb60fQtVbxeFZIFuuxtbt9mU28T67Hr2de2jHtbX3Ob1MDKZVYG2UgpvagojkUBb7AM0dZMLC5fwnDpCAigCFeKrOJj4s9G/RyLxRUQ2XLpvVnugrtzP8n51y6Jw4AC9n/oUvY89Rmbz5kYAUG2SWXOUx6uD84iOPGmRJJtqw96wjnMdDpWgQuLUGMbEPBBbwBzoOrBmRlnTZli7aiHg2gw2QHrjRqTvr3o9cl2yW7fGvaWL/Zi53buxBwbQk0nMXA573TraF4Ov37n7d9jetp2qV6XslXGCOnfoG/hqZR/FN9/EL5evew4/SGQUEdab31eaaeJMTt7W9gsHDtD10EOYuRy6bZPetIm+z3xmVSD8k0bTdRIdHVjXiK21aNHio08rY9qiRYvbxk8lQIEZBIvlhBDpOm7mw5vQKLOA2/1lrPmX0YIiIIgSfUQdj/Hzus2sM8tkbZJCokB/pv8DndBomsa/vvNf8x+P/keklNiGTS2okbWy/Ju7/k1juZSR4uu7vs5/P/nfSegJLMOiFtRI6kl+88BvNpYbrY421G2vJm2kOTl3koHssodlpOsYQbjafkUqouStfeXf33s/T196ejHIFkjZjRu00e6YpF/8O4aKLpoRke2xaN9oIzSBMvLYs88SdDx6S/u6mic2PsG3L3ybelBHtwzqqoatpfhEYqUisdD1W/JRVEpRfO016mNjjbLPmZdfJtnbS9dDD13nnvhXlEq7se2nEaKO799NqXqQLfm/WuW7CXHg5YbNvTVvhG5Z2IODOOPjDQEb6XmEnkeyq2tF0LqrsIunjn6Hu+79JEniyoVxb5Y/G32KGX+BhDDZLHs4sDUWNpKyHSmzTdyBFFLmb0r0yw1dakFtVdj4jn8BCwMVRbFIUibutV2X6qfiheQ1E3FhDKO/i0cHH2Vn+8419+H795FIvIJSqwVtYqub1QFt76c/TenUKaTvN5Rppe9j2Dbdjz3G1AsvEDkOwjDQTJNkdzfJ7u5YvbewrPybNJL8zj2/Q64zx8lz7xC8+g6mFyGTFdxSidrly+T37SO/c+3xf1CIq3pnr0WFIUb29vub7b6+G3qdtmjRosUHRSswbdGixe0jBH4miS8TsfWIECvtN24RL/I4On2U8eo4Gho7O3ays7DzhsGkTHTj9v48LGXArlq+0+5cVqP9ENjdsZs/+sQf8ezlZ7lSvcId7Xfw8ODDjfLcJR5b9xj7Ovbx5IUnmfPm2N2+m8c3PI5lLGdv1VpZUFiV7QtsC8MPgavsUZSCRbVZgKnaFCPVEQqJApvym9bMXA1kB/jcps/x2uRrzLvzmJrJpqiDTZddwkoJXTdBwfyIi1cJ6d8fBxJCXpXVkRLD8UnWPRACN50gtK8fTKbMFF/f+XWGK+8y6z9DOhWxJRmgwmMsXNqEX+mI7WH6+ta0x2hGfWQEZ3y8ke1TSrEgakyeegkpLrF7/8dZl1nX9D6Tchu12m8DoGkT5O0p8pZJdNXpVygixyHyXQZS/Tc9rmvpuOce5o4cwRkdbZRTWm1tjVLaJVJmir0dd/Ct2utcqV5hcvoymq6jCx1QVKM6e9p3ke5c9vL0vE9j299DKZ24QsADFK57fWubslfmhVf+guitE4SlKk7WYNuOe9mciB+KlGQNTYm4qP+qz74mdBLJJAc7DhI6DoObv3DDaxaG+wjDQXRtBhHkEKEJWoRMzFCr/VrTdYxUih2/9VuMPf00teFhAHK7dtH3cz9H6cQJ6pcvUx8fR7MsjHSazJYtaIZBVK+Tu+++VdvLWBnsc1NoUkMk44dCQtMw0mlKx4+T3rDhQ88kCiGwBwZwxsZWKVALXSf9IfuLKimpjYzgTU5i5vNkNm++pc9jixYtWlxLKzBt0aLF+4cmkNrtCR25octfn/trIhlh6fEk58ejP+bSwiV+bvPP3dxGfkrKu5JGki9u/eINl+tMdfLr+359zff70/0Ml4dXBbW1oMaujpUKwkrTcHI2Vt1HD+O+w8jQ8VMJfBnw1MWnmKnPkNATBDLA1E0+v+nzdKaaB+0D2QG+mv1q4+/J559HpgyUWwBnATQTw9SoFV38YpVkShIlB0CGgEZ2tozhRyhDAynJej5e0qPecX17ByECdvceBvqR/b0sHD+OM3aJZPI0xbc3o1nrbrn3rXrxYiNTqpTi+OxxFrwFEnqC6NJlnsk9w/rcep7Y8ETT4FTTJslk/i90fQZQ/PLHPN4aS3Fy8hBBuUxt+DJ1t8oWvY+5qeeJ7riD7JYttzRGgFm3yFudM1QyHiks7u4/SOHI2Yaa7BJKKRKZPB2dA3R3r8dr20VlbIQ5dx5LGKRCnamLpzj5H/4DumWRv+MO+h5/nJr8ZUzzOJo2h5SdBMH1y9gDGfDcf/k/sIdmIGmBsLDPzzI29hyJT/wcA8keksqkqurYg4PUr1xB6FeNcfFzrGnaCqXf61Et/S559edo1hBoPsrPExW/CMY9a1b5Guk0G37xF1e8Nn/sGLXLl7HXrSN0HMJqlchxqJw9S3rTJrLbtjX6Mq/Fm5pCNMlQapZF9fx52hZVsz8swlqN3I4dRPV6rJpsmrHqrmnS+fDDN31um1EbG2PmBz8gcBwy69fT9fGPY1xHUChyXaZeeIHQcTBsG2d8nNKpU3Q++CB2T8+a67Vo0aLF9WgFpi1atPip4rWJ1+LyOn15opwyU1ypXmGsMraibPVGeJEXBx/uAuty69jWtu09KaX+pLm/735GKiP4kd84L/WgzrrsOtZlrrW7AaXreNnV2ZwXh1+k7JcbSr+mHmddnr70NN/Y/Q2kkpT9Mkk9ScpcLfSilCIol9ETCfz8XRjOECgJ0sOkRHXCILXRJ7DuxJ74C0h9IfZHNRbPuaahgITr49ddwtTaE1/TXFI21lAyBKmwBwZQgc+GJ9KURrcz9/rrmNksVtvNqQwjl3sTJ2rjlPwSCT2OcoRSpM00I+URLixcYFth2zUrh2Sz/x4hVKPENGPBwXXT6OoILxyR2FaKj2X3sNvaCBCrp2az2N03r+Z6YeEC3x/+PmkzjSY05pXPd4ef4pFd99P2tktUr8d+jr6PZhh0PfooxsTfo1Ak2jtItHfQISWVs2cpTZ7HoL1REjz/1lv4c3Ns+PrXCbgJNeNFjh15nsTQNKSW7ym9u4PkQpXLx16h/94v8bGeu/hBeoiEnccZHW0s5yiPh8y9yDAk0dNz08FTogZ+9M8WA/HF/gDA8v1YGOsmHj6pKKJ26VKj3Du3YwdBqYRXLCKDgPZ77iFzHW/PZiJUEGdOoyb9rB8U7tQUc0eOxA8miAPw3P79CCkx0ulYXfo2ROYmn3+e6RdfjEWPdJ3Z8XGKhw+z/Td+Y0WZ89UUX38dJWUja7yUKS2+9hoDX/jCbY2nRYsW/3RpBaYtWrT4qWKiNrEqMwjN+ymvx0hlhGcuPYOu6ST0BBdLF3lz8k2+uu2r2MZPl5jHjUgaSb6242scnT7KWHUMTWjc1XPXTZU3LxHKkCuVKySbeKK6oct3zn+HGXeGSEVoaPSme3l84+MrzpUQYnl/uo3T+RmScz9ED4pEoYZmgpu/H5neglARidIwKrnaX1QJQbLmUb1OYKppUyylxmJPxtifEsNAl7G1j5ZMUjp5kq4HH7ypc5Ds7aVy9iyaZTFVn1626gkjot442EyZKc7MnVkVmJrmKwhRBVb28aWMbg7mp+jIfW1V0KXbNuWTJ286MFVK8aOxH1H2y0zUJmhPttNhd5AxM7wxd5RvPPENvMkpvOlpzEKB9KIH52ZnM6dmTzXEsSLfpz42hmcodvq9y+fUtqkND1MdGiK3fftNjQlg/tVX0ZIr05RCaBiFHHqkGPj85wEIZ0/w+uTriPU91IaH0ZTgzuQ2Ovwkei5Jx7333twOlUILJTS8kZfvcYFC90OixPWFnCA+D0s+nkuY+f+/vTsNjuu67gT+v/e9fr2gu7GvJAgSXECCC7iJpEQ5oURKI5nyEkdypKmKl4SlUimpiiqO8yVWoipFdDJxVeIPVFSaqpFKVVImHzySk4kniSWFtmVZsiWu4ApuIEFi33t/y50PTYBsdmNv4GH5/1yuIt7rfn2AC7Te6XvvOYXwFBbCTiaB8Sr5AjCKimBFo1l/Y3YigWB9/eS+lxkyIxF0/fzn0AOBOwWnlMLgyZOofvxxeILZe5ynev3un/8c+l3X0Xw+KNtG6z//M9Y+91zWcxzTRLK3N2eLFsc0EW9vR2DZ5D9AJCIawcSUiOaV8fZTirHa0tzDdmz8tPWnGbN+AU8Atkof//LqL884zrlmaAb2VGfvhZss0zFhOzZyTQGd7jmNnkQPwkYYutRR4iuBoRt479J7eGb9MxmP9VVVIdndDaFpUN4KJIv2Qo+eh52y4d26FY73dhIgNAg7nt4De2/yLOWEFYLTPSx7AWhwEol0UnqbY9/Z8zcyizQZoXXrEL16FY5l3fk9sx1AE0jV3enVaCM7YfF4LgDwQcq+uyr0emDbJQCGIbTs70cIkY59ks73nccvbvwChm7AIz3oiHXAq3mxvWI74lYcvYleVNTUIFCTuX91V+UudEY70RnvREALIDHQh6gVxWarBiF1T/KgFGI3bkwpMfUpD5Iidxl/7a6jm8o2oaGkATeGbsBab6K014GMJuCrroa/qirHs8eg0jPYudpQKUy+urQ0jDFnaJVtwzPBTHvxtm3oeP99aD7faHJqJ5PwV1fDW5Kr/2r+DZ45kzMB1G5/KDPV9kf36vn444y/rRFC05Bob08n9vdWibbtO/v4czxvKr/zRER341oLIppXlgeXw7w9I3a3qBVFY2njpK7ROtya8xqa0NAZ60TKnrtlePOFT/Pl7MPYNtyGc/3nUOgthE/3QZc6+hJ9ONdzDoOpwax2NCU7dkDqOqzbbVp8aEPYdw116/vhj/0GWuQ8cLvViyOi6aW+93JspLzjF0kxzZ0QIv0a0jBGb4SlnkS0Jz0Lq5TKedM+FqnrqHrkEQRqa1HoL4apLFjlIUR3rwX0dAITt+JYGVqZri5719Jf01wLKW9CiL6RqwGwoWntEFIgVztapRTkJONzlIMPb3wIXdNhaAaEEPBqXjjKwdnesxC3/5eLJjV8dc1X8cWVX0R1QTXWlKzF4/FGbLBzVFcVIqtwzkTW7NkPJJJ3YoVCm2cIx42baF/uRdy607LHIz2oL6rHutIGlK7bgOJt26aWlALpvepjFE8TCrCNyX2mPtK31DEz3wuU48ATCsFbWjru842iIlQ/+iiMwnS1YqFpKGxsRNkDD0zq9fPBikRyLosVUsKKRGZ8fTuZHHvZ7RjJp+bzje7VznqKbcPHqr5ENE1MTIloXtlTvQce6UHSunMjHDWjqC+sx7Lg5JaHJazEmHtJHeWM9shcSoQQaCpvQsy8UzFXKYXLg5cR1IOjey0BQJc6BlIDMC0THbHM3ojSMFD12GPp/XmFQyiuTqFsXQl8pUWA0KGZvfAMnwYAJLxDgBIZezvhOFBSQzI0fsKmVAjJ5EMAEvDXFAIqCqmnEOupRXIwPWNox+Mo3LhxSj8HaRgo2b4du596Fsm9GxBpqAA86aQ0ZacQiklUnOhC27vvou3dd9F59ChSkQgsazuESAJZyaEDLVALZWZ/EGLH4yjctGlScbUNt0ETWsY4AIAUEkOpIRjSQKl//ESqNlSLA3UHsH/zV1BSvhzKysyWlW1D8/kQamiYVEwjqnbdj+rlDXCSKURVAj8ruIozRidSXsDasRZvnX0LlwYuTemaE0n6vRC2ykyOHAXTq0NNYf9i8Y4d8FVWwo7HYUWjsKJRaF4vKvbtm9TzPeEwyr/wBdQcPIjqxx5DeP36Od0/qXm9OfvsKqWm1CppLGW7d+fs/woARmnpmO1pChsbs3oI28kkAitWZPW4JSKaLO2ll156ye0gRgwPD7sdwoyEQqEF/z3Q1HDM80+XOjaUboAQAnErjoAewO7q3bivavLFWgKeAE50ncgooDTCq3mxvXL7tOObypgLx4Fw0q1a5kOl4MqCShiagc5YJ2JmDKZjIm7G4fV4cybyQgjsXbYXRd6irONGURGK9FPwFFdAIAFpRwChAUJCWFEo6Uei8jEkw6XQTAfCTienpteDSFk45/LBe6Urxm4BZDlsswbdJ8oQ7QyPJoFFW7dOey+bJjWsL1mPuBlHxIxAExpWeWqw4bwFXUv3upS6DieVQvzKFfhWpCA0BV2/CSFiEMIEoGDbdbCcrdCKfhvxtk5YsRgc04TQNBRv2zbp+G5Fb6Et0oZCbyHaI+2QQqaXAisHcSuOp9c9jYqCye1VFUIgUFeHweZmWMPDgJTpWUMpUblv35R7cAohULVzDwKmjt8kzsHRBSrK6rDswX3wBkMwNAOXBi5hc/nm261qZk7LHxr1AAAeq0lEQVRpErYuIR0nvWr6drsjMzC1ZEwIgUBtLYL19fBXVSHc2IjCxsYxE64R8+W93RMKje6Lvpsdj6Nsz54xZy4nSy8oQPzmTSS6ukZn0pXjwInHsfypp8ZcsmwUF8NTWJguJJVIQGgaQmvWoHjr1lntET1b5st409zhmLsnNE7PZe4xJaJ5xyM92FG5Azsqp9YOZESBpwBri9fi6uBV+PQ7M3MRM4L9tfvzFeaYhGXDG0tCsxwACkoKpPwGrAmWr86FzWWbsblsM1J2CgICb517C22RNrRH2ker9ALpYklF3iKsCGUXLwIAOClIOwqlBWAXrIdK3oSW7IBQFhxPCMnCrXB86ZnNSNn4rWHGp8O218JTsRbVj9lI9vUBSqVnc2bQHgNIf0jxheVfGP26++OPkfJnzvYIIdLFZs51wr8rhHj8KQjRCyEScJxSAD4IEYe3vBo1T9Sh5cZpnOo+gZiRQMA6hh1DAivDKyeMZUVoBRzloMRXgl1Vu9Daewxm5Cz8ykZdoBSbDIUci6LH5CsrQ8MLL6DvxAlELl2Cr7gYxffdN+29kdIwsOxLTyBwpgulOYqHOcrBpYFL2FCyIcezp8fx6Eh48nObovl8U1r2PV8YxcUo3rkTgydPwrk9Ay51HcU7doxZMXeqVv7+76Pz6FEMHD8OJ5WCUVaG6scfR0FtdsXvuwWWLWORIyLKKyamRLQoPVz7MI55j+F8//n0Ek0jhL01e7GqcNXsvrBS8A/HAQEoTWBk6ac3loQjJZw83WjPVHofYy8eXNGNIbMHbcPD+PSmht6YFwoKfs2PP9j4B2PPfggdaqSSkhBwfMvh+Janv7RicHJU450poWnwlZdP/MBpsoaGci7T1AwDkZ4UlEp/sKBU6V0rTG3YdgUAAye6TuDT/k9R4C+A5Vg41X0K77e+j4aSBuxbvg9byreMucS8wFOA+sJ6tA61Ipi4hm3WBcDvQ8Sx8XDIj3Dr/0Cs6hmkyh+b9PcjdR1lO3eibOfOKf4kcrOVnXNZKZBe6XD38nvKn1B9PQrq6pDq7gYAGOXlM/5Q5l6V+/ahcpLLm4mIZsv8uEMiIsozIcSMZl2ny5MwRwLIOK6khBFP5W0GaKY07TJ8vp9ii68Sp3t6ABHA6hITJ24VYTi5Er+39vdQ6Csc+wJCwvLXQU/cAGRmMR0lddiBuWmnkU/C40lXHL2HUgrC40Mi8Qj8/v8HpXQABoSIw3G8SCYfgeVYON59HAWeApiOic86P4NSCrqm42L/Rfh1P64NXcNXVn9lzGT/wIoD+E3Hp7h+9keIKQOFmsSj4TKsL7jdyqbrPaRKDwA52inNBUMzEPaGYeWo9JRyUlhdtNqFqJYGqWnwTbWIFBHRAjM/7pCIiBYJadt39V+855wzuTYXs0/B6/0llApCE8DW8q2IpCLoS/ZjzQYdPudZSDFx5dZUyT7I7v8LLdkBJb0QjgklPUiUfTG933SBCa1bh95PP4V+z749MxpF4e7dcJxiRKPfgMfTDCH64TjLYVnrAGjoS3QhbsXhMTy4MnglXZxG3imqpJRCV6wLV4euor4wd9IuhMD94XL8t/JyKD37QwFhRaHHLsEKTm2PaD7tqdqDf7/27wgad/peJqwEVheuRsgYe98QERHRRJiYEhHlkZICsHL07kS6QO18IMQAhIhCqTuJRNAIImgEIcQQ4vFeOM4kZmekjkTlVyGT3dASrXC0MOyC1QsyKQWAgtpapHp6MHzpUroQjFJwbBsV+/YhNbqfzwfTzF4aq981izmUGhpNSoF0wimFRMATwIX+C2MmpneM9QGGQnZV4Lm1snAlvrT6S/h1x68xmBwc7bO6rWKbq3EREdHCx8SUiCiPTJ8BPWEB9+ZmjoIZcL/4Udp4yY3AVDuJOd5yON7Z2/s5l4q3bUOooQHR1lYITUNBXR3KVq3CrVu3xn+et/jOjOE9eaVP9yHgCaT7mk7ws7X9q+BohTlHyNFDsAJrp/DdzI5lwWX4nTW/43YYo5TjpHt6SglPMDjxE4iIaF5iYkpElEdKSiSCPvhiidFWMQoCllefF1V5AUCpIjhOMGcHG6X8cJyyuQ9qHtEDARRumFp1WSEEHlnxCP7lyr8g7A2jJ94DIF2ttqm8CQAQsSJ4uPTh8S8kJaI1/x2hG69DaX5A6ICyIOwYIsv/YFJtdpaS6NWrGGhuHu2pqQeDKNm9G77S8Xu+EhHR/MPElIgozxxDR8xTAGnZEErB1vUx9526JZl8CH7/T6CUF+npXRtCxJFIPIKpzphSWlVBFb6x4Rv4vPNz/OTaTyCEwOrC1fBIDyKpCNYWrcWy0MTtNaziBzDorYO/839DM/vg6MWIVT0FJ1A3B9/F5DnKweme07g8cBkAUBuqxbaKbRnLmqd1XduGHY1CGsa4LV4SXV3o/ewz6IEA9IKC9EGl0H30KGoOHlyQ7WGIiJYyJqZERLNBiHnTGgYA4CgY8SQ02wYUYBkViDlPw2N8BikHoVQIqdROKFXkdqQLmk/3Ye+yvdhTvQfn+s7h6uBVSCnxhWVfQF148omlE1iG6KrvzGKkM+MoBz++9GP0JHrgv93X9FT3KVwauIQn1z0Jj5y4eFYu/SdPInLlCpRpAkLAW1qKsr17oXm9WY8dPHMGmj+7p6rQdQydP4/irVunFQMREbljHt01ERHRrHAUAkPR9L9vr981Eilopo5E6KGchZpoZjSpYVPZJmwq2+R2KLPiQv+FjKQUALy6FzErhuOdx7GreteUrzl45gwily+nk1AjvezdikbR9eGHqH788azHO/F4ztY7UtdhDg1N+fWJiMhdXK9FRLTIGfFk+h933cQrKaBZNrRUdk9Kmj4pO+Hz/QiBwP9EIPC/4PX+J4CE22Hl3aX+SxlJ6Qiv5kXrcOuUr6eUQuTKlayZUSElzEgE8a6urOeIHLOoAOBYFnQWQSIiWnCYmBIRLXKaZeduX6NJ6ExM80aIXvj970HKOAA/AAOadgt+//8BYLsc3dzJNYs5EWVZcJLJnOekYSDV25t1vLCxEVYsln0t00R4isWriIjIfUxMiYiWKqXcbou5qBjGx1Dq3llEHVJGoesXXYlJ2TbMoSHYifzO2q4rWYeYmZ0UJqwEVoZXTvl6QtfTvWNzUKYJT1H23md/dTWKm5rgpFKwolFY0SiU46Bs717oOfaeEhHR/MY9pkREi4w0LWiWDUdK2IYO26NBT1pZlYGFAkzv9IrUUDZNG0Cuz3uV8kPTWmFZczuLN3jmDIZbWuCYJgDAW1KSLiSUh2q1a4vW4kLfBXREOxDwBAAACTuBsDeMreXpokOxmzcRuXwZUAq+mhqE6ushtHsb/KYJIRCoq8tazquUgvR64a+qyvm80Lp1KFi9Gqn+fkhNg6eoaFoztkRE5D4mpkREi4Wj4B+OQzgOIAChFFRcIF7gg2Y6kI4NJWV6plQBpkefX5WDFzilPBAi19JoO8dM6uwaungRQ+fPQ/P5RmcirVgMnbcLCc00eZNC4on6J3Ch/wIu9l2EEgqbw5uxqXQTNKmh51e/QqytDXognbQOnj6N6OXLqDxwAFLP/TtXtGULnFQKsevXoRwHAOAJh1H24IPjxis1Db6yhdN717EsRC5fRmpgAN7SUhSsWgU5RsJORLSU8I6EiGiR8EYTEMoZnRlVQqRnq6JJxAsD0JMmdNOCgoTp8zApzTPLWgvDOA6lMmckhYjDNLfPaSzDLS1ZM6NCStixGOLt7QjU1Mz4NaSQ2FCyARtKMmeC4x0dGUkpAGheL+xEAoNnzqC4qWn0uGNZGDh5EomODijHgVFUhPKHHgIsC5rfD084POM455NUfz+6jh6FUgqa14v4zZsYbG5G5cMPL7rvlYhoqrjHlIhoMXAUdMvKLnIkBKRSkJYNy2cgEQogGfIzKZ0FprkNlrUMQkSQniVNwhy6he7mCkRvDI7OAs425Thw4vGc56RhINndPauvH7l8OWd/UenxIH7r1ujXyrbR+f77iLW1AUgnzqmBAXT/7GfQQ6FFmah1f/wxhMczulxZ83ohdB09v/qVy5EREbmPdyZERIuAuL08NzeVPk+zTCKZfBym2QNhnUTvb5oRbV8OSB1O6hNIrxcVDz8MT0HBrEYhpIQco5WKnUrBKC6e1ddXSo259Pbuo9HWVljRaMbMrpAS0uPBwMmTKLv//lmNc66lBgdhRSLw3NPKRggBc2gIVjQKfYa/G3YiATseh1ZQAO12L1giooWCiSkR0SKgpEjvH815UsDRuYdtrjhOGTo+cGAn6iE86THR/H4opdDzi1+g+rHHZj2GglWrMHzxYnYhIcNAYPnyWX3tYF0dej/9NGvW1LGsjCXEsZs3cxZiElIi1d8/qzG6wUmlxt4rqxQca/qtmxzLQu+vfoVEZyeU40BoGvw1NSjdtWvMglP5FLt5E4NnzsCKRNK/Y7W1KNq8GWKs9yQiohz4jkFEtBgIka6w69wzM+ooWIY2dtJKeWdFo0gNDGTdlI/MjJmRyKzHULhxIwK1tbATCVixGKxoFEJKVO7bN+vJgn/5chilpbDv6kvqWBaEECi8a3+p1HWo2zP5ViKB4UuXMHDqFAZOn0b81i0oe3H1fjWKisZsiSO93qyZ1Kno+eUvkezrg+b3Qy8ogObzIdHRgd5f/3ra15ys6PXr6Pn4YyjTTC9NFgKRy5e5PJmIpowzpkREi4TpN6AAGMlUuiKvELAMHalA7mWdNDucVCpd+TgHBcBJJoEZJCGTIYRA6X33oWjLlnTC4vPBO8tLeO9+7Yrf/m0Mt7SkK+wqhYKaGoQ3bsxYXhpqaEDs/fcBTcPw2bOArkMIAWVZcEwTnT/7GSofemjRtH+RHg8K1qxB5OLFjJliO5FAeOPGac9sWvE4Et3dWb1bpWEgfusW7FRqVpf1DjY3ZxS6AtJ7Z+O3bsEcHoYnFJq11yaixYWJKRHRImL5DVh+405itEhu6hcSPRQae2ZM1+f0Rl3zehGorp6z1xshpES4oQHhhoYxH+MtKUGooQHt//EfgKZBIJ3U68EgArW1SPX25q2C8HxRvHkz9EAAkZYW2IkENL8fxTt2ILhy5bSvaQ0PA2MU1lK2DTsWm7XE1Eml0tfPVexK1xG/dQuecX4HiIjuxsSUiGgxYkLqGqnrKFi1CpErVzL2eNrJJApWroRkUZpRxU1NGL5wAcnubijHgbe0FJ7CQgCAHggg1tq6qBJTAAitXo3Q6tV5u954BZOEpkG7ZzYzn4Smjbk0XDkOZI49xEREY2FiSkREaI+040zfGQgIbCnbgvJAudshLWjFW7dCGgYily/DSaUgDQPhdesQ3rjR7dDmHT0YzJlcKceB0HmbMhG9oADe8nKYQ0OQd/28HNOEr6pqVpfxCk2Dt6ICqb6+7KXIUs56oS0iWlz4jk9EtIQppfCfrf+Jq0NXEdDTMysX+y9ifcl6PFT7kMvRLWyFjY0obGxMJ1gsPjUmf3U1oq2tWcuf7XgcIS4DnZTyBx9MF0C6PfMMTYO/shKle/bM+muX7NqFrg8+gBWNQvp8UKYJ5Tgoe+AByDmoCExEiwcTUyKiJex8/3m0DrUi6LlTjCdkhHCh/wJWhVdhZeFK94JbJJiUjq9wyxYkenpgDQ6m2+o4DuxEAqENG2CEw26HtyBIjwcV+/bBisVgx2Lpyrw59n3OBs0wUPXYY4jfuoX4zZvwhMMIrl495j5rIqKxMDElIlrCzveeR8CTvQct6AnidO9pJqY066SmoWr/fsRu3kTs+nVIjwehhgYYt/ea0uTpgUBWhdy5IIRAYNkyBJYtm/PXJqLFg4kpEdESZilrzHO2Wlx9JGn+ElKioLYWBbW1bodCREQu4foiIqIlrCpQBdMxs44nrSSWB1m4hIiIiOYGE1MioiXsvqr7AGTOjlqOBUMz0FTe5FZYREREtMQwMSUiWsJ8ug9PNzyNmoIaOMqBgsKK0Ao8te4peCSLlxAREdHc4B5TIqIlzq/78UjdI26HQUQLlBWNYvjiRTimieDq1fCWlrodEhEtQExMiYiIiGhaBpqbMXTuHDSvF5AS0dZW+KurUbZ3L4QQbodHRAsIE1MiIiKaNqUUhltaELt+Hcq2YZSUoGjzZmg+n9uhzYg5NISBkydhDg0BUiJQW4vCxkb2pb1Lsq8PQ+fOZbSo0QMBJDo7MXzxIsINDS5GR0QLDd9diYiIaNq6P/oIg6dPw0kmoSwLifZ2tP/kJ7BiMbdDm7Zkfz86fvpTpAYH0wccB8MXL6LrF79wN7B5ZvjCBWh+f9ZxzedD9Nq1uQ+IiBY0JqZEREQ0LfGuLiQ6OjJmR4WmQXg86D9+3MXIZqb9k08gvd6Mpaia14tkVxeS3d0uRja/OJY19nJdm32QiWhqmJgSERHRtESvXs05YyakRKqvz4WI8iPZ15cz4dL8fkSuXnUhovnJV1UFO5nMOq4cB57iYhciIqKFjHtMiYiIlgjHtmFHo5A+HzTDmPH1hJSAUkCOJG4hl72Rmpb7hONAetxvoxS7dQuRS5egLAve8nKE1693Ja5gfT0iLS1QlgVx+2emlIJjmijcsmXO4yGihY2JKRER0SKnlMLAyZOIXr06uvzSW16Osvvvh5xBghpauxbRa9cyit8A6SWe/pqamYbtmoJly9Df3AypZ94m2ckkQi4X9On97DNEr14d/ZlHLl9G5OpVVD/66JwXnJKahqoDB9B3/DiSXV1QjgOjuBjF27bBU1Awp7EQ0cLHxJSIiGiRGzh1CpErV6B5vaOJaGpgAF0//zmqDhyY9nWNoiIEV69G5PJlaH4/hBCwk0loPh+Km5ryFf6cq9y9G+0tLTAjEeh+P5TjwI7HUbh5c1YSPpdSAwMZSSkASI8HyrbRf/w4yu6/f85jkoaBst275/x1iWjxYWJKRES0iCnHSe8F9XozjktdR6q/H6n+fhgz2A9Ysn07/MuXjy7pDK5Zg+CaNWMvh10ANMNA1aOPInr9OuI3b0IaBkINDTDCYVfjGr50KeesqNA0FmUiogWPiSkREdEiZieTcEwz5x5EoWlI9fXNKDEFAH9FBfwVFTO6xnwjpERw5UoEV650O5Q7xtjPS0S0GLAqLxER0SImDSNrr+QIZVnwuDwLSJMXWrMGdjyedVw5DozSUhciIiLKn2nNmFqWhVdffRXd3d2QUuL5559HZWVlxmOuXbuG1157DQCwc+dOPPnkkzOPloiIiKZEahr8y5enl6TeNWuqHAd6MAhvebmL0dFUGMXFCKxYgfiNG6NtehzLApBeUk1EtJBNa8b0o48+QiAQwMsvv4yvfe1reOedd7Ie8/rrr+PZZ5/F4cOH0dbWhmSOPldEREQ0+0q2b4e3vBxWLJb+fzQKaRio2LfP7dBoisp270bxffdB+v2QhoGCFStQ/fjjOfvJEhEtJNOaMW1ubsZv/dZvAQA2b96Mf/zHf8w4PzAwgEQigfr6egDACy+8MMMwiYiIaLqEpqF8715Y8ThSAwPQAwEYhYVuh0XTFKyrQ7Cuzu0wiIjyalqJ6cDAAMK396RIKSGEgGVZ0G/vYenu7kYwGMSRI0fQ0dGBPXv24ODBgxNet2YB9zwbsRi+B5oajvnSwzFfejjmSw/HfGnheC89HPP5Z8LE9IMPPsCHH36YcaylpSXja6VU1tddXV347ne/C8Mw8L3vfQ9btmxBbW3tuK9169atycY9L9XU1Cz474GmhmO+9HDMlx6O+dLDMV9aON5LD8fcPeN9IDBhYrp//37s378/49iRI0cwMDAAIF0ISSk1OlsKAEVFRaitrUUoFAIANDQ04MaNGxMmpkRERERERLT0TKv4UVNTEz755BMAwOeff46NGzdmnK+oqEA8HkckEoHjOGhtbeV0OREREREREeU0rT2mDzzwAE6dOoUXX3wRHo8Hzz//PADgvffeQ2NjI9atW4dvfvObOHz4MIQQaGpqwsr51KCaiIiIiIiI5o1pJaYjvUvv9dWvfnX032vXrsXhw4enHxkREREREREtCdNayktERERERESUL0xMiYiIiIiIyFVMTImIiIiIiMhVTEyJiIiIiIjIVUxMiYiIiIiIyFVMTImIiIiIiMhVTEyJiIiIiIjIVUxMiYiIiIiIyFVMTImIiIiIiMhVTEyJiIiIiIjIVUxMiYiIiIiIyFVMTImIiIiIiMhVQiml3A6CiIiIiIiIli7OmBIREREREZGrmJgSERERERGRq5iYEhERERERkauYmBIREREREZGrmJgSERERERGRq5iYEhERERERkat0twNYqCzLwquvvoru7m5IKfH888+jsrIy4zHXrl3Da6+9BgDYuXMnnnzySTdCpTyZzJiP+Id/+Ad4PB780R/90RxHSfk0mTH/+OOP8a//+q+QUmLTpk145plnXIqWZurNN99ES0sLhBD41re+hTVr1oyeO3XqFP7pn/4JUkps27aN7+eLxHhj3tzcPDrm1dXVeO655yAlP89f6MYb8xHvvPMOLl68iJdeemnuA6S8G2/Me3p68MMf/hCWZWHVqlV49tlnXYyU+A47TR999BECgQBefvllfO1rX8M777yT9ZjXX38dzz77LA4fPoy2tjYkk0kXIqV8mcyYA+kb2M7OzjmOjmbDRGOeTCbx9ttv4y//8i/x13/91zh9+jTa2tpcipZm4uzZs+jo6MArr7yC5557Dm+88UbG+TfeeAPf+c538PLLL+PUqVMc50VgojF//fXX8ad/+qd4+eWXkUgkcOLECZcipXyZaMwBoK2tDefOnXMhOpoNE435W2+9hS996Uv4/ve/Dyklenp6XIqUACam09bc3Ixdu3YBADZv3owLFy5knB8YGEAikUB9fT2klHjhhRfg9XrdCJXyZKIxBwDTNPGjH/0Iv/u7vzvX4dEsmGjMvV4vfvCDH8Dv90MIgVAohOHhYTdCpRk6ffo07rvvPgDA8uXLEY1GEYvFAACdnZ0IBoMoKysbnTE9ffq0m+FSHow35gDwN3/zNygtLQUAhMNhRCIRV+Kk/JlozIF0ovL000+7ER7NgvHG3HEcnD9/Hjt37gQAHDp0CGVlZa7FSkxMp21gYADhcBgAIKWEEAKWZY2e7+7uRjAYxJEjR/Diiy/i3/7t39wKlfJkojEHgHfffRePPvoo/H6/GyFSnk1mzEfG+vr16+jq6sLatWvnPE6aubvHGkgnIgMDAznPFRYWor+/f85jpPwab8wBIBAIAAD6+/tx8uRJbNu2bc5jpPyaaMyPHj2KxsZGlJeXuxEezYLxxnxoaAh+vx9vvvkmXnzxxTFXwtHc4R7TSfjggw/w4YcfZhxraWnJ+FoplfV1V1cXvvvd78IwDHzve9/Dli1bUFtbO+vx0sxNZ8zb29tx5coVfP3rX8eZM2dmPUbKr+mM+Yj29nb88Ic/xJ/8yZ9A1/m2uhiMNdYTnaOFK9e4Dg4O4m//9m9x6NAhhEIhF6Ki2XT3mEciEfzXf/0XXnzxRfT19bkYFc2me//O+/r68MUvfhEVFRX4/ve/j2PHjmH79u0uRUe8g5qE/fv3Y//+/RnHjhw5MvqJi2VZUEpl3JAWFRWhtrZ29D9kDQ0NuHHjBhPTBWI6Y37s2DH09PTgL/7iLxCLxTA0NIQf//jH+MpXvjKnsdP0TGfMAaC3txd/93d/hz/+4z/GypUr5ypcyrPi4uKMmZP+/n4UFxfnPNfX14eSkpI5j5Hya7wxB4BYLIbDhw/jmWeeQVNTkxshUp6NN+bNzc0YGhrCX/3VX8E0TXR2duLNN9/Et771LZeipXwYb8xDoRDKyspQVVUFIL1l58aNG0xMXcSlvNPU1NSETz75BADw+eefY+PGjRnnKyoqEI/HEYlE4DgOWltbUVNT40aolCcTjfnBgwfxgx/8AK+88goOHTqE7du3Myld4CYacwB47bXXcOjQIdTX1891eJRHd4/1lStXUFxcPLpMe+T9vKurC7Zt49ixY9iyZYub4VIejDfmQHqv4cGDB7F161a3QqQ8G2/M9+zZg7//+7/HK6+8gj/7sz/DqlWrmJQuAuONuaZpqKysRHt7++h53qu7SyiuSZoWx3Hw2muvob29HR6PB88//zzKysrw3nvvobGxEevWrUNLSwveeOMNCCHQ1NSEr3/9626HTTMwmTEfcebMGRw9epTtYha4icY8GAziz//8zzNKzz/xxBOjhRRoYXn77bdx7tw5CCHwh3/4h7h27RoCgQB27dqFs2fP4u233wYA7N69G1/+8pddjpbyYawxb2pqwre//e2M9/UHH3wQBw4ccDFayofx/s5HdHV14dVXX2W7mEVivDHv6OjAkSNHoJTCihUrcOjQIbaFchETUyIiIiIiInIVPxIgIiIiIiIiVzExJSIiIiIiIlcxMSUiIiIiIiJXMTElIiIiIiIiVzExJSIiIiIiIlcxMSUiIiIiIiJXMTElIiIiIiIiVzExJSIiIiIiIlf9fyKh9+Uw3oG6AAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#### GRÁFICAR LOS DATOS JUNTO A LOS RESULTADOS ####\n",
        "# Se aplica la reducción de dimensionalidad a los datos\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "modelo_pca = PCA(n_components = 2)\n",
        "modelo_pca.fit(X)\n",
        "pca = modelo_pca.transform(X)\n",
        "\n",
        "#Se aplica la reducción de dimensionalidad a los centroides\n",
        "centroides_pca = modelo_pca.transform(centroides)\n",
        "\n",
        "#Se define los colores de cada clúster\n",
        "colores = ['blue', 'red', 'green', 'orange','pink','black','brown','yellow']\n",
        "\n",
        "#Se asignan los colores a cada clústeres\n",
        "colores_cluster = [colores[etiquetas[i]] for i in range(len(pca))]\n",
        "\n",
        "#Se gráfica los componentes PCA\n",
        "plt.scatter(pca[:, 0], pca[:, 1], c = colores_cluster,\n",
        "            marker = 'o', alpha = 0.4)\n",
        "\n",
        "#Se gráfican los centroides\n",
        "plt.scatter(centroides_pca[:, 0], centroides_pca[:, 1],\n",
        "           marker = 'x', s = 100, linewidths = 3, c = colores)\n",
        "\n",
        "#Se guardan los datos en una variable para que sea fácil escribir el código\n",
        "xvector = modelo_pca.components_[0] * max(pca[:,0])\n",
        "yvector = modelo_pca.components_[1] * max(pca[:,1])\n",
        "columnas = Estudiantes.columns\n",
        "\n",
        "#Se grafican los nombres de los clústeres con la distancia del vector\n",
        "for i in range (len(columnas)):\n",
        "    #Se gráfican los vectores\n",
        "    plt.arrow(0, 0, xvector[i], yvector[i], color = 'black',\n",
        "             width = 0.0005, head_width = 0.02, alpha = 0.75)\n",
        "    \n",
        "    #Se colocan los nombres\n",
        "    plt.text(xvector[i], yvector[i], list(columnas)[i], color='black',\n",
        "            alpha=0.75)\n",
        "    \n",
        "    plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 115,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZbaoHco8LqeE",
        "outputId": "54a12974-85ae-4e8c-fe67-efd6ed5321d5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "cluster 1: 8924\n",
            "cluster 2: 9647\n",
            "cluster 3: 8559\n",
            "cluster 4: 6459\n",
            "cluster 5: 8559\n",
            "cluster 6: 2680\n",
            "cluster 7: 9143\n",
            "cluster 8: 2486\n"
          ]
        }
      ],
      "source": [
        "#Usuarios que estan cerca de los centroides\n",
        "\n",
        "closest, _ = pairwise_distances_argmin_min(kmeans.cluster_centers_, X)\n",
        "print(\"cluster 1:\",closest[0])\n",
        "print(\"cluster 2:\",closest[1])\n",
        "print(\"cluster 3:\",closest[2])\n",
        "print(\"cluster 4:\",closest[3])\n",
        "print(\"cluster 5:\",closest[4])\n",
        "print(\"cluster 6:\",closest[5])\n",
        "print(\"cluster 7:\",closest[6])\n",
        "print(\"cluster 8:\",closest[7])\n",
        "\n",
        "\n",
        "#Muestra la posición de array de los usuarios"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XFWJXwt5eqXA"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 116,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HVgobnTNNMIS",
        "outputId": "d284c38a-381c-4dff-d942-0699a2f91a23"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Escalado con scale:\n",
            "Escala 1 [ 0.61124505  0.68138369  0.74131656 -1.01379468  0.81639446  0.81943949\n",
            "  0.78894244 -0.97456601  0.81703545  0.82513021  0.81006384 -0.96919046\n",
            " -0.97088554 -0.98105997 -0.97596175  0.82709189] \n",
            "\n",
            "Escala 2 [ 0.70983282  0.77880278  0.83842993  0.87451313 -0.98452377 -0.97854167\n",
            " -1.00924658  0.92222276 -0.98071289  0.92250042 -0.98554391 -0.96919046\n",
            " -0.97088554  0.91154811  0.91372265  0.92462409] \n",
            "\n",
            "Escala 3 [-1.21133057 -1.11958682  0.83842993  0.87451313 -0.98452377  0.91669688\n",
            " -1.00924658  0.92222276  0.91428025  0.92250042 -0.98554391  0.92857108\n",
            " -0.97088554  0.91154811 -0.97596175  0.92462409] \n",
            "\n",
            "Escala 4 [ 0.45244573  0.5244668   0.58489212  0.62152785 -0.98452377  0.66278306\n",
            "  0.6322679   0.66810125  0.66039931 -0.97493657  0.65361421  0.67431924\n",
            " -0.97088554  0.6579867  -0.97596175  0.66999283] \n",
            "\n",
            "Escala 5 [ 0.5264271  -1.11958682  0.65776708  0.694244   -0.98452377 -0.97854167\n",
            "  0.70525938  0.74114398  0.7333729   0.74135976  0.72650091  0.74739944\n",
            " -0.97088554  0.73086845 -0.97596175  0.74318208] \n",
            "\n",
            "Escala 6 [ 0.82637092 -1.11958682 -1.05400205  0.9890582  -0.98452377  1.03166238\n",
            "  1.00118986  1.03728229 -0.98071289  1.03759927  1.02200659 -0.96919046\n",
            " -0.97088554 -0.98105997  1.02835123 -0.97596948] \n",
            "\n",
            "Escala 7 [-1.21133057  1.03298466  1.09181412 -1.01379468 -0.98452377  1.17045685\n",
            "  1.14000038  1.17619029 -0.98071289 -0.97493657 -0.98554391 -0.96919046\n",
            " -0.97088554 -0.98105997  1.16673895  1.17910106] \n",
            "\n",
            "Escala 8 [ 0.70983282  0.77880278  0.83842993 -1.01379468  0.91381072  0.91669688\n",
            " -1.00924658 -0.97456601 -0.98071289  0.92250042  0.90719285 -0.96919046\n",
            "  0.9258709   0.91154811 -0.97596175 -0.97596948] \n",
            "\n",
            "\n",
            "Escalado con Min-Max:\n",
            "Escala 1 [0.4472136  0.4472136  0.54772256 0.         0.4472136  0.31622777\n",
            " 0.4472136  0.         0.4472136  0.54772256 0.4472136  0.\n",
            " 0.         0.         0.         0.54772256] \n",
            "\n",
            "Escala 2 [0.47140452 0.47140452 0.57735027 0.57735027 0.         0.\n",
            " 0.         0.47140452 0.         0.57735027 0.         0.\n",
            " 0.         0.47140452 0.33333333 0.57735027] \n",
            "\n",
            "Escala 3 [0.         0.         0.57735027 0.57735027 0.         0.33333333\n",
            " 0.         0.47140452 0.47140452 0.57735027 0.         0.47140452\n",
            " 0.         0.47140452 0.         0.57735027] \n",
            "\n",
            "Escala 4 [0.40824829 0.40824829 0.5        0.5        0.         0.28867513\n",
            " 0.40824829 0.40824829 0.40824829 0.         0.40824829 0.40824829\n",
            " 0.         0.40824829 0.         0.5       ] \n",
            "\n",
            "Escala 5 [0.42640143 0.         0.52223297 0.52223297 0.         0.\n",
            " 0.42640143 0.42640143 0.42640143 0.52223297 0.42640143 0.42640143\n",
            " 0.         0.42640143 0.         0.52223297] \n",
            "\n",
            "Escala 6 [0.5        0.         0.         0.61237244 0.         0.35355339\n",
            " 0.5        0.5        0.         0.61237244 0.5        0.\n",
            " 0.         0.         0.35355339 0.        ] \n",
            "\n",
            "Escala 7 [0.         0.53452248 0.65465367 0.         0.         0.37796447\n",
            " 0.53452248 0.53452248 0.         0.         0.         0.\n",
            " 0.         0.         0.37796447 0.65465367] \n",
            "\n",
            "Escala 8 [0.47140452 0.47140452 0.57735027 0.         0.47140452 0.33333333\n",
            " 0.         0.         0.         0.57735027 0.47140452 0.\n",
            " 0.57735027 0.47140452 0.         0.        ] \n",
            "\n"
          ]
        }
      ],
      "source": [
        "from sklearn.cluster import KMeans\n",
        "\n",
        "# Por defecto usa la distancia euclidea\n",
        "km = KMeans(\n",
        "    n_clusters=8, init='random',\n",
        "    n_init=10, random_state=0\n",
        ")\n",
        "\n",
        "# Para definir una métrica de distancia diferente usar el módulo KMeansClusterer\n",
        "# kclusterer = KMeansClusterer(NUM_CLUSTERS, distance=nltk.cluster.util.cosine_distance, repeats=25)\n",
        "\n",
        "# Importamos dos módulos para escalado, existen más\n",
        "# scale: Center to the mean and component wise scale to unit variance\n",
        "# MinMaxScaler: \n",
        "from sklearn.preprocessing import scale, MinMaxScaler\n",
        "\n",
        "# scale\n",
        "scaled_1 = scale(data_escalada.data)\n",
        "\n",
        "# MinMaxScaler\n",
        "scaler = MinMaxScaler()\n",
        "scaled_2 = scaler.fit_transform(data_escalada.data)\n",
        "\n",
        "# Muestro las primeras 5 filas escaladas con scale\n",
        "print(\"Escalado con scale:\")\n",
        "print(\"Escala 1\",scaled_1[0],\"\\n\")\n",
        "print(\"Escala 2\",scaled_1[1],\"\\n\")\n",
        "print(\"Escala 3\",scaled_1[2],\"\\n\")\n",
        "print(\"Escala 4\",scaled_1[3],\"\\n\")\n",
        "print(\"Escala 5\",scaled_1[4],\"\\n\")\n",
        "print(\"Escala 6\",scaled_1[5],\"\\n\")\n",
        "print(\"Escala 7\",scaled_1[6],\"\\n\")\n",
        "print(\"Escala 8\",scaled_1[7],\"\\n\")\n",
        "#print(scaled_1[1])\n",
        "\n",
        "# Muestro las primeras 5 filas escaladas con Min-Max\n",
        "print(\"\\nEscalado con Min-Max:\")\n",
        "print(\"Escala 1\",scaled_2[0],\"\\n\")\n",
        "print(\"Escala 2\",scaled_2[1],\"\\n\")\n",
        "print(\"Escala 3\",scaled_2[2],\"\\n\")\n",
        "print(\"Escala 4\",scaled_2[3],\"\\n\")\n",
        "print(\"Escala 5\",scaled_2[4],\"\\n\")\n",
        "print(\"Escala 6\",scaled_2[5],\"\\n\")\n",
        "print(\"Escala 7\",scaled_2[6],\"\\n\")\n",
        "print(\"Escala 8\",scaled_2[7],\"\\n\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 117,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mM0YcJv5R15u",
        "outputId": "140fe9cc-0ee4-463f-80ee-2619d98db16a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0 3 3 ... 4 6 0]\n",
            "For n_clusters =2 silhouette score is 0.06231937099594141\n",
            "For n_clusters =3 silhouette score is 0.04099578642019657\n",
            "For n_clusters =4 silhouette score is 0.05143640974731444\n",
            "For n_clusters =5 silhouette score is 0.05019632697581124\n"
          ]
        }
      ],
      "source": [
        "#el método fit_predict pasando como parámetro el dataset. Éste método realiza el fit y el predict en el mismo momento.\n",
        "\n",
        "y_km = km.fit_predict(scaled_1)\n",
        "\n",
        "#Esto da como resultado un array con el número de clúster (empieza en 0!) al que pertenece cada observación.\n",
        "print(y_km)\n",
        "\n",
        "\n",
        "#el Índice de Silueta, como vimos en la clase teórica, indica si existen o no, estructuras en los datos.\n",
        "from sklearn.metrics import silhouette_score\n",
        "\n",
        "list_k = list(range(2, 6))\n",
        "for n_clusters in list_k:\n",
        "    clusterer = KMeans(n_clusters=n_clusters)\n",
        "    preds = clusterer.fit_predict(scaled_1)\n",
        "    centers = clusterer.cluster_centers_\n",
        "\n",
        "    score = silhouette_score (scaled_1, preds)\n",
        "    print (\"For n_clusters =\" + str(n_clusters) + \" silhouette score is \" + str(score))\n",
        "    \n",
        "    # índice de silueta para 2<=k<=4:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 118,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 574
        },
        "id": "ICi-SaD1SG7w",
        "outputId": "bca1703f-39e9-4115-d2d9-1658ad7e62d5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "SilhouetteVisualizer(ax=<matplotlib.axes._subplots.AxesSubplot object at 0x7f374d8e1790>,\n",
              "                     colors='yellowbrick', estimator=KMeans(random_state=0))"
            ]
          },
          "metadata": {},
          "execution_count": 118
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "## Visualización de los datos\n",
        "# Y podemos graficar el gráfico de silueta, por ejemplo, para k=8:\n",
        "\n",
        "from yellowbrick.cluster import SilhouetteVisualizer\n",
        "\n",
        "# Genero un modelo con K=8\n",
        "model = KMeans(8, random_state=0)\n",
        "\n",
        "# Ploteo el gráfico de silueta\n",
        "visualizer = SilhouetteVisualizer(model, colors='yellowbrick')    # Instancio el visualizador\n",
        "\n",
        "visualizer.fit(scaled_1)  "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 119,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0G5CIQyvSUYx",
        "outputId": "6159a147-1ab4-483e-a03a-32f6ca51e599"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ejemplo 0 cluster 6\n",
            "Ejemplo 1 cluster 5\n",
            "Ejemplo 2 cluster 3\n",
            "Ejemplo 3 cluster 6\n",
            "Ejemplo 4 cluster 7\n",
            "Ejemplo 5 cluster 4\n",
            "Ejemplo 6 cluster 6\n",
            "Ejemplo 7 cluster 6\n",
            "Ejemplo 8 cluster 6\n",
            "Ejemplo 9 cluster 1\n",
            "Ejemplo 10 cluster 0\n",
            "Ejemplo 11 cluster 3\n",
            "Ejemplo 12 cluster 6\n",
            "Ejemplo 13 cluster 2\n",
            "Ejemplo 14 cluster 5\n",
            "Ejemplo 15 cluster 6\n",
            "Ejemplo 16 cluster 0\n",
            "Ejemplo 17 cluster 5\n",
            "Ejemplo 18 cluster 7\n",
            "Ejemplo 19 cluster 5\n",
            "Ejemplo 20 cluster 4\n",
            "Ejemplo 21 cluster 2\n",
            "Ejemplo 12 cluster 4\n",
            "Ejemplo 23 cluster 3\n",
            "Ejemplo 24 cluster 0\n",
            "Ejemplo 25 cluster 1\n",
            "Ejemplo 26 cluster 5\n",
            "Ejemplo 27 cluster 4\n",
            "Ejemplo 18 cluster 1\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(None, None)"
            ]
          },
          "metadata": {},
          "execution_count": 119
        }
      ],
      "source": [
        "#Utilizando el modelo para agrupar instancias nuevas\n",
        "#A partir del modelo generado, podríamos darle un nuevo caso y agruparlo en uno de los clusters generados:\n",
        "#\n",
        "\n",
        "# Elijo tres ejemplos a agrupar\n",
        "ejemplos=[]\n",
        "ejemplos.append(scaled_1[0,:]),  print(\"Ejemplo 0\"  + \" cluster \" + str(model.predict(ejemplos)[0]))\n",
        "ejemplos.append(scaled_1[1,:]),  print(\"Ejemplo 1\"  + \" cluster \" + str(model.predict(ejemplos)[1]))\n",
        "ejemplos.append(scaled_1[2,:]),  print(\"Ejemplo 2\"  + \" cluster \" + str(model.predict(ejemplos)[2]))\n",
        "ejemplos.append(scaled_1[3,:]),  print(\"Ejemplo 3\"  + \" cluster \" + str(model.predict(ejemplos)[3]))\n",
        "ejemplos.append(scaled_1[4,:]),  print(\"Ejemplo 4\"  + \" cluster \" + str(model.predict(ejemplos)[4]))\n",
        "ejemplos.append(scaled_1[5,:]),  print(\"Ejemplo 5\"  + \" cluster \" + str(model.predict(ejemplos)[5]))\n",
        "ejemplos.append(scaled_1[6,:]),  print(\"Ejemplo 6\"  + \" cluster \" + str(model.predict(ejemplos)[6]))\n",
        "ejemplos.append(scaled_1[7,:]),  print(\"Ejemplo 7\"  + \" cluster \" + str(model.predict(ejemplos)[7]))\n",
        "ejemplos.append(scaled_1[8,:]),  print(\"Ejemplo 8\"  + \" cluster \" + str(model.predict(ejemplos)[8]))\n",
        "ejemplos.append(scaled_1[9,:]),  print(\"Ejemplo 9\"  + \" cluster \" + str(model.predict(ejemplos)[9]))\n",
        "ejemplos.append(scaled_1[10,:]), print(\"Ejemplo 10\" + \" cluster \" + str(model.predict(ejemplos)[10]))\n",
        "ejemplos.append(scaled_1[11,:]), print(\"Ejemplo 11\" + \" cluster \" + str(model.predict(ejemplos)[11]))\n",
        "ejemplos.append(scaled_1[12,:]), print(\"Ejemplo 12\" + \" cluster \" + str(model.predict(ejemplos)[12]))\n",
        "ejemplos.append(scaled_1[13,:]), print(\"Ejemplo 13\" + \" cluster \" + str(model.predict(ejemplos)[13]))\n",
        "ejemplos.append(scaled_1[14,:]), print(\"Ejemplo 14\" + \" cluster \" + str(model.predict(ejemplos)[14]))\n",
        "ejemplos.append(scaled_1[15,:]), print(\"Ejemplo 15\" + \" cluster \" + str(model.predict(ejemplos)[15]))\n",
        "ejemplos.append(scaled_1[16,:]), print(\"Ejemplo 16\" + \" cluster \" + str(model.predict(ejemplos)[16]))\n",
        "ejemplos.append(scaled_1[17,:]), print(\"Ejemplo 17\" + \" cluster \" + str(model.predict(ejemplos)[17]))\n",
        "ejemplos.append(scaled_1[18,:]), print(\"Ejemplo 18\" + \" cluster \" + str(model.predict(ejemplos)[18]))\n",
        "ejemplos.append(scaled_1[19,:]), print(\"Ejemplo 19\" + \" cluster \" + str(model.predict(ejemplos)[19]))\n",
        "ejemplos.append(scaled_1[20,:]), print(\"Ejemplo 20\" + \" cluster \" + str(model.predict(ejemplos)[20]))\n",
        "ejemplos.append(scaled_1[21,:]), print(\"Ejemplo 21\" + \" cluster \" + str(model.predict(ejemplos)[21]))\n",
        "ejemplos.append(scaled_1[22,:]), print(\"Ejemplo 12\" + \" cluster \" + str(model.predict(ejemplos)[22]))\n",
        "ejemplos.append(scaled_1[23,:]), print(\"Ejemplo 23\" + \" cluster \" + str(model.predict(ejemplos)[23]))\n",
        "ejemplos.append(scaled_1[24,:]), print(\"Ejemplo 24\" + \" cluster \" + str(model.predict(ejemplos)[24]))\n",
        "ejemplos.append(scaled_1[25,:]), print(\"Ejemplo 25\" + \" cluster \" + str(model.predict(ejemplos)[25]))\n",
        "ejemplos.append(scaled_1[26,:]), print(\"Ejemplo 26\" + \" cluster \" + str(model.predict(ejemplos)[26]))\n",
        "ejemplos.append(scaled_1[27,:]), print(\"Ejemplo 27\" + \" cluster \" + str(model.predict(ejemplos)[27]))\n",
        "ejemplos.append(scaled_1[28,:]), print(\"Ejemplo 18\" + \" cluster \" + str(model.predict(ejemplos)[28]))\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 120,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "naVzCJDVUb15",
        "outputId": "6d3d7dbd-f576-4165-81d5-e3814dd30427"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<mpl_toolkits.mplot3d.art3d.Path3DCollection at 0x7f374d8e7dd0>"
            ]
          },
          "metadata": {},
          "execution_count": 120
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Ahora se realizará la representación de la grafica 3D con colores para los grupos y se observará si se diferencian\n",
        "\n",
        "#Predicción de los clusters\n",
        "labels = kmeans.predict(X)\n",
        "\n",
        "#Obtención de los centros de los clusters\n",
        "C = kmeans.cluster_centers_\n",
        "colores = ['blue', 'red', 'green', 'orange','pink','black','brown','yellow']\n",
        "asignar=[]\n",
        "for row in labels:\n",
        "    asignar.append(colores[row])\n",
        " \n",
        "#Se grafican los nombres de los clústeres con la distancia del vector\n",
        "for i in range (len(columnas)):\n",
        "    #Se gráfican los vectores\n",
        "    plt.arrow(0, 0, xvector[i], yvector[i], color = 'black',\n",
        "             width = 0.0005, head_width = 0.02, alpha = 0.75)\n",
        "    \n",
        "    #Se colocan los nombres\n",
        "    plt.text(xvector[i], yvector[i], list(columnas)[i], color='black',\n",
        "            alpha=0.75)   \n",
        "\n",
        "fig = plt.figure()\n",
        "ax = Axes3D(fig)\n",
        "ax.scatter(X[:, 0], X[:, 1], X[:, 2], c=asignar, s=60)\n",
        "ax.scatter(C[:, 0], C[:, 1], C[:, 2], marker='*', c=colores, s=1000)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 121,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "ur8HUHxIUj_U",
        "outputId": "df91a3cc-dadf-4d75-f7de-7758ba3a37f5"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x504 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Ahora vamos a graficar los clústeres, utilizamos Matplotlib. La mejor forma de ver como se comportan los datos es con un gráfico de dispersión (scatter).\n",
        "#colores = ['blue', 'red', 'green', 'orange','pink','black','brown','yellow','gray']\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "#configuro el tamaño del grafico final\n",
        "plt.figure(figsize=(10,7))\n",
        "\n",
        "#scatter del primer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 0, 0], scaled_1[y_km == 0, 1],\n",
        "    s=50, c='BLUE',\n",
        "    marker='s', edgecolor='black',\n",
        "    label='cluster 0'\n",
        ")\n",
        "#scatter del segundo cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 1, 0], scaled_1[y_km == 1, 1],\n",
        "    s=50, c='RED',\n",
        "    marker='o', edgecolor='black',\n",
        "    label='cluster 1'\n",
        ")\n",
        "#scatter del tercer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 2, 0], scaled_1[y_km == 2, 1],\n",
        "    s=50, c='GREEN',\n",
        "    marker='v', edgecolor='black',\n",
        "    label='cluster 2'\n",
        ")\n",
        "    #scatter del tercer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 3, 0], scaled_1[y_km == 3, 1],\n",
        "    s=50, c='PINK',\n",
        "    marker='o', edgecolor='black',\n",
        "    label='cluster 3'\n",
        ") \n",
        "\n",
        " #scatter del tercer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 3, 0], scaled_1[y_km == 3, 1],\n",
        "    s=50, c='ORANGE',\n",
        "    marker='o', edgecolor='black',\n",
        "    label='cluster 3'\n",
        ") \n",
        "\n",
        " #scatter del tercer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 3, 0], scaled_1[y_km == 3, 1],\n",
        "    s=50, c='BLACK',\n",
        "    marker='o', edgecolor='PINK',\n",
        "    label='cluster 4'\n",
        ") \n",
        "\n",
        " #scatter del tercer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 3, 0], scaled_1[y_km == 3, 1],\n",
        "    s=50, c='BROWN',\n",
        "    marker='o', edgecolor='black',\n",
        "    label='cluster 5'\n",
        ") \n",
        "\n",
        " #scatter del tercer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 3, 0], scaled_1[y_km == 3, 1],\n",
        "    s=50, c='YELLOW',\n",
        "    marker='o', edgecolor='black',\n",
        "    label='cluster 6'\n",
        ") \n",
        "\n",
        " #scatter del tercer cluster\n",
        "plt.scatter(\n",
        "    scaled_1[y_km == 3, 0], scaled_1[y_km == 3, 1],\n",
        "    s=50, c='GRAY',\n",
        "    marker='o', edgecolor='black',\n",
        "    label='cluster 7'\n",
        ") \n",
        "\n",
        "\n",
        "\n",
        "\n",
        "#scatter del los centroides\n",
        "plt.scatter(\n",
        "    km.cluster_centers_[:, 0], km.cluster_centers_[:, 1],\n",
        "    s=250, marker='*',\n",
        "    c='cyan', edgecolor='black',\n",
        "    label='centroides'\n",
        "    \n",
        ")\n",
        "#le pongo la leyenda\n",
        "plt.legend(scatterpoints=1)\n",
        "#hace una grilla en el grafico\n",
        "plt.grid()\n",
        "#lo imprime en pantalla\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 122,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qZtOmyU-Uvjm",
        "outputId": "3dcb1ed1-8fbc-4fb0-ee32-414c0b5bd477"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Clúster 0 \n",
            " [ 2.04198104e-01  1.96714795e-01  3.46110075e-01  3.46110075e-01\n",
            "  1.70928675e-01  1.63856641e-01  1.70963770e-01  1.71792457e-01\n",
            "  1.65234246e-01  1.65396404e-01  1.65268814e-01  1.64368859e-01\n",
            "  1.65073584e-01 -8.04911693e-16  1.68214971e-01  1.62707981e-01] \n",
            "\n",
            "Clúster 1 \n",
            " [ 2.00184924e-01  2.08066341e-01 -1.27675648e-15  3.70096343e-01\n",
            "  1.79655964e-01  1.70222437e-01  1.91891003e-01  1.86174646e-01\n",
            "  1.78801819e-01  1.76193438e-01  1.85548204e-01  1.69879505e-01\n",
            "  1.74763026e-01 -3.05311332e-16  1.77106368e-01  1.81146659e-01] \n",
            "\n",
            "Clúster 2 \n",
            " [2.07689015e-01 1.82790596e-01 3.47559243e-01 1.72802035e-01\n",
            " 1.66683981e-01 1.63774781e-01 1.63879862e-01 1.70490796e-01\n",
            " 1.67013914e-01 1.61157304e-01 1.72674868e-01 1.16573418e-15\n",
            " 1.64684111e-01 3.47559243e-01 1.63320581e-01 1.61244775e-01] \n",
            "\n",
            "Clúster 3 \n",
            " [ 2.32978840e-01  2.17127507e-01 -1.24900090e-15  2.55351296e-15\n",
            "  1.89440510e-01  2.00066120e-01  2.03069669e-01  1.80228559e-01\n",
            "  1.96648900e-01  1.91495041e-01  1.99654255e-01  1.83538245e-01\n",
            "  1.92812142e-01  7.19126368e-04  1.94815473e-01  1.86668336e-01] \n",
            "\n",
            "Clúster 4 \n",
            " [ 2.22862076e-01  2.04921899e-01  3.69636978e-01  2.99760217e-15\n",
            "  1.81029545e-01  1.76912135e-01  1.84537737e-01  1.68709038e-01\n",
            "  1.79891110e-01  1.69531127e-01  1.71989817e-01  1.79234458e-01\n",
            "  1.83060938e-01 -4.71844785e-16  1.78699775e-01  1.76810975e-01] \n",
            "\n",
            "Clúster 5 \n",
            " [2.02699051e-01 1.82507621e-01 1.83520113e-01 2.74780199e-15\n",
            " 1.60954606e-01 1.65884155e-01 1.71250649e-01 1.70222636e-01\n",
            " 1.68468559e-01 1.68207862e-01 1.69539391e-01 3.45859198e-01\n",
            " 1.61049279e-01 3.43835001e-01 1.67359911e-01 1.69698611e-01] \n",
            "\n",
            "Clúster 6 \n",
            " [ 2.13553854e-01  2.01495828e-01 -1.24900090e-15  1.81443632e-01\n",
            "  1.74409237e-01  1.83991941e-01  1.80965633e-01  1.70656023e-01\n",
            "  1.79575101e-01  1.82823330e-01  1.73104197e-01  2.22011083e-04\n",
            "  1.75831790e-01  3.68602002e-01  1.80612322e-01  1.86229428e-01] \n",
            "\n",
            "Clúster 7 \n",
            " [0.19956943 0.18236366 0.1641766  0.32897493 0.16205974 0.15687313\n",
            " 0.15825087 0.15337445 0.14861602 0.15976843 0.15462654 0.32897493\n",
            " 0.15100536 0.32646922 0.15104201 0.14964517] \n",
            "\n"
          ]
        }
      ],
      "source": [
        "#EJECUTAR K-Means Se ejecuta el algoritmo para 4 clusters y obtener etiquetas de los centroides\n",
        "\n",
        "kmeans = KMeans(n_clusters=8).fit(X)\n",
        "centroids = kmeans.cluster_centers_\n",
        "print(\"Clúster 0\",\"\\n\",centroids[0],\"\\n\")\n",
        "print(\"Clúster 1\",\"\\n\",centroids[1],\"\\n\")\n",
        "print(\"Clúster 2\",\"\\n\",centroids[2],\"\\n\")\n",
        "print(\"Clúster 3\",\"\\n\",centroids[3],\"\\n\")\n",
        "print(\"Clúster 4\",\"\\n\",centroids[4],\"\\n\")\n",
        "print(\"Clúster 5\",\"\\n\",centroids[5],\"\\n\")\n",
        "print(\"Clúster 6\",\"\\n\",centroids[6],\"\\n\")\n",
        "print(\"Clúster 7\",\"\\n\",centroids[7],\"\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 123,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 571
        },
        "id": "6IHHwPOQX53p",
        "outputId": "3a2d6f1b-40a0-43fc-e2a5-081bf0d19054"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
n",
            "0  3  3  3  3  5  1  0  2  2  2   4   2   2   3   2   7   1   3   5   6   2   5   3   0   4   7   5   0   1   7   3   4   3   2   3   6   3   5   7   6   0   0   0   3   0   6   6   7   3   0   2   2   6   5   2   3   6   2   7   0   6   7   0   7   6   1   2   3   2   1   0   6   6   1   4   2   1   1   7   4   6   4   2   2   4   7   0   0   7   0   2   0   2   6   1   7   6   6   6   7    1    2    3    2    4    0    0    2    6    0    2    7    0    5    1    5    0    3    3    2    7    0    6    1    1    5    3    1    7    7    6    7    3    4    0    7    6    0    3    7    0    0    6    0    4    2    7    0    2    0    5    6    0    6    6    0    2    7    6    7    7    2    6    2    2    4    4    2    0    3    2    0    6    2    0    6    3    3    6    2    1    6    1    6    0    4    3    5    6    5    0    5    1    4    0    1    3    3    3    3    3    2    5    4    6    0    1    3    6    0    0    7    6    0    0    6    6    7    3    3    7    1    5    7    5    0    7    3    1    5    1    3    2    0    6    1    6    0    6    1    3    5    2    1    4    3    0    2    6    0    1    6    3    0    6    3    2    7    2    6    4    1    6    6    3    1    3    2    3    1    7    5    7    2    5    2    3    1    4    7    7    4    5    0    2    2    5    7    3    6    7    5    0    0    7    6    2    6    7    4    5    5    6    4    0    1    2    0    1    5    0    2    1    3    2    4    4    5    3    0    3    6    4    1    6    0    3    3    7    2    6    1    1    5    2    1    0    3    0    6    5    2    6    1    4    0    0    1    0    7    2    1    1    0    7    2    6    6    7    1    4    1    5    2    4    3    1    3    2    3    0    3    2    1    7    1    0    2    3    7    0    0    4    2    1    4    2    3    1    4    3    3    6    4    7    4    5    1    2    1    3    2    7    5    3    4    3    7    1    2    7    0    4    0    5    5    5    4    1    3    7    3    3    3    3    0    3    1    4    6    1    3    6    2    4    3    0    2    3    1    5    7    7    5    7    6    6    2    1    5    7    3    3    7    2    2    5    5    3    5    1    1    1    5    1    3    7    3    0    4    0    4    1    1    5    2    6    7    0    1    0    5    3    5    4    7    7    1    5    5    2    1    2    2    0    7    1    0    7    1    3    7    4    3    3    4    0    1    0    2    3    2    3    0    5    1    0    2    2    6    0    1    4    2    5    7    6    7    0    7    2    3    6    7    2    1    1    2    2    0    7    3    0    1    4    3    4    1    6    4    2    5    5    1    5    2    2    5    7    6    2    1    1    6    1    2    7    4    0    5    0    5    0    5    3    3    0    7    1    2    1    1    0    3    6    0    2    7    2    2    7    5    2    0    1    4    2    7    7    6    0    4    0    0    2    7    2    2    6    3    7    5    2    0    0    5    2    5    0    3    3    1    4    7    0    1    4    1    1    4    3    4    0    0    0    1    4    6    4    3    1    1    0    7    2    2    1    4    3    4    4    5    4    3    5    0    0    7    4    7    7    5    4    3    2    0    3    1    0    0    0    7    5    4    5    6    0    1    3    4    6    4    3    2    1    4    1    6    4    0    6    7    3    4    7    6    1    1    0    3    2    0    6    0    1    3    3    0    5    3    4    4    7    1    3    4    1    1    2    1    4    3    7    0    4    3    0    7    3    3    4    6    3    1    6    0    3    6    7    2    3    3    6    1    6    0    2    2    0    1    6    6    2    0    4    6    6    0    4    5    2    7    7    2    2    3    0    4    2    1    4    3    7    2    2    0    7    2    0    6    1    5    5    2    4    6    1    2    3    6    0    4    5    4    3    3    7    7    3    0    2    1    5    3    1    7    5    2    4    1    5    7    5    2    1    3    6    7    2    3    0    6    4    4    6    3    0    7    7    4    5    1    7    3    1    4    7    7    2    6    4    0    0    4    5    6    4    0    6    0    7    0    3    3    4    0    1    0    3    5    6    5    2    6    6    1    2    6    2    1    3    1    4    7    7    4    4    1    2    3    6    2    4    6    0    5    3    1    6    2    3    0    3    1    2    2    2    7    2    2    2    5    5    2    2    3    7    7    1    2    6    5    2    7    6    1    5    5    7    7    7    1    7    2    4    7    4    3    2    5    7    6    4    6    3    5    0    4    3    2    0    4    7    7    4    2    2    7    2    4    7    3    4    3    4    6    7    7    0    3    7    7    2    2    7    3    5    7    3    5    5    3    6    6    6    3    0    5    7    3    7    0    5    4    4    0    4    0    6    0    4    1    1    1    2    7    2    6    3    0     4     0     1     4     3     4     2     7     7     5     7     3     2     6     7     6     3     1     0     0     5     5     1     4     1     7     6     0     3     2     0     5     7     3     7     1     3     0     2     3     3     3     7     0     0     7     4     3     5     4     4     0     0     4     0     5     7     5     2     2     5     0     7     2     1     0     4     0     0     6     0     6     6     7     6     6     0     0     6     6     3     1     2     2     1     1     3     3     0     2     3     7     7     7     5     7     0     2     6     5     6     7     4     3     0     0     0     3     4     5     2     1     0     1     6     2     7     7     2     6     5     0     7     5     0     0     5     6     1     5     4     3     6     2     6     0     4     2     6     0     5     1     5     2     5     1     3     2     2     7     3     1     7     7     6     5     5     7     5     3     6     6     3     2     2     0     3     7     0     0     7     0     7     6     7     3     0     4     3     0     3     0     2     0     1     7     3     5     4     0     2     3     5     6     7     2     7     2     1     0     7     3     0     1     1     0     5     4     4     0     2     2     5     4     7     0     5     0     1     5     2     4     3     1     6     7     6     3     1     2     3     4     2     3     6     1     6     5     0     2     1     3     7     0     0     1     0     2     0     2     4     3     4     7     2     6     3     0     1     4     4     7     4     5     7     3     0     5     5     5     0     6     2     0     6     3     3     6     4     6     4     0     5     4     0     0     5     1     1     2     3     0     2     1     2     0     3     1     3     2     5     1     0     0     3     5     2     7     3     7     7     7     7     4     0     3     0     2     2     1     6     5     4     2     4     6     3     7     7     7     1     3     7     3     3     6     6     3     7     1     6     4     5     4     5     2     5     0     5     4     2     5     1     2     1     1     3     1     1     1     0     4     3     4     3     0     1     5     0     7     4     3     6     5     0     5     7     3     3     1     2     4     0     7     4     0     7     7     3     1     2     3     0     0     7     1     0     5     4     5     0     1     4     7     6     1     3     6     5     1     7     0     5     0     7     7     2     6     2     7     0     4     5     1     4     7     1     4     6     0     5     1     4     2     1     1     6     3     3     1     6     7     5     5     3     2     0     0     0     2     0     3     2     1     1     4     5     3     6     6     0     0     2     2     7     0     0     4     4     7     0     4     0     2     1     2     6     0     3     0     2     2     0     7     7     1     2     2     3     6     0     3     3     3     4     1     1     0     2     1     0     7     3     3     0     5     2     3     4     3     7     4     0     1     5     0     7     2     3     1     4     0     3     7     2     3     1     7     7     2     3     7     2     1     5     7     2     0     6     4     7     0     1     6     2     4     2     1     7     4     7     1     3     5     0     4     7     7     0     2     6     0     5     1     1     6     2     2     2     4     5     2     7     7     4     2     4     1     2     3     2     0     3     1     4     4     5     3     5     0     4     6     6     4     7     5     4     1     0     0     1     0     6     4     3     0     1     3     2     1     3     6     2     4     3     2     6     6     2     7     2     2     0     2     4     3     3     5     4     4     3     5     0     2     6     2     0     7     1     7     4     0     3     7     0     3     4     0     2     1     7     0     6     0     7     7     4     1     1     6     2     0     3     6     4     2     0     0     2     1     0     4     4     6     3     3     1     0     0     1     3     7     7     5     0     3     1     6     0     4     3     7     4     3     7     0     6     7     5     5     5     6     7     3     7     7     5     6     4     7     6     7     4     1     1     0     0     1     7     3     2     2     3     0     3     1     1     7     7     2     7     0     6     1     7     1     7     4     3     2     0     1     3     0     2     3     0     7     6     2     2     0     0     6     4     2     7     0     6     7     4     0     0     4     5     7     2     4     5     2     1     7     2     7     5     7     4     7     3     7     5     1     4     0     5     7     2     0     2     1     4     7     0     6     3     2     0     5     7     4     2     7     4     1     6     7     2     4     0     5     2     1     0     1     5     2     6     5     3     0     5     4     3     1     4     6     6     6     0     1     3     4     7     6     1     0     6     1     1     3     5     0     7     3     5     7     1     6     1     6     7     3     7     0     3     4     7     7     2     7     0     7     3     2     2     2     4     4     7     5     6     6     7     0     0     2     1     4     3     4     0     2     1     5     1     3     7     3     3     4     4     0     2     3     2     5     5     4     5     3     2     4     5     7     1     2     1     3     1     3     5     1     6     0     6     6     7     4     7     0     5     6     0     2     2     5     3     1     6     4     2     7     1     7     3     4     6     0     1     1     2     2     2     1     2     0     2     1     0     5     6     2     2     2     7     1     0     4     1     5     3     1     4     4     7     1     4     2     1     0     0     3     1     7     2     7     1     2     4     6     7     0     2     0     6     6     7     6     6     5     2     3     0     2     1     4     0     1     4     2     5     7     4     6     7     1     2     5     4     4     3     6     7     5     0     6     6     7     5     7     5     1     0     2     6     2     4     4     2     6     5     3     7     7     7     3     1     2     2     1     1     4     4     4     1     0     5     0     2     5     1     6     1     7     0     1     2     4     0     6     1     0     3     6     0     2     0     7     3     0     4     5     4     0     1     3     7     2     4     6     0     2     2     7     4     1     4     0     0     7     2     4     4     7     6     2     2     3     0     6     3     6     1     0     0     3     0     4     0     7     7     3     7     1     3     3     4     3     0     0     0     7     6     3     0     4     7     6     3     2     4     1     1     0     0     4     3     7     1     0     4     1     2     3     2     3     2     4     7     0     3     0     4     5     3     7     1     0     7     5     7     2     1     0     1     0     4     0     3     7     4     3     0     4     3     4     6     5     1     3     1     4     6     5     7     1     0     4     2     1     4     1     0     5     1     1     2     3     1     5     4     7     2     6     7     5     4     5     7     0     4     1     7     3     6     1     7     1     4     2     6     7     0     3     2     0     1     0     4     3     0     4     4     2     0     5     1     3     7     3     1     3     0     3     2     3     0     7     4     5     1     7     6     3     5     3     7     2     3     0     4     6     0     0     0     3     1     3     2     2     1     1     5     5     2     2     0     3     4     2     0     0     5     7     6     2     3     0     7     5     1     5     0     1     4     3     2     4     7     2     6     2     7     5     2     1     7     0     6     0     7     4     5     5     5     5     5     7     3     1     6     7     0     2     1     4     1     7     0     3     7     4     6     2     2     0     6     7     0     0     1     5     4     4     6     0     4     7     2     3     2     4     1     5     2     2     7     0     3     1     0     6     1     4     6     1     7     7     2     1     1     1     4     5     0     7     0     7     0     1     3     7     2     3     3     0     2     6     5     3     3     7     7     2     0     7     0     7     0     6     6     6     0     3     6     0     3     7     7     6     0     1     4     5     5     1     7     7     0     1     5     7     1     6     3     0     7     5     3     1     7     1     1     4     3     6     0     5     6     6     4     6     1     6     3     6     3     2     7     4     1     3     1     7     7     7     3     4     2     2     6     3     1     3     0     2     7     0     5     4     0     2     5     7     5     1     2     1     3     7     4     7     0     3     1     3     2     2     5     2     2     7     0     3     1     2     6     1     5     3     3     1     4     7     3     4     0     2     0     6     0     3     0     0     4     0     0     1     3     7     5     5     1     2     1     4     2     2     5     7     1     0     7     3     0     5     2     1     4     1     1     4     5     6     7     0     1     0     2     5     4     4     0     1     6     4     2     4     4     1     0     3     6     0     5     1     3     7     3     4     3     6     3     1     2     7     5     2     6     2     6     7     1     6     4     0     1     4     0     2     6     4     3     7     7     1     7     5     6     6     3     3     7     7     1     1     7     0     4     3     7     6     3     2     4     1     7     2     3     2     5     1     6     4     5     1     2     1     1     6     5     2     5     0     1     3     5     7     3     7     3     3     1     2     2     4     0     2     4     0     2     3     7     5     2     5     3     5     4     7     3     2     5     3     4     1     6     0     4     1     6     2     4     0     0     0     6     1     3     1     4     0     1     0     7     7     7     0     6     5     0     6     2     7     0     7     4     1     5     5     3     3     7     7     3     1     7     3     1     1     2     2     3     0     2     4     5     3     0     0     1     2     0     2     2     3     0     5     7     0     1     7     3     0     5     5     6     6     1     2     7     4     7     5     2     3     4     0     7     6     3     2     2     0     7     3     6     4     7     3     6     2     3     4     7     5     3     5     4     5     6     2     5     6     5     1     3     0     3     1     3     5     3     0     1     4     0     0     2     7     0     1     7     0     1     0     4     6     0     6     2     0     1     5     3     3     5     0     3     0     6     6     2     5     3     6     2     0     3     1     2     7     7     6     7     6     2     2     7     7     6     5     2     5     7     0     5     5     0     4     1     6     3     5     5     1     1     4     3     4     3     3     1     3     3     0     7     4     0     2     2     0     6     5     2     0     0     7     7     0     2     0     1     2     3     3     2     6     6     4     2     1     2     3     1     6     3     4     3     1     4     1     7     6     7     4     3     0     6     2     0     6     7     2     0     3     1     4     6     0     6     4     3     1     4     7     4     2     2     0     3     4     4     6     2     6     0     5     0     2     5     7     7     4     4     7     4     1     2     3     5     6     2     5     5     5     3     1     5     1     1     5     2     3     1     7     4     0     5     4     1     1     7     4     0     7     4     4     7     5     3     0     3     2     4     6     3     6     1     4     0     0     4     5     7     0     4     0     5     2     6     0     5     0     1     3     7     2     1     3     3     4     0     2     7     1     5     7     0     0     1     0     5     6     0     4     6     0     0     3     7     2     1     1     3     0     6     2     3     4     5     7     6     7     3     2     2     4     3     6     2     6     6     3     4     7     2     7     3     4     4     0     5     0     5     7     4     3     5     7     3     0     0     2     1     2     1     7     5     5     5     4     1     0     6     1     6     4     7     4     7     6     2     3     0     4     6     1     0     1     2     0     4     3     1     7     1     1     4     2     3     6     2     3     6     5     4     1     2     7     4     2     2     3     4     4     1     6     7     7     3     0     3     6     5     4     7     7     5     2     0     1     5     1     6     1     5     1     3     5     4     1     0     1     6     7     5     4     2     7     2     1     1     7     4     6     1     3     2     6     7     4     3     3     5     5     3     7     3     5     3     2     7     5     7     7     0     3     1     1     0     5     6     1     2     7     6     0     5     6     1     1     7     7     2     0     2     2     5     3     2     5     0     5     2     0     0     1     4     4     0     2     0     3     6     3     5     3     5     2     0     4     1     5     1     2     3     1     6     1     3     5     0     2     7     1     5     6     7     0     1     4     3     2     1     3     7     4     4     4     7     6     0     0     2     0     3     7     7     1     0     3     3     3     4     1     4     6     3     4     6     6     2     2     1     6     0     2     7     4     6     5     5     2     2     3     7     6     2     4     3     3     7     2     6     2     0     1     3     3     0     5     2     1     7     5     4     6     2     7     1     7     2     4     4     1     7     2     1     2     4     4     5     7     1     2     7     2     3     6     6     6     4     0     6     2     0     6     7     0     0     5     2     1     6     4     0     1     2     0     0     4     3     7     0     2     2     5     4     4     2     4     5     2     2     4     2     7     2     2     4     2     2     4     3     3     7     3     1     3     0     1     3     2     7     4     1     6     3     4     0     3     1     3     1     2     1     5     3     4     2     0     6     0     5     0     6     6     7     4     3     0     4     6     1     6     7     0     6     5     3     7     0     0     4     7     1     0     1     0     4     6     0     1     6     0     3     1     3     0     3     3     1     5     7     1     1     2     0     3     7     6     1     4     4     2     6     5     7     0     3     7     3     5     5     2     1     3     7     1     0     6     6     1     4     0     2     7     5     5     4     3     4     6     2     6     3     5     3     7     4     5     4     5     1     5     3     5     5     3     1     3     2     5     4     4     4     7     2     6     2     6     2     0     3     4     6     2     2     4     4     0     6     2     3     7     1     3     4     0     5     6     0     3     1     3     5     1     3     7     3     2     0     2     3     3     5     6     0     4     1     4     4     2     0     1     1     4     4     6     1     3     0     5     2     5     2     4     4     1     5     3     1     7     3     0     4     2     7     1     5     2     6     2     0     7     2     6     5     1     4     5     4     1     4     0     3     5     7     6     4     1     3     6     4     4     3     0     5     5     6     3     3     3     3     0     1     3     1     6     7     1     7     4     2     3     5     3     3     6     1     7     1     5     3     2     6     1     2     7     4     2     4     4     4     0     5     0     1     4     2     6     7     1     5     3     7     3     7     7     7     1     1     3     2     0     4     5     0     3     7     4     0     4     3     3     4     0     5     2     1     1     0     1     6     2     4     6     0     0     5     3     1     5     4     1     6     1     7     0     3     1     3     7     5     2     7     0     5     3     4     7     3     7     0     4     4     7     4     4     6     7     2     7     7     1     7     4     7     7     0     7     5     7     7     1     0     4     1     4     4     5     0     2     4     2     5     3     2     2     0     1     3     4     6     1     0     3     4     5     2     7     0     0     5     0     5     7     4     7     3     4     0     3     7     7     3     6     7     0     3     2     0     3     7     6     6     7     0     2     6     4     5     5     7     4     3     0     5     3     2     6     1     7     2     7     2     5     6     7     7     1     5     2     2     0     3     7     1     7     6     1     0     4     7     4     4     7     7     2     5     1     0     2     1     5     6     3     1     1     5     1     3     1     2     0     6     7     7     4     4     6     4     6     5     1     5     4     3     3     5     3     6     4     1     3     1     5     6     2     4     4     0     5     5     2     6     6     0     7     7     0     6     1     1     3     0     2     4     7     0     1     0     1     0     2     0     0     7     4     0     5     2     7     7     7     7     1     0     3     7     1     3     6     1     6     7     5     7     5     0     6     0     4     1     1     6     7     0     6     5     0     2     2     3     6     4     1     1     2     6     6     6     0     3     2     1     6     5     0     0     7     4     0     4     2     3     6     2     7     2     6     4     1     7     0     2     2     5     5     7     2     1     0     4     4     2     0     2     1     6     0     2     2     5     2     3     2     2     2     3     0     0     0     2     3     2     2     7     7     3     5     3     3     3     5     4     3     3     5     7     4     2     2     2     1     1     7     6     7     2     7     2     4     6     4     1     1     5     1     0     6     7     2     5     3     5     7     6     1     0     4     2     3     7     0     5     6     1     2     0     5     7     7     3     1     5     3     5     3     0     2     2     2     5     7     1     3     2     5     2     5     5     6     1     6     5     1     4     4     7     3     7     4     5     6     0     1     2     0     3     2     5     0     4     2     0     3     3     7     6     7     2     3     2     3     5     1     2     4     6     5     2     0     5     1     0     0     1     4     1     6     6     3     1     2     6     7     3     7     0     6     4     6     7     7     6     3     7     5     7     1     2     0     7     1     7     4     0     0     4     2     5     2     0     5     2     7     6     2     2     0     5     2     0     0     6     4     0     6     0     5     7     5     2     1     7     1     3     2     0     6     7     1     4     3     7     7     1     7     0     5     0     7     2     2     2     4     3     5     1     7     4     3     6     2     5     7     7     2     3     3     7     3     7     2     2     3     3     7     2     1     6     2     5     2     5     0     2     5     6     2     1     3     2     0     1     2     1     5     4     6     7     0     1     0     4     3     4     5     7     0     3     6     5     6     2     0     7     7     2     7     7     2     1     5     6     3     1     4     1     4     4     6     5     2     0     1     1     0     2     0     1     7     4     3     6     4     3     4     6     3     3     7     0     1     2     7     2     7     7     1     0     7     4     3     1     5     6     2     4     6     0     2     4     7     4     0     0     0     4     2     0     3     1     0     2     6     1     2     4     2     1     0     2     5     1     7     6     4     1     2     7     7     0     1     6     1     7     7     1     6     6     2     5     1     5     1     1     2     3     7     6     3     7     5     0     2     3     2     3     0     0     1     0     3     2     0     2     0     6     2     7     4     2     7     7     7     3     2     7     6     2     5     7     0     0     6     1     7     0     7     0     6     6     5     3     4     0     2     2     0     4     7     4     7     0     7     4     6     0     6     4     2     6     4     7     1     3     6     1     3     0     6     3     6     4     5     1     3     7     2     6     2     6     0     6     7     0     6     2     0     3     7     5     1     4     6     0     0     2     2     1     3     0     1     3     7     1     1     6     5     4     6     0     1     4     3     2     7     1     0     0     6     5     1     5     2     0     6     0     7     3     0     6     7     6     2     3     6     3     3     5     4     1     3     6     3     2     2     5     4     5     5     7     0     1     1     1     4     0     2     1     5     1     4     2     1     1     5     4     5     3     3     6     6     4     7     6     0     2     3     2     4     7     3     7     7     0     7     0     0     4     2     3     5     4     5     7     3     1     2     7     3     7     3     0     4     4     3     2     5     6     5     2     1     3     3     1     1     2     0     7     4     5     2     5     0     1     2     0     7     1     0     5     2     6     2     3     0     5     5     5     1     5     6     4     6     0     3     3     1     6     2     5     7     4     2     1     7     5     3     6     0     6     7     0     0     1     1     2     0     5     4     4     7     5     1     0     1     5     7     6     6     0     7     7     6     3     4     0     4     6     0     4     3     2     2     0     1     6     6     6     3     4     6     0     7     2     3     2     0     7     0     5     4     1     2     5     7     6     1     2     7     2     1     7     5     7     1     7     6     0     4     0     3     4     5     3     7     7     7     1     0     1     5     5     0     0     1     3     4     7     0     2     4     0     6     3     7     3     6     3     1     4     6     4     4     5     6     2     4     1     4     2     4     0     2     0     7     1     2     3     4     6     2     3     5     5     6     7     7     6     1     6     6     5     3     0     5     4     3     7     2     5     0     0     2     0     2     4     7     5     5     3     7     2     4     3     3     3     0     6     4     3     0     2     3     6     7     4     4     1     2     3     0     5     1     4     6     7     2     2     6     0     4     0     0     2     4     1     5     5     0     4     2     7     6     2     3     2     3     1     2     4     0     4     1     2     6     5     6     7     3     1     6     7     2     4     5     5     2     1     5     3     4     2     2     6     0     1     6     0     0     6     5     5     4     1     3     5     1     3     2     2     5     0     4     1     1     6     7     0     4     6     5     2     5     4     5     7     0     4     1     2     4     0     4     5     4     2     3     2     1     0     7     1     7     7     2     2     3     2     4     5     1     7     1     5     2     7     5     3     3     3     4     3     1     0     2     1     4     7     3     3     5     1     7     2     0     6     1     3     0     4     4     1     4     3     6     6     5     2     3     3     2     7     7     7     2     5     7     7     4     2     1     7     6     4     3     1     2     5     2     2     1     7     7     2     0     3     5     1     6     2     4     2     0     4     1     1     4     4     1     0     2     3     3     0     5     1     7     4     3     4     5     7     0     5     2     2     7     1     2     3     7     3     0     2     6     6     0     5     2     5     0     1     0     0     5     6     0     0     3     4     4     1     6     7     3     4     5     2     2     0     4     3     4     2     4     2     3     7     6     0     2     0     0     2     7     7     4     5     1     7     4     4     0     1     2     1     4     5     6     0     4     7     4     4     5     7     2     6     0     4     5     3     4     2     6     7     2     6     4     7     0     2     5     4     3     0     2     4     3     5     1     0     4     7     7     2     6     1     0     3     5     1     6     2     1     2     4     7     1     3     3     1     4     6     0     0     5     4     0     3     7     0     2     1     2     0     6     5     4     7     6     1     2     3     3     2     2     3     2     6     0     4     5     7     2     1     1     5     2     3     0     6     5     0     6     2     3     4     0     6     2     0     6     0     3     1     3     2     5     1     3     0     3     5     6     5     4     2     6     3     4     0     2     1     1     6     1     4     0     0     7     5     7     1     7     6     5     6     2     7     7     0     1     0     4     2     0     7     3     3     0     4     2     0     5     0     3     1     6     2     7     3     0     5     6     3     6     2     2     0     0     6     5     7     2     1     4     3     1     5     6     1     6     5     1     3     5     4     6     3     6     6     4     0     3     2     5     3     6     2     5     2     4     5     6     3     3     3     3     1     3     0     7     2     4     5     1     7     4     4     7     7     4     2     6     1     6     3     3     4     4     3     2     3     1     7     4     7     5     2     0     4     0     6     1     1     5     7     7     0     0     5     1     4     5     0     2     2     4     7     4     2     6     1     3     1     2     0     4     7     5     2     2     3     1     3     6     0     7     3     1     6     3     0     6     6     2     4     2     6     3     2     7     2     1     2     6     0     6     3     3     7     0     6     4     0     6     3     6     4     2     6     2     1     0     7     2     4     2     2     5     4     0     5     7     0     5     2     0     1     0     3     2     1     5     2     7     0     0     3     0     1     0     6     2     3     4     6     5     1     2     0     3     7     4     7     2     6     0     3     0     6     3     3     6     2     2     2     0     2     5     4     6     3     7     7     3     5     5     2     5     1     1     0     7     0     5     6     3     5     2     2     5     1     4     3     3     1     0     6     5     0     6     1     0     0     4     2     3     5     7     6     4     7     7     0     5     4     2     6     0     2     2     0     3     4     7     7     2     4     1     4     0     0     2     5     4     0     3     4     4     2     5     5     1     7     7     3     2     7     3     3     5     7     4     3     3     6     4     1     1     4     0     0     6     2     6     4     0     0     1     2     5     3     5     3     4     5     5     1     3     2     2     2     4     4     5     6     1     5     2     2     6     5     7     1     2     6     0     6     3     3     1     7     5     7     2     7     2     1     1     4     0     5     1     3     2     0     7     0     7     2     1     6     1     7     7     5     4     1     3     1     4     3     1     0     2     7     0     0     6     7     3     7     5     1     1     7     5     1     3     7     1     3     2     0     5     2     0     3     5     3     7     7     3     7     6     0     1     2     7     5     5     6     2     2     7     2     1     3     1     6     2     0     6     7     4     5     1     1     3     2     0     4     0     4     7     3     4     1     4     2     3     2     0     6     0     0     5     3     5     7     4     4     6     4     2     2     2     2     3     3     7     0     7     1     7     0     6     3     4     6     3     1     6     4     7     6     2     0     4     2     4     0     0     4     2     0     3     2     7     3     2     6     5     4     6     6     1     6     6     5     0     0     7     1     3     6     1     1     7     6     0     4     2     1     2     1     4     5     1     1     6     2     4     4     0     1     1     6     7     1     4     6     1     5     6     1     1     2     5     2     6     5     5     0     7     2     4     1     6     3     7     3     2     6     3     1     2     4     1     2     3     2     2     3     7     6     4     2     6     7     0     6     7     0     1     7     0     1     2     0     2     4     6     5     2     2     6     1     0     3     4     0     2     5     1     2     3     0     2     3     5     4     2     3     6     7     3     4     7     4     3     5     3     1     3     3     3     2     1     2     3     7     0     7     3     2     7     1     2     1     2     4     5     5     7     2     1     0     0     3     3     0     4     5     2     6     7     2     3     3     2     3     3     0     0     1     3     7     0     1     0     4     5     2     2     4     4     0     3     1     5     4     0     3     7     3     0     3     1     6     5     1     5     1     1     3     4     7     4     3     6     1     4     3     2     0     2     0     7     0     5     2     0     6     6     2     1     4     5     5     7     6     1     1     4     0     6     6     3     0     3     2     6     7     0     0     7     2     3     7     5     1     7     5     7     7     2     2     4     3     0     0     1     1     2     5     6     7     1     1     5     5     4     0     3     5     2     4     0     0     2     0     2     4     0     1     0     4     3     6     1     0     6     7     0     1     2     0     0     0     3     1     6     6     7     4     3     2     1     2     2     2     6     3     7     0     3     2     1     6     0     4     2     1     1     1     1     0     7     7     2     7     4     6     6     1     6     1     6     2     3     6     0     3     2     3     6     3     2     7     3     1     2     3     4     7     5     7     4     0     5     7     1     7     4     1     1     0     3     7     2     2     2     2     7     4     5     2     3     2     1     4     0     4     0     5     0     2     3     1     4     5     2     1     5     3     5     0     3     0     0     2     1     7     2     1     1     5     1     4     2     6     1     2     6     5     0     0     2     2     3     5     2     7     3     0     0     2     1     3     3     1     3     5     4     5     6     4     2     1     7     6     7     3     7     0     1     6     7     1     0     0     0     3     5     1     5     7     7     6     7     4     7     0     2     7     1     3     2     6     1     1     4     5     0     6     5     5     1     1     5     2     4     0     1     2     4     2     0     1     2     5     4     1     0     4     6     1     7     7     2     3     4     3     2     2     0     3     6     2     2     1     1     4     3     7     1     2     2     2     3     0     2     2     3     2     1     1     7     7     2     0     3     0     4     1     2     1     1     2     6     1     0     5     7     0     5     4     2     2     0     7     5     2     6     3     7     3     3     2     4     7     7     7     7     2     4     5     7     5     0     2     0     7     5     5     0     0     0     6     0     1     2     4     5     7     3     7     4     0     0     0     1     7     0     1     0     5     2     7     5     2     6     7     0     6     1     5     0     6     7     1     5     2     7     4     1     1     5     2     7     0     2     3     1     5     7     1     0     1     6     7     2     7     2     6     7     6     3     7     7     3     1     3     1     1     3     1     0     5     3     5     1     2     2     7     7     2     0     4     2     1     1     0     1     5     5     7     3     2     2     4     3     6     2     3     2     3     1     7     1     2     3     5     2     5     0     2     2     1     4     0     1     0     1     6     2     3     0     5     2     3     2     3     5     0     6     5     4     1     3     5     3     5     3     6     6     2     7     2     2     6     4     7     4     4     4     6     3     6     7     2     3     4     7     1     2     0     1     4     1     1     2     1     3     5     0     1     0     7     6     4     4     0     6     3     4     1     4     0     6     2     3     4     5     4     0     7     4     7     2     7     6     4     7     0     0     6     7     1     4     1     2     5     2     1     6     0     6     7     3     5     3     3     6     7     0     4     1     3     0     5     2     3     6     6     7     4     3     0     3     7     4     4     0     1     7     7     6     4     1     4     6     7     7     3     2     2     7     6     2     5     5     6     3     2     5     4     5     5     1     2     4     6     1     6     3     7     0     5     1     7     3     7     2     6     3     0     7     4     0     4     4     7     0     4     3     0     2     3     3     6     6     1     0     1     5     1     6     2     1     2     7     1     6     0     7     3     1     6     6     4     5     4     5     4     6     0     1     2     0     1     4     4     0     5     7     4     1     7     4     3     3     2     0     2     0     5     3     4     1     1     1     4     6     3     4     7     1     3     2     1     6     0     3     3     4     3     1     5     6     6     2     5     7     6     7     7     2     3     1     7     1     7     2     3     1     0     0     0     2     3     0     0     3     1     2     7     3     5     2     7     4     6     4     5     3     3     2     3     3     7     7     4     5     0     6     4     4     5     6     7     2     5     7     1     1     5     0     3     7     6     3     7     0     6     7     4     2     0     4     4     0     7     3     5     3     7     0     1     1     2     7     4     7     4     0     5     3     2     5     4     1     0     7     2     7     5     4     7     5     5     5     3     0     5     2     7     3     7     7     2     3     4     1     6     0     0     3     4     4     7     3     1     3     0     4     3     4     2     1     3     3     0     3     6     1     0     2     0     1     1     7     5     4     3     7     3     6     7     3     7     2     0     6     6     4     4     3     3     3     3     0     7     0     6     4     3     3     2     6     2     6     6     1     4     7     3     1     3     2     0     7     2     7     0     3     6     5     1     6     3     6     1     2     3     6     4     5     6     7     1     5     1     1     0     5     3     5     3     2     7     1     7     3     1     4     0     7     0     4     2     0     0     5     2     7     5     3     6     2     3     7     7     6     6     7     1     2     5     3     1     7     7     4     4     2     3     4     3     2     7     4     0     7     6     7     5     4     7     1     5     3     7     3     5     2     2     5     2     6     1     0     1     1     3     2     3     7     4     5     1     6     5     0     0     6     2     4     5     2     4     0     6     5     7     5     5     7     0     3     6     0     4     1     3     5     2     3     6     0     7     7     4     0     7     3     2     1     5     3     0     4     2     1     7     3     6     1     6     2     0     6     5     3     4     1     2     0     6     5     3     5     6     2     5     7     1     1     5     4     3     1     0     6     5     6     4     5     4     2     2     5     2     1     3     6     5     2     4     3     7     1     4     0     2     6     4     0     2     1     2     4     5     3     2     7     0     0     0     1     0     4     2     1     6     2     7     5     4     2     3     2     3     5     3     3     1     7     3     7     3     3     5     1     5     6     0     2     7     4     4     7     6     5     1     0     1     5     3     1     6     1     7     7     3     7     4     3     5     1     7     1     1     7     4     1     1     3     5     0     6     1     2     1     3     1     2     0     5     0     5     4     4     2     2     1     7     6     4     2     2     3     2     6     3     6     6     1     2     0     1     0     7     0     4     5     1     1     3     6     3     4     1     0     3     4     5     5     6     7     7     4     5     5     4     3     5     0     4     2     2     4     5     6     0     3     7     5     1     1     1     4     6     6     1     5     7     2     1     3     1     7     0     1     5     0     0     0     2     7     0     6     0     5     6     7     6     0     6     7     3     1     6     5     2     2     5     3     2     5     2     1     4     5     3     1     1     1     1     4     6     3     0     7     4     1     0     7     1     4     7     4     4     6     4     2     0     2     2     2     5     2     2     1     1     7     0     3     2     4     0     7     3     3     4     0     3     5     4     2     4     5     1     2     1     0     7     0     5     1     1     4     5     6     1     7     1     1     4     0     7     0     4     7     6     4     3     0     7     0     7     4     2     0     0     0     1     6     7     2     0     0     1     6     7     6     2     1     2     7     4     0     5     4     1     7     3     0     1     5     1     0     2     4     0     4     7     1     0     1     0     3     1     3     0     0     0     2     1     2     3     4     0     4     5     7     4     7     5     3     6     0     7     1     3     1     5     7     4     6     2     3     2     4     2     5     0     1     6     7     0     4     0     0     1     6     6     2     4     3     2     0     3     5     4     7     5     5     0     5     0     3     3     0     0     2     0     6     0     4     5     7     1     0     6     7     1     4     6     0     4     7     7     7     7     0     5     3     2     7     6     4     3     3     6     3     7     4     0     4     3     1     4     3     7     1     7     0     3     2     0     0     0     5     2     6     2     1     1     6     7     1     3     7     0     1     0     1     0     0     2     0     0     3     4     7     6     2     3     0     5     2     4     6     2     2     2     7     3     4     7     0     1     6     2     4     0     5     7     7     0     5     0     0     2     5     2     1     6     0     5     5     1     3     1     1     7     0     2     5     4     6     4     5     4     2     7     0     0     7     7     2     0     0     2     5     4     0     7     1     4     5     7     6     7     3     4     5     5     0     3     2     4     0     5     2     5     1     1     7     0     2     2     5     6     1     7     3     0     4     3     5     0     7     0     5     4     6     4     0     0     3     1     5     1     5     2     4     3     5     3     0     0     0     1     0     5     6     7     5     5     4     4     4     2     7     7     1     0     7     5     7     7     0     7     3     7     3     2     7     7     2     3     0     1     0     2     3     3     0     2     2     3     4     3     0     2     3     3     0     2     4     3     2     6     4     0     7     0     1     5     6     3     2     3     3     5     5     1     0     3     5     7     3     5     7     0     6     3     2     5     5     2     0     3     7     6     0     3     3     0     1     2     5     3     4     3     7     1     1     3     1     0     1     6     7     5     4     4     3     0     3     2     4     4     2     7     1     4     1     7     5     3     6     3     6     3     2     3     1     7     2     1     6     3     5     6     4     3     5     5     5     0     2     6     3     1     2     1     0     1     0     2     1     4     5     1     6     5     4     3     4     6     1     7     4     5     7     5     2     0     1     3     2     5     0     1     7     0     6     0     6     6     3     6     2     5     4     7     7     3     5     6     7     1     3     2     0     2     5     2     1     1     3     1     3     6     7     2     2     7     4     2     2     2     4     7     5     0     3     1     2     1     1     7     1     2     5     6     6     0     7     5     1     5     4     0     2     1     6     1     2     3     2     2     4     1     6     5     6     0     5     2     2     7     6     6     2     0     5     3     7     3     1     2     7     1     3     0     1     2     1     0     4     2     6     1     5     7     7     4     5     0     1     0     4     3     1     5     1     1     2     3     1     0     3     0     7     2     5     1     3     1     4     6     2     2     6     2     3     4     7     2     4     5     2     3     3     0     6     0     1     7     5     3     2     3     3     6     0     7     3     3     4     3     7     1     2     6     0     1     1     1     7     3     2     4     2     7     4     2     2     5     6     4     3     0     2     7     5     2     4     0     7     2     7     7     5     6     4     4     7     0     3     2     4     3     0     2     2     5     7     0     1     0     4     0     5     0     7     7     3     7     0     0     4     0     2     2     0     7     6     7     0     0     1     3     2     1     1     2     4     6     4     5     7     7     2     3     3     4     6     1     1     7     4     1     1     4     4     4     3     6     2     6     5     3     1     6     7     6     7     1     2     1     0     1     0     4     5     1     7     5     4     3     6     3     7     6     0     0     7     3     1     0     4     3     7     2     4     1     3     6     0     6     7     3     4     1     5     1     2     4     1     7     0     3     7     4     6     7     1     2     3     5     1     0     2     7     3     4     4     1     4     2     7     7     2     7     1     7     5     0     3     1     5     0     1     6     7     6     1     0     5     7     7     7     6     2     1     3     3     2     0     4     1     6     0     5     2     7     1     6     1     0     4     7     2     4     6     2     3     2     4     7     5     6     3     5     5     6     3     7     0     6     5     4     4     3     0     7     2     2     1     4     6     6     7     0     0     3     2     0     2     2     5     1     7     7     4     0     7     5     6     6     0     7     1     5     2     6     3     4     3     0     3     2     0     1     1     4     4     5     0     3     5     3     6     3     0     2     4     2     4     2     4     1     5     4     5     4     4     3     4     1     7     1     3     7     4     4     0     1     5     7     3     0     7     2     2     4     5     1     3     3     0     3     4     3     2     3     2     3     0     0     6     3     7     0     0     2     6     5     1     5     1     0     1     7     7     6     1     4     7     2     1     5     1     2     7     7     0     2     2     0     3     1     3     4     4     7     2     6     3     5     7     7     6     2     1     0     2     1     3     6     2     5     2     3     1     7     5     7     2     1     1     5     3     4     3     0     4     3     7     0     1     3     2     1     7     4     7     5     0     2     6     0     3     3     1     5     5     1     0     3     0     7     6     2     0     7     0     5     7     6     3     1     7     0     4     0     4     3     4     0     4     7     1     2     2     5     3     5     6     1     2     4     3     5     0     4     1     2     2     4     1     6     4     3     4     1     7     0     7     7     6     5     3     0     1     7     7     1     3     5     3     3     1     7     2     7     5     2     3     1     1     1     0     1     3     7     6     2     0     2     5     1     2     4     7     4     2     2     5     0     4     7     4     0     7     1     2     3     2     0     4     5     6     7     4     0     4     3     4     3     1     1     1     6     6     7     4     3     7     0     6     3     2     0     1     4     1     3     4     3     1     0     0     5     3     4     3     5     6     3     2     0     2     3     0     4     7     7     2     1     7     1     0     4     1     4     3     6     3     0     2     2     3     1     2     1     6     1     4     0     0     3     4     2     6     5     7     2     4     7     7     4     4     7     3     4     2     6     2     7     1     0     5     4     6     1     2     2     0     0     7     5     0     0     1     4     5     2     6     3     1     6     7     0     0     7     3     2     5     4     0     3     0     2     7     3     1     5     6     7     3     2     1     7     3     2     1     1     4     7     4     5     2     5     3     6     6     3     1     5     5     7     1     0     4     5     0     4     6     5     5     2     2     2     2     4     0     0     3     3     7     1     6     3     3     2     1     0     0     1     0     1     2     2     3     6     0     3     4     0     3     1     1     1     7     4     3     2     3     1     2     5     3     1     2     1     4     3     7     7     0     0     2     3     4     4     2     4     0     6     0     7     3     6     5     3     1     0     0     7     3     3     5     0     3     0     1     3     2     0     0     5     2     1     7     1     6     7     7     1     5     0     2     0     7     4     0     2     1     6     0     0     2     4     1     6     2     1     1     6     0     0     7     4     0     5     2     3     2     3     2     4     6     1     5     0     3     3     2     2     0     7     0     1     2     3     3     7     4     5     4     7     1     6     0     0     5     7     0     7     6     1     0     0     6     4     7     2     4     6     2     1     0     3     4     4     2     4     6     0     0     5     6     3     7     1     4     6     6     1     1     4     6     7     7     7     3     0     3     3     5     7     6     0     2     1     5     6     7     4     3     5     1     5     2     7     2     2     0     1     4     4     4     0     5     5     5     1     5     2     2     1     1     2     1     7     7     0     3     6     1     6     4     2     1     2     0     0     6     1     7     3     3     1     7     6     3     2     4     7     0     3     6     1     7     7     0     0     7     4     0     3     2     0     5     5     3     5     2     4     5     0     5     1     4     3     2     4     1     5     7     6     7     2     1     2     1     3     4     4     3     3     4     5     5     4     2     4     3     0     6     7     7     2     4     7     1     2     6     3     7     3     6     4     0     7     0     6     5     3     1     3     7     7     2     3     1     6     3     2     3     2     6     7     5     1     1     2     6     5     3     6     3     3     5     2     1     2     1     1     2     1     2     2     4     5     3     2     2     0     2     7     7     0     1     2     6     6     2     6     3     4     0     7     5     1     1     5     0     7     5     5     1     0     3     2     6     2     3     2     0     3     2     0     2     0     0     0     5     2     0     5     1     1     7     7     1     3     1     2     5     3     2     5     3     4     4     1     3     3     1     3     7     0     6     6     3     6     4     2     2     7     7     2     2     2     0     2     6     5     4     3     0     4     3     1     0     1     3     5     4     5     3     2     3     4     4     0     4     6     1     0     2     3     5     2     7     5     2     7     7     7     6     5     2     0     2     1     1     6     6     7     2     7     0     1     4     2     2     5     3     3     4     0     4     3     1     0     3     3     6     5     3     6     5     5     4     7     5     7     5     1     2     1     3     4     0     0     6     3     0     5     1     7     0     0     0     5     3     3     2     5     1     4     1     2     0     2     7     7     0     5     0     7     7     0     5     0     4     3     4     1     2     4     0     2     6     1     1     6     3     6     0     0     7     1     7     2     5     5     1     2     0     4     1     0     7     1     7     4     7     0     5     2     6     1     0     3     3     0     3     1     5     7     2     4     2     0     0     2     3     2     5     2     6     3     2     1     1     4     4     3     6     0     7     2     1     6     7     5     1     2     3     4     2     4     0     4     1     0     2     1     6     2     2     1     3     7     2     4     5     1     3     7     7     2     1     0     7     6     3     4     0     1     0     1     0     5     0     6     3     6     2     1     7     1     2     2     5     5     4     7     6     4     7     2     5     3     1     2     4     2     4     7     3     6     4     0     7     3     2     3     6     6     1     0     6     6     7     7     2     4     3     2     0     2     1     1     4     5     7     3     5     5     5     1     5     0     2     0     2     6     3     3     1     0     5     4     1     6     4     5     0     2     0     4     3     3     0     4     1     4     3     4     5     3     2     1     5     7     7     5     6     3     2     0     7     4     1     0     6     1     2     0     5     0     0     0     4     7     5     4     7     2     1     7     3     4     0     4     5     7     6     1     6     1     5     7     0     5     2     4     0     1     5     3     1     5     4     0     6     7     4     1     7     1     5     7     7     4     7     5     1     7     5     5     7     2     7     5     5     4     4     2     6     6     3     1     2     3     3     6     0     4     3     0     5     7     7     3     0     7     4     7     6     0     2     3     5     5     1     4     1     5     2     7     7     7     0     5     6     4     5     4     5     5     7     4     2     2     1     5     3     3     3     2     0     0     2     3     2     1     3     7     3     1     1     7     3     7     4     2     5     3     3     1     5     4     5     4     1     1     2     0     4     2     2     6     2     2     3     4     0     1     4     6     5     6     5     3     7     4     7     1     2     4     6     3     0     7     6     4     6     3     1     0     3     1     0     2     0     3     2     7     3     5     0     3     3     5     4     4     0     0     1     4     6     3     3     2     7     2     7     0     3     1     4     0     0     5     5     5     7     5     4     1     5     4     3     2     7     5     0     1     7     0     3     7     0     0     5     6     3     3     1     2     2     6     1     4     0     0     2     2     2     4     2     5     2     3     7     3     2     2     5     7     0     3     7     0     6     4     7     4     2     7     4     0     5     6     6     1     4     7     0     2     4     0     4     3     3     7     6     7     4     5     0     2     6     4     5     3     1     3     4     3     3     2     4     0     5     5     7     1     7     6     5     2     7     1     1     2     6     0     6     1     2     0     0     5     7     0     0     5     0     0     3     2     4     1     2     1     4     4     5     1     7     6     2     2     1     3     4     7     2     3     0     3     5     7     5     4     7     1     4     7     0     0     4     1     4     1     5     7     2     6     1     6     2     3     3     5     1     7     2     2     4     4     7     1     6     5     2     0     3     2     6     3     5     1     4     4     3     3     0     7     4     6     1     6     6     0     1     3     5     2     2     2     2     4     0     5     7     0     5     4     6     3     4     1     2     0     6     4     3     1     6     2     7     5     0     0     1     4     6     3     7     2     1     0     1     4     2     1     3     4     3     5     6     5     1     6     0     5     1     1     7     1     4     6     5     7     5     0     1     2     2     1     3     5     0     2     3     0     2     0     6     3     5     2     2     6     1     2     6     1     2     3     1     1     0     1     3     0     1     0     2     4     0     3     1     0     7     7     1     5     3     7     0     4     2     1     5     6     7     1     2     5     5     5     6     3     7     2     0     3     5     1     3     0     2     3     6     5     4     7     6     1     4     1     7     1     6     4     2     4     0     4     0     0     0     4     3     3     2     1     0     6     4     5     5     5     3     3     3     3     0     7     7     4     4     4     4     7     0     7     2     0     7     7     4     7     2     5     0     0     5     7     3     0     7     1     1     4     7     5     0     5     0     2     4     0     5     1     0     4     2     2     2     3     1     0     3     5     7     3     2     5     2     0     4     3     2     2     0     2     1     3     6     0     4     5     5     7     0     1     4     7     5     4     1     0     5     4     6     0       1\n",
            "dtype: int64\n",
            "\n",
            "\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      O1  O2  O3  O4  O5  O6  O7  O8  O9  O10  O11  O12  O13  O14  O15  O16  \\\n",
              "0      1   1   1   0   1   1   1   0   1    1    1    0    0    0    0    1   \n",
              "1      1   1   1   1   0   0   0   1   0    1    0    0    0    1    1    1   \n",
              "2      0   0   1   1   0   1   0   1   1    1    0    1    0    1    0    1   \n",
              "3      1   1   1   1   0   1   1   1   1    0    1    1    0    1    0    1   \n",
              "4      1   0   1   1   0   0   1   1   1    1    1    1    0    1    0    1   \n",
              "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
              "9995   1   1   1   0   0   1   0   0   0    1    1    0    1    1    0    1   \n",
              "9996   1   0   0   1   1   0   0   1   1    0    0    1    1    0    0    1   \n",
              "9997   0   0   1   1   1   0   0   0   0    0    0    0    1    0    1    0   \n",
              "9998   1   0   1   0   1   1   1   1   1    0    1    1    1    1    1    0   \n",
              "9999   1   1   1   0   1   1   0   0   0    0    0    1    0    1    0    0   \n",
              "\n",
              "      Cluster  \n",
              "0           0  \n",
              "1           3  \n",
              "2           3  \n",
              "3           3  \n",
              "4           3  \n",
              "...       ...  \n",
              "9995        0  \n",
              "9996        5  \n",
              "9997        4  \n",
              "9998        6  \n",
              "9999        0  \n",
              "\n",
              "[10000 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ddcb78a8-e985-49c9-92fa-f8a7a5deac18\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>O1</th>\n",
              "      <th>O2</th>\n",
              "      <th>O3</th>\n",
              "      <th>O4</th>\n",
              "      <th>O5</th>\n",
              "      <th>O6</th>\n",
              "      <th>O7</th>\n",
              "      <th>O8</th>\n",
              "      <th>O9</th>\n",
              "      <th>O10</th>\n",
              "      <th>O11</th>\n",
              "      <th>O12</th>\n",
              "      <th>O13</th>\n",
              "      <th>O14</th>\n",
              "      <th>O15</th>\n",
              "      <th>O16</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddcb78a8-e985-49c9-92fa-f8a7a5deac18')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ddcb78a8-e985-49c9-92fa-f8a7a5deac18 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ddcb78a8-e985-49c9-92fa-f8a7a5deac18');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "a = np.array([y_km])\n",
        "a = pd.DataFrame(a)\n",
        "\n",
        "print(a.value_counts())\n",
        "\n",
        "print(\"\\n\")\n",
        "a = np.array([y_km])\n",
        "unique, counts = np.unique (a, return_counts =True)\n",
        "dict(zip(unique, counts))\n",
        "print(\"\\n\")\n",
        "Estudiantes['Cluster'] = y_km\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 124,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "i-LTwR_xiuFU",
        "outputId": "d6d10719-fe4c-4f15-e743-1efcbaef54c2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Cluster\n",
              "0        0\n",
              "1        3\n",
              "2        3\n",
              "3        3\n",
              "4        3"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ea250507-0fb1-4405-be72-28e7c802c90a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea250507-0fb1-4405-be72-28e7c802c90a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ea250507-0fb1-4405-be72-28e7c802c90a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ea250507-0fb1-4405-be72-28e7c802c90a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 124
        }
      ],
      "source": [
        "Estudiantes[['Cluster']].head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SZL6eEqYjDau"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 125,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Pa0VFxWIi3-G",
        "outputId": "975d6641-0cb3-43b4-fe98-16a0973ea23a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    1445\n",
              "2    1420\n",
              "3    1326\n",
              "1    1320\n",
              "7    1293\n",
              "4    1167\n",
              "5    1036\n",
              "6     993\n",
              "Name: Cluster, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ],
      "source": [
        "Estudiantes['Cluster'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 126,
      "metadata": {
        "id": "tHGncQHdYUAc"
      },
      "outputs": [],
      "source": [
        "#Guardar el nuevo archivo *.csv*\n",
        "Estudiantes.to_csv('/content/drive/MyDrive/DATASET/Resultados/agrupación.csv')\n",
        "\n",
        "Estudiantes.drop(['O1','O2', 'O3','O4','O5','O6','O7','O8','O9','O10','O11','O12','O13','O14','O15','O16'], axis=1).to_csv('/content/drive/MyDrive/DATASET/Resultados/agrupación2.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 127,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "u_APDyVVYmnI",
        "outputId": "9d572d29-1d97-4682-dda6-52027e99af9a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      O1  O2  O3  O4  O5  O6  O7  O8  O9  O10  O11  O12  O13  O14  O15  O16  \\\n",
              "0      1   1   1   0   1   1   1   0   1    1    1    0    0    0    0    1   \n",
              "2      0   0   1   1   0   1   0   1   1    1    0    1    0    1    0    1   \n",
              "3      1   1   1   1   0   1   1   1   1    0    1    1    0    1    0    1   \n",
              "4      1   0   1   1   0   0   1   1   1    1    1    1    0    1    0    1   \n",
              "6      0   1   1   0   0   1   1   1   0    0    0    0    0    0    1    1   \n",
              "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
              "9995   1   1   1   0   0   1   0   0   0    1    1    0    1    1    0    1   \n",
              "9996   1   0   0   1   1   0   0   1   1    0    0    1    1    0    0    1   \n",
              "9997   0   0   1   1   1   0   0   0   0    0    0    0    1    0    1    0   \n",
              "9998   1   0   1   0   1   1   1   1   1    0    1    1    1    1    1    0   \n",
              "9999   1   1   1   0   1   1   0   0   0    0    0    1    0    1    0    0   \n",
              "\n",
              "      Cluster  \n",
              "0           0  \n",
              "2           3  \n",
              "3           3  \n",
              "4           3  \n",
              "6           1  \n",
              "...       ...  \n",
              "9995        0  \n",
              "9996        5  \n",
              "9997        4  \n",
              "9998        6  \n",
              "9999        0  \n",
              "\n",
              "[9998 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-51a1ea1d-e530-4bb7-8f5a-ec25329cb9fa\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>O1</th>\n",
              "      <th>O2</th>\n",
              "      <th>O3</th>\n",
              "      <th>O4</th>\n",
              "      <th>O5</th>\n",
              "      <th>O6</th>\n",
              "      <th>O7</th>\n",
              "      <th>O8</th>\n",
              "      <th>O9</th>\n",
              "      <th>O10</th>\n",
              "      <th>O11</th>\n",
              "      <th>O12</th>\n",
              "      <th>O13</th>\n",
              "      <th>O14</th>\n",
              "      <th>O15</th>\n",
              "      <th>O16</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9998 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51a1ea1d-e530-4bb7-8f5a-ec25329cb9fa')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-51a1ea1d-e530-4bb7-8f5a-ec25329cb9fa button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-51a1ea1d-e530-4bb7-8f5a-ec25329cb9fa');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 127
        }
      ],
      "source": [
        "#Importando los datos\n",
        "\n",
        "#CARGAR LOS DATOS\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/agrupación.csv', engine='python', index_col=0)\n",
        "#Las filas tienen un nombre\n",
        "\n",
        "### DATOS DE MUESTRA ###\n",
        "#Se seleccionan unos datos al azar para posteriormente verificar el clúster\n",
        "#que no aportan información importante para el análisis\n",
        "#al que pertenecen\n",
        "indices = [1,5]\n",
        "muestras = pd.DataFrame(Estudiantes.loc[indices],\n",
        "                       columns = Estudiantes.keys()).reset_index(drop = True)\n",
        "\n",
        "Estudiantes.drop(indices, axis = 0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 128,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "2k_8Nv_dZPvX",
        "outputId": "4fc1c186-0ed4-4559-9b14-a81672c17fe1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      O1  O2  O3  O4  O5  O6  O7  O8  O9  O10  O11  O12  O13  O14  O15  O16  \\\n",
              "0      1   1   1   0   1   1   1   0   1    1    1    0    0    0    0    1   \n",
              "1      1   1   1   1   0   0   0   1   0    1    0    0    0    1    1    1   \n",
              "2      0   0   1   1   0   1   0   1   1    1    0    1    0    1    0    1   \n",
              "3      1   1   1   1   0   1   1   1   1    0    1    1    0    1    0    1   \n",
              "4      1   0   1   1   0   0   1   1   1    1    1    1    0    1    0    1   \n",
              "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
              "9995   1   1   1   0   0   1   0   0   0    1    1    0    1    1    0    1   \n",
              "9996   1   0   0   1   1   0   0   1   1    0    0    1    1    0    0    1   \n",
              "9997   0   0   1   1   1   0   0   0   0    0    0    0    1    0    1    0   \n",
              "9998   1   0   1   0   1   1   1   1   1    0    1    1    1    1    1    0   \n",
              "9999   1   1   1   0   1   1   0   0   0    0    0    1    0    1    0    0   \n",
              "\n",
              "      Cluster  procesamiento  % procesamiento  \n",
              "0           0              7        38.888889  \n",
              "1           3              5        27.777778  \n",
              "2           3              5        27.777778  \n",
              "3           3              8        44.444444  \n",
              "4           3              6        33.333333  \n",
              "...       ...            ...              ...  \n",
              "9995        0              4        22.222222  \n",
              "9996        5              5        27.777778  \n",
              "9997        4              3        16.666667  \n",
              "9998        6              7        38.888889  \n",
              "9999        0              5        27.777778  \n",
              "\n",
              "[10000 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-143869fb-6911-468e-804e-d1667bcbb55b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>O1</th>\n",
              "      <th>O2</th>\n",
              "      <th>O3</th>\n",
              "      <th>O4</th>\n",
              "      <th>O5</th>\n",
              "      <th>O6</th>\n",
              "      <th>O7</th>\n",
              "      <th>O8</th>\n",
              "      <th>O9</th>\n",
              "      <th>O10</th>\n",
              "      <th>O11</th>\n",
              "      <th>O12</th>\n",
              "      <th>O13</th>\n",
              "      <th>O14</th>\n",
              "      <th>O15</th>\n",
              "      <th>O16</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 19 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-143869fb-6911-468e-804e-d1667bcbb55b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-143869fb-6911-468e-804e-d1667bcbb55b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-143869fb-6911-468e-804e-d1667bcbb55b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 128
        }
      ],
      "source": [
        "#Estudiantes['procesamiento'] = Estudiantes.sum(axis=1)\n",
        "\n",
        "#PROCESAMIENTO\n",
        "col_list = list(Estudiantes)\n",
        "col_list.remove('O10')\n",
        "col_list.remove('O15')\n",
        "col_list.remove('O16')\n",
        "col_list.remove('O11')\n",
        "col_list.remove('O12')\n",
        "col_list.remove('O13')\n",
        "col_list.remove('O14')\n",
        "col_list.remove('Cluster')\n",
        "#col_list.remove('percepción')\n",
        "#col_list.remove('comprensión')\n",
        "#col_list.remove('representación')\n",
        "#col_list.remove('% percepción')\n",
        "#col_list.remove('% comprensión')\n",
        "#col_list.remove('% representación')\n",
        "\n",
        "#Estudiantes['procesamiento'] = Estudiantes[col_list].sum(axis=1)\n",
        "#print(col_list)\n",
        "#df['e'] = df['a'] + df['b'] + df['d']\n",
        "Estudiantes['procesamiento'] = Estudiantes['O1'] + Estudiantes['O2'] + Estudiantes['O3'] + Estudiantes['O4']+ Estudiantes['O5']+ Estudiantes['O6']+ Estudiantes['O7']+ Estudiantes['O8']+ Estudiantes['O9']\n",
        "\n",
        "#Estudiantes['procesamiento']\n",
        "\n",
        "Estudiantes['% procesamiento'] = Estudiantes['procesamiento']*100/18\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 129,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "pkbMBQqKZTOE",
        "outputId": "3f9ea160-572b-431b-c22e-c47b13edd3d1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      O1  O2  O3  O4  O5  O6  O7  O8  O9  O10  ...  O12  O13  O14  O15  O16  \\\n",
              "0      1   1   1   0   1   1   1   0   1    1  ...    0    0    0    0    1   \n",
              "1      1   1   1   1   0   0   0   1   0    1  ...    0    0    1    1    1   \n",
              "2      0   0   1   1   0   1   0   1   1    1  ...    1    0    1    0    1   \n",
              "3      1   1   1   1   0   1   1   1   1    0  ...    1    0    1    0    1   \n",
              "4      1   0   1   1   0   0   1   1   1    1  ...    1    0    1    0    1   \n",
              "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...  ...  ...   \n",
              "9995   1   1   1   0   0   1   0   0   0    1  ...    0    1    1    0    1   \n",
              "9996   1   0   0   1   1   0   0   1   1    0  ...    1    1    0    0    1   \n",
              "9997   0   0   1   1   1   0   0   0   0    0  ...    0    1    0    1    0   \n",
              "9998   1   0   1   0   1   1   1   1   1    0  ...    1    1    1    1    0   \n",
              "9999   1   1   1   0   1   1   0   0   0    0  ...    1    0    1    0    0   \n",
              "\n",
              "      Cluster  procesamiento  % procesamiento  percepción  % percepción  \n",
              "0           0              7        38.888889           2      9.523810  \n",
              "1           3              5        27.777778           1      4.761905  \n",
              "2           3              5        27.777778           2      9.523810  \n",
              "3           3              8        44.444444           4     19.047619  \n",
              "4           3              6        33.333333           4     19.047619  \n",
              "...       ...            ...              ...         ...           ...  \n",
              "9995        0              4        22.222222           4     19.047619  \n",
              "9996        5              5        27.777778           2      9.523810  \n",
              "9997        4              3        16.666667           1      4.761905  \n",
              "9998        6              7        38.888889           5     23.809524  \n",
              "9999        0              5        27.777778           2      9.523810  \n",
              "\n",
              "[10000 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9dd993f0-6878-4211-b597-c36835f13e6e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>O1</th>\n",
              "      <th>O2</th>\n",
              "      <th>O3</th>\n",
              "      <th>O4</th>\n",
              "      <th>O5</th>\n",
              "      <th>O6</th>\n",
              "      <th>O7</th>\n",
              "      <th>O8</th>\n",
              "      <th>O9</th>\n",
              "      <th>O10</th>\n",
              "      <th>...</th>\n",
              "      <th>O12</th>\n",
              "      <th>O13</th>\n",
              "      <th>O14</th>\n",
              "      <th>O15</th>\n",
              "      <th>O16</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>5</td>\n",
              "      <td>23.809524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 21 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dd993f0-6878-4211-b597-c36835f13e6e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9dd993f0-6878-4211-b597-c36835f13e6e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9dd993f0-6878-4211-b597-c36835f13e6e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 129
        }
      ],
      "source": [
        "#PERCEPCIÓN\n",
        "col_list = list(Estudiantes)\n",
        "col_list.remove('O1')\n",
        "col_list.remove('O2')\n",
        "col_list.remove('O3')\n",
        "col_list.remove('O4')\n",
        "col_list.remove('O5')\n",
        "col_list.remove('O6')\n",
        "col_list.remove('O7')\n",
        "col_list.remove('O8')\n",
        "col_list.remove('O9')\n",
        "#col_list.remove('M_LECT')\n",
        "col_list.remove('O15')\n",
        "col_list.remove('O16')\n",
        "#col_list.remove('H_EXAM1')\n",
        "#col_list.remove('H_EXAM2')\n",
        "#col_list.remove('H_EXAM3')\n",
        "#col_list.remove('CAM_RES')\n",
        "col_list.remove('Cluster')\n",
        "#col_list.remove('procesamiento')\n",
        "#col_list.remove('percepción')\n",
        "#col_list.remove('comprensión')\n",
        "#col_list.remove('representación')\n",
        "#col_list.remove('% procesamiento')\n",
        "#col_list.remove('% percepción')\n",
        "#col_list.remove('% comprensión')\n",
        "#col_list.remove('% representación')\n",
        "\n",
        "#df['e'] = df['a'] + df['b'] + df['d']\n",
        "Estudiantes['percepción'] = Estudiantes['O11'] + Estudiantes['O11'] + Estudiantes['O12'] + Estudiantes['O13']+ Estudiantes['O14']\n",
        "\n",
        "#Estudiantes['procesamiento']\n",
        "\n",
        "Estudiantes['% percepción'] = Estudiantes['percepción']*100/21\n",
        "Estudiantes\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 130,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "JaHzX9kXZao9",
        "outputId": "6f9c91d2-221c-4127-a84c-47d2db82f8ff"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      O1  O2  O3  O4  O5  O6  O7  O8  O9  O10  ...  O14  O15  O16  Cluster  \\\n",
              "0      1   1   1   0   1   1   1   0   1    1  ...    0    0    1        0   \n",
              "1      1   1   1   1   0   0   0   1   0    1  ...    1    1    1        3   \n",
              "2      0   0   1   1   0   1   0   1   1    1  ...    1    0    1        3   \n",
              "3      1   1   1   1   0   1   1   1   1    0  ...    1    0    1        3   \n",
              "4      1   0   1   1   0   0   1   1   1    1  ...    1    0    1        3   \n",
              "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...  ...  ...      ...   \n",
              "9995   1   1   1   0   0   1   0   0   0    1  ...    1    0    1        0   \n",
              "9996   1   0   0   1   1   0   0   1   1    0  ...    0    0    1        5   \n",
              "9997   0   0   1   1   1   0   0   0   0    0  ...    0    1    0        4   \n",
              "9998   1   0   1   0   1   1   1   1   1    0  ...    1    1    0        6   \n",
              "9999   1   1   1   0   1   1   0   0   0    0  ...    1    0    0        0   \n",
              "\n",
              "      procesamiento  % procesamiento  percepción  % percepción  comprensión  \\\n",
              "0                 7        38.888889           2      9.523810            0   \n",
              "1                 5        27.777778           1      4.761905            1   \n",
              "2                 5        27.777778           2      9.523810            0   \n",
              "3                 8        44.444444           4     19.047619            0   \n",
              "4                 6        33.333333           4     19.047619            0   \n",
              "...             ...              ...         ...           ...          ...   \n",
              "9995              4        22.222222           4     19.047619            0   \n",
              "9996              5        27.777778           2      9.523810            0   \n",
              "9997              3        16.666667           1      4.761905            1   \n",
              "9998              7        38.888889           5     23.809524            1   \n",
              "9999              5        27.777778           2      9.523810            0   \n",
              "\n",
              "      % comprensión  \n",
              "0               0.0  \n",
              "1              25.0  \n",
              "2               0.0  \n",
              "3               0.0  \n",
              "4               0.0  \n",
              "...             ...  \n",
              "9995            0.0  \n",
              "9996            0.0  \n",
              "9997           25.0  \n",
              "9998           25.0  \n",
              "9999            0.0  \n",
              "\n",
              "[10000 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-621226cf-cf06-4d5f-a499-6cd522673a8a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>O1</th>\n",
              "      <th>O2</th>\n",
              "      <th>O3</th>\n",
              "      <th>O4</th>\n",
              "      <th>O5</th>\n",
              "      <th>O6</th>\n",
              "      <th>O7</th>\n",
              "      <th>O8</th>\n",
              "      <th>O9</th>\n",
              "      <th>O10</th>\n",
              "      <th>...</th>\n",
              "      <th>O14</th>\n",
              "      <th>O15</th>\n",
              "      <th>O16</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>% comprensión</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>5</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-621226cf-cf06-4d5f-a499-6cd522673a8a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-621226cf-cf06-4d5f-a499-6cd522673a8a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-621226cf-cf06-4d5f-a499-6cd522673a8a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ],
      "source": [
        "#Comprensión\n",
        "col_list = list(Estudiantes)\n",
        "col_list.remove('O1')\n",
        "col_list.remove('O2')\n",
        "col_list.remove('O3')\n",
        "col_list.remove('O4')\n",
        "col_list.remove('O5')\n",
        "col_list.remove('O6')\n",
        "col_list.remove('O7')\n",
        "col_list.remove('O8')\n",
        "col_list.remove('O9')\n",
        "col_list.remove('O10')\n",
        "#col_list.remove('EJEM')\n",
        "col_list.remove('O16')\n",
        "col_list.remove('O11')\n",
        "col_list.remove('O12')\n",
        "col_list.remove('O13')\n",
        "col_list.remove('O14')\n",
        "col_list.remove('Cluster')\n",
        "col_list.remove('procesamiento')\n",
        "#col_list.remove('percepción')\n",
        "#col_list.remove('comprensión')\n",
        "#col_list.remove('representación')\n",
        "col_list.remove('% procesamiento')\n",
        "#col_list.remove('% percepción')\n",
        "#col_list.remove('% comprensión')\n",
        "#col_list.remove('% representación')\n",
        "\n",
        "#df['e'] = df['a'] + df['b'] + df['d']\n",
        "Estudiantes['comprensión'] = Estudiantes['O15']\n",
        "\n",
        "#Estudiantes['procesamiento']\n",
        "\n",
        "Estudiantes['% comprensión'] = Estudiantes['comprensión']*100/4\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 131,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "L_C_qifRZfqo",
        "outputId": "70018b30-2cc3-4518-9fb8-2fa328c9e3f4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      O1  O2  O3  O4  O5  O6  O7  O8  O9  O10  ...  O16  Cluster  \\\n",
              "0      1   1   1   0   1   1   1   0   1    1  ...    1        0   \n",
              "1      1   1   1   1   0   0   0   1   0    1  ...    1        3   \n",
              "2      0   0   1   1   0   1   0   1   1    1  ...    1        3   \n",
              "3      1   1   1   1   0   1   1   1   1    0  ...    1        3   \n",
              "4      1   0   1   1   0   0   1   1   1    1  ...    1        3   \n",
              "...   ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ...  ...      ...   \n",
              "9995   1   1   1   0   0   1   0   0   0    1  ...    1        0   \n",
              "9996   1   0   0   1   1   0   0   1   1    0  ...    1        5   \n",
              "9997   0   0   1   1   1   0   0   0   0    0  ...    0        4   \n",
              "9998   1   0   1   0   1   1   1   1   1    0  ...    0        6   \n",
              "9999   1   1   1   0   1   1   0   0   0    0  ...    0        0   \n",
              "\n",
              "      procesamiento  % procesamiento  percepción  % percepción  comprensión  \\\n",
              "0                 7        38.888889           2      9.523810            0   \n",
              "1                 5        27.777778           1      4.761905            1   \n",
              "2                 5        27.777778           2      9.523810            0   \n",
              "3                 8        44.444444           4     19.047619            0   \n",
              "4                 6        33.333333           4     19.047619            0   \n",
              "...             ...              ...         ...           ...          ...   \n",
              "9995              4        22.222222           4     19.047619            0   \n",
              "9996              5        27.777778           2      9.523810            0   \n",
              "9997              3        16.666667           1      4.761905            1   \n",
              "9998              7        38.888889           5     23.809524            1   \n",
              "9999              5        27.777778           2      9.523810            0   \n",
              "\n",
              "      % comprensión  representación  % representación  \n",
              "0               0.0               1              25.0  \n",
              "1              25.0               1              25.0  \n",
              "2               0.0               1              25.0  \n",
              "3               0.0               1              25.0  \n",
              "4               0.0               1              25.0  \n",
              "...             ...             ...               ...  \n",
              "9995            0.0               1              25.0  \n",
              "9996            0.0               1              25.0  \n",
              "9997           25.0               0               0.0  \n",
              "9998           25.0               0               0.0  \n",
              "9999            0.0               0               0.0  \n",
              "\n",
              "[10000 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-00cd6b2f-6d68-4923-ae58-29682392e6d4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>O1</th>\n",
              "      <th>O2</th>\n",
              "      <th>O3</th>\n",
              "      <th>O4</th>\n",
              "      <th>O5</th>\n",
              "      <th>O6</th>\n",
              "      <th>O7</th>\n",
              "      <th>O8</th>\n",
              "      <th>O9</th>\n",
              "      <th>O10</th>\n",
              "      <th>...</th>\n",
              "      <th>O16</th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>5</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 25 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00cd6b2f-6d68-4923-ae58-29682392e6d4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-00cd6b2f-6d68-4923-ae58-29682392e6d4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-00cd6b2f-6d68-4923-ae58-29682392e6d4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ],
      "source": [
        "#REPRESENTACIÓN\n",
        "col_list = list(Estudiantes)\n",
        "col_list.remove('O1')\n",
        "col_list.remove('O2')\n",
        "col_list.remove('O3')\n",
        "col_list.remove('O4')\n",
        "col_list.remove('O5')\n",
        "col_list.remove('O6')\n",
        "col_list.remove('O7')\n",
        "col_list.remove('O8')\n",
        "col_list.remove('O9')\n",
        "col_list.remove('O10')\n",
        "col_list.remove('O15')\n",
        "#col_list.remove('EJER')\n",
        "col_list.remove('O11')\n",
        "col_list.remove('O12')\n",
        "col_list.remove('O13')\n",
        "col_list.remove('O14')\n",
        "col_list.remove('Cluster')\n",
        "col_list.remove('procesamiento')\n",
        "col_list.remove('percepción')\n",
        "col_list.remove('comprensión')\n",
        "#col_list.remove('representación')\n",
        "col_list.remove('% procesamiento')\n",
        "col_list.remove('% percepción')\n",
        "col_list.remove('% comprensión')\n",
        "#col_list.remove('% representación')\n",
        "\n",
        "#df['e'] = df['a'] + df['b'] + df['d']\n",
        "Estudiantes['representación'] = Estudiantes['O16']\n",
        "\n",
        "#Estudiantes['procesamiento']\n",
        "\n",
        "Estudiantes['% representación'] = Estudiantes['representación']*100/4\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 132,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "0bgwXwpZZmVO",
        "outputId": "f03b1282-0957-461c-fcb6-3d6d20849ba8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  procesamiento  % procesamiento  percepción  % percepción  \\\n",
              "0           0              7        38.888889           2      9.523810   \n",
              "1           3              5        27.777778           1      4.761905   \n",
              "2           3              5        27.777778           2      9.523810   \n",
              "3           3              8        44.444444           4     19.047619   \n",
              "4           3              6        33.333333           4     19.047619   \n",
              "...       ...            ...              ...         ...           ...   \n",
              "9995        0              4        22.222222           4     19.047619   \n",
              "9996        5              5        27.777778           2      9.523810   \n",
              "9997        4              3        16.666667           1      4.761905   \n",
              "9998        6              7        38.888889           5     23.809524   \n",
              "9999        0              5        27.777778           2      9.523810   \n",
              "\n",
              "      comprensión  % comprensión  representación  % representación  \n",
              "0               0            0.0               1              25.0  \n",
              "1               1           25.0               1              25.0  \n",
              "2               0            0.0               1              25.0  \n",
              "3               0            0.0               1              25.0  \n",
              "4               0            0.0               1              25.0  \n",
              "...           ...            ...             ...               ...  \n",
              "9995            0            0.0               1              25.0  \n",
              "9996            0            0.0               1              25.0  \n",
              "9997            1           25.0               0               0.0  \n",
              "9998            1           25.0               0               0.0  \n",
              "9999            0            0.0               0               0.0  \n",
              "\n",
              "[10000 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-18a49ad0-5b47-4e30-916f-f3651e570109\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>5</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18a49ad0-5b47-4e30-916f-f3651e570109')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-18a49ad0-5b47-4e30-916f-f3651e570109 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-18a49ad0-5b47-4e30-916f-f3651e570109');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ],
      "source": [
        "#Estudiantes['Cluster', 'procesamiento', '% procesamiento', 'percepción', '% percepción', 'comprensón', '% comprensión', 'representación','% representación']\n",
        "Estudiantes.drop(['O1','O2', 'O3','O4','O5','O6','O7','O8','O9','O10','O15','O16','O11','O12','O13','O14'], axis=1)\n",
        "\n",
        "#Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 133,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "vV3ZjkRZZuaB",
        "outputId": "e7fd3f23-6efa-43bd-b532-8fc590ee1393"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  procesamiento  % procesamiento  percepción  % percepción  \\\n",
              "0           0              7        38.888889           2      9.523810   \n",
              "1           3              5        27.777778           1      4.761905   \n",
              "2           3              5        27.777778           2      9.523810   \n",
              "3           3              8        44.444444           4     19.047619   \n",
              "4           3              6        33.333333           4     19.047619   \n",
              "...       ...            ...              ...         ...           ...   \n",
              "9995        0              4        22.222222           4     19.047619   \n",
              "9996        5              5        27.777778           2      9.523810   \n",
              "9997        4              3        16.666667           1      4.761905   \n",
              "9998        6              7        38.888889           5     23.809524   \n",
              "9999        0              5        27.777778           2      9.523810   \n",
              "\n",
              "      comprensión  % comprensión  representación  % representación  \n",
              "0               0            0.0               1              25.0  \n",
              "1               1           25.0               1              25.0  \n",
              "2               0            0.0               1              25.0  \n",
              "3               0            0.0               1              25.0  \n",
              "4               0            0.0               1              25.0  \n",
              "...           ...            ...             ...               ...  \n",
              "9995            0            0.0               1              25.0  \n",
              "9996            0            0.0               1              25.0  \n",
              "9997            1           25.0               0               0.0  \n",
              "9998            1           25.0               0               0.0  \n",
              "9999            0            0.0               0               0.0  \n",
              "\n",
              "[10000 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fe2e00c2-cf98-4d0a-ac46-0123857812cf\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>5</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe2e00c2-cf98-4d0a-ac46-0123857812cf')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fe2e00c2-cf98-4d0a-ac46-0123857812cf button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fe2e00c2-cf98-4d0a-ac46-0123857812cf');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 133
        }
      ],
      "source": [
        "Estudiantes.drop(['O1','O2', 'O3','O4','O5','O6','O7','O8','O9','O10','O11','O12','O13','O14','O15','O16'], axis=1)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 134,
      "metadata": {
        "id": "xYa32dwGZ1OL"
      },
      "outputs": [],
      "source": [
        "#Guardar el nuevo archivo *.csv*\n",
        "Estudiantes.to_csv('/content/drive/MyDrive/DATASET/Resultados/porcentajes.csv')\n",
        "\n",
        "Estudiantes.drop(['O1','O2', 'O3','O4','O5','O6','O7','O8','O9','O10','O11','O12','O13','O14','O15','O16'], axis=1).to_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 135,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "n0aSTOGOaI8c",
        "outputId": "9c1abd8a-b025-4380-8ae7-bf60d90391e7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  procesamiento  % procesamiento  percepción  % percepción  \\\n",
              "0           0              7        38.888889           2      9.523810   \n",
              "2           3              5        27.777778           2      9.523810   \n",
              "3           3              8        44.444444           4     19.047619   \n",
              "4           3              6        33.333333           4     19.047619   \n",
              "6           1              5        27.777778           0      0.000000   \n",
              "...       ...            ...              ...         ...           ...   \n",
              "9995        0              4        22.222222           4     19.047619   \n",
              "9996        5              5        27.777778           2      9.523810   \n",
              "9997        4              3        16.666667           1      4.761905   \n",
              "9998        6              7        38.888889           5     23.809524   \n",
              "9999        0              5        27.777778           2      9.523810   \n",
              "\n",
              "      comprensión  % comprensión  representación  % representación  \n",
              "0               0            0.0               1              25.0  \n",
              "2               0            0.0               1              25.0  \n",
              "3               0            0.0               1              25.0  \n",
              "4               0            0.0               1              25.0  \n",
              "6               1           25.0               1              25.0  \n",
              "...           ...            ...             ...               ...  \n",
              "9995            0            0.0               1              25.0  \n",
              "9996            0            0.0               1              25.0  \n",
              "9997            1           25.0               0               0.0  \n",
              "9998            1           25.0               0               0.0  \n",
              "9999            0            0.0               0               0.0  \n",
              "\n",
              "[9998 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f525d487-f904-48fd-950b-2d62f8ab8e0d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>5</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9998 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f525d487-f904-48fd-950b-2d62f8ab8e0d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f525d487-f904-48fd-950b-2d62f8ab8e0d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f525d487-f904-48fd-950b-2d62f8ab8e0d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 135
        }
      ],
      "source": [
        "#CARGAR LOS DATOS\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES.csv', engine='python', index_col=0)\n",
        "#Las filas tienen un nombre\n",
        "\n",
        "### DATOS DE MUESTRA ###\n",
        "#Se seleccionan unos datos al azar para posteriormente verificar el clúster\n",
        "#que no aportan información importante para el análisis\n",
        "#al que pertenecen\n",
        "indices = [1,5]\n",
        "muestras = pd.DataFrame(Estudiantes.loc[indices],\n",
        "                       columns = Estudiantes.keys()).reset_index(drop = True)\n",
        "\n",
        "Estudiantes.drop(indices, axis = 0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 136,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "LtAdRimqhZQ-",
        "outputId": "87b33c02-df8f-4b8e-9c0b-fc7ee59ade16"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        38.888889      9.523810            0.0              25.0\n",
              "1           3        27.777778      4.761905           25.0              25.0\n",
              "2           3        27.777778      9.523810            0.0              25.0\n",
              "3           3        44.444444     19.047619            0.0              25.0\n",
              "4           3        33.333333     19.047619            0.0              25.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        22.222222     19.047619            0.0              25.0\n",
              "9996        5        27.777778      9.523810            0.0              25.0\n",
              "9997        4        16.666667      4.761905           25.0               0.0\n",
              "9998        6        38.888889     23.809524           25.0               0.0\n",
              "9999        0        27.777778      9.523810            0.0               0.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4cfde739-73c8-42e4-92bc-0f232ccec694\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>6</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4cfde739-73c8-42e4-92bc-0f232ccec694')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4cfde739-73c8-42e4-92bc-0f232ccec694 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4cfde739-73c8-42e4-92bc-0f232ccec694');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ],
      "source": [
        "#CARGAR LOS DATOS\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES.csv', engine='python', index_col=0)\n",
        "#Las filas tienen un nombre\n",
        "\n",
        "### DATOS DE MUESTRA ###\n",
        "#Se seleccionan unos datos al azar para posteriormente verificar el clúster\n",
        "#que no aportan información importante para el análisis\n",
        "#al que pertenecen\n",
        "indices = [1,5]\n",
        "muestras = pd.DataFrame(Estudiantes.loc[indices],\n",
        "                       columns = Estudiantes.keys()).reset_index(drop = True)\n",
        "\n",
        "Estudiantes.drop(indices, axis = 0)\n",
        "Estudiantes.drop(['procesamiento','percepción','comprensión','representación'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 137,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "KAUG23KRZ7SV",
        "outputId": "80ada14d-ac20-42de-f63a-46ca4290120a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  procesamiento  percepción  comprensión  representación\n",
              "0           0              7           2            0               1\n",
              "1           3              5           1            1               1\n",
              "2           3              5           2            0               1\n",
              "3           3              8           4            0               1\n",
              "4           3              6           4            0               1\n",
              "...       ...            ...         ...          ...             ...\n",
              "9995        0              4           4            0               1\n",
              "9996        5              5           2            0               1\n",
              "9997        4              3           1            1               0\n",
              "9998        6              7           5            1               0\n",
              "9999        0              5           2            0               0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d40205a2-410b-4de1-a7ff-8ad258cdc137\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d40205a2-410b-4de1-a7ff-8ad258cdc137')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d40205a2-410b-4de1-a7ff-8ad258cdc137 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d40205a2-410b-4de1-a7ff-8ad258cdc137');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ],
      "source": [
        "Estudiantes.drop(indices, axis = 0)\n",
        "Estudiantes.drop(['% procesamiento','% percepción','% comprensión','% representación'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OZ7pC2cmaCDQ",
        "outputId": "3204544f-6309-4e33-83cb-754bf3035a5f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster           3.5128\n",
              "procesamiento     4.7576\n",
              "percepción        2.4757\n",
              "comprensión       0.4963\n",
              "representación    0.4983\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ],
      "source": [
        "Estudiantes.drop(['% procesamiento','% percepción','% comprensión','% representación'], axis=1).mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gb0haFgZaCBl",
        "outputId": "4c895152-4d92-499c-9a26-cdf5c0dba45f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster              3.512800\n",
              "procesamiento        4.757600\n",
              "% procesamiento     26.431111\n",
              "percepción           2.475700\n",
              "% percepción        11.789048\n",
              "comprensión          0.496300\n",
              "% comprensión       12.407500\n",
              "representación       0.498300\n",
              "% representación    12.457500\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ],
      "source": [
        "Estudiantes.mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "c292HvPOdECC",
        "outputId": "192f00ad-4a70-4ef1-d39a-fcfa44cfb577"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Cluster  procesamiento  % procesamiento    percepción  \\\n",
              "count  10000.000000   10000.000000     10000.000000  10000.000000   \n",
              "mean       3.512800       4.757600        26.431111      2.475700   \n",
              "std        2.270055       1.520287         8.446040      1.308809   \n",
              "min        0.000000       0.000000         0.000000      0.000000   \n",
              "25%        2.000000       4.000000        22.222222      1.000000   \n",
              "50%        4.000000       5.000000        27.777778      2.000000   \n",
              "75%        5.000000       6.000000        33.333333      3.000000   \n",
              "max        7.000000       9.000000        50.000000      5.000000   \n",
              "\n",
              "       % percepción   comprensión  % comprensión  representación  \\\n",
              "count  10000.000000  10000.000000   10000.000000    10000.000000   \n",
              "mean      11.789048      0.496300      12.407500        0.498300   \n",
              "std        6.232423      0.500011      12.500283        0.500022   \n",
              "min        0.000000      0.000000       0.000000        0.000000   \n",
              "25%        4.761905      0.000000       0.000000        0.000000   \n",
              "50%        9.523810      0.000000       0.000000        0.000000   \n",
              "75%       14.285714      1.000000      25.000000        1.000000   \n",
              "max       23.809524      1.000000      25.000000        1.000000   \n",
              "\n",
              "       % representación  \n",
              "count      10000.000000  \n",
              "mean          12.457500  \n",
              "std           12.500553  \n",
              "min            0.000000  \n",
              "25%            0.000000  \n",
              "50%            0.000000  \n",
              "75%           25.000000  \n",
              "max           25.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-efac6e47-a4b6-4f5f-a8f9-98330c24c04d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.512800</td>\n",
              "      <td>4.757600</td>\n",
              "      <td>26.431111</td>\n",
              "      <td>2.475700</td>\n",
              "      <td>11.789048</td>\n",
              "      <td>0.496300</td>\n",
              "      <td>12.407500</td>\n",
              "      <td>0.498300</td>\n",
              "      <td>12.457500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.270055</td>\n",
              "      <td>1.520287</td>\n",
              "      <td>8.446040</td>\n",
              "      <td>1.308809</td>\n",
              "      <td>6.232423</td>\n",
              "      <td>0.500011</td>\n",
              "      <td>12.500283</td>\n",
              "      <td>0.500022</td>\n",
              "      <td>12.500553</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>5.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efac6e47-a4b6-4f5f-a8f9-98330c24c04d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-efac6e47-a4b6-4f5f-a8f9-98330c24c04d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-efac6e47-a4b6-4f5f-a8f9-98330c24c04d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ],
      "source": [
        "Estudiantes.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "unntwm-rd1Ms",
        "outputId": "7eed321d-e769-4cac-9870-ba42e1becc33"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Cluster  procesamiento    percepción   comprensión  representación\n",
              "count  10000.000000   10000.000000  10000.000000  10000.000000    10000.000000\n",
              "mean       3.512800       4.757600      2.475700      0.496300        0.498300\n",
              "std        2.270055       1.520287      1.308809      0.500011        0.500022\n",
              "min        0.000000       0.000000      0.000000      0.000000        0.000000\n",
              "25%        2.000000       4.000000      1.000000      0.000000        0.000000\n",
              "50%        4.000000       5.000000      2.000000      0.000000        0.000000\n",
              "75%        5.000000       6.000000      3.000000      1.000000        1.000000\n",
              "max        7.000000       9.000000      5.000000      1.000000        1.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-394436f1-3a06-441e-b4ea-1b0064d60fc0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.512800</td>\n",
              "      <td>4.757600</td>\n",
              "      <td>2.475700</td>\n",
              "      <td>0.496300</td>\n",
              "      <td>0.498300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.270055</td>\n",
              "      <td>1.520287</td>\n",
              "      <td>1.308809</td>\n",
              "      <td>0.500011</td>\n",
              "      <td>0.500022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>5.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-394436f1-3a06-441e-b4ea-1b0064d60fc0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-394436f1-3a06-441e-b4ea-1b0064d60fc0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-394436f1-3a06-441e-b4ea-1b0064d60fc0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ],
      "source": [
        "Estudiantes.drop(['% procesamiento','% percepción','% comprensión','% representación'], axis=1).describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "id": "TQJahVlfgwiL",
        "outputId": "c71742e8-085b-4d2d-f894-cbeb00ab12bf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Cluster  procesamiento  percepción  comprensión  representación\n",
              "0        4              5           3            0               0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b9cbcbf8-c673-41bd-a69f-e19dce59779d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9cbcbf8-c673-41bd-a69f-e19dce59779d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b9cbcbf8-c673-41bd-a69f-e19dce59779d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b9cbcbf8-c673-41bd-a69f-e19dce59779d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ],
      "source": [
        "Estudiantes.drop(['% procesamiento','% percepción','% comprensión','% representación'], axis=1).mode()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nUnIjeNMhFGj",
        "outputId": "6eb844ef-2bc2-4e5e-8f88-9ddade8b6828"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster           4.0\n",
              "procesamiento     5.0\n",
              "percepción        2.0\n",
              "comprensión       0.0\n",
              "representación    0.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ],
      "source": [
        "Estudiantes.drop(['% procesamiento','% percepción','% comprensión','% representación'], axis=1).median()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "o2Ev1Im2t4AQ"
      },
      "source": [
        "**ESTADÍSTICA DESCRIPTIVA**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ympm5qF_d0O5"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "g_t24vVwt7N4"
      },
      "outputs": [],
      "source": [
        " #Ejemplos de estadistica descriptiva con python\n",
        "\n",
        "import numpy as np # importando numpy\n",
        "from scipy import stats # importando scipy.stats\n",
        "import pandas as pd # importando pandas\n",
        "\n",
        "np.random.seed(2131982) # para poder replicar el random"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TVdunRFyuBa3",
        "outputId": "97508617-b1a5-4fc1-dd04-5dbfae359991"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[ 0.46038022, -1.08942528, -0.62681496, -0.63329028],\n",
              "       [-0.1074033 , -0.88138082, -0.34466623, -0.28320214],\n",
              "       [ 0.94051171,  0.86693793,  1.20947882, -0.16894118],\n",
              "       [-0.12790177, -0.58099931, -0.46188426, -0.18148302],\n",
              "       [-0.76959435, -1.37414587,  1.37696874, -0.18040537]])"
            ]
          },
          "execution_count": 2,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "Estudiantes = np.random.randn(5, 4) # datos normalmente distribuidos\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qXVCGe_UuMYg",
        "outputId": "d2ed5463-25b2-4e51-8c15-12f006753261"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster              3.512800\n",
              "procesamiento        4.757600\n",
              "% procesamiento     26.431111\n",
              "percepción           2.475700\n",
              "% percepción        11.789048\n",
              "comprensión          0.496300\n",
              "% comprensión       12.407500\n",
              "representación       0.498300\n",
              "% representación    12.457500\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ],
      "source": [
        "\n",
        "# media arítmetica\n",
        "Estudiantes.mean() # Calcula la media aritmetica de"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3hCZl9qBuOx4",
        "outputId": "2d27ca49-a261-4723-ec16-476c3c4441d7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster              3.512800\n",
              "procesamiento        4.757600\n",
              "% procesamiento     26.431111\n",
              "percepción           2.475700\n",
              "% percepción        11.789048\n",
              "comprensión          0.496300\n",
              "% comprensión       12.407500\n",
              "representación       0.498300\n",
              "% representación    12.457500\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ],
      "source": [
        "\n",
        "np.mean(Estudiantes) # Mismo resultado desde la funcion de numpy"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SPaNbMx8uZBg",
        "outputId": "0f9671c6-ad8b-4513-e667-5fa2c20f0616"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        9.781305\n",
              "1        4.416226\n",
              "2        8.363316\n",
              "3        4.883598\n",
              "4        7.661376\n",
              "          ...    \n",
              "9995    10.460317\n",
              "9996     9.998236\n",
              "9997     7.132275\n",
              "9998     6.340388\n",
              "9999     7.797178\n",
              "Length: 10000, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ],
      "source": [
        "Estudiantes.mean(axis=1) # media aritmetica de cada fila"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DqFilWGAuc-A",
        "outputId": "7db4ff3d-1aa5-4dfa-e9c7-459a82beecc1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster              3.512800\n",
              "procesamiento        4.757600\n",
              "% procesamiento     26.431111\n",
              "percepción           2.475700\n",
              "% percepción        11.789048\n",
              "comprensión          0.496300\n",
              "% comprensión       12.407500\n",
              "representación       0.498300\n",
              "% representación    12.457500\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ],
      "source": [
        "Estudiantes.mean(axis=0) # media aritmetica de cada columna"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rW7VtQpDuit_",
        "outputId": "57f6e8c0-fb53-4018-d850-379504a07e19"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3.0"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ],
      "source": [
        "\n",
        "# mediana\n",
        "np.median(Estudiantes) "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6OIeCMwwuoaR",
        "outputId": "83213256-d504-4aaf-d22f-6396e52ed124"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 4.        ,  5.        , 27.77777778,  2.        ,  9.52380952,\n",
              "        0.        ,  0.        ,  0.        ,  0.        ])"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ],
      "source": [
        "np.median(Estudiantes, 0) # media aritmetica de cada columna"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SxlQhQl0uuMI",
        "outputId": "0dbe5728-7114-4b14-a1f7-9b0389e8cf97"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster              2.269942\n",
              "procesamiento        1.520211\n",
              "% procesamiento      8.445618\n",
              "percepción           1.308743\n",
              "% percepción         6.232112\n",
              "comprensión          0.499986\n",
              "% comprensión       12.499658\n",
              "representación       0.499997\n",
              "% representación    12.499928\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ],
      "source": [
        "\n",
        " # Desviación típica\n",
        "np.std(Estudiantes)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KJ13-Tr9uy3g",
        "outputId": "25a47e4d-e0c6-45c9-82d7-407f57790ac0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster              2.269942\n",
              "procesamiento        1.520211\n",
              "% procesamiento      8.445618\n",
              "percepción           1.308743\n",
              "% percepción         6.232112\n",
              "comprensión          0.499986\n",
              "% comprensión       12.499658\n",
              "representación       0.499997\n",
              "% representación    12.499928\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ],
      "source": [
        "np.std(Estudiantes, 0) # Desviación típica de cada columna"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2IN82Bieu3y_",
        "outputId": "50e7bb80-7077-4e19-979e-97ecf023e4ce"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster               5.152636\n",
              "procesamiento         2.311042\n",
              "% procesamiento      71.328464\n",
              "percepción            1.712810\n",
              "% percepción         38.839218\n",
              "comprensión           0.249986\n",
              "% comprensión       156.241444\n",
              "representación        0.249997\n",
              "% representación    156.248194\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ],
      "source": [
        "\n",
        "# varianza\n",
        "np.var(Estudiantes) "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IupLw-sHu8uH",
        "outputId": "856b96c4-de98-493d-acc1-7df7a6f587c9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster               5.152636\n",
              "procesamiento         2.311042\n",
              "% procesamiento      71.328464\n",
              "percepción            1.712810\n",
              "% percepción         38.839218\n",
              "comprensión           0.249986\n",
              "% comprensión       156.241444\n",
              "representación        0.249997\n",
              "% representación    156.248194\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ],
      "source": [
        "\n",
        "np.var(Estudiantes, 0) # varianza de cada columna"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hz6SogSbvCMH",
        "outputId": "064844b3-f0af-4ccf-e37a-05c135554ef9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ModeResult(mode=array([[0, 27.77777777777778, 14.285714285714286, 25.0, 0.0, 'Reflexivo',\n",
              "        'Intuitivo', 'Global', 'Visual']], dtype=object), count=array([[1510, 2331, 2550, 5010, 5118, 6530, 5000, 5010, 5118]]))"
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ],
      "source": [
        "# moda\n",
        "stats.mode(Estudiantes) # Calcula la moda de cada columna\n",
        "# el 2do array devuelve la frecuencia."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 432
        },
        "id": "ilYPeEtjvJEf",
        "outputId": "21bf2fe4-1c63-4e0b-ddc9-464fe7244b53"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-112-172d54bdc787>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# correlacion\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorrcoef\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mEstudiantes\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Crea matriz de correlación.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mcorrcoef\u001b[0;34m(*args, **kwargs)\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py\u001b[0m in \u001b[0;36mcorrcoef\u001b[0;34m(x, y, rowvar, bias, ddof, dtype)\u001b[0m\n\u001b[1;32m   2681\u001b[0m         warnings.warn('bias and ddof have no effect and are deprecated',\n\u001b[1;32m   2682\u001b[0m                       DeprecationWarning, stacklevel=3)\n\u001b[0;32m-> 2683\u001b[0;31m     \u001b[0mc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcov\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrowvar\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2684\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2685\u001b[0m         \u001b[0md\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdiag\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mcov\u001b[0;34m(*args, **kwargs)\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py\u001b[0m in \u001b[0;36mcov\u001b[0;34m(m, y, rowvar, bias, ddof, fweights, aweights, dtype)\u001b[0m\n\u001b[1;32m   2516\u001b[0m             \u001b[0mw\u001b[0m \u001b[0;34m*=\u001b[0m \u001b[0maweights\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2517\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2518\u001b[0;31m     \u001b[0mavg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mw_sum\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maverage\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweights\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mw\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturned\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2519\u001b[0m     \u001b[0mw_sum\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mw_sum\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2520\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36maverage\u001b[0;34m(*args, **kwargs)\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py\u001b[0m in \u001b[0;36maverage\u001b[0;34m(a, axis, weights, returned)\u001b[0m\n\u001b[1;32m    378\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    379\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mweights\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 380\u001b[0;31m         \u001b[0mavg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    381\u001b[0m         \u001b[0mscl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mavg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mavg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    382\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py\u001b[0m in \u001b[0;36m_mean\u001b[0;34m(a, axis, dtype, out, keepdims, where)\u001b[0m\n\u001b[1;32m    177\u001b[0m             \u001b[0mis_float16_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    178\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 179\u001b[0;31m     \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mumr_sum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeepdims\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwhere\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    180\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    181\u001b[0m         ret = um.true_divide(\n",
            "\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for +: 'float' and 'str'"
          ]
        }
      ],
      "source": [
        "# correlacion\n",
        "np.corrcoef(Estudiantes) # Crea matriz de correlación."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "sIz6jljgv25a"
      },
      "outputs": [],
      "source": [
        "\n",
        "# calculando la correlación entre dos vectores.\n",
        "#np.corrcoef(Estudiantes[1], Estudiantes[3])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GxRVmiO-v9Zn",
        "outputId": "80867708-60ba-44ff-eddd-31e357116d74"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[114.4569021 ,  46.47705831, 109.13807704, ...,  83.28263836,\n",
              "         60.40807228,  76.24179754],\n",
              "       [ 46.47705831,  54.12533244,  45.85305563, ...,  25.94921055,\n",
              "         67.66663867,  92.29313289],\n",
              "       [109.13807704,  45.85305563, 110.64168836, ...,  82.61638112,\n",
              "         55.51909941,  73.67675177],\n",
              "       ...,\n",
              "       [ 83.28263836,  25.94921055,  82.61638112, ...,  74.83207357,\n",
              "         32.75310742,  44.9622491 ],\n",
              "       [ 60.40807228,  67.66663867,  55.51909941, ...,  32.75310742,\n",
              "         87.11023628, 116.54929173],\n",
              "       [ 76.24179754,  92.29313289,  73.67675177, ...,  44.9622491 ,\n",
              "        116.54929173, 159.53292881]])"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ],
      "source": [
        "# covarianza\n",
        "np.cov(Estudiantes) # calcula matriz de covarianza"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SR2B6b8rwEXH",
        "outputId": "0bbda1df-34d7-4c3e-f5be-848fc5275834"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[0.43350958, 0.18087281],\n",
              "       [0.18087281, 0.11132485]])"
            ]
          },
          "execution_count": 47,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# covarianza de dos vectores\n",
        "np.cov(Estudiantes[0], Estudiantes[1])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 138,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "-suci6lnxpk6",
        "outputId": "20a2a446-0fd2-40e8-f770-399f20096279"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  procesamiento  % procesamiento  percepción  % percepción  \\\n",
              "0           0              7        38.888889           2      9.523810   \n",
              "1           3              5        27.777778           1      4.761905   \n",
              "2           3              5        27.777778           2      9.523810   \n",
              "3           3              8        44.444444           4     19.047619   \n",
              "4           3              6        33.333333           4     19.047619   \n",
              "...       ...            ...              ...         ...           ...   \n",
              "9995        0              4        22.222222           4     19.047619   \n",
              "9996        5              5        27.777778           2      9.523810   \n",
              "9997        4              3        16.666667           1      4.761905   \n",
              "9998        6              7        38.888889           5     23.809524   \n",
              "9999        0              5        27.777778           2      9.523810   \n",
              "\n",
              "      comprensión  % comprensión  representación  % representación  \n",
              "0               0            0.0               1              25.0  \n",
              "1               1           25.0               1              25.0  \n",
              "2               0            0.0               1              25.0  \n",
              "3               0            0.0               1              25.0  \n",
              "4               0            0.0               1              25.0  \n",
              "...           ...            ...             ...               ...  \n",
              "9995            0            0.0               1              25.0  \n",
              "9996            0            0.0               1              25.0  \n",
              "9997            1           25.0               0               0.0  \n",
              "9998            1           25.0               0               0.0  \n",
              "9999            0            0.0               0               0.0  \n",
              "\n",
              "[10000 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ff45dff3-2552-4b88-aca3-cb8c53fb7170\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>1</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>5</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>1</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>2</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff45dff3-2552-4b88-aca3-cb8c53fb7170')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ff45dff3-2552-4b88-aca3-cb8c53fb7170 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ff45dff3-2552-4b88-aca3-cb8c53fb7170');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 138
        }
      ],
      "source": [
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 139,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "DbDsOtFNyX2_",
        "outputId": "1438eb7a-3487-41bf-fdd4-b75308998173"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        38.888889      9.523810            0.0              25.0\n",
              "1           3        27.777778      4.761905           25.0              25.0\n",
              "2           3        27.777778      9.523810            0.0              25.0\n",
              "3           3        44.444444     19.047619            0.0              25.0\n",
              "4           3        33.333333     19.047619            0.0              25.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        22.222222     19.047619            0.0              25.0\n",
              "9996        5        27.777778      9.523810            0.0              25.0\n",
              "9997        4        16.666667      4.761905           25.0               0.0\n",
              "9998        6        38.888889     23.809524           25.0               0.0\n",
              "9999        0        27.777778      9.523810            0.0               0.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-257b4e6e-6ae2-4622-8cc3-c424aee5f42c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>44.444444</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>19.047619</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>5</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>6</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-257b4e6e-6ae2-4622-8cc3-c424aee5f42c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-257b4e6e-6ae2-4622-8cc3-c424aee5f42c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-257b4e6e-6ae2-4622-8cc3-c424aee5f42c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ],
      "source": [
        "#CARGAR LOS DATOS\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES.csv', engine='python', index_col=0)\n",
        "#Las filas tienen un nombre\n",
        "\n",
        "### DATOS DE MUESTRA ###\n",
        "#Se seleccionan unos datos al azar para posteriormente verificar el clúster\n",
        "#que no aportan información importante para el análisis\n",
        "#al que pertenecen\n",
        "indices = [1,5]\n",
        "muestras = pd.DataFrame(Estudiantes.loc[indices],\n",
        "                       columns = Estudiantes.keys()).reset_index(drop = True)\n",
        "\n",
        "Estudiantes.drop(indices, axis = 0)\n",
        "Estudiantes.drop(['procesamiento','percepción','comprensión','representación'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "rF3rlZ8SwQkQ",
        "outputId": "f60762ca-e348-4fcc-a790-7a203d568814"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-8c8a6731-2df2-4c4d-bbd1-f13eacc7ab4b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.415600</td>\n",
              "      <td>26.377778</td>\n",
              "      <td>11.916190</td>\n",
              "      <td>12.587500</td>\n",
              "      <td>12.257500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.289716</td>\n",
              "      <td>8.479694</td>\n",
              "      <td>6.276631</td>\n",
              "      <td>12.500319</td>\n",
              "      <td>12.498272</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.000000</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>5.000000</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>15.476190</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c8a6731-2df2-4c4d-bbd1-f13eacc7ab4b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8c8a6731-2df2-4c4d-bbd1-f13eacc7ab4b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8c8a6731-2df2-4c4d-bbd1-f13eacc7ab4b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "            Cluster  % procesamiento  % percepción  % comprensión  \\\n",
              "count  10000.000000     10000.000000  10000.000000   10000.000000   \n",
              "mean       3.415600        26.377778     11.916190      12.587500   \n",
              "std        2.289716         8.479694      6.276631      12.500319   \n",
              "min        0.000000         0.000000      0.000000       0.000000   \n",
              "25%        1.000000        22.222222      9.523810       0.000000   \n",
              "50%        4.000000        27.777778     14.285714      25.000000   \n",
              "75%        5.000000        33.333333     15.476190      25.000000   \n",
              "max        7.000000        50.000000     23.809524      25.000000   \n",
              "\n",
              "       % representación  \n",
              "count      10000.000000  \n",
              "mean          12.257500  \n",
              "std           12.498272  \n",
              "min            0.000000  \n",
              "25%            0.000000  \n",
              "50%            0.000000  \n",
              "75%           25.000000  \n",
              "max           25.000000  "
            ]
          },
          "execution_count": 50,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "\n",
        "# resumen estadistadistico con pandas\n",
        "Estudiantes.drop(['procesamiento','percepción','comprensión','representación'], axis=1).describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "metadata": {
        "id": "X2hkjd6y0LCo"
      },
      "outputs": [],
      "source": [
        "#Guardar el nuevo archivo *.csv*\n",
        "Estudiantes.to_csv('/content/drive/MyDrive/DATASET/Resultados/valores_dimensión.csv')\n",
        "\n",
        "#Estudiantes.drop(['procesamiento','percepción','comprensión','representación'], axis=1).to_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES_DIMENSIÓN.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "Ky_yHxT80ahA",
        "outputId": "04d7e35b-d66d-4749-eba6-fcaf7f23ba6d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d0693cf4-80f7-40e3-8c0e-60982e2f8b19\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0693cf4-80f7-40e3-8c0e-60982e2f8b19')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d0693cf4-80f7-40e3-8c0e-60982e2f8b19 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d0693cf4-80f7-40e3-8c0e-60982e2f8b19');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ],
      "source": [
        "#CARGAR LOS DATOS\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES_DIMENSIÓN.csv', engine='python', index_col=0)\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "bD5X434b0sFw",
        "outputId": "899a78b3-f818-4643-bfc4-d9cae3dfd640"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-6ac528e8-dd73-4fab-bc49-ff0e3d28f276\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.0000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.333200</td>\n",
              "      <td>28.527778</td>\n",
              "      <td>11.860476</td>\n",
              "      <td>12.5250</td>\n",
              "      <td>12.205000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.365151</td>\n",
              "      <td>8.910447</td>\n",
              "      <td>6.337254</td>\n",
              "      <td>12.5006</td>\n",
              "      <td>12.497143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>11.904762</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>5.000000</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ac528e8-dd73-4fab-bc49-ff0e3d28f276')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6ac528e8-dd73-4fab-bc49-ff0e3d28f276 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6ac528e8-dd73-4fab-bc49-ff0e3d28f276');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "            Cluster  % procesamiento  % percepción  % comprensión  \\\n",
              "count  10000.000000     10000.000000  10000.000000     10000.0000   \n",
              "mean       3.333200        28.527778     11.860476        12.5250   \n",
              "std        2.365151         8.910447      6.337254        12.5006   \n",
              "min        0.000000         0.000000      0.000000         0.0000   \n",
              "25%        1.000000        22.222222      4.761905         0.0000   \n",
              "50%        3.000000        27.777778     11.904762        25.0000   \n",
              "75%        5.000000        33.333333     14.285714        25.0000   \n",
              "max        7.000000        50.000000     23.809524        25.0000   \n",
              "\n",
              "       % representación  \n",
              "count      10000.000000  \n",
              "mean          12.205000  \n",
              "std           12.497143  \n",
              "min            0.000000  \n",
              "25%            0.000000  \n",
              "50%            0.000000  \n",
              "75%           25.000000  \n",
              "max           25.000000  "
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "Estudiantes.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_N64OLhjYFS6",
        "outputId": "3addc794-a709-4f40-e40f-3c726aface19"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Cluster              3.415600\n",
              "procesamiento        4.748000\n",
              "% procesamiento     26.377778\n",
              "percepción           2.502400\n",
              "% percepción        11.916190\n",
              "comprensión          0.503500\n",
              "% comprensión       12.587500\n",
              "representación       0.490300\n",
              "% representación    12.257500\n",
              "dtype: float64"
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "Estudiantes.mean()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "reuQe8SZ9Sno"
      },
      "source": [
        "**Distribución normal**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "ZofdavnY9VXI",
        "outputId": "7e6dba21-94ca-49a1-be24-e371b62c3e19"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# importando modulos necesarios\n",
        "%matplotlib inline\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np \n",
        "from scipy import stats \n",
        "import seaborn as sns \n",
        "\n",
        "np.random.seed(2016) # replicar random\n",
        "\n",
        "# parametros esteticos de seaborn\n",
        "sns.set_palette(\"deep\", desat=.6)\n",
        "sns.set_context(rc={\"figure.figsize\": (8, 4)})\n",
        "\n",
        "# Graficando histograma\n",
        "mu, sigma = 0, 0.2 # media y desvio estandar\n",
        "Estudiantes = np.random.normal(mu, sigma, 1000) #creando muestra de datos\n",
        "\n",
        "# histograma de distribución normal.\n",
        "cuenta, cajas, ignorar = plt.hist(Estudiantes, 20)\n",
        "plt.ylabel('frecuencia')\n",
        "plt.xlabel('valores')\n",
        "plt.title('Histograma')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 570
        },
        "id": "vAm06XS9-2Mf",
        "outputId": "a4a59910-8fde-442b-ed49-527139234260"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Graficando FMP\n",
        "n, p = 30, 0.4 # parametros de forma de la distribución binomial\n",
        "n_1, p_1 = 20, 0.3 # parametros de forma de la distribución binomial\n",
        "Estudiantes = np.arange(stats.binom.ppf(0.01, n, p),\n",
        "              stats.binom.ppf(0.99, n, p))\n",
        "x_1 = np.arange(stats.binom.ppf(0.01, n_1, p_1),\n",
        "              stats.binom.ppf(0.99, n_1, p_1))\n",
        "fmp = stats.binom.pmf(Estudiantes, n, p) # Función de Masa de Probabilidad\n",
        "fmp_1 = stats.binom.pmf(x_1, n_1, p_1) # Función de Masa de Probabilidad\n",
        "plt.plot(Estudiantes, fmp, '--')\n",
        "plt.plot(x_1, fmp_1)\n",
        "plt.vlines(Estudiantes, 0, fmp, colors='b', lw=5, alpha=0.5)\n",
        "plt.vlines(x_1, 0, fmp_1, colors='g', lw=5, alpha=0.5)\n",
        "plt.title('Función de Masa de Probabilidad')\n",
        "plt.ylabel('probabilidad')\n",
        "plt.xlabel('valores')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "FKkvE1qI_RVI",
        "outputId": "ed7a7d79-320d-4af9-fea9-6d08851d2035"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "\n",
        "# Graficando Pareto\n",
        "k = 2.3 # parametro de forma.\n",
        "pareto = stats.pareto(k)\n",
        "Estudiantes = np.linspace(pareto.ppf(0.01),\n",
        "                pareto.ppf(0.99), 100)\n",
        "fp = pareto.pdf(Estudiantes) # Función de Probabilidad\n",
        "plt.plot(Estudiantes, fp)\n",
        "plt.title('Distribución de Pareto')\n",
        "plt.ylabel('probabilidad')\n",
        "plt.xlabel('valores')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 165
        },
        "id": "8cLconz__8bg",
        "outputId": "518c73a3-ad73-4e1e-c6db-fa75c2e0727b"
      },
      "outputs": [
        {
          "ename": "AttributeError",
          "evalue": "ignored",
          "output_type": "error",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-60-aec4a10e96f0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mEstudiantes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdescribe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'describe'"
          ]
        }
      ],
      "source": [
        "Estudiantes.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 516
        },
        "id": "p0xhBGTJAF_5",
        "outputId": "7171cd15-82ed-42be-b689-db2dfe8a31e1"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-116-5a9a3afc4249>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# Función de Distribución Acumulada\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;31m# ecdf (empirical cumulative distribution function)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m \u001b[0mecdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mECDF\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mEstudiantes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0maxs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mecdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mecdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"#3182bd\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0maxs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_title\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Función de distribución empírica'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'ECDF' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# Gráficos distribución observada (empírica)\n",
        "# ==============================================================================\n",
        "fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(10, 4))\n",
        "\n",
        "# Histograma\n",
        "axs[0].hist(x=Estudiantes, bins=30, color=\"#3182bd\", alpha=0.5)\n",
        "axs[0].plot(Estudiantes, np.full_like(Estudiantes, -0.01), '|k', markeredgewidth=1)\n",
        "axs[0].set_title('Distribución empírica del precio diamantes')\n",
        "axs[0].set_xlabel('precio')\n",
        "axs[0].set_ylabel('counts')\n",
        "\n",
        "# Función de Distribución Acumulada\n",
        "# ecdf (empirical cumulative distribution function)\n",
        "ecdf = ECDF(x=Estudiantes)\n",
        "axs[1].plot(ecdf.x, ecdf.y, color=\"#3182bd\")\n",
        "axs[1].set_title('Función de distribución empírica')\n",
        "axs[1].set_xlabel('precio')\n",
        "axs[1].set_ylabel('CDF')\n",
        "\n",
        "plt.tight_layout();"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 140,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "TF650PFokww1",
        "outputId": "b8e89c6f-8ab5-4b2a-920a-66b9f205002e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1a968301-0007-4d7f-8844-5c3321ef2738\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a968301-0007-4d7f-8844-5c3321ef2738')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1a968301-0007-4d7f-8844-5c3321ef2738 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1a968301-0007-4d7f-8844-5c3321ef2738');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ],
      "source": [
        "#CARGAR LOS DATOS\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES_DIMENSIÓN.csv', engine='python', index_col=0)\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 141,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "puS4RDd3k5F0",
        "outputId": "79a602e1-8dc9-4287-c3e8-5ed4c9de0522"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{0: 1445, 1: 1320, 2: 1420, 3: 1326, 4: 1167, 5: 1036, 6: 993, 7: 1293}"
            ]
          },
          "metadata": {},
          "execution_count": 141
        }
      ],
      "source": [
        "#Número de individuos que existen en cada clúster\n",
        "a = np.array([y_km])\n",
        "\n",
        "unique, counts = np.unique (a, return_counts =True)\n",
        "dict(zip(unique, counts))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Número de individuos que existen en cada clúster\n",
        "a = np.array(['Cluster'])\n",
        "\n",
        "unique, counts = np.unique (a, return_counts =True)\n",
        "dict(zip(unique, counts))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kGoQT2Pk8oex",
        "outputId": "fd451ea4-8e00-4a6f-9b02-787a202def42"
      },
      "execution_count": 142,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Cluster': 1}"
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 143,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "SHLC2TjAq2rH",
        "outputId": "2a5422d3-20a4-48e0-d386-db94def3b5b1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f135f735-45c7-4417-b6ed-20a70c174114\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f135f735-45c7-4417-b6ed-20a70c174114')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f135f735-45c7-4417-b6ed-20a70c174114 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f135f735-45c7-4417-b6ed-20a70c174114');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ],
      "source": [
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ZMF6c8IXrD0F",
        "outputId": "1c3c7ec1-77ff-4f06-8869-e3b4d5bbfd9c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0        0        33.333333     14.285714            0.0              25.0\n",
              "1        7        38.888889      4.761905            0.0              25.0\n",
              "2        4        33.333333      9.523810            0.0              25.0\n",
              "3        5        16.666667      9.523810            0.0               0.0\n",
              "4        3        22.222222     14.285714            0.0               0.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a080e588-1336-496a-86fc-0ba9e1047a9a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a080e588-1336-496a-86fc-0ba9e1047a9a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a080e588-1336-496a-86fc-0ba9e1047a9a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a080e588-1336-496a-86fc-0ba9e1047a9a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ],
      "source": [
        "Estudiantes.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UIpUyh_arli2"
      },
      "outputs": [],
      "source": [
        "#Estudiantes.drop(['estilo','estilo d. procesamiento'], axis=1).to_csv('/content/drive/MyDrive/DATASET/Resultados/estilo.csv')\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 345
        },
        "id": "Q792OVocr5hS",
        "outputId": "0b9fd6ef-e2a1-405b-bba8-75d34c239ac1"
      },
      "outputs": [
        {
          "ename": "KeyError",
          "evalue": "ignored",
          "output_type": "error",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-67-54b825f4fcb4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#CLASIFICACIÓN POR DIMENSIÓN\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m#Estudiantes['estilo d. procesamiento'] = np.where(Estudiantes['% procesamiento']<25, 'Sensitivo', 'Intuitivo')\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mEstudiantes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'estilo'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'estilo d. procesamiento'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4911\u001b[0m             \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4912\u001b[0m             \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4913\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4914\u001b[0m         )\n\u001b[1;32m   4915\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4148\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4149\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4150\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4151\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4152\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors)\u001b[0m\n\u001b[1;32m   4183\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4184\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4185\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4186\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6015\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6016\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6017\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{labels[mask]} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6018\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6019\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: \"['estilo' 'estilo d. procesamiento'] not found in axis\""
          ]
        }
      ],
      "source": [
        "#CLASIFICACIÓN POR DIMENSIÓN\n",
        "#Estudiantes['estilo d. procesamiento'] = np.where(Estudiantes['% procesamiento']<25, 'Sensitivo', 'Intuitivo') \n",
        "Estudiantes.drop(['estilo','estilo d. procesamiento'], axis=1)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "bYNhj9YRsOYg",
        "outputId": "1c9a60e3-5f53-4eee-8289-b3969826c4a4"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-538e3a58-8a8b-4d22-8aa7-15cd643958f9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "      <th>estilo</th>\n",
              "      <th>estilo d. procesamiento</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Sensitivo</td>\n",
              "      <td>Sensitivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Sensitivo</td>\n",
              "      <td>Sensitivo</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-538e3a58-8a8b-4d22-8aa7-15cd643958f9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-538e3a58-8a8b-4d22-8aa7-15cd643958f9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-538e3a58-8a8b-4d22-8aa7-15cd643958f9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   Cluster  % procesamiento  % percepción  % comprensión  % representación  \\\n",
              "0        0        33.333333     14.285714            0.0              25.0   \n",
              "1        7        38.888889      4.761905            0.0              25.0   \n",
              "2        4        33.333333      9.523810            0.0              25.0   \n",
              "3        5        16.666667      9.523810            0.0               0.0   \n",
              "4        3        22.222222     14.285714            0.0               0.0   \n",
              "\n",
              "      estilo estilo d. procesamiento  \n",
              "0  Intuitivo               Intuitivo  \n",
              "1  Intuitivo               Intuitivo  \n",
              "2  Intuitivo               Intuitivo  \n",
              "3  Sensitivo               Sensitivo  \n",
              "4  Sensitivo               Sensitivo  "
            ]
          },
          "execution_count": 229,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 57,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "GeSLLRZ3xqyS",
        "outputId": "77374ce2-795d-4ef6-e012-19e64817c301"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cb28161d-3f8f-4d96-9622-d6e376cca6ed\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb28161d-3f8f-4d96-9622-d6e376cca6ed')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cb28161d-3f8f-4d96-9622-d6e376cca6ed button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cb28161d-3f8f-4d96-9622-d6e376cca6ed');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ],
      "source": [
        "#CARGAR LOS DATOS\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES_DIMENSIÓN.csv', engine='python', index_col=0)\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "HTzumKszqRbu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "outputId": "092f7af8-81f2-4d35-a7a3-c0d422faf82b"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndexError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-62-ab2d9c571cd5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;31m#Estudiantes.drop('estilo',axis=1)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m \u001b[0mEstudiantes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'estilo d.Procesamiento'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mEstudiantes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'% procesamiento'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m<\u001b[0m  \u001b[0;36m25\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Activo'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Reflexivo'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mIndexError\u001b[0m: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
          ]
        }
      ],
      "source": [
        "from numpy.ma.core import where\n",
        "#.loc toma todos los valores por fila\n",
        "#df['new'] = df['W'] + df['Y']\n",
        "#df['Status'] = [\"Senior\" if s >=400 else \"Junior\" for s in df['Salary']] \n",
        "#print(df)\n",
        "#df[(df['W']>0) & (df['Y'] > 0.5)]\n",
        "#if Tienda1['Suma'] > 61000:\n",
        "#        Tienda1['Final'] = 61000\n",
        "#    else:\n",
        "#        Tienda1['Final'] = Tienda1['Suma']   \n",
        "#df ['Bueno'] = np. donde (df ​​['puntos']> 20, ' sí ', ' no ')\n",
        "\n",
        "#Estudiantes.drop('estilo',axis=1)\n",
        "Estudiantes['estilo d.Procesamiento'] = np.where(Estudiantes['% procesamiento']<  25, 'Activo', 'Reflexivo')\n",
        "  \n",
        "             \n",
        "             #Estudiantes['% percepción']) & (Estudiantes['% procesamiento'] > Estudiantes['% comprensión']) & (Estudiantes['% procesamiento'] > Estudiantes['% representación'])]\n",
        "#Estudiantes['estilo'] = Estudiantes.loc['% procesamiento'] > Estudiantes.loc['% percepción']\n",
        "#Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 151,
      "metadata": {
        "id": "WzUO9RerjflP"
      },
      "outputs": [],
      "source": [
        "Estudiantes.rename(columns={'% procesamiento': 'procesamiento',\n",
        "                            '% percepción': 'percepción',\n",
        "                            '% comprensión': 'comprensión',\n",
        "                            '% representación': 'representación'}, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "qMGh2rZnQWBr",
        "outputId": "74212f0f-8f76-404c-bda9-0a133d8f7b66"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  procesamiento  percepción  comprensión  representación  \\\n",
              "0           0      33.333333   14.285714          0.0            25.0   \n",
              "1           7      38.888889    4.761905          0.0            25.0   \n",
              "2           4      33.333333    9.523810          0.0            25.0   \n",
              "3           5      16.666667    9.523810          0.0             0.0   \n",
              "4           3      22.222222   14.285714          0.0             0.0   \n",
              "...       ...            ...         ...          ...             ...   \n",
              "9995        0      16.666667   14.285714          0.0             0.0   \n",
              "9996        4      22.222222    4.761905          0.0            25.0   \n",
              "9997        4      27.777778    0.000000          0.0             0.0   \n",
              "9998        0      27.777778   14.285714         25.0            25.0   \n",
              "9999        0      22.222222    9.523810         25.0            25.0   \n",
              "\n",
              "     EProcesamiento EPercepción EComprensión ERepresentación  \n",
              "0         Reflexivo   Intuitivo   Secuencial          Verbal  \n",
              "1         Reflexivo   Sensorial   Secuencial          Verbal  \n",
              "2         Reflexivo   Sensorial   Secuencial          Verbal  \n",
              "3            Activo   Sensorial   Secuencial          Visual  \n",
              "4            Activo   Intuitivo   Secuencial          Visual  \n",
              "...             ...         ...          ...             ...  \n",
              "9995         Activo   Intuitivo   Secuencial          Visual  \n",
              "9996         Activo   Sensorial   Secuencial          Verbal  \n",
              "9997      Reflexivo   Sensorial   Secuencial          Visual  \n",
              "9998      Reflexivo   Intuitivo       Global          Verbal  \n",
              "9999         Activo   Sensorial       Global          Verbal  \n",
              "\n",
              "[10000 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-736ae360-9e7c-4be6-8daa-9c7d1fbb0e85\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>EProcesamiento</th>\n",
              "      <th>EPercepción</th>\n",
              "      <th>EComprensión</th>\n",
              "      <th>ERepresentación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Activo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Activo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Activo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Activo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Global</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Activo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Global</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-736ae360-9e7c-4be6-8daa-9c7d1fbb0e85')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-736ae360-9e7c-4be6-8daa-9c7d1fbb0e85 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-736ae360-9e7c-4be6-8daa-9c7d1fbb0e85');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ],
      "source": [
        "#Estudiantes.drop('estilo',axis=1)\n",
        "Estudiantes['EProcesamiento'] = np.where(Estudiantes['procesamiento']< 25, 'Activo', 'Reflexivo')\n",
        "Estudiantes['EPercepción'] = np.where(Estudiantes['percepción'] < 10, 'Sensorial', 'Intuitivo')\n",
        "Estudiantes['EComprensión'] = np.where(Estudiantes['comprensión'] < 24, 'Secuencial', 'Global')\n",
        "Estudiantes['ERepresentación'] = np.where(Estudiantes['representación'] < 24, 'Visual', 'Verbal')\n",
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 144,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "vkZ5yISljfj_",
        "outputId": "c6b94078-d316-486e-fc26-d1afab37501d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d22c769c-0252-4c56-b06f-85e4777317e4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d22c769c-0252-4c56-b06f-85e4777317e4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d22c769c-0252-4c56-b06f-85e4777317e4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d22c769c-0252-4c56-b06f-85e4777317e4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 144
        }
      ],
      "source": [
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "mZdM04C4ic0T",
        "outputId": "35ec1ff5-6b24-40e9-818e-9fcfd325afe6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 Cluster  procesamiento  percepción  comprensión  \\\n",
              "EProcesamiento                                                     \n",
              "Activo          2.619308      18.715978   11.771648    12.492795   \n",
              "Reflexivo       3.712557      33.741705   11.907679    12.542113   \n",
              "\n",
              "                representación  \n",
              "EProcesamiento                  \n",
              "Activo               12.010086  \n",
              "Reflexivo            12.308576  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-40493e13-b3ff-4c49-8f5f-9784e1564f5e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EProcesamiento</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Activo</th>\n",
              "      <td>2.619308</td>\n",
              "      <td>18.715978</td>\n",
              "      <td>11.771648</td>\n",
              "      <td>12.492795</td>\n",
              "      <td>12.010086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Reflexivo</th>\n",
              "      <td>3.712557</td>\n",
              "      <td>33.741705</td>\n",
              "      <td>11.907679</td>\n",
              "      <td>12.542113</td>\n",
              "      <td>12.308576</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40493e13-b3ff-4c49-8f5f-9784e1564f5e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-40493e13-b3ff-4c49-8f5f-9784e1564f5e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-40493e13-b3ff-4c49-8f5f-9784e1564f5e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ],
      "source": [
        "Estudiantes.groupby(['EProcesamiento']).mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "Nqtrb9aikit5",
        "outputId": "b4d3e91a-9ab9-4613-f15a-f1b304abd435"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Cluster  procesamiento  percepción  comprensión  representación\n",
              "EPercepción                                                                 \n",
              "Intuitivo     2.9000      28.564444   17.236190        12.38          12.315\n",
              "Sensorial     3.7664      28.491111    6.484762        12.67          12.095"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5a243d2-6cc7-47aa-a136-90c54ec15fdc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EPercepción</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Intuitivo</th>\n",
              "      <td>2.9000</td>\n",
              "      <td>28.564444</td>\n",
              "      <td>17.236190</td>\n",
              "      <td>12.38</td>\n",
              "      <td>12.315</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sensorial</th>\n",
              "      <td>3.7664</td>\n",
              "      <td>28.491111</td>\n",
              "      <td>6.484762</td>\n",
              "      <td>12.67</td>\n",
              "      <td>12.095</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5a243d2-6cc7-47aa-a136-90c54ec15fdc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e5a243d2-6cc7-47aa-a136-90c54ec15fdc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e5a243d2-6cc7-47aa-a136-90c54ec15fdc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ],
      "source": [
        "Estudiantes.groupby(['EPercepción']).mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "EvYu4OIMkrOp",
        "outputId": "606e7159-421c-4f59-c4c7-f8123841ea13"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Cluster  procesamiento  percepción  comprensión  representación\n",
              "EComprensión                                                                  \n",
              "Global        3.312774      28.577290   11.852486         25.0       12.225549\n",
              "Secuencial    3.353707      28.478067   11.868499          0.0       12.184369"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3b3bc175-2e25-48ab-9701-cf024c954137\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EComprensión</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Global</th>\n",
              "      <td>3.312774</td>\n",
              "      <td>28.577290</td>\n",
              "      <td>11.852486</td>\n",
              "      <td>25.0</td>\n",
              "      <td>12.225549</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Secuencial</th>\n",
              "      <td>3.353707</td>\n",
              "      <td>28.478067</td>\n",
              "      <td>11.868499</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.184369</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b3bc175-2e25-48ab-9701-cf024c954137')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3b3bc175-2e25-48ab-9701-cf024c954137 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3b3bc175-2e25-48ab-9701-cf024c954137');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ],
      "source": [
        "Estudiantes.groupby(['EComprensión']).mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "wSckqj5mkvP5",
        "outputId": "4b02dead-1ec8-4a0a-b67c-ae22abff31e1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  Cluster  procesamiento  percepción  comprensión  \\\n",
              "ERepresentación                                                     \n",
              "Verbal           3.317698      28.503801   11.928172    12.546088   \n",
              "Visual           3.347987      28.550649   11.795902    12.504885   \n",
              "\n",
              "                 representación  \n",
              "ERepresentación                  \n",
              "Verbal                     25.0  \n",
              "Visual                      0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80db6353-6cdd-4601-b449-29b0c643e9d8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ERepresentación</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Verbal</th>\n",
              "      <td>3.317698</td>\n",
              "      <td>28.503801</td>\n",
              "      <td>11.928172</td>\n",
              "      <td>12.546088</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Visual</th>\n",
              "      <td>3.347987</td>\n",
              "      <td>28.550649</td>\n",
              "      <td>11.795902</td>\n",
              "      <td>12.504885</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80db6353-6cdd-4601-b449-29b0c643e9d8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-80db6353-6cdd-4601-b449-29b0c643e9d8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-80db6353-6cdd-4601-b449-29b0c643e9d8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ],
      "source": [
        "Estudiantes.groupby(['ERepresentación']).mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "X1jXutI0kqyR",
        "outputId": "3aacc064-edf3-45fb-99da-dc8aafdb03be"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Cluster  procesamiento  percepción  comprensión  \\\n",
              "EProcesamiento                                                    \n",
              "Activo              2.0      22.222222    9.523810          0.0   \n",
              "Reflexivo           4.0      33.333333   14.285714         25.0   \n",
              "\n",
              "                representación  \n",
              "EProcesamiento                  \n",
              "Activo                     0.0  \n",
              "Reflexivo                  0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6112d534-0548-4a5d-9551-f16760285384\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EProcesamiento</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Activo</th>\n",
              "      <td>2.0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Reflexivo</th>\n",
              "      <td>4.0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6112d534-0548-4a5d-9551-f16760285384')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6112d534-0548-4a5d-9551-f16760285384 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6112d534-0548-4a5d-9551-f16760285384');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ],
      "source": [
        "Estudiantes.groupby(['EProcesamiento']).median()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.groupby(['EPercepción']).median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "GxBhD-W1lpYl",
        "outputId": "71d3cd51-f499-44f5-c380-74017a3e973b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Cluster  procesamiento  percepción  comprensión  representación\n",
              "EPercepción                                                                 \n",
              "Intuitivo        3.0      27.777778   14.285714          0.0             0.0\n",
              "Sensorial        4.0      27.777778    4.761905         25.0             0.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-734a8bfa-08a5-4686-b3d6-c0c9fa995310\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EPercepción</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Intuitivo</th>\n",
              "      <td>3.0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sensorial</th>\n",
              "      <td>4.0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-734a8bfa-08a5-4686-b3d6-c0c9fa995310')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-734a8bfa-08a5-4686-b3d6-c0c9fa995310 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-734a8bfa-08a5-4686-b3d6-c0c9fa995310');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.groupby(['EComprensión']).median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "-JwKhbBhWOc0",
        "outputId": "84836d81-fdec-47c2-eaab-6008c3f8c158"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Cluster  procesamiento  percepción  comprensión  representación\n",
              "EComprensión                                                                 \n",
              "Global            3.0      27.777778    9.523810         25.0             0.0\n",
              "Secuencial        3.0      27.777778   14.285714          0.0             0.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1e9dfae9-cded-44f2-bafc-31cef8aae57f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EComprensión</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Global</th>\n",
              "      <td>3.0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Secuencial</th>\n",
              "      <td>3.0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e9dfae9-cded-44f2-bafc-31cef8aae57f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1e9dfae9-cded-44f2-bafc-31cef8aae57f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1e9dfae9-cded-44f2-bafc-31cef8aae57f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.groupby(['ERepresentación']).median()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "wALedDOEWRqc",
        "outputId": "20cac6f5-7fce-4876-a8e3-2a4af1842dd8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 Cluster  procesamiento  percepción  comprensión  \\\n",
              "ERepresentación                                                    \n",
              "Verbal               3.0      27.777778   14.285714         25.0   \n",
              "Visual               3.0      27.777778    9.523810         25.0   \n",
              "\n",
              "                 representación  \n",
              "ERepresentación                  \n",
              "Verbal                     25.0  \n",
              "Visual                      0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4fa439d8-0ed3-43d7-8aa7-0da8336288c7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ERepresentación</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Verbal</th>\n",
              "      <td>3.0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Visual</th>\n",
              "      <td>3.0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fa439d8-0ed3-43d7-8aa7-0da8336288c7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4fa439d8-0ed3-43d7-8aa7-0da8336288c7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4fa439d8-0ed3-43d7-8aa7-0da8336288c7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#df=df.groupby[('Id_Cliente')]\n",
        "#df_group = df.groupby('Id_Cliente').first()\n",
        "\n",
        "grup1 = Estudiantes.groupby('Cluster').first()\n",
        "grup1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "2_vqfjMLluZp",
        "outputId": "1c915113-848e-42a2-89b5-9f3468e9d95e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         procesamiento  percepción  comprensión  representación  \\\n",
              "Cluster                                                           \n",
              "0            33.333333   14.285714          0.0            25.0   \n",
              "1            33.333333    9.523810         25.0             0.0   \n",
              "2            33.333333    9.523810         25.0             0.0   \n",
              "3            22.222222   14.285714          0.0             0.0   \n",
              "4            33.333333    9.523810          0.0            25.0   \n",
              "5            16.666667    9.523810          0.0             0.0   \n",
              "6            33.333333    9.523810         25.0            25.0   \n",
              "7            38.888889    4.761905          0.0            25.0   \n",
              "\n",
              "        EProcesamiento EPercepción EComprensión ERepresentación  \n",
              "Cluster                                                          \n",
              "0            Reflexivo   Intuitivo   Secuencial          Verbal  \n",
              "1            Reflexivo   Sensorial       Global          Visual  \n",
              "2            Reflexivo   Sensorial       Global          Visual  \n",
              "3               Activo   Intuitivo   Secuencial          Visual  \n",
              "4            Reflexivo   Sensorial   Secuencial          Verbal  \n",
              "5               Activo   Sensorial   Secuencial          Visual  \n",
              "6            Reflexivo   Sensorial       Global          Verbal  \n",
              "7            Reflexivo   Sensorial   Secuencial          Verbal  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b57b2ac5-6820-4bf9-8942-cf02003a02f6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>EProcesamiento</th>\n",
              "      <th>EPercepción</th>\n",
              "      <th>EComprensión</th>\n",
              "      <th>ERepresentación</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cluster</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Global</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Global</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Activo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Activo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Global</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b57b2ac5-6820-4bf9-8942-cf02003a02f6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b57b2ac5-6820-4bf9-8942-cf02003a02f6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b57b2ac5-6820-4bf9-8942-cf02003a02f6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BlzpqlQMlBrR"
      },
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kVs44oBWlBUI"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Pus65SS5rZCW",
        "outputId": "a1d06279-2db9-4eb7-809e-95039c66fff6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "EProcesamiento\n",
            "Activo       8\n",
            "Reflexivo    8\n",
            "Name: Cluster, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "Estudiantes = pd.DataFrame(Estudiantes, columns=['Cluster','EProcesamiento'])\n",
        "resultado = Estudiantes.groupby('EProcesamiento')['Cluster'].nunique()\n",
        "print(resultado)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yWpVH_mlrZAt",
        "outputId": "dff1d79c-f415-4490-e8d3-5b0171d2b518"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Reflexivo    6530\n",
              "Activo       3470\n",
              "Name: EProcesamiento, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ],
      "source": [
        "Dimensión_procesamiento = Estudiantes['EProcesamiento'].value_counts()\n",
        "Dimensión_procesamiento\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tMesPhA5dmOJ",
        "outputId": "9c3a7374-2984-4db4-f9ca-d91b88f527d5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster           10000\n",
              "EProcesamiento    10000\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ],
      "source": [
        "Estudiantes.count()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mfp7qAjkfJfw",
        "outputId": "9d2a2a3d-7d93-44eb-aae6-221d0c0f2058"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Intuitivo    5000\n",
              "Sensorial    5000\n",
              "Name: EPercepción, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ],
      "source": [
        "Dimensión_percepción = Estudiantes['EPercepción'].value_counts()\n",
        "Dimensión_percepción\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AApps0AyfJdv",
        "outputId": "951cdeac-2f7e-4c7e-c936-61d651daeb36"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Global        5010\n",
              "Secuencial    4990\n",
              "Name: EComprensión, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 92
        }
      ],
      "source": [
        "Dimensión_comprensión = Estudiantes['EComprensión'].value_counts()\n",
        "Dimensión_comprensión\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mi166OWdfZc_",
        "outputId": "81bbd196-425a-4cae-c8db-b0ac1c435781"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Visual    5118\n",
              "Verbal    4882\n",
              "Name: ERepresentación, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 93
        }
      ],
      "source": [
        "Dimensión_representación = Estudiantes['ERepresentación'].value_counts()\n",
        "Dimensión_representación"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z-h7NWLBgIG8",
        "outputId": "29039c38-d15a-49c8-abcb-07f082e14426"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Reflexivo    6530\n",
            "Activo       3470\n",
            "Name: EProcesamiento, dtype: int64 \n",
            "\n",
            "Intuitivo    5000\n",
            "Sensorial    5000\n",
            "Name: EPercepción, dtype: int64 \n",
            "\n",
            "Global        5010\n",
            "Secuencial    4990\n",
            "Name: EComprensión, dtype: int64 \n",
            "\n",
            "Visual    5118\n",
            "Verbal    4882\n",
            "Name: ERepresentación, dtype: int64 \n",
            "\n"
          ]
        }
      ],
      "source": [
        "print(Dimensión_procesamiento,\"\\n\")\n",
        "print(Dimensión_percepción,\"\\n\")\n",
        "print(Dimensión_comprensión,\"\\n\")\n",
        "print(Dimensión_representación,\"\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 145,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "eN6fGmN8hMpa",
        "outputId": "fdfb5a35-7b1b-4055-e3a8-99623202b641"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ea62760a-9f7b-44f9-9b06-fc36961fdc56\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea62760a-9f7b-44f9-9b06-fc36961fdc56')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ea62760a-9f7b-44f9-9b06-fc36961fdc56 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ea62760a-9f7b-44f9-9b06-fc36961fdc56');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 145
        }
      ],
      "source": [
        "Estudiantes"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "xdMl8iztrh1p",
        "outputId": "47b45d75-1e40-48aa-8fe1-00ab903aed0e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Cluster  procesamiento    percepción  comprensión  representación\n",
              "count  10000.000000   10000.000000  10000.000000   10000.0000    10000.000000\n",
              "mean       3.333200      28.527778     11.860476      12.5250       12.205000\n",
              "std        2.365151       8.910447      6.337254      12.5006       12.497143\n",
              "min        0.000000       0.000000      0.000000       0.0000        0.000000\n",
              "25%        1.000000      22.222222      4.761905       0.0000        0.000000\n",
              "50%        3.000000      27.777778     11.904762      25.0000        0.000000\n",
              "75%        5.000000      33.333333     14.285714      25.0000       25.000000\n",
              "max        7.000000      50.000000     23.809524      25.0000       25.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-14b759c7-63db-4df2-809e-09d1797937a4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.0000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.333200</td>\n",
              "      <td>28.527778</td>\n",
              "      <td>11.860476</td>\n",
              "      <td>12.5250</td>\n",
              "      <td>12.205000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.365151</td>\n",
              "      <td>8.910447</td>\n",
              "      <td>6.337254</td>\n",
              "      <td>12.5006</td>\n",
              "      <td>12.497143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.000000</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>11.904762</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>5.000000</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>23.809524</td>\n",
              "      <td>25.0000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14b759c7-63db-4df2-809e-09d1797937a4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-14b759c7-63db-4df2-809e-09d1797937a4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-14b759c7-63db-4df2-809e-09d1797937a4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.mode()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "aT2sVGvir-4A",
        "outputId": "f7925f75-b1ff-498e-d4f4-bdd13e9d4824"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Cluster  procesamiento  percepción  comprensión  representación  \\\n",
              "0      0.0      27.777778   14.285714         25.0             0.0   \n",
              "1      NaN            NaN         NaN          NaN             NaN   \n",
              "\n",
              "  EProcesamiento EPercepción EComprensión ERepresentación  \n",
              "0      Reflexivo   Intuitivo       Global          Visual  \n",
              "1            NaN   Sensorial          NaN             NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-de34a4a1-d057-466d-83cb-5adc5a90e10c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>procesamiento</th>\n",
              "      <th>percepción</th>\n",
              "      <th>comprensión</th>\n",
              "      <th>representación</th>\n",
              "      <th>EProcesamiento</th>\n",
              "      <th>EPercepción</th>\n",
              "      <th>EComprensión</th>\n",
              "      <th>ERepresentación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Global</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de34a4a1-d057-466d-83cb-5adc5a90e10c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-de34a4a1-d057-466d-83cb-5adc5a90e10c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-de34a4a1-d057-466d-83cb-5adc5a90e10c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes['Cluster'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f2I1kRlEs2Ep",
        "outputId": "4a9c38ed-a2cb-4bf3-91ed-92042d17a3ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    1510\n",
              "1    1398\n",
              "2    1374\n",
              "5    1233\n",
              "7    1226\n",
              "6    1213\n",
              "4    1023\n",
              "3    1023\n",
              "Name: Cluster, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.mode()"
      ],
      "metadata": {
        "id": "UlcDy3FPZFrc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes['Cluster'][0:10000].max()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3BMIO6N3vXQQ",
        "outputId": "f01ea11e-1921-467d-9e1b-2655a8a453e8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 165
        },
        "id": "mLDpgVcwvhEA",
        "outputId": "f9db1013-d412-425b-d639-56b98dca3f08"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-117-72d87e30fc22>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mEstudiantes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'plot'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.plot.scatter(x='Cluster', y='EProcesamiento')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 570
        },
        "id": "QQGJb_yQvz1Q",
        "outputId": "b8f8a947-5561-422f-b116-906b3b347ff3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fad676b16d0>"
            ]
          },
          "metadata": {},
          "execution_count": 100
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes['Cluster'].plot.hist()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 165
        },
        "id": "RnAPioTNwLXo",
        "outputId": "12241653-5e61-421c-b52e-7d97ad3e46f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndexError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-118-8dbd40e3a6e8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mEstudiantes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Cluster'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mIndexError\u001b[0m: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.plot.box()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "id": "tMDIEpi2we_A",
        "outputId": "faafb332-d94f-4264-c078-015d31ad998e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fad6a816810>"
            ]
          },
          "metadata": {},
          "execution_count": 102
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.groupby('Cluster').boxplot(figsize= (20,40))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "tDjFz_W7wpjJ",
        "outputId": "2e3c7fb2-c28f-41cb-fce2-72ec61c3f5ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         AxesSubplot(0.1,0.679412;0.235294x0.220588)\n",
              "1    AxesSubplot(0.382353,0.679412;0.235294x0.220588)\n",
              "2    AxesSubplot(0.664706,0.679412;0.235294x0.220588)\n",
              "3         AxesSubplot(0.1,0.414706;0.235294x0.220588)\n",
              "4    AxesSubplot(0.382353,0.414706;0.235294x0.220588)\n",
              "5    AxesSubplot(0.664706,0.414706;0.235294x0.220588)\n",
              "6             AxesSubplot(0.1,0.15;0.235294x0.220588)\n",
              "7        AxesSubplot(0.382353,0.15;0.235294x0.220588)\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 105
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x2880 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tabla = pd.pivot_table(Estudiantes, values = 'procesamiento', index='Cluster', aggfunc=np.mean)\n",
        "tabla"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "h5vaFl94AMtm",
        "outputId": "36ad577f-fa34-46ed-f34d-9037c0437c6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         procesamiento\n",
              "Cluster               \n",
              "0            25.456218\n",
              "1            35.030202\n",
              "2            19.424228\n",
              "3            25.648963\n",
              "4            26.208320\n",
              "5            32.918807\n",
              "6            30.090684\n",
              "7            33.473808"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8d06b035-1f8d-4cef-a4ad-f25751950134\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>procesamiento</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cluster</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>25.456218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>35.030202</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>19.424228</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>25.648963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>26.208320</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>32.918807</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>30.090684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>33.473808</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d06b035-1f8d-4cef-a4ad-f25751950134')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8d06b035-1f8d-4cef-a4ad-f25751950134 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8d06b035-1f8d-4cef-a4ad-f25751950134');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tabla.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 570
        },
        "id": "N3dHyX4vA-U2",
        "outputId": "983ea0b0-7f2c-4357-e227-c1a9953460ac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fad6785d550>"
            ]
          },
          "metadata": {},
          "execution_count": 107
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes.std()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CJeY4vjtBM--",
        "outputId": "3d088116-685e-4282-d1f2-f93073e91b7f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster            2.365151\n",
              "procesamiento      8.910447\n",
              "percepción         6.337254\n",
              "comprensión       12.500600\n",
              "representación    12.497143\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(Estudiantes.groupby('Cluster').agg(dim1=('procesamiento', 'std')))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "8Oq7El1dDyZm",
        "outputId": "0ef605ff-a817-405a-9e19-6d7279b8d718"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             dim1\n",
              "Cluster          \n",
              "0        7.271764\n",
              "1        7.806781\n",
              "2        7.034768\n",
              "3        7.441782\n",
              "4        7.305739\n",
              "5        7.446053\n",
              "6        6.916900\n",
              "7        7.319192"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-101002f6-40a6-41fd-b978-fa461c71719e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>dim1</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cluster</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.271764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7.806781</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.034768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7.441782</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7.305739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7.446053</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6.916900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7.319192</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-101002f6-40a6-41fd-b978-fa461c71719e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-101002f6-40a6-41fd-b978-fa461c71719e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-101002f6-40a6-41fd-b978-fa461c71719e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(Estudiantes.groupby('Cluster').agg(dim1=('percepción', 'std')))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "id": "RZ2CeUB0EFOX",
        "outputId": "d077c9c3-e1ae-452b-e670-d85499a70153"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             dim1\n",
              "Cluster          \n",
              "0        6.311018\n",
              "1        6.056636\n",
              "2        6.379981\n",
              "3        4.185023\n",
              "4        4.018094\n",
              "5        3.335989\n",
              "6        5.783961\n",
              "7        3.452998"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c729457-7156-49f3-95ae-2f09386a248a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>dim1</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cluster</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6.311018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6.056636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6.379981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.185023</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4.018094</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3.335989</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>5.783961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3.452998</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c729457-7156-49f3-95ae-2f09386a248a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3c729457-7156-49f3-95ae-2f09386a248a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3c729457-7156-49f3-95ae-2f09386a248a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "4PI2j_MQAMhg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "Bn0a62kBAMa2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "7wsy9a2qAMR9"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "YxXZg2HUAL8m"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xbNPLvEhhMoR",
        "outputId": "fda1e6d2-875f-42a4-97be-65c99f91e829"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  # This is added back by InteractiveShellApp.init_path()\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "0       33.333333\n",
              "1       38.888889\n",
              "2       33.333333\n",
              "3       16.666667\n",
              "4       22.222222\n",
              "          ...    \n",
              "9995    16.666667\n",
              "9996    25.000000\n",
              "9997    27.777778\n",
              "9998    27.777778\n",
              "9999    25.000000\n",
              "Length: 10000, dtype: float64"
            ]
          },
          "execution_count": 74,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#ENCONTRAR EL VALOR MÁXIMO DE ENTRE LOS VALORES DE LAS DIMENSIONES Y ELEGIR EL ESTILO DE APRENDIZAJE PREDOMINANTE\n",
        "\n",
        "#maxValor = Estudiantes.max(axis=1)\n",
        "#print(maxValor)\n",
        "\n",
        "\n",
        "#maxValor = Estudiantes[['procesamiento','percepción','comprensión','representación']].max()\n",
        "#print(\"Valor máximo es: \")\n",
        "#maxValor\n",
        "\n",
        "Estudiantes.max(axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "cHI9DWfWrZDU",
        "outputId": "39e6b826-6412-49ec-9212-0b1416e5aee4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     EProcesamiento EPercepción EComprensión ERepresentación\n",
              "0         Reflexivo   Intuitivo   Secuencial          Verbal\n",
              "1         Reflexivo   Sensorial   Secuencial          Verbal\n",
              "2         Reflexivo   Sensorial   Secuencial          Verbal\n",
              "3            Activo   Sensorial   Secuencial          Visual\n",
              "4            Activo   Intuitivo   Secuencial          Visual\n",
              "...             ...         ...          ...             ...\n",
              "9995         Activo   Intuitivo   Secuencial          Visual\n",
              "9996         Activo   Sensorial   Secuencial          Verbal\n",
              "9997      Reflexivo   Sensorial   Secuencial          Visual\n",
              "9998      Reflexivo   Intuitivo       Global          Verbal\n",
              "9999         Activo   Sensorial       Global          Verbal\n",
              "\n",
              "[10000 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-acbff251-049e-4b4f-aa42-f4c2902d634f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>EProcesamiento</th>\n",
              "      <th>EPercepción</th>\n",
              "      <th>EComprensión</th>\n",
              "      <th>ERepresentación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Activo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Activo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>Activo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>Activo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Secuencial</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>Reflexivo</td>\n",
              "      <td>Intuitivo</td>\n",
              "      <td>Global</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>Activo</td>\n",
              "      <td>Sensorial</td>\n",
              "      <td>Global</td>\n",
              "      <td>Verbal</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acbff251-049e-4b4f-aa42-f4c2902d634f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-acbff251-049e-4b4f-aa42-f4c2902d634f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-acbff251-049e-4b4f-aa42-f4c2902d634f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ],
      "source": [
        "# resumen estadistadistico con pandas\n",
        "Estudiantes.drop(['Cluster','procesamiento','percepción','comprensión','representación'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "freq = Estudiantes.groupby(['EProcesamiento']).count() \n",
        "print(freq)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fmUU0tph9MyK",
        "outputId": "d8392e85-eea6-484e-bfd6-d2efe3c4ef80"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                Cluster  procesamiento  percepción  comprensión  \\\n",
            "EProcesamiento                                                    \n",
            "Activo             3470           3470        3470         3470   \n",
            "Reflexivo          6530           6530        6530         6530   \n",
            "\n",
            "                representación  EPercepción  EComprensión  ERepresentación  \n",
            "EProcesamiento                                                              \n",
            "Activo                    3470         3470          3470             3470  \n",
            "Reflexivo                 6530         6530          6530             6530  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "freq = Estudiantes.groupby(['Cluster', 'EProcesamiento']).size() \n",
        "print(freq)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QNtqAYgF9m-r",
        "outputId": "a01efe0a-0a69-488c-d193-8f49be89ce9e"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cluster  EProcesamiento\n",
            "0        Activo             709\n",
            "         Reflexivo          801\n",
            "1        Activo             153\n",
            "         Reflexivo         1245\n",
            "2        Activo            1090\n",
            "         Reflexivo          284\n",
            "3        Activo             476\n",
            "         Reflexivo          547\n",
            "4        Activo             446\n",
            "         Reflexivo          577\n",
            "5        Activo             182\n",
            "         Reflexivo         1051\n",
            "6        Activo             264\n",
            "         Reflexivo          949\n",
            "7        Activo             150\n",
            "         Reflexivo         1076\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "freq = Estudiantes.groupby(['Cluster', 'EPercepción']).size() \n",
        "print(freq)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X4H_3Fa29zy6",
        "outputId": "1456d896-9d5e-4c86-8917-8fcbc28406ef"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cluster  EPercepción\n",
            "0        Intuitivo       775\n",
            "         Sensorial       735\n",
            "1        Intuitivo       844\n",
            "         Sensorial       554\n",
            "2        Intuitivo       692\n",
            "         Sensorial       682\n",
            "3        Intuitivo       902\n",
            "         Sensorial       121\n",
            "4        Intuitivo       118\n",
            "         Sensorial       905\n",
            "5        Intuitivo       920\n",
            "         Sensorial       313\n",
            "6        Intuitivo       749\n",
            "         Sensorial       464\n",
            "7        Sensorial      1226\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "freq = Estudiantes.groupby(['Cluster', 'EComprensión']).size() \n",
        "print(freq)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7gwEFc3s95DJ",
        "outputId": "9ccf2a4e-85f8-4cdf-abc4-ba455a7936d8"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cluster  EComprensión\n",
            "0        Global          802\n",
            "         Secuencial      708\n",
            "1        Global          658\n",
            "         Secuencial      740\n",
            "2        Global          693\n",
            "         Secuencial      681\n",
            "3        Global          518\n",
            "         Secuencial      505\n",
            "4        Global          513\n",
            "         Secuencial      510\n",
            "5        Global          615\n",
            "         Secuencial      618\n",
            "6        Global          605\n",
            "         Secuencial      608\n",
            "7        Global          606\n",
            "         Secuencial      620\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "freq = Estudiantes.groupby(['Cluster', 'ERepresentación']).size() \n",
        "print(freq)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CCgTni6Z98rR",
        "outputId": "f7a8c1ea-9684-4f91-baaa-b2762503ea08"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cluster  ERepresentación\n",
            "0        Verbal             735\n",
            "         Visual             775\n",
            "1        Verbal             676\n",
            "         Visual             722\n",
            "2        Verbal             702\n",
            "         Visual             672\n",
            "3        Verbal             501\n",
            "         Visual             522\n",
            "4        Verbal             508\n",
            "         Visual             515\n",
            "5        Verbal             578\n",
            "         Visual             655\n",
            "6        Verbal             582\n",
            "         Visual             631\n",
            "7        Verbal             600\n",
            "         Visual             626\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "9_AcnabxJLd9",
        "outputId": "729cb00e-d45c-49c5-ff36-4de63528a478"
      },
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cabf601a-237a-485d-923a-83447a63bb8c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cabf601a-237a-485d-923a-83447a63bb8c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cabf601a-237a-485d-923a-83447a63bb8c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cabf601a-237a-485d-923a-83447a63bb8c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#CARGAR LOS DATOS\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/SOLO_PORCENTAJES_DIMENSIÓN.csv', engine='python', index_col=0)\n",
        "Estudiantes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "UOPCmxfyQJSd",
        "outputId": "4c7fa739-2390-4302-969d-e94ec04a09b3"
      },
      "execution_count": 184,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación\n",
              "0           0        33.333333     14.285714            0.0              25.0\n",
              "1           7        38.888889      4.761905            0.0              25.0\n",
              "2           4        33.333333      9.523810            0.0              25.0\n",
              "3           5        16.666667      9.523810            0.0               0.0\n",
              "4           3        22.222222     14.285714            0.0               0.0\n",
              "...       ...              ...           ...            ...               ...\n",
              "9995        0        16.666667     14.285714            0.0               0.0\n",
              "9996        4        22.222222      4.761905            0.0              25.0\n",
              "9997        4        27.777778      0.000000            0.0               0.0\n",
              "9998        0        27.777778     14.285714           25.0              25.0\n",
              "9999        0        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-095d83ed-8e1a-4931-b103-f3db4f6ca125\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-095d83ed-8e1a-4931-b103-f3db4f6ca125')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-095d83ed-8e1a-4931-b103-f3db4f6ca125 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-095d83ed-8e1a-4931-b103-f3db4f6ca125');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Dimensiones = pd.DataFrame(Estudiantes, columns=['% procesamiento','% percepción','% comprensión', '% representación'])\n",
        "Dimensiones"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "jw9akPqwSz3z",
        "outputId": "862100f4-237d-49db-e4f0-fbb0c3f31a8c"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      % procesamiento  % percepción  % comprensión  % representación\n",
              "0           33.333333     14.285714            0.0              25.0\n",
              "1           38.888889      4.761905            0.0              25.0\n",
              "2           33.333333      9.523810            0.0              25.0\n",
              "3           16.666667      9.523810            0.0               0.0\n",
              "4           22.222222     14.285714            0.0               0.0\n",
              "...               ...           ...            ...               ...\n",
              "9995        16.666667     14.285714            0.0               0.0\n",
              "9996        22.222222      4.761905            0.0              25.0\n",
              "9997        27.777778      0.000000            0.0               0.0\n",
              "9998        27.777778     14.285714           25.0              25.0\n",
              "9999        22.222222      9.523810           25.0              25.0\n",
              "\n",
              "[10000 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dc7eccd3-b77e-43e2-9acf-783560553ac7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc7eccd3-b77e-43e2-9acf-783560553ac7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dc7eccd3-b77e-43e2-9acf-783560553ac7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dc7eccd3-b77e-43e2-9acf-783560553ac7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 185
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Dimensiones = pd.DataFrame(Estudiantes, columns=['% procesamiento','% percepción','% comprensión', '% representación'])\n",
        "Estudiantes['nuevo']=Dimensiones.max(axis=1)\n",
        "Estudiantes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "t0MJ3b-_TN3i",
        "outputId": "82a5be45-6c36-4abc-9f51-d268a8cf7242"
      },
      "execution_count": 186,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster  % procesamiento  % percepción  % comprensión  % representación  \\\n",
              "0           0        33.333333     14.285714            0.0              25.0   \n",
              "1           7        38.888889      4.761905            0.0              25.0   \n",
              "2           4        33.333333      9.523810            0.0              25.0   \n",
              "3           5        16.666667      9.523810            0.0               0.0   \n",
              "4           3        22.222222     14.285714            0.0               0.0   \n",
              "...       ...              ...           ...            ...               ...   \n",
              "9995        0        16.666667     14.285714            0.0               0.0   \n",
              "9996        4        22.222222      4.761905            0.0              25.0   \n",
              "9997        4        27.777778      0.000000            0.0               0.0   \n",
              "9998        0        27.777778     14.285714           25.0              25.0   \n",
              "9999        0        22.222222      9.523810           25.0              25.0   \n",
              "\n",
              "          nuevo  \n",
              "0     33.333333  \n",
              "1     38.888889  \n",
              "2     33.333333  \n",
              "3     16.666667  \n",
              "4     22.222222  \n",
              "...         ...  \n",
              "9995  16.666667  \n",
              "9996  25.000000  \n",
              "9997  27.777778  \n",
              "9998  27.777778  \n",
              "9999  25.000000  \n",
              "\n",
              "[10000 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fd507c67-9afa-4e68-adf2-809fca5c4682\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>% procesamiento</th>\n",
              "      <th>% percepción</th>\n",
              "      <th>% comprensión</th>\n",
              "      <th>% representación</th>\n",
              "      <th>nuevo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>33.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>38.888889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>33.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.222222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>4.761905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>14.285714</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>9.523810</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd507c67-9afa-4e68-adf2-809fca5c4682')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fd507c67-9afa-4e68-adf2-809fca5c4682 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fd507c67-9afa-4e68-adf2-809fca5c4682');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Guardar el nuevo archivo *.csv*\n",
        "#Estudiantes.to_csv('/content/drive/MyDrive/DATASET/Resultados/porcentajes.csv')\n",
        "\n",
        "Estudiantes.drop(['% procesamiento', '% percepción', '% comprensión', '% representación'], axis=1).to_csv('/content/drive/MyDrive/DATASET/Resultados/porcentaje_maximo.csv')"
      ],
      "metadata": {
        "id": "AA1JkJfp0srt"
      },
      "execution_count": 187,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Estudiantes = pd.read_csv('/content/drive/MyDrive/DATASET/Resultados/porcentaje_maximo.csv', engine='python', index_col=0)\n",
        "Estudiantes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "NAeYxl_u1uhs",
        "outputId": "454b2096-c4da-40cb-e70e-3d8830cf4550"
      },
      "execution_count": 201,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster      nuevo\n",
              "0           0  33.333333\n",
              "1           7  38.888889\n",
              "2           4  33.333333\n",
              "3           5  16.666667\n",
              "4           3  22.222222\n",
              "...       ...        ...\n",
              "9995        0  16.666667\n",
              "9996        4  25.000000\n",
              "9997        4  27.777778\n",
              "9998        0  27.777778\n",
              "9999        0  25.000000\n",
              "\n",
              "[10000 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7beafcee-17a9-48a2-816d-abb7f28d6cc4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>nuevo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7beafcee-17a9-48a2-816d-abb7f28d6cc4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7beafcee-17a9-48a2-816d-abb7f28d6cc4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7beafcee-17a9-48a2-816d-abb7f28d6cc4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 201
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#CONDICIONES\n",
        "\n",
        "Estudiantes.loc[(Estudiantes['nuevo']>=35)&(Estudiantes['nuevo']<=50), 'estilo'] = 'Activo'\n",
        "Estudiantes.loc[(Estudiantes['nuevo']>=31)&(Estudiantes['nuevo']<=35), 'estilo'] = 'Reflexivo'\n",
        "Estudiantes.loc[(Estudiantes['nuevo']>=25)&(Estudiantes['nuevo']<=29), 'estilo'] = 'Reflexivo'\n",
        "Estudiantes.loc[(Estudiantes['nuevo']>=21)&(Estudiantes['nuevo']<=24), 'estilo'] = 'Secuencial'\n",
        "Estudiantes.loc[(Estudiantes['nuevo']>=17)&(Estudiantes['nuevo']<=20), 'estilo'] = 'Global'\n",
        "Estudiantes.loc[(Estudiantes['nuevo']>=13)&(Estudiantes['nuevo']<17), 'estilo'] = 'Visual'\n",
        "Estudiantes.loc[(Estudiantes['nuevo']<=15), 'estilo'] = 'Verbal'\n",
        "\n",
        "Estudiantes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "Z_xZGfrN2BaM",
        "outputId": "9816c0e0-f8bf-4637-cab3-c8b64a3c8b7c"
      },
      "execution_count": 204,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Cluster      nuevo      estilo\n",
              "0           0  33.333333   Reflexivo\n",
              "1           7  38.888889      Activo\n",
              "2           4  33.333333   Reflexivo\n",
              "3           5  16.666667      Visual\n",
              "4           3  22.222222  Secuencial\n",
              "...       ...        ...         ...\n",
              "9995        0  16.666667      Visual\n",
              "9996        4  25.000000   Reflexivo\n",
              "9997        4  27.777778   Reflexivo\n",
              "9998        0  27.777778   Reflexivo\n",
              "9999        0  25.000000   Reflexivo\n",
              "\n",
              "[10000 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8bdcba02-7f24-400e-a1f5-ee2562d9999c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>nuevo</th>\n",
              "      <th>estilo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>Reflexivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7</td>\n",
              "      <td>38.888889</td>\n",
              "      <td>Activo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>33.333333</td>\n",
              "      <td>Reflexivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>22.222222</td>\n",
              "      <td>Secuencial</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>0</td>\n",
              "      <td>16.666667</td>\n",
              "      <td>Visual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>4</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>Reflexivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>4</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>Reflexivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>0</td>\n",
              "      <td>27.777778</td>\n",
              "      <td>Reflexivo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9999</th>\n",
              "      <td>0</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>Reflexivo</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10000 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8bdcba02-7f24-400e-a1f5-ee2562d9999c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8bdcba02-7f24-400e-a1f5-ee2562d9999c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8bdcba02-7f24-400e-a1f5-ee2562d9999c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 204
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "freq = Estudiantes.groupby(['Cluster', 'estilo']).size() \n",
        "freq"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3tA_S0HH8-l1",
        "outputId": "5ecbb720-a309-4510-c43f-09fa8fda3c85"
      },
      "execution_count": 206,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cluster  estilo    \n",
              "0        Activo         109\n",
              "         Global          13\n",
              "         Reflexivo     1241\n",
              "         Secuencial     102\n",
              "         Verbal          14\n",
              "         Visual          31\n",
              "1        Activo         662\n",
              "         Global           2\n",
              "         Reflexivo      680\n",
              "         Secuencial      37\n",
              "         Verbal           6\n",
              "         Visual          11\n",
              "2        Activo           7\n",
              "         Global          23\n",
              "         Reflexivo     1110\n",
              "         Secuencial     103\n",
              "         Verbal          61\n",
              "         Visual          70\n",
              "3        Activo          72\n",
              "         Global          22\n",
              "         Reflexivo      826\n",
              "         Secuencial      76\n",
              "         Verbal          11\n",
              "         Visual          16\n",
              "4        Activo          82\n",
              "         Reflexivo      826\n",
              "         Secuencial      71\n",
              "         Verbal          12\n",
              "         Visual          32\n",
              "5        Activo         428\n",
              "         Global           1\n",
              "         Reflexivo      746\n",
              "         Secuencial      47\n",
              "         Verbal           2\n",
              "         Visual           9\n",
              "6        Activo         234\n",
              "         Global           5\n",
              "         Reflexivo      884\n",
              "         Secuencial      68\n",
              "         Verbal           7\n",
              "         Visual          15\n",
              "7        Activo         451\n",
              "         Reflexivo      737\n",
              "         Secuencial      28\n",
              "         Visual          10\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "J3wjen_oS9wy"
      },
      "execution_count": 77,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "provenance": [],
      "mount_file_id": "1getvt_32MLWHkUs3zZoqgNYL0e5J3XHy",
      "authorship_tag": "ABX9TyPyArZ62Xg2Y8zkZ7tQ4ndc",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}